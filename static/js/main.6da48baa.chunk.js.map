{"version":3,"sources":["registerServiceWorker.js","redux/reducers/transpose.js","redux/actionTypes.js","redux/reducers/updateColumnCount.js","redux/reducers/index.js","redux/store.js","components/YouTube.js","components/MarkdownMusic.js","util/Constants.js","util/GithubRepositoryUtil.js","components/MarkdownMusicSourceFetcher.js","components/MusicMarkdownNavbar.js","components/ResponsiveContainer.js","components/RepositoryNavigation.js","redux/actions.js","components/Toolbar.js","components/Sandbox.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","transpose","arguments","length","undefined","action","type","payload","transposeAmount","columnCount","combineReducers","store","createStore","rootReducer","YouTubePlayer","_ref","youTubeId","react_default","a","createElement","className","title","src","concat","allow","allowFullScreen","YouTubeToggle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","visible","handleToggle","bind","assertThisInitialized","setState","index_es","icon","faYoutube","size","onClick","YouTube_YouTubePlayer","React","Component","MarkdownMusicRender","md","MarkdownIt","use","MarkdownItMusic","setTranspose","setMaxWidth","width","html","render","source","YouTube_YouTubeToggle","meta","dangerouslySetInnerHTML","__html","MarkdownMusic","lib_default","MarkdownMusic_MarkdownMusicRender","REPOS_LOCAL_STORAGE_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","GITHUB_API_URL","REPO_RESOURCE","getContents","_x","_x2","_x3","_getContents","apply","_callee","owner","repo","path","apiUrl","response","regenerator_default","wrap","_context","prev","next","getApiUrl","fetch","sent","abrupt","json","stop","getRepositories","repoListStr","localStorage","getItem","JSON","parse","url","URL","githubToken","searchParams","set","history","createBrowserHistory","MarkdownMusicSourceFetcher","arrowUpKeyCode","arrowDownKeyCode","queryParams","queryString","search","isLoaded","markdown","parseInt","repos","handleKeyUpEvent","atob","content","event","keyCode","push","pathname","stringify","_this$state","tabIndex","onKeyUp","components_MarkdownMusic","RepositoriesNavDropdown","repoDropdownItems","repoList","forEach","repoId","itemHref","NavLink","to","key","NavDropdown_default","Item","Divider","MusicMarkdownNavbar","repoMap","storedRepos","setItem","addRepository","Navbar_default","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","Nav_default","MusicMarkdownNavbar_RepositoriesNavDropdown","activeClassName","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","Container_default","children","RepositoryNavigation","repository","contents","queryStringMap","newProps","newQueryStringMap","listGroupItems","item","resourceQueryStringCopy","objectSpread","name","newQueryString","react_router_bootstrap_lib","ListGroupItem_default","breadcrumbsComponent","breadcrumbItems","baseLink","keyBase","subDirectoriesArr","split","shift","i","directory","queryStringMapCopy","link","Breadcrumb_default","active","getBreadcrumbsComponent","Fragment","ListGroup_default","Toolbar","handleTransposeClick","handleColumnClick","increase","decrease","target","textContent","updateColumnCount","ButtonToolbar_default","ButtonGroup_default","Button_default","connect","isIncreaseTransposeAmount","isIncreaseColumnCount","MarkdownEditor","value","handleChange","editorStyles","minHeight","marginRight","fontFamily","whiteSpace","style","display","onChange","AllChords","Array","from","guitarChordLibrary","keys","map","chord","index","align","get","renderChordDiagram","Sandbox","components_Toolbar","Sandbox_MarkdownEditor","Sandbox_AllChords","HomeRouter","es","HashRouter","Route","component","exact","Navigation","App","components_ResponsiveContainer","ReactDOM","src_components_App","document","getElementById","process","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6da48baa.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { TRANSPOSE } from '../actionTypes';\n\nconst transpose = (state = 0, action) => {\n  switch (action.type) {\n  case TRANSPOSE: {\n    return action.payload.transposeAmount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default transpose;\n","export const TRANSPOSE = 'TRANSPOSE';\nexport const UPDATE_COLUMN_COUNT = 'UPDATE_COLUMN_COUNT';\n","import { UPDATE_COLUMN_COUNT } from '../actionTypes';\n\nconst columnCount = (state = 1, action) => {\n  switch (action.type) {\n  case UPDATE_COLUMN_COUNT: {\n    return action.payload.columnCount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default columnCount;\n","import { combineReducers } from 'redux';\nimport transpose from './transpose';\nimport columnCount from './updateColumnCount';\n\nexport default combineReducers({ transpose, columnCount });\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nlet store = undefined;\nif (process.env.NODE_ENV === 'production') {\n  store = createStore(rootReducer);\n} else {\n  store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nexport default store;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\n\nconst YouTubePlayer = ({ youTubeId }) => (\n  <div className=\"embed-responsive embed-responsive-16by9\">\n    <iframe\n      title={youTubeId}\n      className='embed-responsive-item'\n      src={`https://www.youtube.com/embed/${youTubeId}`}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen>\n    </iframe>\n  </div>\n);\n\nclass YouTubeToggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    this.setState((state) => ({\n      visible: !state.visible\n    }));\n  }\n\n  render() {\n    if (!this.props.youTubeId) {\n      return <div></div>;\n    }\n\n    return (\n      <div>\n        <FontAwesomeIcon icon={faYoutube} size='2x' onClick={this.handleToggle} />\n        {this.state.visible ? <YouTubePlayer youTubeId={this.props.youTubeId} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport {\n  YouTubePlayer,\n  YouTubeToggle\n};\n","import ContainerDimensions from 'react-container-dimensions';\nimport React from 'react';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\nimport { YouTubeToggle } from './YouTube';\n\nclass MarkdownMusicRender extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.md = new MarkdownIt()\n      .use(MarkdownItMusic);\n  }\n\n  render() {\n    this.md.setTranspose(this.props.transpose);\n    this.md.setMaxWidth(this.props.width);\n    const html = this.md.render(this.props.source);\n\n    return (\n      <div>\n        <YouTubeToggle youTubeId={this.md.meta.youTubeId} />\n        <span dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    );\n  }\n}\n\nconst MarkdownMusic = ({ source, transpose }) => (\n  <ContainerDimensions>\n    <MarkdownMusicRender source={source} transpose={transpose} />\n  </ContainerDimensions>\n);\n\nexport default MarkdownMusic;\n","/* Local Storage */\n\n/** Key namespace for music-markdown when storing app specific values in localStorage */\nexport const MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE = 'music-markdown';\n/** Key for markdown-music repositories specific localStorage values*/\nexport const REPOS_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:repositories`;\nexport const GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:github_token`;\nexport const GITHUB_API_URL = 'https://api.github.com';\n\n/* Resources */\nexport const REPO_RESOURCE = '/repo';\nexport const RENDER_RESOURCE = '/render';\nexport const SANDBOX_RESOURCE = '/sandbox';\n","import { REPOS_LOCAL_STORAGE_KEY, GITHUB_TOKEN_LOCAL_STORAGE_KEY, GITHUB_API_URL } from './Constants';\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n * @param {string} path The directory or file to retrieve\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(owner, repo, path) {\n  const apiUrl = getApiUrl(`/repos/${owner}/${repo}/contents/${path}`);\n  const response = await fetch(apiUrl);\n  if (path === undefined || path.length === 0 || path === '/') {\n    path = '';\n  }\n  return response.json();\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} owner Repo owner\n * @param {string} repo Repo name\n * @param {string} path Subdirectory\n */\nexport function addRepository(owner, repo, path) {\n  const repoMap = {\n    'owner': owner,\n    'repo': repo,\n    'path': path\n  };\n  const storedRepos = getRepositories();\n  const repoList = storedRepos.length > 0 ? storedRepos : [];\n  repoList.push(repoMap);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repoList));\n}\n\n/**\n * Composes the GitHub API url for the given url, attaching the user's GitHub\n * access token if it exists.\n * @param {string} url The path and search params\n * @return {URL} Composed GitHub API url with user's personal access token\n */\nexport function getApiUrl(url) {\n  url = new URL(url, GITHUB_API_URL);\n\n  const githubToken = localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    url.searchParams.set('access_token', githubToken);\n  }\n\n  return url;\n}\n","import React from 'react';\nimport { createBrowserHistory } from 'history';\nimport MarkdownMusic from './MarkdownMusic';\nimport queryString from 'query-string';\nimport { getContents } from '../util/GithubRepositoryUtil';\n\nconst history = createBrowserHistory();\n\n// TODO: Decouple retrieval of source markdown and controlling arguments to MarkdownMusic.\n// https://github.com/music-markdown/music-markdown/pull/25#discussion_r259598474\nclass MarkdownMusicSourceFetcher extends React.Component {\n  arrowUpKeyCode = 38;\n  arrowDownKeyCode = 40;\n\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n      transpose: parseInt(this.queryParams.transpose, 10) || 0,\n      repos: this.queryParams.repos,\n      path: this.queryParams.path,\n    };\n\n    this.handleKeyUpEvent = this.handleKeyUpEvent.bind(this);\n  }\n\n  async componentDidMount() {\n    const owner = this.queryParams.owner;\n    const repo = this.queryParams.repo;\n    const path = this.queryParams.path;\n\n    const json = await getContents(owner, repo, path);\n    this.setState({\n      isLoaded: true,\n      markdown: atob(json.content)\n    });\n  }\n\n  handleKeyUpEvent(event) {\n    if (event.keyCode === this.arrowUpKeyCode) {\n      this.setState({\n        transpose: this.state.transpose + 1\n      });\n    } else if (event.keyCode === this.arrowDownKeyCode) {\n      this.setState({\n        transpose: this.state.transpose - 1\n      });\n    }\n\n    this.queryParams.transpose = this.state.transpose + 1;\n    history.push(`#${this.props.location.pathname}?${queryString.stringify(this.queryParams)}`);\n  }\n\n  // TODO: Separate the UI component with the fetch logic, we don't necessarily need the fetcher\n  // to be a React Component\n  render() {\n    const { isLoaded, markdown, transpose } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"Markdown\" tabIndex=\"0\" onKeyUp={this.handleKeyUpEvent}>\n          <MarkdownMusic source={markdown} transpose={transpose} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default MarkdownMusicSourceFetcher;\n","import Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getRepositories, addRepository } from '../util/GithubRepositoryUtil';\nimport { REPOS_LOCAL_STORAGE_KEY } from '../util/Constants';\nimport queryString from 'query-string';\n\n// TODO: Build button toggle for dark/light\nconst darkLightThemeFlag = 'dark';\n\nconst MusicMarkdownNavbar = () => {\n  if (!localStorage.getItem(REPOS_LOCAL_STORAGE_KEY)) {\n    // TODO: sanitize this input when storing\n    addRepository('music-markdown', 'almost-in-time', '/');\n  }\n  return (\n    <Navbar bg={darkLightThemeFlag} expand=\"lg\" variant={darkLightThemeFlag} key=\"top-navbar\">\n      <Navbar.Brand href=\"/\">Music Markdown</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          <RepositoriesNavDropdown />\n          <NavLink to=\"/sandbox\" className=\"nav-link\" activeClassName=\"active\">Sandbox</NavLink>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\n/**\n * For all added repositories, add it to the dropdown list\n */\n// TODO: List first x items, then put in dropdown item to expand full list\nconst RepositoriesNavDropdown = () => {\n  const repoDropdownItems = [];\n  const repoList = getRepositories();\n  if (repoList.length > 0) {\n    repoList.forEach((repo) => {\n      const repoId = `${repo.owner}/${repo.repo}${repo.path}`;\n      // TODO: List valid files after clicking on repo name\n      const queryParams = {\n        'owner': repo.owner,\n        'repo': repo.repo,\n        'path': repo.path\n      };\n      const itemHref = `/repo?${queryString.stringify(queryParams)}`;\n      repoDropdownItems.push(\n        <NavLink to={itemHref} key={`dropdown-item-${repoId}`} className=\"dropdown-item\">\n          {repoId}\n        </NavLink>);\n    });\n  }\n\n  return (\n    <NavDropdown title=\"Music Repositories\">\n      {/* TODO: Build edit repo functionality */}\n      <NavDropdown.Item><b>Edit Repositories</b></NavDropdown.Item>\n      <NavDropdown.Divider />\n      {repoDropdownItems}\n    </NavDropdown>\n  );\n};\n\nexport default MusicMarkdownNavbar;\n","import Container from 'react-bootstrap/Container.js';\nimport React from 'react';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Container key={RESPONSIVE_CONTAINER_KEY}>\n      {props.children}\n    </Container>\n  );\n}\n\nexport default ResponsiveContainer;\n","import React from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { getContents } from '../util/GithubRepositoryUtil';\nimport { REPO_RESOURCE, RENDER_RESOURCE } from '../util/Constants';\nimport queryString from 'query-string';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass RepositoryNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      repository: {\n        isLoaded: false,\n        contents: []\n      }\n    };\n  }\n\n  /**\n   * When component first initializes, execute following lifecycle actions\n   */\n  async componentDidMount() {\n    const queryStringMap = queryString.parse(this.props.location.search);\n    const owner = queryStringMap.owner;\n    const repo = queryStringMap.repo;\n    const path = queryStringMap.path;\n\n    const json = await getContents(owner, repo, path);\n    this.setState({\n      repository: {\n        isLoaded: true,\n        queryStringMap: queryStringMap,\n        contents: json\n      }\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new query string, then following lifecycle actions\n   * @param {Object} newProps Updated query string\n   */\n  async componentWillReceiveProps(newProps) {\n    const newQueryStringMap = queryString.parse(newProps.location.search);\n    const owner = this.state.repository.queryStringMap.owner;\n    const repo = this.state.repository.queryStringMap.repo;\n    const path = newQueryStringMap.path;\n\n    if (newQueryStringMap !== this.state.repository.queryStringMap) {\n      const json = await getContents(owner, repo, path);\n      this.setState({\n        repository: {\n          isLoaded: true,\n          queryStringMap: newQueryStringMap,\n          contents: json\n        }\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded } = this.state.repository;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      const listGroupItems = [];\n      const contents = this.state.repository.contents;\n      const queryStringMap = this.state.repository.queryStringMap;\n\n      contents.forEach((item) => {\n        // Create a new copy of the old query string map, then modify it with references to each\n        // item's relative path\n        const resourceQueryStringCopy = { ...queryStringMap };\n        const key = `list-group-item-${item.name}`;\n        resourceQueryStringCopy.path = `/${item.path}`;\n        const newQueryString = queryString.stringify(resourceQueryStringCopy);\n        listGroupItems.push(\n          item.type === 'dir' ? (\n            <LinkContainer to={`${REPO_RESOURCE}?${newQueryString}`} key={key}>\n              <ListGroupItem action>\n                <i>{`/${item.name}`}</i>\n              </ListGroupItem>\n            </LinkContainer>\n          ) : item.type === 'file' ? (\n            <LinkContainer to={`${RENDER_RESOURCE}?${newQueryString}`} key={key}>\n              <ListGroupItem action>\n                {item.name}\n              </ListGroupItem>\n            </LinkContainer>\n          ) : <div>File type {item.type} not supported</div>\n        );\n      });\n      const breadcrumbsComponent = getBreadcrumbsComponent(this.state.repository.queryStringMap);\n\n      return (\n        <>\n          <h2>Repository Contents</h2>\n            {breadcrumbsComponent}\n          <ListGroup>\n            {listGroupItems}\n          </ListGroup>\n        </>\n      );\n    }\n  }\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {Object} queryStringMap JSON map of query string\n * @return {Array} List of BreadcrumbItems\n */\nfunction getBreadcrumbsComponent(queryStringMap) {\n  const breadcrumbItems = [];\n  const baseLink = `${REPO_RESOURCE}`;\n  const keyBase = 'breadcrumb-item-';\n\n  const subDirectoriesArr = queryStringMap.path.split('/');\n  // discord root case, as '/' gets split into ['', '']\n  if (subDirectoriesArr[1] === '') {\n    subDirectoriesArr.shift();\n  }\n  // using currDir to rebuild intermediary paths for each subdirectory in queryStringMap\n  const currDir = '';\n  for (let i = 0; i < subDirectoriesArr.length; i++) {\n    const directory = subDirectoriesArr[i];\n    const queryStringMapCopy = { ...queryStringMap };\n    queryStringMapCopy.path = currDir.concat('/', directory);\n    const link = `${baseLink}?${queryString.stringify(queryStringMapCopy)}`;\n    switch (i) {\n    // Root has no inherent value, so using home as UI element\n    case 0:\n      breadcrumbItems.push(\n        <LinkContainer to={link} key={`${keyBase}${i}`}>\n          <Breadcrumb.Item>\n            home\n          </Breadcrumb.Item>\n        </LinkContainer>\n      );\n      break;\n    // Last item should be active\n    case subDirectoriesArr.length - 1:\n      breadcrumbItems.push(\n        <LinkContainer to={link} key={`${keyBase}${i}`}>\n          <Breadcrumb.Item active>\n            {directory}\n          </Breadcrumb.Item>\n        </LinkContainer>\n      );\n      break;\n    default:\n      breadcrumbItems.push(\n        <LinkContainer to={link} key={`${keyBase}${i}`}>\n          <Breadcrumb.Item>\n            {directory}\n          </Breadcrumb.Item>\n        </LinkContainer>\n      );\n      break;\n    };\n  };\n\n  return (\n    <Breadcrumb>\n      {breadcrumbItems}\n    </Breadcrumb>\n  );\n}\n\nexport default RepositoryNavigation;\n","import {\n  TRANSPOSE,\n  UPDATE_COLUMN_COUNT\n} from './actionTypes';\n\nlet transposeAmount = 0;\nlet columnCount = 1;\n\nexport const transpose = (isIncreaseTransposeAmount) => ({\n  type: TRANSPOSE,\n  payload: {\n    transposeAmount: isIncreaseTransposeAmount ? ++transposeAmount : --transposeAmount\n  }\n});\n\nexport const updateColumnCount = (isIncreaseColumnCount) => ({\n  type: UPDATE_COLUMN_COUNT,\n  payload: {\n    columnCount: isIncreaseColumnCount ? ++columnCount : --columnCount\n  }\n});\n","import React from 'react';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\n\nimport { transpose } from '../redux/actions';\nimport { updateColumnCount } from '../redux/actions';\n\nclass Toolbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTransposeClick = this.handleTransposeClick.bind(this);\n    this.handleColumnClick = this.handleColumnClick.bind(this);\n\n    this.increase = '+1';\n    this.decrease = '-1';\n  }\n\n  handleTransposeClick(event) {\n    this.props.transpose(event.target.textContent === this.increase);\n  }\n\n  handleColumnClick(event) {\n    this.props.updateColumnCount(event.target.textContent === this.increase);\n  }\n\n  render() {\n    // TODO: Move dark theme to redux store.\n    return (\n      <ButtonToolbar className='border justify-content-center bg-dark'>\n        <span className='padding bg-dark text-light my-auto'>Transpose</span>\n        <ButtonGroup>\n          <Button variant='dark' onClick={this.handleTransposeClick}>{this.decrease}</Button>\n          <Button variant='dark' onClick={this.handleTransposeClick}>{this.increase}</Button>\n        </ButtonGroup>\n        <span className='padding bg-dark text-light my-auto'>Columns</span>\n        <ButtonGroup>\n          <Button variant='dark' onClick={this.handleColumnClick}>{this.decrease}</Button>\n          <Button variant='dark' onClick={this.handleColumnClick}>{this.increase}</Button>\n        </ButtonGroup>\n      </ButtonToolbar>\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  { transpose, updateColumnCount }\n)(Toolbar);\n","import React from 'react';\nimport MarkdownMusic from './MarkdownMusic';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport { guitarChordLibrary } from 'markdown-it-music/renderers/chord_library';\nimport Toolbar from './Toolbar';\n\nconst Sandbox = () => (\n  <div>\n    <Toolbar></Toolbar>\n\n    <h1>Music Markdown Sandbox</h1>\n    <p>\n      This page exercises various subcomponents of music-markdown and\n      markdown-it-music.\n    </p>\n\n    <h2>Markdown Editor</h2>\n    <MarkdownEditor/>\n\n    <h2>Chord Diagram Renderer</h2>\n    <p>\n      This section exercises the Chord Diagram Renderer.\n    </p>\n    <h3>Esus4 (200x200)</h3>\n    <div dangerouslySetInnerHTML={\n      { __html: renderChordDiagram('o2 m1 m2 n3,2 n4,4 b5,6,5', 200, 200) }\n    } />\n\n    <h2>Entire Chord Library</h2>\n    <AllChords/>\n  </div>\n);\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const value = '```chords\\n' +\n      'c1:                    Am     G  F          G      Esus4  E\\n' +\n      'v1: All the leaves are brown        and the sky is gray\\n\\n' +\n      'c1: F               C     E  Am       F        Esus4  E\\n' +\n      'v1: I\\'ve been for a walk         on a winter\\'s day\\n\\n' +\n      'c1:                 Am    G  F       G      Esus4  E\\n' +\n      'v1: I\\'d be safe and warm        if I was in L.A.\\n\\n' +\n      'c1:            Am        G  F     G               Esus4  E\\n' +\n      'v1: California dreamin\\'        on such a winter\\'s day\\n' +\n      '```';\n\n    this.state = {\n      value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const styles = { display: 'flex', width: '100%' };\n    const editorStyles = {\n      minHeight: '500px', width: '50%', marginRight: '20px',\n      fontFamily: 'monospace', whiteSpace: 'pre'\n    };\n\n    return <div style={styles}>\n      <textarea value={this.state.value} onChange={this.handleChange} style={editorStyles}></textarea>\n      <div style={editorStyles}>\n        <MarkdownMusic source={this.state.value}></MarkdownMusic>\n      </div>\n    </div>;\n  }\n}\n\nconst AllChords = () => (\n  Array.from(guitarChordLibrary.keys()).map((chord, index) => (\n    <div key={index} align=\"center\" style={{ display: 'inline-block' }}>\n      {guitarChordLibrary.get(chord).map((value, index) => (\n        <span key={index} dangerouslySetInnerHTML={\n          { __html: renderChordDiagram(value) }\n        } />\n      ))}\n      <h5>{chord}</h5>\n    </div>\n  ))\n);\n\nexport default Sandbox;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\n\nimport MarkdownMusicSourceFetcher from './MarkdownMusicSourceFetcher';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar';\nimport ResponsiveContainer from './ResponsiveContainer';\nimport RepositoryNavigation from './RepositoryNavigation';\nimport Sandbox from './Sandbox.js';\nimport { REPO_RESOURCE, RENDER_RESOURCE, SANDBOX_RESOURCE } from '../util/Constants';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => (\n  <ResponsiveContainer children={[HomeRouter()]} />\n);\n\nconst HomeRouter = () => (\n  <Provider key=\"home-provider\" store={store}>\n    <Router key=\"home-router\">\n      <div>\n        <Route component={MusicMarkdownNavbar} />\n        <Route exact path=\"/\" component={Navigation} />\n        <Route exact path={REPO_RESOURCE} component={RepositoryNavigation} />\n        <Route path={SANDBOX_RESOURCE} component={Sandbox} />\n        <Route path={RENDER_RESOURCE} component={MarkdownMusicSourceFetcher} />\n      </div>\n    </Router>\n  </Provider>\n);\n\nconst Navigation = () => (\n  <h1>Welcome to Music Markdown!</h1>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}