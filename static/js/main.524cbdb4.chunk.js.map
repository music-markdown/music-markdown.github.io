{"version":3,"sources":["tools/asciitab.js","lib/constants.js","components/GlobalState.js","components/RouterBreadcrumbs.js","lib/github.js","components/BranchNavigation.js","components/ErrorSnackbar.js","components/MusicMarkdown.js","components/MarkdownEditor.js","components/MarkdownViewer.js","components/YouTube.js","components/MusicToolbar.js","components/MusicMarkdownNavbar.js","components/AddRepository.js","components/RepositoryEditor.js","components/AddNewFile.js","components/RepositoryNavigation.js","components/ResponsiveContainer.js","components/Sandbox.js","components/App.js","registerServiceWorker.js","index.js"],"names":["isChord","require","State","DEFAULT","VERSE","FENCE","getMaybeHeading","line","endsWith","slice","startsWith","getMaybeChords","tokens","trim","split","token","asciiTabConvert","input","state","voiceIndex","lines","output","push","maybeHeading","maybeChords","join","read","stream","a","buffer","Buffer","alloc","chunk","concat","toString","console","process","stdin","log","module","main","REPO_REGEX","lightTheme","typography","useNextVariants","reactRouterHoverInherit","color","palette","type","darkTheme","initialTheme","window","localStorage","getItem","GlobalStateContext","React","createContext","GlobalStateProvider","props","useState","theme","youTubeId","setState","Provider","value","data","isDarkTheme","toggleTheme","setItem","setYouTubeId","children","withStyles","paper","padding","spacing","pathname","classes","subDirectoriesArr","filter","breadcrumbItems","previousPath","ignoreIndex","currDir","i","length","directory","indexOf","Typography","key","Link","component","RouterLink","to","className","buildBreadcrumb","Paper","Breadcrumbs","GITHUB_TOKEN_LOCAL_STORAGE_KEY","REPOS_LOCAL_STORAGE_KEY","GITHUB_API_URL","getContents","repo","path","branch","undefined","apiUrl","getApiUrl","fetch","cache","response","json","content","Base64","decode","putContents","sha","body","message","encode","method","mode","JSON","stringify","getRepositories","repoListStr","parse","verifyRepoExists","status","Error","verifyRepoUnregistered","addRepository","repos","getBranches","url","URL","githubToken","searchParams","set","BranchNavigation","isLoaded","branches","this","match","params","prevProps","location","root","List","map","item","ListItem","button","name","ListItemAvatar","Avatar","ListItemText","primary","LinearProgress","Component","flexGrow","withTheme","error","backgroundColor","dark","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","margin","open","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","aria-describedby","id","classNames","action","IconButton","aria-label","close","onClick","COLUMN_GAP","MusicMarkdownRender","handleClearError","event","reason","update","source","width","columnCount","transposeAmount","md","setTranspose","setMaxWidth","html","render","context","meta","err","componentDidMount","componentDidUpdate","clearTimeout","timer","setTimeout","componentWillUnmount","markdownBody","dangerouslySetInnerHTML","__html","MarkdownIt","use","MarkdownItMusic","contextType","MusicMarkdown","columns","columnGap","columnRuleWidth","columnRuleStyle","columnRuleColor","text","secondary","style","MarkdownEditor","filename","markdown","saving","success","isDirty","handleChange","handleSave","handleFileNameChange","target","handleAutoFormat","buttonClassname","buttonSuccess","parts","viewerLink","Grid","container","xs","toolbar","Tooltip","title","Fab","disabled","fab","CircularProgress","size","fabProgress","maxLines","Infinity","editor","onChange","editorProps","$blockScrolling","green","position","top","left","zIndex","marginLeft","height","MarkdownViewer","queryParams","queryString","search","Number","YouTubePlayer","bottom","right","cursor","border","src","allow","allowFullScreen","YouTubeToggle","visible","handleToggle","styles","popper","slider","handleUpdateQuery","original","history","UnstyledColumnCountSelector","anchorEl","currentTarget","handleClickAway","contains","Badge","badgeContent","invisible","Popper","ClickAwayListener","onClickAway","ToggleButtonGroup","exclusive","ToggleButton","ColumnCountSelector","UnstyledTransposeSelector","transpose","Slider","min","max","step","marks","String","TransposeSelector","BrowseButton","EditButton","ViewButton","SearchToolbar","MusicMarkdownNavbar","handleSettingsClick","settingsOpen","handleDarkThemeSwitch","settingsAnchorEl","AppBar","Toolbar","Button","alt","grow","MusicToolbar","buttonRef","node","placement","FormControlLabel","control","Switch","defaultChecked","label","AddRepository","owner","handleDialogOpen","handleDialogClose","handleShowError","handleDialogAdd","handleAddRepository","handleUpdateOwner","handleUpdateName","direction","justify","Dialog","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","e","fullWidth","DialogActions","ListRepositories","loadRepositories","handleDeleteRepository","r","deleteRepository","ListItemSecondaryAction","AddNewFile","newFileName","newFileOpen","toEditor","handleAddNewFileOpen","handleAddNewFileClose","handleUpdateFileName","handleAddNewFile","getNewFilePath","getTemplateContents","statusText","isValidFileName","file","Card","previewCard","CardContent","variant","gutterBottom","whitespacePre","helperText","InputProps","endAdornment","InputAdornment","whiteSpace","fontFamily","RepositoryNavigation","contents","sortDir","prevRepo","prevPath","prevBranch","sort","b","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","chordSourcePaper","chordCategoryPaper","textAlign","chordCategoryTypography","chordVariantPaper","chordVariantTypography","chordDiagram","roots","qualities","AllGuitarChords","allChordsSource","category","index","ChordCategory","Array","from","guitarChordbook","keys","chord","get","renderChordDiagram","quality","allFeaturesSource","ThemeProvider","useContext","createMuiTheme","CssBaseline","HomeRouter","Sandbox","RepositoryEditor","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","document","getElementById","origin","addEventListener","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.524cbdb4.chunk.js","sourcesContent":["const { isChord } = require('markdown-it-music/lib/chord');\n\nconst State = {\n  DEFAULT: 1,\n  VERSE: 2,\n  FENCE: 3\n};\n\nfunction getMaybeHeading(line) {\n  if (line.endsWith(':')) {\n    return `## ${line.slice(0, -1)}`;\n  }\n\n  if (line.startsWith('[') && line.endsWith(']')) {\n    return `## ${line.slice(1, -1)}`;\n  }\n\n  return null;\n}\n\nfunction getMaybeChords(line) {\n  const tokens = line.trim().split(/\\s+/);\n\n  for (const token of tokens) {\n    if (!isChord(token)) {\n      return null;\n    }\n  }\n\n  return `c1: ${line}`;\n}\n\nfunction asciiTabConvert(input) {\n  let state = State.DEFAULT;\n  let voiceIndex = 1;\n  const lines = input.split(/\\n/);\n  const output = [];\n\n  for (const line of lines) {\n    if (line.startsWith(':::')) {\n      state = State.FENCE;\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.DEFAULT) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        state = State.VERSE;\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.VERSE) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        state = State.DEFAULT;\n        output.push('');\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        output.push('');\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      if (line.trim() === '') {\n        continue;\n      }\n\n      output.push(`l${voiceIndex}: ${line}`);\n      voiceIndex += 1;\n      continue;\n    }\n\n    if (state === State.FENCE) {\n      if (line === ':::') {\n        state = State.DEFAULT;\n      }\n\n      output.push(line);\n      continue;\n    }\n  }\n\n  return output.join('\\n');\n}\n\nasync function read(stream) {\n  let buffer = Buffer.alloc(0);\n  for await (const chunk of stream) {\n    buffer = Buffer.concat([buffer, chunk]);\n  }\n  return buffer.toString('utf8');\n}\n\nasync function main() {\n  console.log(asciiTabConvert(await read(process.stdin)));\n}\n\nif (typeof require !== 'undefined' && require.main === module) {\n  main();\n}\n\nexport default asciiTabConvert;\n","export const COLUMN_COUNT_QUERY_KEY = 'columns';\nexport const LOCAL_STORAGE_NAMESPACE = 'music-markdown';\nexport const REPO_REGEX = '/repos/:repo([^/]+/[^/]+)';\nexport const TRANSPOSE_QUERY_KEY = 'transpose';\n","import React, { useContext, useState } from 'react';\nimport { LOCAL_STORAGE_NAMESPACE } from '../lib/constants';\n\nconst lightTheme = {\n  typography: {\n    useNextVariants: true,\n  },\n  reactRouterHoverInherit: {\n    '&:hover': {\n      color: 'inherit'\n    },\n  },\n  palette: {\n    type: 'light',\n  },\n};\n\nconst darkTheme = {\n  typography: {\n    useNextVariants: true,\n  },\n  reactRouterHoverInherit: {\n    '&:hover': {\n      color: 'inherit'\n    },\n  },\n  palette: {\n    type: 'dark',\n  },\n};\n\nconst initialTheme = (window.localStorage.getItem(`${LOCAL_STORAGE_NAMESPACE}:palette-type`) === 'dark' ?\n  darkTheme : lightTheme);\n\nexport const GlobalStateContext = React.createContext();\n\nexport const useGlobalStateContext = () => useContext(GlobalStateContext);\n\nexport const GlobalStateProvider = (props) => {\n  const [state, setState] = useState({\n    theme: initialTheme,\n    youTubeId: null,\n  });\n\n  return (\n    <GlobalStateContext.Provider value={{\n      data: state,\n      isDarkTheme: () => state.theme.palette.type === 'dark',\n      toggleTheme: () => {\n        const theme = state.theme.palette.type === 'dark' ? lightTheme : darkTheme;\n        window.localStorage.setItem(`${LOCAL_STORAGE_NAMESPACE}:palette-type`, theme.palette.type);\n        setState({ ...state, theme });\n      },\n      setYouTubeId: (youTubeId) => {\n        if (youTubeId !== state.youTubeId) {\n          setState({ ...state, youTubeId });\n        }\n      },\n    }}>\n      {props.children}\n    </GlobalStateContext.Provider>\n  );\n};\n","import Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  paper: {\n    padding: `${theme.spacing(1)}px`,\n  },\n  reactRouterHoverInherit: theme.reactRouterHoverInherit\n});\n\nfunction buildBreadcrumb(previousPath, classes) {\n  const breadcrumbItems = [];\n\n  // ignoreIndex matches the Route defined in App.js.\n  // Certain portions are not useful to user in the breadcrumb, so we remove them.\n  const ignoreIndex = [0/* /repos */, 3/* /:viewName(browser|viewer|editor) */];\n  const keyBase = 'breadcrumb-item-';\n\n  let currDir = '';\n  for (let i = 0; i < previousPath.length; i++) {\n    const directory = previousPath[i];\n    currDir = currDir.concat('/', directory);\n\n    if (ignoreIndex.indexOf(i) !== -1) {\n      continue;\n    }\n\n    if (i === previousPath.length - 1) {\n      // Last item should be active\n      breadcrumbItems.push(\n        <Typography color=\"textPrimary\" key={`${keyBase}${i}`}>\n          {directory}\n        </Typography>\n      );\n    } else {\n      breadcrumbItems.push(\n        <Link\n          component={RouterLink}\n          to={`${currDir}/`}\n          key={`${keyBase}${i}`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          {directory}\n        </Link>\n      );\n    }\n  };\n\n  return breadcrumbItems;\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {string} pathname current URI pathname\n * @return {Array} List of BreadcrumbItems\n */\nconst DirectoryBreadcrumbs = ({ pathname, classes }) => {\n  const keyBase = 'breadcrumb-item-';\n\n  const subDirectoriesArr = pathname.split('/').filter((value) => !!value);\n  subDirectoriesArr[3] = 'browser';\n\n  const breadcrumbItems = buildBreadcrumb(subDirectoriesArr, classes);\n\n  return (\n    <Paper className={classes.paper}>\n      <Breadcrumbs>\n        <Link\n          component={RouterLink}\n          to={`/`}\n          key={`${keyBase}Home`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          Home\n        </Link>\n        {breadcrumbItems}\n      </Breadcrumbs>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(DirectoryBreadcrumbs);\n","import { Base64 } from 'js-base64';\nimport { LOCAL_STORAGE_NAMESPACE } from './constants';\n\nconst GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:github_token`;\nconst REPOS_LOCAL_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:repositories`;\nconst GITHUB_API_URL = 'https://api.github.com';\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} repo The owner and repo in the form :owner/:repo\n * @param {string} path The directory or file to retrieve\n * @param {string} branch The branch to retrive contents from\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(repo, path, branch) {\n  if (path === undefined || path.length === 0) {\n    path = '';\n  }\n  const apiUrl = getApiUrl(`/repos/${repo}/contents/${path}`, branch);\n  const response = await fetch(apiUrl, { cache: 'no-cache' });\n  const json = await response.json();\n  json.content = json.content ? Base64.decode(json.content) : '';\n  return json;\n}\n\nexport async function putContents(repo, path, content, sha, branch) {\n  const apiUrl = getApiUrl(`/repos/${repo}/contents/${path}`);\n\n  const body = {\n    message: `Music Markdown published ${path}`,\n    content: Base64.encode(content),\n    branch\n  };\n\n  if (sha) {\n    body.sha = sha;\n  }\n\n  return fetch(apiUrl, { method: 'PUT', mode: 'cors', body: JSON.stringify(body) });\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\nasync function verifyRepoExists(repo) {\n  const apiUrl = getApiUrl(`/repos/${repo}`);\n  const response = await fetch(apiUrl);\n  if (response.status === 404) {\n    throw new Error(`\"${repo}\" not found on GitHub.`);\n  }\n}\n\nfunction verifyRepoUnregistered(repo) {\n  for (const r of getRepositories()) {\n    if (r === repo) {\n      throw new Error(`\"${repo}\" is already registered.`);\n    }\n  }\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function addRepository(repo) {\n  verifyRepoUnregistered(repo);\n  await verifyRepoExists(repo);\n  const repos = getRepositories();\n  repos.push(repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Returns a promise of a list of branches for the given repository.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function getBranches(repo) {\n  const apiUrl = getApiUrl(`/repos/${repo}/branches`);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Removes a GitHub repo from localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport function deleteRepository(repo) {\n  const repos = getRepositories().filter((r) => r !== repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Composes the GitHub API url for the given url, attaching the user's GitHub\n * access token if it exists.\n * @param {string} url The path and search params\n * @param {string} branch The branch to get from\n * @return {URL} Composed GitHub API url with user's personal access token\n */\nexport function getApiUrl(url, branch) {\n  url = new URL(url, GITHUB_API_URL);\n\n  const githubToken = localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    url.searchParams.set('access_token', githubToken);\n  }\n\n  if (branch) {\n    url.searchParams.set('ref', branch);\n  }\n\n  return url;\n}\n","import Avatar from '@material-ui/core/Avatar';\nimport CallSplit from '@material-ui/icons/CallSplit';\nimport DirectoryBreadcrumbs from './RouterBreadcrumbs';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport React from 'react';\nimport { getBranches } from '../lib/github';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass BranchNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      branches: []\n    };\n  }\n\n  /**\n   * When component first initializes, execute following lifecycle actions\n   */\n  async componentDidMount() {\n    const branches = await getBranches(this.props.match.params.repo);\n    this.setState({\n      isLoaded: true,\n      branches\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Updated query string\n   */\n  async componentDidUpdate(prevProps) {\n    if (prevProps.match.params.repo !== this.props.match.params.repo) {\n      const branches = await getBranches(this.props.match.params.repo);\n      this.setState({\n        isLoaded: true,\n        branches\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded, branches } = this.state;\n    const { classes, location, match } = this.props;\n\n    if (!isLoaded) {\n      return (\n        <LinearProgress />\n      );\n    }\n\n    return (\n      <>\n        <DirectoryBreadcrumbs pathname={location.pathname} />\n        <div className={classes.root}>\n          <List>\n            {\n              branches.map((item) => (\n                <ListItem button component={Link}\n                  key={`list-group-item-${item.name}`}\n                  to={`/repos/${match.params.repo}/browser/${item.name}/`}>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <CallSplit />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary={item.name}></ListItemText>\n                </ListItem>\n              ))\n            }\n          </List>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(BranchNavigation);\n","import CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport IconButton from '@material-ui/core/IconButton';\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n});\n\nconst ErrorSnackbar = ({ open, handleClose, classes, message }) => (\n  <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n    open={open} autoHideDuration={6000} onClose={handleClose}>\n    <SnackbarContent\n      className={classes.error}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <ErrorIcon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={handleClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n    />\n  </Snackbar>\n);\n\nexport default withStyles(styles)(ErrorSnackbar);\n","import ContainerDimensions from 'react-container-dimensions';\nimport ErrorSnackbar from './ErrorSnackbar';\nimport { GlobalStateContext } from './GlobalState';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst COLUMN_GAP = 20;\n\nconst styles = (theme) => ({\n  markdownBody: {\n    filter: theme.palette.type === 'dark' ? 'invert(100%)' : '',\n  },\n  columns: {\n    columnGap: `${COLUMN_GAP}px`,\n    columnRuleWidth: '1px',\n    columnRuleStyle: 'dashed',\n    columnRuleColor: theme.palette.text.secondary,\n  },\n});\n\nclass MusicMarkdownRender extends React.Component {\n  static contextType = GlobalStateContext;\n\n  constructor(props) {\n    super(props);\n\n    this.md = new MarkdownIt({ html: true })\n      .use(MarkdownItMusic);\n\n    this.state = {\n      html: '',\n      message: null,\n      error: false,\n    };\n  }\n\n  handleClearError = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ error: false });\n  }\n\n  update = () => {\n    const { source, width, columnCount, transposeAmount } = this.props;\n\n    this.md.setTranspose(transposeAmount)\n      .setMaxWidth((width - COLUMN_GAP * (columnCount - 1)) / columnCount);\n\n    try {\n      this.setState({ html: this.md.render(source), error: false });\n      this.context.setYouTubeId(this.md.meta.youTubeId);\n    } catch (err) {\n      console.log(err);\n      this.setState({ html: `<pre>${source}</pre>`, message: err.message, error: true });\n    }\n  }\n\n  componentDidMount = () => {\n    this.update();\n  }\n\n  componentDidUpdate = (prevProps) => {\n    const { source, width, columnCount, transposeAmount } = this.props;\n    if (prevProps.source === source && prevProps.width === width && prevProps.columnCount === columnCount &&\n      prevProps.transposeAmount === transposeAmount) {\n      return;\n    }\n\n    clearTimeout(this.timer);\n    this.timer = setTimeout(this.update, 200);\n  }\n\n  componentWillUnmount = () => {\n    clearTimeout(this.timer);\n  }\n\n  render = () => {\n    const { classes } = this.props;\n    return (\n      <>\n        <div className={classes.markdownBody} dangerouslySetInnerHTML={{ __html: this.state.html }}/>\n        <ErrorSnackbar\n          message={this.state.message}\n          open={this.state.error}\n          handleClose={this.handleClearError} />\n      </>\n    );\n  }\n}\n\nconst ContainerizedMusicMarkdown = (props) => (\n  <div className={props.classes.columns} style={{ columnCount: props.columnCount }}>\n    <ContainerDimensions>\n      <MusicMarkdownRender {...props} />\n    </ContainerDimensions>\n  </div>\n);\n\nconst MusicMarkdown = withStyles(styles, { withTheme: true })(ContainerizedMusicMarkdown);\n\nexport default MusicMarkdown;\n","import { getContents, putContents } from '../lib/github';\nimport AceEditor from 'react-ace';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DirectoryBreadcrumbs from './RouterBreadcrumbs';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Link } from 'react-router-dom';\nimport MusicMarkdown from './MusicMarkdown';\nimport Paper from '@material-ui/core/Paper';\nimport PhotoFilterIcon from '@material-ui/icons/PhotoFilter';\nimport React from 'react';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport asciiTabConvert from '../tools/asciitab';\nimport classNames from 'classnames';\nimport green from '@material-ui/core/colors/green';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport 'brace/mode/markdown'; // eslint-disable-line sort-imports\nimport 'brace/theme/github'; // eslint-disable-line sort-imports\nimport 'brace/theme/monokai'; // eslint-disable-line sort-imports\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n  fabProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  editor: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    height: '100%',\n    width: '100%',\n  },\n  fab: {\n    margin: theme.spacing(1),\n  },\n  toolbar: {\n    display: 'flex',\n    padding: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: '100%',\n  },\n  buttonSuccess: {\n    'backgroundColor': green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n});\n\nclass MarkdownEditor extends React.Component {\n  state = {\n    filename: undefined,\n    markdown: '',\n    sha: null,\n    saving: false,\n    success: false,\n    isDirty: false\n  };\n\n  handleChange = (value) => {\n    this.setState({ markdown: value, isDirty: true, success: false });\n  };\n\n  handleSave = async () => {\n    if (!this.state.saving) {\n      this.setState({ success: false, saving: true });\n\n      const { repo, path, branch } = this.props.match.params;\n      const { markdown, sha } = this.state;\n      const content = markdown;\n      const response = await putContents(repo, path, content, sha, branch);\n      const json = await response.json();\n\n      if (response.status === 200) {\n        this.setState({ success: true, saving: false, sha: json.content.sha });\n      } else {\n        this.setState({ success: false, saving: false });\n      }\n    }\n  };\n\n  handleFileNameChange = (event) => {\n    this.setState({ filename: event.target.value });\n  }\n\n  handleAutoFormat = () => {\n    this.setState((state) => ({\n      markdown: asciiTabConvert(state.markdown)\n    }));\n  }\n\n  componentDidMount = async () => {\n    const { repo, path, branch } = this.props.match.params;\n\n    const json = await getContents(repo, path, branch);\n    this.setState({\n      isLoaded: true,\n      markdown: json.content,\n      sha: json.sha\n    });\n  }\n\n  render = () => {\n    const { saving, success, isLoaded, isDirty } = this.state;\n    const { classes, theme, location } = this.props;\n\n    const buttonClassname = classNames({\n      [classes.buttonSuccess]: success,\n    });\n\n    const parts = location.pathname.split('/');\n    parts[4] = 'viewer';\n    const viewerLink = parts.join('/');\n\n    if (!isLoaded) {\n      return (\n        <LinearProgress />\n      );\n    }\n\n    return (\n      <>\n        <DirectoryBreadcrumbs pathname={this.props.location.pathname} />\n        <div className={classes.root}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Paper className={classes.toolbar}>\n                <Tooltip title=\"Save\">\n                  <Fab disabled={!isDirty} className={`${buttonClassname} ${classes.fab}`} onClick={this.handleSave}>\n                    {success ? <CheckIcon /> : <SaveIcon />}\n                    {saving && <CircularProgress size={68} className={classes.fabProgress} />}\n                  </Fab>\n                </Tooltip>\n                <Tooltip title=\"Auto Format\">\n                  <Fab className={classes.fab} onClick={this.handleAutoFormat}>\n                    <PhotoFilterIcon />\n                  </Fab>\n                </Tooltip>\n                <Tooltip title=\"Return to Markdown View\">\n                  <Fab component={Link} to={viewerLink} className={classes.fab}>\n                    <ExitToAppIcon />\n                  </Fab>\n                </Tooltip>\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper className={classes.paper}>\n                <AceEditor\n                  name=\"brace-editor\"\n                  mode=\"markdown\"\n                  theme={theme.palette.type === 'dark' ? 'monokai' : 'github'}\n                  width=\"100%\"\n                  maxLines={Infinity}\n                  className={classes.editor}\n                  onChange={this.handleChange}\n                  value={this.state.markdown}\n                  editorProps={{ $blockScrolling: true }} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6}>\n              <Paper className={classes.paper}>\n                <MusicMarkdown source={this.state.markdown}></MusicMarkdown>\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(MarkdownEditor);\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from '../lib/constants';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MusicMarkdown from './MusicMarkdown';\nimport React from 'react';\nimport { getContents } from '../lib/github';\nimport queryString from 'query-string';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n});\n\nclass MarkdownViewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n    };\n  }\n\n  async componentDidMount() {\n    const { repo, path, branch } = this.props.match.params;\n\n    const json = await getContents(repo, path, branch);\n    this.setState({\n      isLoaded: true,\n      markdown: json.content\n    });\n  }\n\n  render() {\n    const { isLoaded, markdown } = this.state;\n    const { classes, location } = this.props;\n\n    const params = queryString.parse(location.search);\n    const columnCount = params[COLUMN_COUNT_QUERY_KEY] || '1';\n    const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n    if (!isLoaded) {\n      return (\n        <LinearProgress />\n      );\n    }\n\n    return (\n      <div className={classes.root}>\n        <MusicMarkdown source={markdown} columnCount={columnCount} transposeAmount={transposeAmount} />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(MarkdownViewer);\n","import { Paper, Tooltip } from '@material-ui/core';\nimport Draggable from 'react-draggable';\nimport { GlobalStateContext } from './GlobalState';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  paper: {\n    position: 'fixed',\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n    padding: theme.spacing(2),\n    cursor: 'move',\n  },\n});\n\nconst UnstyledYouTubePlayer = ({ classes, youTubeId }) => (\n  <Draggable>\n    <Paper className={classes.paper}>\n      <iframe\n        title={youTubeId}\n        style={{ border: 0 }}\n        src={`https://www.youtube.com/embed/${youTubeId}`}\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen>\n      </iframe>\n    </Paper>\n  </Draggable>\n);\n\nconst YouTubePlayer = withStyles(styles, { withTheme: true })(UnstyledYouTubePlayer);\n\nclass YouTubeToggle extends React.Component {\n  static contextType = GlobalStateContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({ visible: !this.context.data.youTubeId });\n  };\n\n  handleToggle = (event) => {\n    this.setState((state) => ({\n      visible: !state.visible,\n    }));\n  };\n\n  render() {\n    if (!this.context.data.youTubeId) {\n      return null;\n    }\n\n    return (\n      <>\n        <Tooltip title=\"Show / Hide YouTube Player\">\n          <IconButton color={this.state.visible ? 'secondary' : 'default'} onClick={this.handleToggle}>\n            <PlayArrowIcon />\n          </IconButton>\n        </Tooltip>\n        {this.state.visible ? <YouTubePlayer youTubeId={this.context.data.youTubeId} /> : ''}\n      </>\n    );\n  }\n}\n\nexport {\n  YouTubePlayer,\n  YouTubeToggle,\n};\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from '../lib/constants';\nimport Badge from '@material-ui/core/Badge';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport IconButton from '@material-ui/core/IconButton';\nimport LowPriorityIcon from '@material-ui/icons/LowPriority';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { YouTubeToggle } from './YouTube';\nimport queryString from 'query-string';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  popper: {\n    zIndex: 9999\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  slider: {\n    width: 300\n  },\n});\n\nconst handleUpdateQuery = (props, name, value, original) => {\n  const params = queryString.parse(props.location.search);\n  if (value === original) {\n    delete params[name];\n  } else {\n    params[name] = value;\n  }\n  props.history.push({ search: queryString.stringify(params) });\n};\n\nclass UnstyledColumnCountSelector extends React.Component {\n  state = {\n    anchorEl: undefined,\n  };\n\n  handleToggle = (event) => {\n    this.setState({\n      anchorEl: !this.state.anchorEl ? event.currentTarget : undefined,\n    });\n  };\n\n  handleClickAway = (event) => {\n    if (this.state.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ anchorEl: undefined });\n  };\n\n  render() {\n    const params = queryString.parse(this.props.location.search);\n    const columnCount = params[COLUMN_COUNT_QUERY_KEY] || '1';\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n\n    return (\n      <>\n        <Tooltip title=\"Set Number of Columns\">\n          <IconButton onClick={this.handleToggle}>\n            <Badge badgeContent={columnCount} invisible={columnCount === '1'} color=\"secondary\">\n              <ViewColumn />\n            </Badge>\n          </IconButton>\n        </Tooltip>\n\n        <Popper className={classes.popper} open={!!anchorEl} anchorEl={anchorEl}>\n          <ClickAwayListener onClickAway={this.handleClickAway}>\n            <ToggleButtonGroup value={columnCount} exclusive\n              onChange={(event, value) => handleUpdateQuery(this.props, COLUMN_COUNT_QUERY_KEY, value, '1')}>\n              {['1', '2', '3', '4', '5', '6', '7', '8'].map((columnCount) => (\n                <ToggleButton value={columnCount} key={columnCount}>\n                  {columnCount}\n                </ToggleButton>\n              ))}\n            </ToggleButtonGroup>\n          </ClickAwayListener>\n        </Popper>\n      </>\n    );\n  }\n};\n\nconst ColumnCountSelector = withStyles(styles, { withTheme: true })(UnstyledColumnCountSelector);\n\nclass UnstyledTransposeSelector extends React.Component {\n  state = {\n    anchorEl: undefined,\n  }\n\n  handleToggle = (event) => {\n    this.setState({\n      anchorEl: !this.state.anchorEl ? event.currentTarget : undefined,\n    });\n  };\n\n  handleClickAway = (event) => {\n    if (this.state.anchorEl.contains(event.target)) {\n      return;\n    }\n\n    this.setState({ anchorEl: undefined });\n  };\n\n  render() {\n    const params = queryString.parse(this.props.location.search);\n    const transpose = params[TRANSPOSE_QUERY_KEY] || '0';\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n\n    return (\n      <>\n        <Tooltip title=\"Transpose Up / Down\">\n          <IconButton onClick={this.handleToggle}>\n            <Badge badgeContent={transpose} invisible={transpose === '0'} color=\"secondary\">\n              <LowPriorityIcon />\n            </Badge>\n          </IconButton>\n        </Tooltip>\n\n        <Popper className={classes.popper} open={!!anchorEl} anchorEl={anchorEl}>\n          <ClickAwayListener onClickAway={this.handleClickAway}>\n            <Paper className={classes.paper}>\n              <Slider\n                className={classes.slider}\n                value={Number(transpose)}\n                min={-12}\n                max={12}\n                step={1}\n                marks={true}\n                onChange={(event, value) => handleUpdateQuery(this.props, TRANSPOSE_QUERY_KEY, String(value), '0')} />\n            </Paper>\n          </ClickAwayListener>\n        </Popper>\n      </>\n    );\n  }\n}\n\nconst TransposeSelector = withStyles(styles, { withTheme: true })(UnstyledTransposeSelector);\n\nconst MusicToolbar = (props) => (\n  <>\n    <YouTubeToggle youTubeId={props.youTubeId} />\n    <TransposeSelector {...props} />\n    <ColumnCountSelector {...props} />\n  </>\n);\n\nexport default withStyles(styles)(MusicToolbar);\n","import AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { GlobalStateContext } from './GlobalState';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\nimport MusicToolbar from './MusicToolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport { REPO_REGEX } from '../lib/constants';\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Switch from '@material-ui/core/Switch';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n  paper: {\n    padding: `${theme.spacing(1)}px`,\n  },\n  grow: {\n    flexGrow: 1\n  },\n  filter: {\n    filter: theme.palette.type === 'dark' ? 'invert(100%)' : '',\n  },\n});\n\nconst BrowseButton = ({ match }) => (\n  <Tooltip title=\"Song List View\">\n    <IconButton component={Link} to={`/repos/${match.params.repo}/browser/${match.params.branch}/`}>\n      <ViewListIcon />\n    </IconButton>\n  </Tooltip>\n);\n\nconst EditButton = ({ match }) => (\n  <Tooltip title=\"Edit Song\">\n    <IconButton component={Link} to={`/repos/${match.params.repo}/editor/${match.params.branch}/${match.params.path}`}>\n      <EditIcon />\n    </IconButton>\n  </Tooltip>\n);\n\nconst ViewButton = ({ match }) => (\n  <Tooltip title=\"Markdown View\">\n    <IconButton component={Link} to={`/repos/${match.params.repo}/viewer/${match.params.branch}/${match.params.path}`}>\n      <ExitToAppIcon />\n    </IconButton>\n  </Tooltip>\n);\n\n// TODO: Placeholder for search functionality\nconst SearchToolbar = () => (\n  <IconButton>\n    <SearchIcon />\n  </IconButton>\n);\n\nclass MusicMarkdownNavbar extends React.Component {\n  static contextType = GlobalStateContext;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settingsOpen: false,\n    };\n\n    this.settingsAnchorEl = undefined;\n  }\n\n  handleSettingsClick = () => {\n    this.setState({ settingsOpen: !this.state.settingsOpen });\n  }\n\n  handleDarkThemeSwitch = () => {\n    this.context.toggleTheme();\n  }\n\n  render() {\n    const { settingsOpen } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <AppBar position={'sticky'} key='top-navbar'>\n        <Toolbar>\n          <Button className={classes.reactRouterHoverInherit} component={Link} to='/'>\n            <img className={classes.filter}\n              src=\"music-markdown.svg\" width={50} alt=\"Music Markdown\" />\n          </Button>\n          <div className={classes.grow} />\n\n          <Route path={`${REPO_REGEX}/:mode/:branch/:path*`} component={SearchToolbar} />\n          <Route path={['/sandbox', `${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`]} component={MusicToolbar} />\n          <Route path={`${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`} component={BrowseButton} />\n          <Route path={`${REPO_REGEX}/viewer/:branch/:path*`} component={EditButton} />\n          <Route path={`${REPO_REGEX}/editor/:branch/:path*`} component={ViewButton} />\n\n          <IconButton onClick={this.handleSettingsClick} buttonRef={(node) => {\n            this.settingsAnchorEl = node;\n          }}>\n            <SettingsIcon/>\n          </IconButton>\n          <Popper\n            id='settings-popper'\n            open={settingsOpen}\n            anchorEl={this.settingsAnchorEl}\n            placement='bottom-end'>\n            <Paper className={classes.paper}>\n              <ClickAwayListener onClickAway={this.handleSettingsClick}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      defaultChecked={this.context.isDarkTheme()}\n                      onChange={this.handleDarkThemeSwitch}\n                      value='darkTheme' />\n                  }\n                  label='Toggle Dark Mode?'\n                />\n              </ClickAwayListener>\n            </Paper>\n          </Popper>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n};\n\nexport default withStyles(styles, { withTheme: true })(MusicMarkdownNavbar);\n","import Add from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ErrorSnackbar from './ErrorSnackbar';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nclass AddRepository extends React.Component {\n  state = {\n    open: false,\n    name: '',\n    owner: '',\n    message: null,\n    error: false\n  };\n\n  handleDialogOpen = () => {\n    this.setState({ open: true });\n  }\n\n  handleDialogClose = () => {\n    this.setState({\n      open: false,\n      name: '',\n      owner: '',\n      error: false\n    });\n  }\n\n  handleShowError = (message) => {\n    this.setState({\n      message: message,\n      error: true\n    });\n  }\n\n  handleClearError = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ error: false });\n  }\n\n  handleDialogAdd = async () => {\n    try {\n      await this.props.handleAddRepository(`${this.state.owner}/${this.state.name}`);\n      this.handleDialogClose();\n    } catch (err) {\n      this.handleShowError(err.message);\n    }\n  }\n\n  handleUpdateOwner = (event) => {\n    this.setState({ owner: event.target.value });\n  }\n\n  handleUpdateName = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n  render = () => (\n    <>\n      <Grid container direction='row' justify='flex-end' alignItems='flex-end'>\n        <Fab aria-label='Add' onClick={this.handleDialogOpen}>\n          <Add />\n        </Fab>\n        <Dialog open={this.state.open} aria-labelledby='add-repository-dialog'>\n          <DialogTitle id='add-repository-dialog-title'>Add Repository</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin='dense'\n              id='owner'\n              label='Repository Owner'\n              value={this.state.owner}\n              onChange={(e) => this.handleUpdateOwner(e)}\n              fullWidth\n            />\n            <TextField\n              margin='dense'\n              id='name'\n              label='Repository Name'\n              value={this.state.name}\n              onChange={(e) => this.handleUpdateName(e)}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleDialogClose}>Cancel</Button>\n            <Button onClick={this.handleDialogAdd}>Add</Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n      <ErrorSnackbar\n        message={this.state.message}\n        open={this.state.error}\n        handleClose={this.handleClearError} />\n    </>\n  );\n}\n\nexport default AddRepository;\n","import { addRepository, deleteRepository, getRepositories } from '../lib/github';\nimport AddRepository from './AddRepository';\nimport Avatar from '@material-ui/core/Avatar';\nimport Book from '@material-ui/icons/Book';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\nclass ListRepositories extends React.Component {\n  state = {\n    repos: [],\n  }\n\n  handleAddRepository = async (repo) => {\n    await addRepository(repo);\n    this.loadRepositories();\n  }\n\n  handleDeleteRepository = (repo) => {\n    deleteRepository(repo);\n    this.loadRepositories();\n  }\n\n  loadRepositories = () => {\n    this.setState({\n      repos: getRepositories()\n    });\n  }\n\n  componentDidMount = () => {\n    this.loadRepositories();\n  }\n\n  render = () => {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <List>\n          {this.state.repos.map((repo) => (\n            <ListItem button key={`repo-item-${repo}`} component={Link} to={`/repos/${repo}/`}>\n              <ListItemAvatar>\n                <Avatar>\n                  <Book />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={repo} />\n              <ListItemSecondaryAction>\n                <IconButton aria-label=\"Delete\" onClick={() => this.handleDeleteRepository(repo)}>\n                  <Delete />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n        <AddRepository handleAddRepository={this.handleAddRepository} />\n      </div>\n    );\n  }\n}\n\nconst RepositoryEditor = ({ classes }) => (\n  <ListRepositories classes={classes} />\n);\n\nexport default withStyles(styles)(RepositoryEditor);\n","import Add from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ErrorSnackbar from './ErrorSnackbar';\nimport Fab from '@material-ui/core/Fab';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { putContents } from '../lib/github';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = () => ({\n  whitespacePre: {\n    whiteSpace: 'pre-line',\n    fontFamily: 'monospace',\n  }\n});\n\nclass AddNewFile extends React.Component {\n  state = {\n    newFileName: '',\n    newFileOpen: false,\n    toEditor: false,\n    message: '',\n    error: false\n  };\n\n  handleAddNewFileOpen = () => {\n    this.setState({ newFileOpen: true });\n  }\n\n  handleAddNewFileClose = () => {\n    this.setState({\n      newFileOpen: false,\n      newFileName: ''\n    });\n  }\n\n  handleUpdateFileName = (event) => {\n    this.setState({ newFileName: event.target.value });\n  }\n\n  handleAddNewFile = async () => {\n    const { repo, branch } = this.props.match.params;\n    const path = this.getNewFilePath();\n    const content = this.getTemplateContents();\n\n    const response = await putContents(repo, path, content, undefined, branch);\n\n    if (response.status !== 201) {\n      this.handleShowError(`${response.status}: ${response.statusText}`);\n      return;\n    }\n\n    this.setState({ toEditor: true });\n  }\n\n  handleShowError = (message) => {\n    this.setState({\n      message,\n      error: true\n    });\n  }\n\n  handleClearError = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ error: false });\n  }\n\n  isValidFileName = () => (!!this.state.newFileName.match(/^[^<>:\"/\\\\|?*]+$/))\n  getTemplateContents = () => (`---\\n---\\n\\n# ${this.state.newFileName}`)\n  getNewFilePath = () => {\n    const file = this.state.newFileName;\n    const path = this.props.match.params.path;\n    return path ? `${path}/${file}.md` : `${file}.md`;\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { newFileOpen, toEditor } = this.state;\n    const { repo, branch } = this.props.match.params;\n\n    if (toEditor) {\n      return <Redirect to={`/repos/${repo}/editor/${branch}/${this.getNewFilePath()}`} />;\n    }\n\n    return (\n      <>\n        <Grid container direction='row' justify='flex-end' alignItems='flex-end'>\n          <Fab aria-label='Add' onClick={this.handleAddNewFileOpen}>\n            <Add />\n          </Fab>\n          <Dialog open={newFileOpen} aria-labelledby='add-new-file-dialog' fullWidth={true}>\n            <DialogTitle id='add-new-file-dialog-title'>Create New Music Markdown File</DialogTitle>\n            <DialogContent>\n              <Card className={classes.previewCard}>\n                <CardContent>\n                  <Typography variant=\"caption\" color=\"textSecondary\" gutterBottom>\n                    Preview\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"textPrimary\" className={classes.whitespacePre}>\n                    {this.getTemplateContents()}\n                  </Typography>\n                </CardContent>\n              </Card>\n              <TextField\n                autoFocus\n                margin='dense'\n                id='owner'\n                label='Music Markdown File Name'\n                value={this.state.newFileName}\n                onChange={(e) => this.handleUpdateFileName(e)}\n                fullWidth\n                error={!this.isValidFileName()}\n                helperText={!this.isValidFileName() ?\n                  'Invalid file name' :\n                  <>{repo}/{branch}/{this.getNewFilePath()}</>}\n                InputProps={{\n                  endAdornment: <InputAdornment position=\"end\">.md</InputAdornment>\n                }}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleAddNewFileClose} color=\"secondary\">Cancel</Button>\n              <Button onClick={this.handleAddNewFile} color=\"primary\" disabled={!this.isValidFileName()}>Create</Button>\n            </DialogActions>\n          </Dialog>\n        </Grid>\n        <ErrorSnackbar\n          message={this.state.message}\n          open={this.state.error}\n          handleClose={this.handleClearError} />\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(AddNewFile);\n","import AddNewFile from './AddNewFile';\nimport Avatar from '@material-ui/core/Avatar';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport DirectoryBreadcrumbs from './RouterBreadcrumbs';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Link } from 'react-router-dom';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport React from 'react';\nimport { getContents } from '../lib/github';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass RepositoryNavigation extends React.Component {\n  state = {\n    isLoaded: false,\n    contents: [],\n  };\n\n  async componentDidMount() {\n    const { repo, path, branch } = this.props.match.params;\n\n    const contents = await getContents(repo, path, branch);\n    this.sortDir(contents);\n    this.setState({\n      isLoaded: true,\n      contents\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Props before update\n   */\n  async componentDidUpdate(prevProps) {\n    const { repo: prevRepo, path: prevPath, branch: prevBranch } = prevProps.match.params;\n    const { repo, path, branch } = this.props.match.params;\n\n    if (prevRepo !== repo || prevPath !== path || prevBranch !== branch) {\n      const contents = await getContents(repo, path, branch);\n      this.sortDir(contents);\n      this.setState({\n        isLoaded: true,\n        contents\n      });\n    }\n  }\n\n  /**\n   * Sorts the contents of a GitHub directory. Lists directories first then files, each in alphabetical order.\n   * @param {Object[]} contents GitHub directory contents. Contains files and directories.\n   */\n  sortDir(contents) {\n    contents.sort((a, b) => {\n      if (a.type === 'file') {\n        if (b.type === 'file') {\n          return a.name - b.name;\n        }\n        return 1;\n      }\n      if (b.type === 'file') {\n        return -1;\n      }\n      return a.name - b.name;\n    });\n  }\n\n  render() {\n    const { repo, branch } = this.props.match.params;\n    const { isLoaded, contents } = this.state;\n    const { classes } = this.props;\n\n    if (!isLoaded) {\n      return (\n        <LinearProgress />\n      );\n    }\n\n    return (\n      <>\n        <DirectoryBreadcrumbs pathname={this.props.location.pathname} />\n        <div className={classes.root}>\n          <List key={'repo-navigation-list'}>\n            {\n              contents.map((item) => (\n                <ListItem button component={Link}\n                  key={`list-group-item-${item.name}`}\n                  to={item.type === 'dir' ?\n                    `/repos/${repo}/browser/${branch}/${item.path}/` :\n                    `/repos/${repo}/viewer/${branch}/${item.path}`}>\n                  <ListItemAvatar>\n                    <Avatar>\n                      {item.type === 'dir' ? <FolderIcon /> : <DescriptionIcon /> }\n                    </Avatar>\n                  </ListItemAvatar>\n                  {item.type === 'dir' ?\n                    <ListItemText secondary={item.name}></ListItemText> :\n                    <ListItemText primary={item.name}></ListItemText>}\n                </ListItem>\n              ))\n            }\n          </List>\n          <AddNewFile location={this.props.location} match={this.props.match} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(RepositoryNavigation);\n","import Grid from '@material-ui/core/Grid';\nimport React from 'react';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Grid key={RESPONSIVE_CONTAINER_KEY}>\n      {props.children}\n    </Grid>\n  );\n}\n\nexport default ResponsiveContainer;\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from '../lib/constants';\nimport { Link, Route } from 'react-router-dom';\nimport MusicMarkdown from './MusicMarkdown';\nimport Paper from '@material-ui/core/Paper';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { guitarChordbook } from 'markdown-it-music/lib/chordbook';\nimport queryString from 'query-string';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n  chordSourcePaper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  chordCategoryPaper: {\n    margin: theme.spacing(1),\n    textAlign: 'center',\n  },\n  chordCategoryTypography: {\n    color: theme.palette.text.primary,\n    textAlign: 'center',\n  },\n  chordVariantPaper: {\n    display: 'inline-block',\n    margin: theme.spacing(1),\n    textAlign: 'center',\n  },\n  chordVariantTypography: {\n    color: theme.palette.text.secondary,\n  },\n  chordDiagram: {\n    filter: theme.palette.type === 'dark' ? 'invert(100%)' : '',\n  }\n});\n\nconst Sandbox = ({ classes, location, match }) => (\n  <div className={classes.root}>\n    <Typography variant='h2'>Sandbox</Typography>\n\n    <ul>\n      <li><Link to={`${match.url}/all-features-in-one-place`}>All the Features in One Place</Link></li>\n      <li><Link to={`${match.url}/guitar-chordbook`}>Guitar Chordbook</Link></li>\n    </ul>\n\n    <Route path={`${match.path}/all-features-in-one-place`}\n      component={() => <MarkdownViewer location={location} source={allFeaturesSource} />} />\n    <Route path={`${match.path}/guitar-chordbook`} component={AllGuitarChords} />\n  </div>\n);\n\nconst MarkdownViewer = ({ source, location }) => {\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || '1';\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  return <MusicMarkdown source={source} columnCount={columnCount} transposeAmount={transposeAmount} />;\n};\n\nconst roots = ['C', 'C#', 'Db', 'D', 'D#', 'Eb', 'E', 'F', 'F#', 'Gb', 'G', 'G#', 'Ab', 'A', 'A#', 'Bb', 'B'];\n\nconst qualities = [\n  '', 'm', '6', 'm6', '7', 'maj7', 'm7', '9', 'dim', 'aug', 'sus2', '7sus2', 'sus4', '7sus4', '5', 'dim5', 'dim7',\n  '7b5', 'm7b5', '7#5', '7b9', '7#9', '7b9#5', '7/6', '9b5', '9#5', 'maj9', 'm9', '9/6', 'm9/6', 'add9', '11', 'm11',\n  '11aug', '13', '13b9', '13b9b5'\n];\n\nconst AllGuitarChords = withStyles(styles, { withTheme: true })(({ classes, location }) => (\n  <>\n    <Typography variant='h3'>Guitar Chordbook</Typography>\n    <Paper className={classes.chordSourcePaper}>\n      <MarkdownViewer source={allChordsSource} location={location} />\n    </Paper>\n    {roots.map((category, index) => (\n      <Paper key={`category-${index}`} className={classes.chordCategoryPaper}>\n        <Typography className={classes.chordCategoryTypography} variant='h4'>{category} Chords</Typography>\n        <ChordCategory category={category} />\n      </Paper>\n    ))}\n  </>\n));\n\nconst ChordCategory = withStyles(styles, { withTheme: true })(({ classes, category }) => (\n  Array.from(guitarChordbook.keys())\n    .filter((chord) => chord.match(/^[CDEFGAB](?:#|b)?|N\\.C\\./)[0] === category)\n    .map((chord, index) => (\n      <Paper key={`chord-${index}`} className={classes.chordVariantPaper}>\n        {guitarChordbook.get(chord)\n          .map((variant, index) => (\n            <span className={classes.chordDiagram} key={`variant-${index}`}\n              dangerouslySetInnerHTML={{ __html: renderChordDiagram(variant) }} />\n          ))}\n        <Typography className={classes.chordVariantTypography} variant='h5'>{chord}</Typography>\n      </Paper>\n    ))\n));\n\nconst allChordsSource = `---\n---\n${roots.map((root) => `## ${root} Chords\nc1: ${qualities.map((quality) => root + quality).join(' ')}`).join('\\n\\n')}\n`;\n\nconst allFeaturesSource = `---\nyouTubeId: dN3GbF9Bx6E\n---\n\n# All the Features in One Place\n\n## Chord and Lyrics\nc1: Em               D           Em\nl1: Are you goin' to Scarborough Fair?\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\n\nc1: Em       G                   D\nl1: Remember me to one who lives there\n\nc1: Em       D                  Em\nl1: She once was a true love of mine\n\n## Multiple Overlapping Voices\nc1: Em                         D         Em\nl1: Tell her to make me a      cambric   shirt\nl2:                     On the side of a hill in the deep forest green\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\nl2:                              Tracing a sparrow on snow-crested ground\n\nc1: Em         G               D\nl1: Without no seams nor needlework\nl2:                      Blankets and bedclothes the child of the mountain\n\nc1: Em          D                 Em\nl1: Then she'll be a true love of mine\nl2:                               Sleeps unaware of the clarion call\n\n## VexTab\n\n:::vextab\noptions space=20\n\ntabstave\n  notation=true\n  key=A time=4/4\n\n  notes :q =|: (5/2.5/3.7/4) :8 7-5h6/3 ^3^ 5h6-7/5 ^3^ :q 7V/4 |\n  notes :8 t12p7/4 s5s3/4 :8 3s:16:5-7/5 :h p5/4\n  text :w, |#segno, ,|, :hd, , #tr\n\n\noptions space=25\n\ntabstave\n  notation=true\n\n  notes :q (5/4.5/5) (7/4.7/5)s(5/4.5/5) ^3^\n  notes :8 7-5/4 $.a./b.$ (5/4.5/5)h(7/5) =:|\n  notes :8 (12/5.12/4)ds(5/5.5/4)u 3b4/5\n  notes :h (5V/6.5/4.6/3.7/2) $.italic.let ring$ =|=\n\n  text :h, ,.font=Times-12-italic, D.S. al coda, |#coda\n  text :h, ,.-1, .font=Arial-14-bold,A13\n  text ++, .23, #f\n :::\n\n## ABC\n\n:::abc\nX: 1\nM: 4/4\nL: 1/16\nK: Amin\n\"Am\" (C16 | C4) B,2C2 D6 CB, | (C16 | C4) B,2C2 \"F\" D6 CA, |\n\"C\" G,8 \"E\" _A,8 | \"Am\" =A,8 \"F\" (3F4 F4 F4 | \"E\" F2 (E6 E8) | z6 ^A2 B4 e4 |\n\"Am\" e2d2c2(d2 \"G\" d4) .=A4 | \"F\" e2d2c2(d2 \"G\" d4) .A4 |\n\"Esus4\" e4 e4 e2d2B2d2 | \"E\" e4 e4 e2g2e2d2 |\n\"Am\" .e4 c2 \"G\" .d4 c2 e4 | \"F\" z2 c2 e2 \"G\" d6 c2d2 |\n\"Esus4\" e2e2e2d2 d2B2B2_A2 | \"E\" _A2F2F2E2 =A2B2A2G2 |\n:::\n\n`;\n\nexport default withStyles(styles, { withTheme: true })(Sandbox);\n","import './App.scss';\nimport { GlobalStateProvider, useGlobalStateContext } from './GlobalState';\nimport { Route, HashRouter as Router, Switch } from 'react-router-dom';\nimport BranchNavigation from './BranchNavigation';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MarkdownEditor from './MarkdownEditor';\nimport MarkdownViewer from './MarkdownViewer';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar';\nimport { REPO_REGEX } from '../lib/constants';\nimport React from 'react';\nimport RepositoryEditor from './RepositoryEditor';\nimport RepositoryNavigation from './RepositoryNavigation';\nimport ResponsiveContainer from './ResponsiveContainer';\nimport Sandbox from './Sandbox.js';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\n\nconst App = () => (\n  <GlobalStateProvider>\n    <ThemeProvider />\n  </GlobalStateProvider>\n);\n\nconst ThemeProvider = () => {\n  const context = useGlobalStateContext();\n\n  return (\n    <MuiThemeProvider theme={createMuiTheme(context.data.theme)}>\n      <CssBaseline />\n      <ResponsiveContainer children={[HomeRouter()]} />\n    </MuiThemeProvider>\n  );\n};\n\nconst HomeRouter = () => (\n  <Router key=\"home-router\">\n    <>\n      <Route component={MusicMarkdownNavbar} />\n      <Switch>\n        <Route path={`${REPO_REGEX}/viewer/:branch/:path+`} component={MarkdownViewer} />\n        <Route path={`${REPO_REGEX}/browser/:branch/:path*`} component={RepositoryNavigation} />\n        <Route path={`${REPO_REGEX}/editor/:branch/:path*`} component={MarkdownEditor} />\n        <Route path={REPO_REGEX} component={BranchNavigation} />\n        <Route path='/sandbox' component={Sandbox} />\n        <Route path='/' component={RepositoryEditor} />\n      </Switch>\n    </>\n  </Router>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import App from './components/App.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}