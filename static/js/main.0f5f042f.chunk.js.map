{"version":3,"sources":["tools/asciitab.js","serviceWorkerRegistration.js","lib/constants.js","lib/github.js","components/GlobalState.js","components/RouterBreadcrumbs.js","components/BranchNavigation.js","components/ErrorSnackbar.js","components/MusicMarkdown.js","lib/hooks.js","components/MarkdownEditor.js","components/MarkdownViewer.js","components/GithubTokenDialog.js","components/YouTubePlayer.js","components/YouTubeToggle.js","components/MusicToolbar.js","components/MusicMarkdownNavbar.js","components/AddRepository.js","components/RepositoryEditor.js","components/AddNewFile.js","components/RepositoryNavigation.js","components/ResponsiveContainer.js","components/Sandbox.js","components/App.js","index.js"],"names":["isChord","require","State","getMaybeHeading","line","endsWith","slice","startsWith","getMaybeChords","tokens","trim","split","token","asciiTabConvert","input","state","voiceIndex","lines","output","push","maybeHeading","maybeChords","join","module","async","console","log","stream","buffer","Buffer","alloc","chunk","concat","toString","read","process","stdin","main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","COLUMN_COUNT_QUERY_KEY","LOCAL_STORAGE_NAMESPACE","REPO_REGEX","TRANSPOSE_QUERY_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","REPOS_LOCAL_STORAGE_KEY","getContents","repo","path","branch","undefined","length","response","githubApiFetch","cache","json","content","Base64","decode","putContents","sha","body","message","encode","method","mode","JSON","stringify","getRepositories","repoListStr","localStorage","getItem","parse","addRepository","r","Error","verifyRepoUnregistered","status","verifyRepoExists","repos","setItem","getBranches","init","URL","searchParams","set","githubToken","getGithubToken","headers","Authorization","fetch","Request","isValidGithubToken","lightTheme","palette","darkTheme","initialTheme","GlobalStateContext","createContext","useGlobalStateContext","useContext","GlobalStateProvider","props","setState","useState","theme","youTubeId","Provider","value","data","setGithubToken","removeItem","isDarkTheme","toggleTheme","setYouTubeId","children","useYouTubeId","context","useStyles","makeStyles","paper","padding","spacing","reactRouterHoverInherit","DirectoryBreadcrumbs","pathname","classes","subDirectoriesArr","filter","breadcrumbItems","previousPath","ignoreIndex","keyBase","currDir","i","directory","indexOf","Typography","role","color","Link","component","RouterLink","to","className","buildBreadcrumb","Paper","Breadcrumbs","root","flexGrow","BranchNavigation","branches","setBranches","isLoaded","setIsLoaded","useEffect","params","fetchBranches","List","map","item","ListItem","button","name","ListItemAvatar","Avatar","ListItemText","primary","LinearProgress","backgroundColor","dark","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","margin","ErrorSnackbar","open","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","aria-describedby","id","classNames","action","IconButton","aria-label","close","onClick","size","columns","columnGap","columnRuleWidth","columnRuleStyle","columnRuleColor","text","secondary","MusicMarkdownRender","source","width","columnCount","transposeAmount","useTheme","html","setHtml","setMessage","setError","md","MarkdownIt","use","MarkdownItMusic","setTranspose","setTheme","setMaxWidth","render","meta","err","script","exec","eval","dangerouslySetInnerHTML","__html","event","reason","MusicMarkdown","componentRef","useRef","ref","dimensions","setDimensions","height","handleResize","current","offsetWidth","offsetHeight","addEventListener","removeEventListener","useContainerDimensions","style","fabProgress","green","position","top","left","zIndex","editor","marginLeft","fab","toolbar","buttonSuccess","MarkdownEditor","markdown","setMarkdown","debouncedMarkdown","delay","debounced","setDebounced","timer","setTimeout","clearTimeout","useDebounce","setSha","saving","setSaving","success","setSuccess","isDirty","setIsDirty","fetchContents","queryString","search","Number","buttonClassname","parts","viewerLink","githubParts","githubLink","Grid","container","xs","Tooltip","title","Fab","disabled","CircularProgress","href","target","maxLines","Infinity","onChange","editorProps","$blockScrolling","MarkdownViewer","AccordionDetails","withStyles","AccordionActions","GithubTokenInstructions","Accordion","AccordionSummary","expandIcon","rel","GithubTokenDialog","setToken","isValidToken","handleCloseDialog","Dialog","DialogTitle","DialogContent","TextField","autoFocus","label","fullWidth","e","helperText","DialogActions","Button","bottom","right","cursor","YouTubePlayer","visible","nodeRef","border","src","allow","allowFullScreen","YouTubeToggle","setVisible","popper","slider","handleUpdateQuery","original","history","ColumnCountSelector","anchorEl","setAnchorEl","currentTarget","Badge","badgeContent","invisible","Popper","ClickAwayListener","onClickAway","contains","ToggleButtonGroup","exclusive","ToggleButton","TransposeSelector","transpose","Slider","min","max","step","marks","String","MusicToolbar","grow","borderRadius","shape","alpha","common","white","marginTop","breakpoints","up","inputRoot","inputInput","BrowseButton","EditButton","ViewButton","SearchToolbar","searchOpen","setSearchOpen","handleSearchToggle","variant","placement","InputBase","placeholder","inputProps","MusicMarkdownNavbar","apiKeyDialogOpen","setApiKeyDialogOpen","settingsOpen","setSettingsOpen","settingsAnchorEl","setSettingsAnchorEl","handleSettingsToggle","AppBar","Toolbar","alt","MenuList","MenuItem","FormControlLabel","control","Switch","checked","grid","AddRepository","handleAddRepository","setOpen","setName","owner","setOwner","handleDialogClose","direction","justifyContent","aria-labelledby","handleShowError","RepositoryEditor","setRepos","reposFingerprint","loadRepositories","handleDeleteRepository","deleteRepository","ListItemSecondaryAction","whitespacePre","whiteSpace","fontFamily","AddNewFile","newFileName","setNewFileName","newFileOpen","setNewFileOpen","toEditor","setToEditor","isValidFileName","getTemplateContents","getNewFilePath","Card","previewCard","CardContent","gutterBottom","InputProps","endAdornment","InputAdornment","statusText","RepositoryNavigation","contents","setContents","sort","a","b","type","sortDir","ResponsiveContainer","chordSourcePaper","chordCategoryPaper","textAlign","chordCategoryTypography","chordVariantPaper","chordVariantTypography","chordDiagram","Sandbox","url","allFeaturesSource","AllGuitarChords","roots","qualities","allChordsSource","category","index","ChordCategory","Array","from","guitarChordbook","keys","chord","get","renderChordDiagram","quality","ThemeProvider","StyledEngineProvider","injectFirst","createTheme","CssBaseline","HomeRouter","App","ReactDOM","StrictMode","document","getElementById","origin","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0f5f042f.chunk.js","sourcesContent":["const { isChord } = require(\"markdown-it-music/lib/chord\");\n\nconst State = {\n  DEFAULT: 1,\n  VERSE: 2,\n  FENCE: 3,\n};\n\nfunction getMaybeHeading(line) {\n  if (line.endsWith(\":\")) {\n    return `## ${line.slice(0, -1)}`;\n  }\n\n  if (line.startsWith(\"[\") && line.endsWith(\"]\")) {\n    return `## ${line.slice(1, -1)}`;\n  }\n\n  return null;\n}\n\nfunction getMaybeChords(line) {\n  const tokens = line.trim().split(/\\s+/);\n\n  for (const token of tokens) {\n    if (!isChord(token)) {\n      return null;\n    }\n  }\n\n  return `c1: ${line}`;\n}\n\nfunction asciiTabConvert(input) {\n  let state = State.DEFAULT;\n  let voiceIndex = 1;\n  const lines = input.split(/\\n/);\n  const output = [];\n\n  for (const line of lines) {\n    if (line.startsWith(\":::\")) {\n      state = State.FENCE;\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.DEFAULT) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        state = State.VERSE;\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.VERSE) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        state = State.DEFAULT;\n        output.push(\"\");\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        output.push(\"\");\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      if (line.trim() === \"\") {\n        continue;\n      }\n\n      output.push(`l${voiceIndex}: ${line}`);\n      voiceIndex += 1;\n      continue;\n    }\n\n    if (state === State.FENCE) {\n      if (line === \":::\") {\n        state = State.DEFAULT;\n      }\n\n      output.push(line);\n      continue;\n    }\n  }\n\n  return output.join(\"\\n\");\n}\n\nasync function read(stream) {\n  let buffer = Buffer.alloc(0);\n  for await (const chunk of stream) {\n    buffer = Buffer.concat([buffer, chunk]);\n  }\n  return buffer.toString(\"utf8\");\n}\n\nasync function main() {\n  console.log(asciiTabConvert(await read(process.stdin)));\n}\n\nif (typeof require !== \"undefined\" && require.main === module) {\n  main();\n}\n\nexport default asciiTabConvert;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export const COLUMN_COUNT_QUERY_KEY = \"columns\";\nexport const LOCAL_STORAGE_NAMESPACE = \"music-markdown\";\nexport const REPO_REGEX = \"/repos/:repo([^/]+/[^/]+)\";\nexport const TRANSPOSE_QUERY_KEY = \"transpose\";\n","import { Base64 } from \"js-base64\";\nimport { LOCAL_STORAGE_NAMESPACE } from \"./constants\";\n\nconst GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:github_token`;\nconst REPOS_LOCAL_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:repositories`;\nconst GITHUB_API_URL = \"https://api.github.com\";\nconst REPOS_CONTENTS_TREE_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:indexed-contents`;\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} repo The owner and repo in the form :owner/:repo\n * @param {string} path The directory or file to retrieve\n * @param {string} branch The branch to retrive contents from\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(repo, path, branch) {\n  if (path === undefined || path.length === 0) {\n    path = \"\";\n  }\n  const response = await githubApiFetch(\n    `/repos/${repo}/contents/${path}`,\n    { cache: \"no-cache\" },\n    branch\n  );\n  const json = await response.json();\n  json.content = json.content ? Base64.decode(json.content) : \"\";\n  return json;\n}\n\nexport async function putContents(repo, path, content, sha, branch) {\n  const body = {\n    message: `Music Markdown published ${path}`,\n    content: Base64.encode(content),\n    branch,\n  };\n\n  if (sha) {\n    body.sha = sha;\n  }\n\n  return githubApiFetch(`/repos/${repo}/contents/${path}`, {\n    method: \"PUT\",\n    mode: \"cors\",\n    body: JSON.stringify(body),\n  });\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\n/**\n * Indexes all contents from stored repositories for searching\n * TODO: Consider when a full refresh should be called. Currently, it's invoked when\n * a repository is first accessed. However, there should be a manual trigger to allow\n * a manual refresh of external repos.\n */\nexport async function refreshIndexedContents() {\n  let reposContents = [];\n  for (const repo of await getRepositories()) {\n    const repoContents = await getRepoContents(repo);\n    reposContents.push(repoContents);\n  }\n  localStorage.setItem(REPOS_CONTENTS_TREE_STORAGE_KEY, reposContents);\n}\n\n/**\n * Returns all file contents in a particular github repo for all branches\n * @param {string} repo The owner and repo in the form :owner/:repo\n * @return {string|Array} List of contents in a repo\n */\nexport async function getRepoContents(repo) {\n  let repoContents = [];\n  for (const branch of await getBranches(repo)) {\n    const branchContents = await getBranchContents(repo, \"/\", branch.name);\n    repoContents.push(branchContents);\n  }\n  return repoContents;\n}\n\n/**\n * Returns all file contents from a repo's specific branch\n * @param {string} repo The owner and repo in the form :owner/:repo\n * @param {string} path Subdirectory in repo to traverse\n * @param {string} branch Name of branch in repo to traverse\n * @return {Array<string>} Array of file contents paths\n */\nasync function getBranchContents(repo, path, branch) {\n  let branchContents = [];\n  for (const item of await getContents(repo, path, branch)) {\n    if (item.type === \"file\") {\n      branchContents.push(`${repo}/${branch}/${item.path}`);\n    } else if (item.type === \"dir\") {\n      branchContents.push(await getBranchContents(repo, item.path, branch));\n    }\n  }\n  return branchContents;\n}\n\nasync function verifyRepoExists(repo) {\n  const response = await githubApiFetch(`/repos/${repo}`);\n  if (response.status === 404) {\n    throw new Error(`\"${repo}\" not found on GitHub.`);\n  }\n}\n\nfunction verifyRepoUnregistered(repo) {\n  for (const r of getRepositories()) {\n    if (r === repo) {\n      throw new Error(`\"${repo}\" is already registered.`);\n    }\n  }\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function addRepository(repo) {\n  verifyRepoUnregistered(repo);\n  await verifyRepoExists(repo);\n  const repos = getRepositories();\n  repos.push(repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Returns a promise of a list of branches for the given repository.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function getBranches(repo) {\n  const response = await githubApiFetch(`/repos/${repo}/branches`);\n  return response.json();\n}\n\n/**\n * Removes a GitHub repo from localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport function deleteRepository(repo) {\n  const repos = getRepositories().filter((r) => r !== repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Performs a fetch to the GitHub API, attaching the user's GitHub access\n * token if it is set.\n */\nasync function githubApiFetch(path, init, branch) {\n  const input = new URL(path, GITHUB_API_URL);\n  if (branch) {\n    input.searchParams.set(\"ref\", branch);\n  }\n\n  const githubToken = getGithubToken();\n  if (githubToken) {\n    init = {\n      ...init,\n      ...{ headers: { Authorization: `token ${githubToken}` } },\n    };\n  }\n\n  return fetch(new Request(input, init));\n}\n\nexport function getGithubToken() {\n  return localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n}\n\nexport function isValidGithubToken(githubToken = getGithubToken()) {\n  return !!githubToken &&\n  (!!githubToken.match(/^[0-9a-f]{40}$/) ||\n    !!githubToken.match(/^ghp_[a-zA-Z0-9]{36}$/));\n}\n\nexport function setGithubToken(githubToken) {\n  if (githubToken) {\n    localStorage.setItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY, githubToken);\n  } else {\n    localStorage.removeItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  }\n}\n","import { createContext, useContext, useState } from \"react\";\nimport {\n  getGithubToken,\n  isValidGithubToken,\n  setGithubToken,\n} from \"../lib/github\";\nimport { LOCAL_STORAGE_NAMESPACE } from \"../lib/constants\";\n\nconst lightTheme = {\n  palette: {\n    mode: \"light\",\n  },\n};\n\nconst darkTheme = {\n  palette: {\n    mode: \"dark\",\n  },\n};\n\nconst initialTheme =\n  window.localStorage.getItem(`${LOCAL_STORAGE_NAMESPACE}:palette-type`) ===\n  \"dark\"\n    ? darkTheme\n    : lightTheme;\n\nexport const GlobalStateContext = createContext();\n\nexport const useGlobalStateContext = () => useContext(GlobalStateContext);\n\nexport const GlobalStateProvider = (props) => {\n  const [state, setState] = useState({\n    githubToken: getGithubToken(),\n    theme: initialTheme,\n    youTubeId: null,\n  });\n\n  return (\n    <GlobalStateContext.Provider\n      value={{\n        data: state,\n        isValidGithubToken: () => isValidGithubToken(state.githubToken),\n        setGithubToken: (githubToken) => {\n          if (githubToken !== state.githubToken) {\n            setState({ ...state, githubToken });\n            setGithubToken(githubToken);\n          }\n        },\n        isDarkTheme: () => state.theme.palette.mode === \"dark\",\n        toggleTheme: () => {\n          const theme =\n            state.theme.palette.mode === \"dark\" ? lightTheme : darkTheme;\n          window.localStorage.setItem(\n            `${LOCAL_STORAGE_NAMESPACE}:palette-type`,\n            theme.palette.mode\n          );\n          setState({ ...state, theme });\n        },\n        setYouTubeId: (youTubeId) => {\n          if (youTubeId !== state.youTubeId) {\n            setState({ ...state, youTubeId });\n          }\n        },\n      }}\n    >\n      {props.children}\n    </GlobalStateContext.Provider>\n  );\n};\n\nexport function useYouTubeId() {\n  const context = useGlobalStateContext();\n  return {\n    youTubeId: context.data.youTubeId,\n    setYouTubeId: context.setYouTubeId,\n  };\n}\n","import Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@mui/material/Typography\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n}));\n\nfunction buildBreadcrumb(previousPath, classes) {\n  const breadcrumbItems = [];\n\n  // ignoreIndex matches the Route defined in App.js.\n  // Certain portions are not useful to user in the breadcrumb, so we remove them.\n  const ignoreIndex = [\n    0 /* /repos */,\n    3 /* /:viewName(browser|viewer|editor) */,\n  ];\n  const keyBase = \"breadcrumb-item-\";\n\n  let currDir = \"\";\n  for (let i = 0; i < previousPath.length; i++) {\n    const directory = previousPath[i];\n    currDir = currDir.concat(\"/\", directory);\n\n    if (ignoreIndex.indexOf(i) !== -1) {\n      continue;\n    }\n\n    if (i === previousPath.length - 1) {\n      // Last item should be active\n      breadcrumbItems.push(\n        <Typography\n          role=\"breadcrumb\"\n          color=\"textPrimary\"\n          key={`${keyBase}${i}`}\n        >\n          {directory}\n        </Typography>\n      );\n    } else {\n      breadcrumbItems.push(\n        <Link\n          role=\"breadcrumb\"\n          component={RouterLink}\n          to={`${currDir}/`}\n          key={`${keyBase}${i}`}\n          color=\"inherit\"\n          className={classes.reactRouterHoverInherit}\n        >\n          {directory}\n        </Link>\n      );\n    }\n  }\n\n  return breadcrumbItems;\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {string} pathname current URI pathname\n * @return {Array} List of BreadcrumbItems\n */\nexport default function DirectoryBreadcrumbs({ pathname }) {\n  const classes = useStyles();\n  const keyBase = \"breadcrumb-item-\";\n\n  const subDirectoriesArr = pathname.split(\"/\").filter((value) => !!value);\n  subDirectoriesArr[3] = \"browser\";\n\n  const breadcrumbItems = buildBreadcrumb(subDirectoriesArr, classes);\n\n  return (\n    <Paper className={classes.paper}>\n      <Breadcrumbs>\n        <Link\n          role=\"breadcrumb\"\n          component={RouterLink}\n          to={`/`}\n          key={`${keyBase}Home`}\n          color=\"inherit\"\n          className={classes.reactRouterHoverInherit}\n        >\n          Home\n        </Link>\n        {breadcrumbItems}\n      </Breadcrumbs>\n    </Paper>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nimport Avatar from \"@mui/material/Avatar\";\nimport CallSplitIcon from \"@mui/icons-material/CallSplit\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { getBranches } from \"../lib/github\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nexport default function BranchNavigation({ location, match }) {\n  const classes = useStyles();\n  const [branches, setBranches] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchBranches() {\n      const branches = await getBranches(match.params.repo);\n      setBranches(branches);\n      setIsLoaded(true);\n    }\n    fetchBranches();\n  }, [match.params.repo]);\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <List>\n          {branches.map((item) => (\n            <ListItem\n              button\n              component={Link}\n              key={`list-group-item-${item.name}`}\n              to={`/repos/${match.params.repo}/browser/${item.name}/`}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <CallSplitIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={item.name}></ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </>\n  );\n}\n","import CloseIcon from \"@mui/icons-material/Close\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport SnackbarContent from \"@mui/material/SnackbarContent\";\nimport classNames from \"classnames\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ErrorSnackbar({ open, handleClose, message }) {\n  const classes = useStyles();\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <SnackbarContent\n        className={classes.error}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <ErrorIcon\n              className={classNames(classes.icon, classes.iconVariant)}\n            />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n            size=\"large\">\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\n\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport MarkdownIt from \"markdown-it\";\nimport MarkdownItMusic from \"markdown-it-music\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { useContainerDimensions } from \"../lib/hooks\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useYouTubeId } from \"./GlobalState\";\n\nconst COLUMN_GAP = 20;\n\nconst useStyles = makeStyles((theme) => ({\n  columns: {\n    columnGap: `${COLUMN_GAP}px`,\n    columnRuleWidth: \"1px\",\n    columnRuleStyle: \"dashed\",\n    columnRuleColor: theme.palette.text.secondary,\n  },\n}));\n\nconst MusicMarkdownRender = ({\n  source,\n  width,\n  columnCount,\n  transposeAmount,\n}) => {\n  const theme = useTheme();\n  const { setYouTubeId } = useYouTubeId();\n  const [html, setHtml] = useState(\"\");\n  const [message, setMessage] = useState();\n  const [error, setError] = useState(false);\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  useEffect(() => {\n    const md = new MarkdownIt({ html: true }).use(MarkdownItMusic);\n    md.setTranspose(transposeAmount);\n    md.setTheme(theme.palette.mode);\n    md.setMaxWidth((width - COLUMN_GAP * (columnCount - 1)) / columnCount);\n\n    try {\n      setHtml(md.render(source));\n      setError(false);\n      setYouTubeId(md.meta.youTubeId);\n    } catch (err) {\n      console.log(err);\n      setHtml(`<pre>${source}</pre>`);\n      setMessage(err.message);\n      setError(true);\n    }\n  }, [\n    setYouTubeId,\n    source,\n    width,\n    columnCount,\n    transposeAmount,\n    theme.palette.mode,\n  ]);\n\n  // TODO: Replace this hack with an iframe.\n  var script = /<script>([.\\s\\S]*)<\\/script>/gm.exec(html);\n  if (script) {\n    // eslint-disable-next-line no-eval\n    window.eval(script[1]);\n  }\n\n  return (\n    <>\n      {/* TODO: Replace this hack with an iframe. */}\n      <div\n        className={`mmd-${theme.palette.mode}`}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n      <ErrorSnackbar\n        message={message}\n        open={error}\n        handleClose={handleClearError}\n      />\n    </>\n  );\n};\n\nexport default function MusicMarkdown(props) {\n  const classes = useStyles();\n  const componentRef = useRef();\n  const { width } = useContainerDimensions(componentRef);\n\n  return (\n    <div\n      className={classes.columns}\n      style={{ columnCount: props.columnCount }}\n      ref={componentRef}\n    >\n      <MusicMarkdownRender width={width} {...props} />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce(value, delay) {\n  const [debounced, setDebounced] = useState(\"\");\n  useEffect(() => {\n    const timer = setTimeout(() => setDebounced(value), delay);\n    return () => clearTimeout(timer);\n  }, [value, delay]);\n  return debounced;\n}\n\nexport function useContainerDimensions(ref) {\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        width: ref.current.offsetWidth,\n        height: ref.current.offsetHeight,\n      });\n    };\n\n    if (ref?.current) {\n      handleResize();\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [ref]);\n\n  return dimensions;\n}\n","import { useEffect, useState } from \"react\";\nimport { getContents, putContents } from \"../lib/github\";\nimport { useTheme } from \"@mui/material/styles\";\n\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport AceEditor from \"react-ace\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\nimport Fab from \"@mui/material/Fab\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport Grid from \"@mui/material/Grid\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport Paper from \"@mui/material/Paper\";\nimport PhotoFilterIcon from \"@mui/icons-material/PhotoFilter\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport asciiTabConvert from \"../tools/asciitab\";\nimport classNames from \"classnames\";\nimport { useDebounce } from \"../lib/hooks\";\nimport { useGlobalStateContext } from \"./GlobalState\";\nimport queryString from \"query-string\";\nimport \"ace-builds/src-noconflict/mode-markdown\"; // eslint-disable-line sort-imports\n\nimport \"ace-builds/src-noconflict/theme-textmate\"; // eslint-disable-line sort-imports\nimport \"ace-builds/src-noconflict/theme-twilight\"; // eslint-disable-line sort-imports\nimport { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport { green } from '@mui/material/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n  fabProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  editor: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    height: \"100%\",\n    width: \"100%\",\n  },\n  fab: {\n    margin: theme.spacing(1),\n  },\n  toolbar: {\n    display: \"flex\",\n    padding: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: \"100%\",\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[700],\n    },\n  },\n}));\n\nexport default function MarkdownEditor({ match, location }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const context = useGlobalStateContext();\n  const [markdown, setMarkdown] = useState(\"\");\n  const debouncedMarkdown = useDebounce(markdown, 250);\n  const [sha, setSha] = useState();\n  const [saving, setSaving] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [isDirty, setIsDirty] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { repo, path, branch } = match.params;\n\n  const handleChange = (value) => {\n    setMarkdown(value);\n    setIsDirty(true);\n    setSuccess(false);\n  };\n\n  const handleSave = async () => {\n    if (!saving) {\n      setSuccess(false);\n      setSaving(true);\n\n      const response = await putContents(repo, path, markdown, sha, branch);\n      const json = await response.json();\n\n      if (response.status === 200) {\n        setSuccess(true);\n        setSaving(false);\n        setSha(json.content.sha);\n      } else {\n        setSuccess(false);\n        setSaving(false);\n      }\n    }\n  };\n\n  const handleAutoFormat = () => {\n    setMarkdown(asciiTabConvert(markdown));\n  };\n\n  useEffect(() => {\n    async function fetchContents() {\n      const json = await getContents(repo, path, branch);\n      setIsLoaded(true);\n      setMarkdown(json.content);\n      setSha(json.sha);\n    }\n    fetchContents();\n  }, [repo, path, branch]);\n\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  const buttonClassname = classNames({\n    [classes.buttonSuccess]: success,\n  });\n\n  const parts = location.pathname.split(\"/\");\n  parts[4] = \"viewer\";\n  const viewerLink = parts.join(\"/\");\n\n  const githubParts = [parts[2], parts[3], \"blob\"].concat(parts.slice(5));\n  const githubLink = `https://github.com/${githubParts.join(\"/\")}`;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Paper className={classes.toolbar}>\n              <Tooltip\n                title={\n                  context.isValidGithubToken()\n                    ? \"Save\"\n                    : \"Add a GitHub Token to Enable Saving\"\n                }\n              >\n                <span>\n                  <Fab\n                    disabled={!isDirty || !context.isValidGithubToken()}\n                    className={`${buttonClassname} ${classes.fab}`}\n                    onClick={handleSave}\n                  >\n                    {success ? <CheckIcon /> : <SaveIcon />}\n                    {saving && (\n                      <CircularProgress\n                        size={68}\n                        className={classes.fabProgress}\n                      />\n                    )}\n                  </Fab>\n                </span>\n              </Tooltip>\n              <Tooltip title=\"Auto Format\">\n                <Fab className={classes.fab} onClick={handleAutoFormat}>\n                  <PhotoFilterIcon />\n                </Fab>\n              </Tooltip>\n              <Tooltip title=\"Return to Markdown View\">\n                <Fab component={Link} to={viewerLink} className={classes.fab}>\n                  <ExitToAppIcon />\n                </Fab>\n              </Tooltip>\n              <Tooltip title=\"Open in GitHub\">\n                <Fab href={githubLink} target=\"_blank\" className={classes.fab}>\n                  <GitHubIcon />\n                </Fab>\n              </Tooltip>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <AceEditor\n                mode=\"markdown\"\n                theme={theme.palette.mode === \"dark\" ? \"twilight\" : \"textmate\"}\n                width=\"100%\"\n                maxLines={Infinity}\n                className={classes.editor}\n                onChange={handleChange}\n                value={markdown}\n                editorProps={{ $blockScrolling: true }}\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <MusicMarkdown\n                source={debouncedMarkdown}\n                columnCount={columnCount}\n                transposeAmount={transposeAmount}\n              ></MusicMarkdown>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n}\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport { useEffect, useState } from \"react\";\n\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport { getContents } from \"../lib/github\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport queryString from \"query-string\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\nexport default function MarkdownViewer({ location, match }) {\n  const classes = useStyles();\n  const [markdown, setMarkdown] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchContents() {\n      const { repo, path, branch } = match.params;\n      const json = await getContents(repo, path, branch);\n      setMarkdown(json.content);\n      setIsLoaded(true);\n    }\n    fetchContents();\n  }, [match.params]);\n\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <MusicMarkdown\n        source={markdown}\n        columnCount={columnCount}\n        transposeAmount={transposeAmount}\n      />\n    </div>\n  );\n}\n","import Accordion from \"@mui/material/Accordion\";\nimport AccordionActions from \"@mui/material/AccordionActions\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { isValidGithubToken } from \"../lib/github\";\nimport { useGlobalStateContext } from \"./GlobalState\";\nimport { useState } from \"react\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst AccordionDetails = withStyles({\n  root: {\n    backgroundColor: \"rgba(0, 0, 0, .03)\",\n  },\n})(AccordionActions);\n\nconst GithubTokenInstructions = () => (\n  <Accordion>\n    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n      <Typography>\n        Set a <b>GitHub Token</b> to create or change Music Markdown files in\n        GitHub.\n      </Typography>\n    </AccordionSummary>\n    <AccordionDetails>\n      <div>\n        <h1>How to Create a New Token</h1>\n\n        <p>\n          These instructions will help you create a new GitHub token, and add it\n          to Music Markdown so that you can use the Music Markdown editor.\n        </p>\n\n        <ol>\n          <li>\n            Open your{\" \"}\n            <a\n              href=\"https://github.com/settings/tokens\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              Personal access tokens\n            </a>{\" \"}\n            page in GitHub.\n          </li>\n          <li>\n            Click <b>Generate new token</b>.\n          </li>\n          <li>\n            Under <b>Note</b> type <b>Music Markdown</b>.\n          </li>\n          <li>\n            Under <b>scopes</b> grant <b>repo</b> permissions.\n          </li>\n          <li>\n            Scroll to the bottom and click <b>Generate token</b>.\n          </li>\n          <li>Copy the newly generated token and paste it below.</li>\n        </ol>\n      </div>\n    </AccordionDetails>\n  </Accordion>\n);\n\nexport default function GithubTokenDialog({ open, handleClose }) {\n  const context = useGlobalStateContext();\n  const [token, setToken] = useState(context.data.githubToken);\n\n  const isValidToken = (token) => {\n    return token === \"\" || isValidGithubToken(token);\n  };\n\n  const handleSaveToken = () => {\n    if (isValidToken(token)) {\n      context.setGithubToken(token);\n      handleClose();\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setToken(context.data.githubToken);\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={handleCloseDialog}>\n      <DialogTitle id=\"set-github-api-key\">Set GitHub Token</DialogTitle>\n      <DialogContent>\n        <GithubTokenInstructions />\n      </DialogContent>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"GitHub Token\"\n          fullWidth\n          value={token || \"\"}\n          onChange={(e) => setToken(e.target.value)}\n          error={!isValidToken(token)}\n          helperText=\"Warning: GitHub tokens are very sensitive. Anyone who \n          gains access to this token will have access to your GitHub account.\n          Please proceed with caution.\"\n        ></TextField>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseDialog} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={handleSaveToken}\n          color=\"primary\"\n          disabled={!isValidToken(token)}\n        >\n          {token === \"\" ? \"Clear\" : \"Save\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Paper } from \"@mui/material\";\nimport { useRef } from \"react\";\n\nimport Draggable from \"react-draggable\";\nimport PropTypes from \"prop-types\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n    padding: theme.spacing(2),\n    cursor: \"move\",\n  },\n}));\n\nexport default function YouTubePlayer({ youTubeId, visible }) {\n  const classes = useStyles();\n  const nodeRef = useRef();\n\n  if (!visible || !youTubeId) {\n    return null;\n  }\n\n  return (\n    <Draggable nodeRef={nodeRef}>\n      <Paper ref={nodeRef} className={classes.paper}>\n        <iframe\n          title=\"YouTube\"\n          style={{ border: 0 }}\n          src={`https://www.youtube.com/embed/${youTubeId}?autoplay=1&modestbranding=1`}\n          allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        />\n      </Paper>\n    </Draggable>\n  );\n}\n\nYouTubePlayer.propTypes = {\n  youTubeId: PropTypes.string,\n  visible: PropTypes.bool,\n};\n","import { IconButton, Tooltip } from \"@mui/material\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport YouTubePlayer from \"./YouTubePlayer\";\n\nexport default function YouTubeToggle({ youTubeId }) {\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    setVisible(!youTubeId);\n  }, [youTubeId]);\n\n  const handleToggle = () => {\n    setVisible(!visible);\n  };\n\n  if (!youTubeId) {\n    return null;\n  }\n\n  return <>\n    <Tooltip title=\"Show / Hide YouTube Player\">\n      <IconButton\n        color={visible ? \"secondary\" : \"default\"}\n        onClick={handleToggle}\n        size=\"large\">\n        <PlayArrowIcon />\n      </IconButton>\n    </Tooltip>\n    <YouTubePlayer visible={visible} youTubeId={youTubeId} />\n  </>;\n}\n\nYouTubeToggle.propTypes = {\n  youTubeId: PropTypes.string,\n};\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport { useState } from \"react\";\n\nimport Badge from \"@mui/material/Badge\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport IconButton from \"@mui/material/IconButton\";\nimport LowPriorityIcon from \"@mui/icons-material/LowPriority\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport Slider from \"@mui/material/Slider\";\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport Tooltip from \"@mui/material/Tooltip\";\nimport ViewColumnIcon from \"@mui/icons-material/ViewColumn\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport queryString from \"query-string\";\nimport YouTubeToggle from \"./YouTubeToggle\";\nimport { useYouTubeId } from \"./GlobalState\";\n\nconst useStyles = makeStyles((theme) => ({\n  popper: {\n    zIndex: 9999,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  slider: {\n    width: 300,\n  },\n}));\n\nconst handleUpdateQuery = (props, name, value, original) => {\n  const params = queryString.parse(props.location.search);\n  if (value === original) {\n    delete params[name];\n  } else {\n    params[name] = value;\n  }\n  props.history.push({ search: queryString.stringify(params) });\n};\n\nconst ColumnCountSelector = (props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState();\n\n  const handleToggle = (event) => {\n    setAnchorEl(!anchorEl ? event.currentTarget : undefined);\n  };\n\n  const handleClickAway = (event) => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n    setAnchorEl(undefined);\n  };\n\n  const params = queryString.parse(props.location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n\n  return <>\n    <Tooltip title=\"Set Number of Columns\">\n      <IconButton onClick={handleToggle} size=\"large\">\n        <Badge\n          badgeContent={columnCount}\n          invisible={columnCount === \"1\"}\n          color=\"secondary\"\n        >\n          <ViewColumnIcon />\n        </Badge>\n      </IconButton>\n    </Tooltip>\n\n    <Popper className={classes.popper} open={!!anchorEl} anchorEl={anchorEl}>\n      <ClickAwayListener onClickAway={handleClickAway}>\n        <Paper className={classes.paper}>\n          <ToggleButtonGroup\n            value={columnCount}\n            exclusive\n            onChange={(event, value) =>\n              handleUpdateQuery(props, COLUMN_COUNT_QUERY_KEY, value, \"1\")\n            }\n          >\n            {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"].map((columnCount) => (\n              <ToggleButton value={columnCount} key={columnCount}>\n                {columnCount}\n              </ToggleButton>\n            ))}\n          </ToggleButtonGroup>\n        </Paper>\n      </ClickAwayListener>\n    </Popper>\n  </>;\n};\n\nconst TransposeSelector = (props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState();\n\n  const handleToggle = (event) => {\n    setAnchorEl(!anchorEl ? event.currentTarget : undefined);\n  };\n\n  const handleClickAway = (event) => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n    setAnchorEl(undefined);\n  };\n\n  const params = queryString.parse(props.location.search);\n  const transpose = params[TRANSPOSE_QUERY_KEY] || \"0\";\n\n  return <>\n    <Tooltip title=\"Transpose Up / Down\">\n      <IconButton onClick={handleToggle} size=\"large\">\n        <Badge\n          badgeContent={transpose}\n          invisible={transpose === \"0\"}\n          color=\"secondary\"\n        >\n          <LowPriorityIcon />\n        </Badge>\n      </IconButton>\n    </Tooltip>\n\n    <Popper className={classes.popper} open={!!anchorEl} anchorEl={anchorEl}>\n      <ClickAwayListener onClickAway={handleClickAway}>\n        <Paper className={classes.paper}>\n          <Slider\n            className={classes.slider}\n            value={Number(transpose)}\n            min={-12}\n            max={12}\n            step={1}\n            marks={true}\n            onChange={(event, value) =>\n              handleUpdateQuery(\n                props,\n                TRANSPOSE_QUERY_KEY,\n                String(value),\n                \"0\"\n              )\n            }\n          />\n        </Paper>\n      </ClickAwayListener>\n    </Popper>\n  </>;\n};\n\nexport default function MusicToolbar(props) {\n  const { youTubeId } = useYouTubeId();\n\n  return (\n    <>\n      <YouTubeToggle youTubeId={youTubeId} />\n      <TransposeSelector {...props} />\n      <ColumnCountSelector {...props} />\n    </>\n  );\n}\n","import AppBar from \"@mui/material/AppBar\";\nimport Button from \"@mui/material/Button\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport GithubTokenDialog from \"./GithubTokenDialog\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputBase from \"@mui/material/InputBase\";\nimport { Link } from \"react-router-dom\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport MenuList from \"@mui/material/MenuList\";\nimport MusicToolbar from \"./MusicToolbar\";\nimport Paper from \"@mui/material/Paper\";\nimport Popper from \"@mui/material/Popper\";\nimport { REPO_REGEX } from \"../lib/constants\";\nimport { Route } from \"react-router-dom\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport Switch from \"@mui/material/Switch\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport ViewListIcon from \"@mui/icons-material/ViewList\";\nimport { alpha } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { useGlobalStateContext } from \"./GlobalState\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n  paper: {\n    padding: theme.spacing(1),\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  filter: {\n    filter: theme.palette.mode === \"dark\" ? \"invert(100%)\" : \"\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    width: \"100%\",\n  },\n}));\n\nconst BrowseButton = ({ match }) => (\n  <Tooltip title=\"Song List View\">\n    <IconButton\n      component={Link}\n      to={`/repos/${match.params.repo}/browser/${match.params.branch}/`}\n      size=\"large\"\n    >\n      <ViewListIcon />\n    </IconButton>\n  </Tooltip>\n);\n\nconst EditButton = ({ match }) => (\n  <Tooltip title=\"Edit Song\">\n    <span>\n      <IconButton\n        component={Link}\n        to={`/repos/${match.params.repo}/editor/${match.params.branch}/${match.params.path}`}\n        size=\"large\"\n      >\n        <EditIcon />\n      </IconButton>\n    </span>\n  </Tooltip>\n);\n\nconst ViewButton = ({ match }) => (\n  <Tooltip title=\"Markdown View\">\n    <IconButton\n      component={Link}\n      to={`/repos/${match.params.repo}/viewer/${match.params.branch}/${match.params.path}`}\n      size=\"large\"\n    >\n      <ExitToAppIcon />\n    </IconButton>\n  </Tooltip>\n);\n\n// TODO: Placeholder for search functionality\nconst SearchToolbar = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState();\n  const [searchOpen, setSearchOpen] = useState(false);\n\n  const handleSearchToggle = (event) => {\n    if (!searchOpen) {\n      setAnchorEl(event.currentTarget);\n    }\n    setSearchOpen(!searchOpen);\n  };\n\n  return (\n    <>\n      <IconButton\n        variant=\"contained\"\n        // for some reason, this doesn't work if the layout is too small, e.g. mobile\n        onClick={handleSearchToggle}\n        size=\"large\"\n      >\n        <SearchIcon />\n      </IconButton>\n      {searchOpen ? (\n        <ClickAwayListener onClickAway={handleSearchToggle}>\n          <Popper\n            id=\"search-popper\"\n            anchorEl={anchorEl}\n            placement=\"bottom-end\"\n            open={searchOpen}\n          >\n            <Paper className={classes.paper}>\n              <InputBase\n                className={classes.search}\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </Paper>\n          </Popper>\n        </ClickAwayListener>\n      ) : null}\n    </>\n  );\n};\n\nexport default function MusicMarkdownNavbar() {\n  const classes = useStyles();\n  const context = useGlobalStateContext();\n  const [apiKeyDialogOpen, setApiKeyDialogOpen] = useState(false);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [settingsAnchorEl, setSettingsAnchorEl] = useState();\n\n  const handleSettingsToggle = (event) => {\n    if (!settingsOpen) {\n      setSettingsAnchorEl(event.currentTarget);\n    }\n    setSettingsOpen(!settingsOpen);\n  };\n\n  const handleApiKeyDialogOpen = () => {\n    setApiKeyDialogOpen(true);\n    setSettingsOpen(false);\n  };\n\n  const handleApiKeyDialogClose = () => {\n    setApiKeyDialogOpen(false);\n    setSettingsOpen(false);\n  };\n\n  const handleDarkThemeSwitch = () => {\n    context.toggleTheme();\n  };\n\n  return (\n    <AppBar position={\"sticky\"} key=\"top-navbar\">\n      <Toolbar>\n        <Button\n          className={classes.reactRouterHoverInherit}\n          component={Link}\n          to=\"/\"\n        >\n          <img\n            className={classes.filter}\n            src=\"music-markdown.svg\"\n            width={50}\n            alt=\"Music Markdown\"\n          />\n        </Button>\n        <div className={classes.grow} />\n\n        <Route\n          path={`${REPO_REGEX}/:mode/:branch/:path*`}\n          component={SearchToolbar}\n        />\n        <Route\n          path={[\n            \"/sandbox\",\n            `${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`,\n          ]}\n          component={MusicToolbar}\n        />\n        <Route\n          path={`${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`}\n          component={BrowseButton}\n        />\n        <Route\n          path={`${REPO_REGEX}/viewer/:branch/:path*`}\n          component={EditButton}\n        />\n        <Route\n          path={`${REPO_REGEX}/editor/:branch/:path*`}\n          component={ViewButton}\n        />\n\n        <IconButton onClick={handleSettingsToggle} size=\"large\">\n          <SettingsIcon />\n        </IconButton>\n        <Popper\n          id=\"settings-popper\"\n          open={settingsOpen}\n          anchorEl={settingsAnchorEl}\n          placement=\"bottom-end\"\n        >\n          <Paper className={classes.paper}>\n            <ClickAwayListener onClickAway={handleSettingsToggle}>\n              <MenuList>\n                <MenuItem>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        onChange={handleDarkThemeSwitch}\n                        checked={context.isDarkTheme()}\n                      />\n                    }\n                    label=\"Toggle Dark Mode?\"\n                  />\n                </MenuItem>\n                <MenuItem onClick={handleApiKeyDialogOpen}>\n                  Set GitHub Token\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popper>\n      </Toolbar>\n      <GithubTokenDialog\n        open={apiKeyDialogOpen}\n        handleClose={handleApiKeyDialogClose}\n      ></GithubTokenDialog>\n    </AppBar>\n  );\n}\n","import { useState } from \"react\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport Fab from \"@mui/material/Fab\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function AddRepository({ handleAddRepository }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleDialogOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setOpen(false);\n    setName(\"\");\n    setOwner(\"\");\n    setError(false);\n  };\n\n  const handleShowError = (message) => {\n    setMessage(message);\n    setError(true);\n  };\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  const handleDialogAdd = async () => {\n    try {\n      await handleAddRepository(`${owner}/${name}`);\n      handleDialogClose();\n    } catch (err) {\n      handleShowError(err.message);\n    }\n  };\n\n  const handleUpdateOwner = (event) => {\n    setOwner(event.target.value);\n  };\n\n  const handleUpdateName = (event) => {\n    setName(event.target.value);\n  };\n\n  return <>\n    <Grid\n      container\n      className={classes.grid}\n      direction=\"row\"\n      justifyContent=\"flex-end\"\n      alignItems=\"flex-end\"\n    >\n      <Fab aria-label=\"Add\" onClick={handleDialogOpen}>\n        <AddIcon />\n      </Fab>\n      <Dialog open={open} aria-labelledby=\"add-repository-dialog\">\n        <DialogTitle id=\"add-repository-dialog-title\">\n          Add Repository\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"owner\"\n            label=\"Repository Owner\"\n            value={owner}\n            onChange={handleUpdateOwner}\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Repository Name\"\n            value={name}\n            onChange={handleUpdateName}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose}>Cancel</Button>\n          <Button onClick={handleDialogAdd}>Add</Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n    <ErrorSnackbar\n      message={message}\n      open={error}\n      handleClose={handleClearError}\n    />\n  </>;\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  addRepository,\n  deleteRepository,\n  getRepositories,\n} from \"../lib/github\";\n\nimport AddRepository from \"./AddRepository\";\nimport Avatar from \"@mui/material/Avatar\";\nimport BookIcon from \"@mui/icons-material/Book\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@mui/material/ListItemSecondaryAction\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\nexport default function RepositoryEditor() {\n  const classes = useStyles();\n  const [repos, setRepos] = useState([]);\n  const reposFingerprint = JSON.stringify(repos);\n\n  useEffect(() => {\n    loadRepositories();\n  }, [reposFingerprint]);\n\n  const handleAddRepository = async (repo) => {\n    await addRepository(repo);\n    loadRepositories();\n  };\n\n  const handleDeleteRepository = (repo) => {\n    deleteRepository(repo);\n    loadRepositories();\n  };\n\n  const loadRepositories = () => {\n    setRepos(getRepositories());\n  };\n\n  return (\n    <div className={classes.root}>\n      <List>\n        {repos.map((repo) => (\n          <ListItem\n            button\n            key={`repo-item-${repo}`}\n            component={Link}\n            to={`/repos/${repo}/`}\n          >\n            <ListItemAvatar>\n              <Avatar>\n                <BookIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={repo} />\n            <ListItemSecondaryAction>\n              <IconButton\n                aria-label=\"Delete\"\n                onClick={() => handleDeleteRepository(repo)}\n                size=\"large\">\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      <AddRepository handleAddRepository={handleAddRepository} />\n    </div>\n  );\n}\n","import AddIcon from \"@mui/icons-material/Add\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport Fab from \"@mui/material/Fab\";\nimport Grid from \"@mui/material/Grid\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { Redirect } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport { putContents } from \"../lib/github\";\nimport { useGlobalStateContext } from \"./GlobalState\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  whitespacePre: {\n    whiteSpace: \"pre-line\",\n    fontFamily: \"monospace\",\n  },\n  grid: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function AddNewFile({ match }) {\n  const classes = useStyles();\n  const context = useGlobalStateContext();\n  const [newFileName, setNewFileName] = useState(\"\");\n  const [newFileOpen, setNewFileOpen] = useState(false);\n  const [toEditor, setToEditor] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleAddNewFileOpen = () => {\n    setNewFileOpen(true);\n  };\n\n  const handleAddNewFileClose = () => {\n    setNewFileOpen(false);\n    setNewFileName(\"\");\n  };\n\n  const handleUpdateFileName = (event) => {\n    setNewFileName(event.target.value);\n  };\n\n  const handleAddNewFile = async () => {\n    const { repo, branch } = match.params;\n    const path = getNewFilePath();\n    const content = getTemplateContents();\n\n    const response = await putContents(repo, path, content, undefined, branch);\n\n    if (response.status !== 201) {\n      handleShowError(`${response.status}: ${response.statusText}`);\n      return;\n    }\n    setToEditor(true);\n  };\n\n  const handleShowError = (message) => {\n    setMessage(message);\n    setError(true);\n  };\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  const isValidFileName = () => !!newFileName.match(/^[^<>:\"/\\\\|?*]+$/);\n  const getTemplateContents = () => `---\\n---\\n\\n# ${newFileName}`;\n  const getNewFilePath = () =>\n    match.params.path\n      ? `${match.params.path}/${newFileName}.md`\n      : `${newFileName}.md`;\n\n  const { repo, branch } = match.params;\n\n  if (toEditor) {\n    return (\n      <Redirect to={`/repos/${repo}/editor/${branch}/${getNewFilePath()}`} />\n    );\n  }\n\n  return <>\n    <Grid\n      container\n      className={classes.grid}\n      direction=\"row\"\n      justifyContent=\"flex-end\"\n      alignItems=\"flex-end\"\n    >\n      <Tooltip\n        title={\n          context.isValidGithubToken()\n            ? \"Add Song\"\n            : \"Add a GitHub Token to Enable Editing\"\n        }\n      >\n        <span>\n          <Fab\n            aria-label=\"Add\"\n            disabled={!context.isValidGithubToken()}\n            onClick={handleAddNewFileOpen}\n          >\n            <AddIcon />\n          </Fab>\n        </span>\n      </Tooltip>\n      <Dialog\n        open={newFileOpen}\n        aria-labelledby=\"add-new-file-dialog\"\n        fullWidth={true}\n      >\n        <DialogTitle id=\"add-new-file-dialog-title\">\n          Create New Music Markdown File\n        </DialogTitle>\n        <DialogContent>\n          <Card className={classes.previewCard}>\n            <CardContent>\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Preview\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                color=\"textPrimary\"\n                className={classes.whitespacePre}\n              >\n                {getTemplateContents()}\n              </Typography>\n            </CardContent>\n          </Card>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"owner\"\n            label=\"Music Markdown File Name\"\n            value={newFileName}\n            onChange={handleUpdateFileName}\n            fullWidth\n            error={!isValidFileName()}\n            helperText={\n              !isValidFileName() ? (\n                \"Invalid file name\"\n              ) : (\n                <>\n                  {repo}/{branch}/{getNewFilePath()}\n                </>\n              )\n            }\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">.md</InputAdornment>\n              ),\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleAddNewFileClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleAddNewFile}\n            color=\"primary\"\n            disabled={!isValidFileName()}\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n    <ErrorSnackbar\n      message={message}\n      open={error}\n      handleClose={handleClearError}\n    />\n  </>;\n}\n","import { useEffect, useState } from \"react\";\n\nimport AddNewFile from \"./AddNewFile\";\nimport Avatar from \"@mui/material/Avatar\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport FolderIcon from \"@mui/icons-material/Folder\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { getContents } from \"../lib/github\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\n/**\n * Sorts the contents of a GitHub directory. Lists directories first then files,\n * each in alphabetical order.\n * @param {Object[]} contents GitHub directory contents. Contains files and directories.\n */\nfunction sortDir(contents) {\n  contents.sort((a, b) => {\n    if (a.type === \"file\") {\n      if (b.type === \"file\") {\n        return a.name - b.name;\n      }\n      return 1;\n    }\n    if (b.type === \"file\") {\n      return -1;\n    }\n    return a.name - b.name;\n  });\n}\n\n/**\n * A React component for rendering repository files and directories.\n */\nexport default function RepositoryNavigation({ match, location }) {\n  const classes = useStyles();\n  const [contents, setContents] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchContents() {\n      const { repo, path, branch } = match.params;\n\n      const contents = await getContents(repo, path, branch);\n      sortDir(contents);\n      setContents(contents);\n      setIsLoaded(true);\n    }\n    fetchContents();\n  }, [match.params]);\n\n  const { repo, branch } = match.params;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <List key={\"repo-navigation-list\"}>\n          {contents.map((item) => (\n            <ListItem\n              button\n              component={Link}\n              key={`list-group-item-${item.name}`}\n              to={\n                item.type === \"dir\"\n                  ? `/repos/${repo}/browser/${branch}/${item.path}/`\n                  : `/repos/${repo}/viewer/${branch}/${item.path}`\n              }\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  {item.type === \"dir\" ? <FolderIcon /> : <DescriptionIcon />}\n                </Avatar>\n              </ListItemAvatar>\n              {item.type === \"dir\" ? (\n                <ListItemText secondary={item.name}></ListItemText>\n              ) : (\n                <ListItemText primary={item.name}></ListItemText>\n              )}\n            </ListItem>\n          ))}\n        </List>\n        <AddNewFile location={location} match={match} />\n      </div>\n    </>\n  );\n}\n","import Grid from \"@mui/material/Grid\";\n\nconst RESPONSIVE_CONTAINER_KEY = \"app-container\";\n\nexport default function ResponsiveContainer(props) {\n  return <Grid key={RESPONSIVE_CONTAINER_KEY}>{props.children}</Grid>;\n}\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport { Link, Route } from \"react-router-dom\";\n\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { guitarChordbook } from \"markdown-it-music/lib/chordbook\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport queryString from \"query-string\";\nimport { renderChordDiagram } from \"markdown-it-music/renderers/chord_diagram\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n  chordSourcePaper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  chordCategoryPaper: {\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n  },\n  chordCategoryTypography: {\n    color: theme.palette.text.primary,\n    textAlign: \"center\",\n  },\n  chordVariantPaper: {\n    display: \"inline-block\",\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n  },\n  chordVariantTypography: {\n    color: theme.palette.text.secondary,\n  },\n  chordDiagram: {\n    filter: theme.palette.mode === \"dark\" ? \"invert(100%)\" : \"\",\n  },\n}));\n\nexport default function Sandbox({ location, match }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\">Sandbox</Typography>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/all-features-in-one-place`}>\n            All the Features in One Place\n          </Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/guitar-chordbook`}>Guitar Chordbook</Link>\n        </li>\n      </ul>\n\n      <Route\n        path={`${match.path}/all-features-in-one-place`}\n        component={() => (\n          <MarkdownViewer location={location} source={allFeaturesSource} />\n        )}\n      />\n      <Route\n        path={`${match.path}/guitar-chordbook`}\n        component={AllGuitarChords}\n      />\n    </div>\n  );\n}\n\nconst MarkdownViewer = ({ source, location }) => {\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  return (\n    <MusicMarkdown\n      source={source}\n      columnCount={columnCount}\n      transposeAmount={transposeAmount}\n    />\n  );\n};\n\nconst roots = [\n  \"C\",\n  \"C#\",\n  \"Db\",\n  \"D\",\n  \"D#\",\n  \"Eb\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"Gb\",\n  \"G\",\n  \"G#\",\n  \"Ab\",\n  \"A\",\n  \"A#\",\n  \"Bb\",\n  \"B\",\n];\n\nconst qualities = [\n  \"\",\n  \"m\",\n  \"6\",\n  \"m6\",\n  \"7\",\n  \"maj7\",\n  \"m7\",\n  \"9\",\n  \"dim\",\n  \"aug\",\n  \"sus2\",\n  \"7sus2\",\n  \"sus4\",\n  \"7sus4\",\n  \"5\",\n  \"dim5\",\n  \"dim7\",\n  \"7b5\",\n  \"m7b5\",\n  \"7#5\",\n  \"7b9\",\n  \"7#9\",\n  \"7b9#5\",\n  \"7/6\",\n  \"9b5\",\n  \"9#5\",\n  \"maj9\",\n  \"m9\",\n  \"9/6\",\n  \"m9/6\",\n  \"add9\",\n  \"11\",\n  \"m11\",\n  \"11aug\",\n  \"13\",\n  \"13b9\",\n  \"13b9b5\",\n];\n\nconst AllGuitarChords = ({ location }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography variant=\"h3\">Guitar Chordbook</Typography>\n      <Paper className={classes.chordSourcePaper}>\n        <MarkdownViewer source={allChordsSource} location={location} />\n      </Paper>\n      {roots.map((category, index) => (\n        <Paper key={`category-${index}`} className={classes.chordCategoryPaper}>\n          <Typography className={classes.chordCategoryTypography} variant=\"h4\">\n            {category} Chords\n          </Typography>\n          <ChordCategory category={category} />\n        </Paper>\n      ))}\n    </>\n  );\n};\n\nconst ChordCategory = ({ category }) => {\n  const classes = useStyles();\n  return Array.from(guitarChordbook.keys())\n    .filter((chord) => chord.match(/^[CDEFGAB](?:#|b)?|N\\.C\\./)[0] === category)\n    .map((chord, index) => (\n      <Paper key={`chord-${index}`} className={classes.chordVariantPaper}>\n        {guitarChordbook.get(chord).map((variant, index) => (\n          <span\n            className={classes.chordDiagram}\n            key={`variant-${index}`}\n            dangerouslySetInnerHTML={{ __html: renderChordDiagram(variant) }}\n          />\n        ))}\n        <Typography className={classes.chordVariantTypography} variant=\"h5\">\n          {chord}\n        </Typography>\n      </Paper>\n    ));\n};\n\nconst allChordsSource = `---\n---\n${roots\n  .map(\n    (root) => `## ${root} Chords\nc1: ${qualities.map((quality) => root + quality).join(\" \")}`\n  )\n  .join(\"\\n\\n\")}\n`;\n\nconst allFeaturesSource = `---\nyouTubeId: dN3GbF9Bx6E\n---\n\n# All the Features in One Place\n\n## Chord and Lyrics\nc1: Em               D           Em\nl1: Are you goin' to Scarborough Fair?\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\n\nc1: Em       G                   D\nl1: Remember me to one who lives there\n\nc1: Em       D                  Em\nl1: She once was a true love of mine\n\n## Multiple Overlapping Voices\nc1: Em                         D         Em\nl1: Tell her to make me a      cambric   shirt\nl2:                     On the side of a hill in the deep forest green\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\nl2:                              Tracing a sparrow on snow-crested ground\n\nc1: Em         G               D\nl1: Without no seams nor needlework\nl2:                      Blankets and bedclothes the child of the mountain\n\nc1: Em          D                 Em\nl1: Then she'll be a true love of mine\nl2:                               Sleeps unaware of the clarion call\n\n## VexTab\n\n:::vextab\noptions space=20\n\ntabstave\n  notation=true\n  key=A time=4/4\n\n  notes :q =|: (5/2.5/3.7/4) :8 7-5h6/3 ^3^ 5h6-7/5 ^3^ :q 7V/4 |\n  notes :8 t12p7/4 s5s3/4 :8 3s:16:5-7/5 :h p5/4\n  text :w, |#segno, ,|, :hd, , #tr\n\n\noptions space=25\n\ntabstave\n  notation=true\n\n  notes :q (5/4.5/5) (7/4.7/5)s(5/4.5/5) ^3^\n  notes :8 7-5/4 $.a./b.$ (5/4.5/5)h(7/5) =:|\n  notes :8 (12/5.12/4)ds(5/5.5/4)u 3b4/5\n  notes :h (5V/6.5/4.6/3.7/2) $.italic.let ring$ =|=\n\n  text :h, ,.font=Times-12-italic, D.S. al coda, |#coda\n  text :h, ,.-1, .font=Arial-14-bold,A13\n  text ++, .23, #f\n :::\n\n## ABC\n\n:::abc\nX: 1\nM: 4/4\nL: 1/16\nK: Amin\n\"Am\" (C16 | C4) B,2C2 D6 CB, | (C16 | C4) B,2C2 \"F\" D6 CA, |\n\"C\" G,8 \"E\" _A,8 | \"Am\" =A,8 \"F\" (3F4 F4 F4 | \"E\" F2 (E6 E8) | z6 ^A2 B4 e4 |\n\"Am\" e2d2c2(d2 \"G\" d4) .=A4 | \"F\" e2d2c2(d2 \"G\" d4) .A4 |\n\"Esus4\" e4 e4 e2d2B2d2 | \"E\" e4 e4 e2g2e2d2 |\n\"Am\" .e4 c2 \"G\" .d4 c2 e4 | \"F\" z2 c2 e2 \"G\" d6 c2d2 |\n\"Esus4\" e2e2e2d2 d2B2B2_A2 | \"E\" _A2F2F2E2 =A2B2A2G2 |\n:::\n\n`;\n","import { GlobalStateProvider, useGlobalStateContext } from \"./GlobalState\";\nimport {\n  ThemeProvider as MuiThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\n\nimport BranchNavigation from \"./BranchNavigation\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MarkdownEditor from \"./MarkdownEditor\";\nimport MarkdownViewer from \"./MarkdownViewer\";\nimport MusicMarkdownNavbar from \"./MusicMarkdownNavbar\";\nimport { REPO_REGEX } from \"../lib/constants\";\nimport RepositoryEditor from \"./RepositoryEditor\";\nimport RepositoryNavigation from \"./RepositoryNavigation\";\nimport ResponsiveContainer from \"./ResponsiveContainer\";\nimport Sandbox from \"./Sandbox.js\";\n\nconst App = () => (\n  <GlobalStateProvider>\n    <ThemeProvider />\n  </GlobalStateProvider>\n);\n\nconst ThemeProvider = () => {\n  const context = useGlobalStateContext();\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <MuiThemeProvider theme={createTheme(context.data.theme)}>\n        <CssBaseline />\n        <ResponsiveContainer>{[HomeRouter()]}</ResponsiveContainer>\n      </MuiThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nconst HomeRouter = () => (\n  <Router key=\"home-router\">\n    <>\n      <Route component={MusicMarkdownNavbar} />\n      <Switch>\n        <Route\n          path={`${REPO_REGEX}/viewer/:branch/:path+`}\n          component={MarkdownViewer}\n        />\n        <Route\n          path={`${REPO_REGEX}/browser/:branch/:path*`}\n          component={RepositoryNavigation}\n        />\n        <Route\n          path={`${REPO_REGEX}/editor/:branch/:path*`}\n          component={MarkdownEditor}\n        />\n        <Route path={REPO_REGEX} component={BranchNavigation} />\n        <Route path=\"/sandbox\" component={Sandbox} />\n        <Route path=\"/\" component={RepositoryEditor} />\n      </Switch>\n    </>\n  </Router>\n);\n\nexport default App;\n","import * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nimport App from \"./components/App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}