{"version":3,"sources":["registerServiceWorker.js","components/MarkdownMusic.js","util/Constants.js","util/GithubRepositoryUtil.js","components/MarkdownMusicSourceFetcher.js","components/ResponsiveContainer.js","components/Sandbox.js","components/MusicMarkdownNavbar.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","MarkdownMusic","props","_this","Object","classCallCheck","this","musicOpts","transpose","possibleConstructorReturn","getPrototypeOf","call","md","MarkdownIt","use","MarkdownItMusic","setTranspose","react_default","a","createElement","dangerouslySetInnerHTML","__html","render","source","React","Component","REPOS_LOCAL_STORAGE_KEY","concat","getContents","_x","_x2","_x3","_getContents","apply","arguments","_callee","owner","repo","path","normalizedUrl","response","regenerator_default","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","getRepositories","repoListStr","localStorage","getItem","JSON","parse","history","createBrowserHistory","MarkdownMusicSourceFetcher","arrowUpKeyCode","arrowDownKeyCode","queryParams","queryString","search","isLoaded","markdown","parseInt","repos","handleKeyUpEvent","bind","assertThisInitialized","params","setState","atob","content","event","keyCode","push","pathname","stringify","_this$state","className","tabIndex","onKeyUp","components_MarkdownMusic","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","Container_default","key","children","MarkdownEditor","value","handleChange","target","editorStyles","minHeight","width","marginRight","fontFamily","whiteSpace","style","display","onChange","AllChords","Array","from","guitarChordLibrary","keys","map","chord","index","align","get","renderChordDiagram","Sandbox","Sandbox_MarkdownEditor","Sandbox_AllChords","RepositoriesNavDropodown","repoDropdownItems","repoList","length","forEach","repoId","itemHref","NavLink","to","NavDropdown_default","title","Item","Divider","MusicMarkdownNavbar","repoMap","storedRepos","setItem","addRepository","Navbar_default","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","Nav_default","MusicMarkdownNavbar_RepositoriesNavDropodown","activeClassName","HomeRouter","HashRouter","Route","component","exact","Navigation","Link","App","components_ResponsiveContainer","ReactDOM","src_components_App","document","getElementById","URL","process","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.382f21d7.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\n\nclass MarkdownMusic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const musicOpts = {\n      transpose: this.props.transpose\n    };\n\n    this.md = new MarkdownIt()\n      .use(MarkdownItMusic, musicOpts);\n  }\n\n  render() {\n    this.md.setTranspose(this.props.transpose);\n    return (\n      <span dangerouslySetInnerHTML={{ __html: this.md.render(this.props.source) }} />\n    );\n  }\n}\n\nexport default MarkdownMusic;\n","export const MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE = 'music-markdown';\nexport const REPOS_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:repositories`;\n","import { REPOS_LOCAL_STORAGE_KEY } from './Constants';\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n * @param {string} path The directory or file to retrieve\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(owner, repo, path) {\n  const normalizedUrl = `https://api.github.com/repos/${owner}/${repo}/contents/${path}`;\n  const response = await fetch(normalizedUrl);\n  return response.json();\n}\n\n/**\n * Returns list of repos stored in localStorage\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\n/**\n * Adds a desired Github repo to localStorage\n * @param {string} owner Repo owner\n * @param {string} repo Repo name\n * @param {string} path Subdirectory\n */\nexport function addRepository(owner, repo, path) {\n  const repoMap = {\n    'owner': owner,\n    'repo': repo,\n    'path': path\n  };\n  const storedRepos = getRepositories();\n  const repoList = storedRepos.length > 0 ? storedRepos : [];\n  repoList.push(repoMap);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repoList));\n}\n","import React from 'react';\nimport { createBrowserHistory } from 'history';\nimport MarkdownMusic from './MarkdownMusic';\nimport queryString from 'query-string';\nimport { getContents } from '../util/GithubRepositoryUtil';\n\nconst history = createBrowserHistory();\n\n// TODO: Decouple retrieval of source markdown and controlling arguments to MarkdownMusic.\n// https://github.com/music-markdown/music-markdown/pull/25#discussion_r259598474\nclass MarkdownMusicSourceFetcher extends React.Component {\n  arrowUpKeyCode = 38;\n  arrowDownKeyCode = 40;\n\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n      transpose: parseInt(this.queryParams.transpose, 10) || 0,\n      repos: this.queryParams.repos,\n      path: this.queryParams.path,\n    };\n\n    this.handleKeyUpEvent = this.handleKeyUpEvent.bind(this);\n  }\n\n  async componentDidMount() {\n    const owner = this.props.match.params.owner;\n    const repo = this.props.match.params.repo;\n    const path = this.props.match.params.path;\n\n    const json = await getContents(owner, repo, path);\n    this.setState({\n      isLoaded: true,\n      markdown: atob(json.content)\n    });\n  }\n\n  handleKeyUpEvent(event) {\n    if (event.keyCode === this.arrowUpKeyCode) {\n      this.setState({\n        transpose: this.state.transpose + 1\n      });\n    } else if (event.keyCode === this.arrowDownKeyCode) {\n      this.setState({\n        transpose: this.state.transpose - 1\n      });\n    }\n\n    this.queryParams.transpose = this.state.transpose + 1;\n    history.push(`#${this.props.location.pathname}?${queryString.stringify(this.queryParams)}`);\n  }\n\n  // TODO: Separate the UI component with the fetch logic, we don't necessarily need the fetcher\n  // to be a React Component\n  render() {\n    const { isLoaded, markdown, transpose } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"Markdown\" tabIndex=\"0\" onKeyUp={this.handleKeyUpEvent}>\n          <MarkdownMusic source={markdown} transpose={transpose} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default MarkdownMusicSourceFetcher;\n","import Container from 'react-bootstrap/Container.js';\nimport React from 'react';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Container key={RESPONSIVE_CONTAINER_KEY}>\n      {props.children}\n    </Container>\n  );\n}\n\nexport default ResponsiveContainer;\n","import React from 'react';\nimport MarkdownMusic from './MarkdownMusic';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport { guitarChordLibrary } from 'markdown-it-music/renderers/chord_library';\n\nconst Sandbox = () => (\n  <div>\n    <h1>Music Markdown Sandbox</h1>\n    <p>\n      This page exercises various subcomponents of music-markdown and\n      markdown-it-music.\n    </p>\n\n    <h2>Markdown Editor</h2>\n    <MarkdownEditor/>\n\n    <h2>Chord Diagram Renderer</h2>\n    <p>\n      This section exercises the Chord Diagram Renderer.\n    </p>\n    <h3>Esus4 (200x200)</h3>\n    <div dangerouslySetInnerHTML={\n      { __html: renderChordDiagram('o2 m1 m2 n3,2 n4,4 b5,6,5', 200, 200) }\n    } />\n\n    <h2>Entire Chord Library</h2>\n    <AllChords/>\n  </div>\n);\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const value = '```chords\\n' +\n      'c1:                    Am     G  F          G      Esus4  E\\n' +\n      'v1: All the leaves are brown        and the sky is gray\\n\\n' +\n      'c1: F               C     E  Am       F        Esus4  E\\n' +\n      'v1: I\\'ve been for a walk         on a winter\\'s day\\n\\n' +\n      'c1:                 Am    G  F       G      Esus4  E\\n' +\n      'v1: I\\'d be safe and warm        if I was in L.A.\\n\\n' +\n      'c1:            Am        G  F     G               Esus4  E\\n' +\n      'v1: California dreamin\\'        on such a winter\\'s day\\n' +\n      '```';\n\n    this.state = {\n      value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const styles = { display: 'flex', width: '100%' };\n    const editorStyles = {\n      minHeight: '500px', width: '50%', marginRight: '20px',\n      fontFamily: 'monospace', whiteSpace: 'pre'\n    };\n\n    return <div style={styles}>\n      <textarea value={this.state.value} onChange={this.handleChange} style={editorStyles}></textarea>\n      <div style={editorStyles}>\n        <MarkdownMusic source={this.state.value}></MarkdownMusic>\n      </div>\n    </div>;\n  }\n}\n\nconst AllChords = () => (\n  Array.from(guitarChordLibrary.keys()).map((chord, index) => (\n    <div key={index} align=\"center\" style={{ display: 'inline-block' }}>\n      {guitarChordLibrary.get(chord).map((value, index) => (\n        <span key={index} dangerouslySetInnerHTML={\n          { __html: renderChordDiagram(value) }\n        } />\n      ))}\n      <h5>{chord}</h5>\n    </div>\n  ))\n);\n\nexport default Sandbox;\n","import Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getRepositories, addRepository } from '../util/GithubRepositoryUtil';\nimport { REPOS_LOCAL_STORAGE_KEY } from '../util/Constants';\n\n// TODO: Build button toggle for dark/light\nconst darkLightThemeFlag = 'dark';\n\nconst MusicMarkdownNavbar = () => {\n  if (!localStorage.getItem(REPOS_LOCAL_STORAGE_KEY)) {\n    // TODO: sanitize this input when storing\n    addRepository('music-markdown', 'almost-in-time', '/');\n  }\n  return (\n    <Navbar bg={darkLightThemeFlag} expand=\"lg\" variant={darkLightThemeFlag} key=\"top-navbar\">\n      <Navbar.Brand href=\"/\">Music Markdown</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          <RepositoriesNavDropodown />\n          <NavLink to=\"/sandbox\" className=\"nav-link\" activeClassName=\"active\">Sandbox (Beta)</NavLink>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\n/**\n * For all added repositories, add it to the dropdown list\n */\n// TODO: List first x items, then put in dropdown item to expand full list\nconst RepositoriesNavDropodown = () => {\n  const repoDropdownItems = [];\n  const repoList = getRepositories();\n  if (repoList.length > 0) {\n    repoList.forEach(function(repo) {\n      const repoId = `${repo.owner}/${repo.repo}${repo.path}`;\n      // TODO: List valid files after clicking on repo name\n      const itemHref = `/repos/${repo.owner}/${repo.repo}/contents${repo.path}`;\n      repoDropdownItems.push(\n        <NavLink to={itemHref} key={`dropdown-item-${repoId}`} className=\"dropdown-item\">\n          {repoId}\n        </NavLink>);\n    });\n  }\n  return (\n    <NavDropdown title=\"Music Repositories\">\n      {/* TODO: Build edit repo functionality */}\n      <NavDropdown.Item><b>Edit Repositories</b></NavDropdown.Item>\n      <NavDropdown.Divider />\n      {repoDropdownItems}\n    </NavDropdown>\n  );\n};\n\nexport default MusicMarkdownNavbar;\n","import React from 'react';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport MarkdownMusicSourceFetcher from './MarkdownMusicSourceFetcher';\nimport ResponsiveContainer from './ResponsiveContainer.js';\nimport Sandbox from './Sandbox.js';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar.js';\n\nconst App = () => (\n  <ResponsiveContainer children={[HomeRouter()]} />\n);\n\nconst HomeRouter = () => (\n  <Router key=\"home-router\">\n    <div>\n      <Route component={MusicMarkdownNavbar} />\n      <Route exact path=\"/\" component={Navigation} />\n      <Route path=\"/sandbox\" component={Sandbox} />\n      <Route path=\"/repos/:owner/:repo/contents/:path\" component={MarkdownMusicSourceFetcher} />\n    </div>\n  </Router>\n);\n\nconst Navigation = () => (\n  <div>\n    <Link to=\"/repos/music-markdown/almost-in-time/contents/California Dreamin' - The Mamas and the Papas.md\">\n      California Dreamin\n    </Link>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}