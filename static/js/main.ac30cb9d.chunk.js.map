{"version":3,"sources":["registerServiceWorker.js","redux/reducers/updateColumnCount.js","redux/actionTypes.js","redux/reducers/updateFontSize.js","redux/reducers/transpose.js","redux/reducers/index.js","redux/store.js","components/YouTube.js","components/MarkdownMusic.js","redux/actions.js","components/Toolbar.js","lib/constants.js","lib/github.js","components/MarkdownMusicSourceFetcher.js","components/MusicMarkdownNavbar.js","components/ResponsiveContainer.js","components/RepositoryNavigation.js","components/Sandbox.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","columnCount","arguments","length","undefined","action","type","payload","fontSize","transposeAmount","combineReducers","store","createStore","rootReducer","YouTubePlayer","_ref","youTubeId","react_default","a","createElement","className","title","src","concat","allow","allowFullScreen","YouTubeToggle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","visible","handleToggle","bind","assertThisInitialized","setState","index_es","icon","faYoutube","size","onClick","YouTube_YouTubePlayer","React","Component","MarkdownMusicRender","md","MarkdownIt","use","MarkdownItMusic","setTranspose","setColumnCount","setFontSize","setMaxWidth","width","html","render","source","YouTube_YouTubeToggle","meta","dangerouslySetInnerHTML","__html","ConnectMarkdownMusicRender","connect","MarkdownMusic","lib_default","Toolbar","handleTransposeClick","handleColumnClick","handleFontClick","increase","decrease","event","transpose","target","textContent","updateColumnCount","updateFontSize","ButtonToolbar_default","ButtonGroup_default","Button_default","variant","isIncreaseTransposeAmount","isIncreaseColumnCount","isIncreaseFontSize","REPOS_LOCAL_STORAGE_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","GITHUB_API_URL","REPO_RESOURCE","getContents","_x","_x2","_x3","_getContents","apply","_callee","owner","repo","path","apiUrl","response","regenerator_default","wrap","_context","prev","next","getApiUrl","fetch","sent","abrupt","json","stop","getRepositories","repoListStr","localStorage","getItem","JSON","parse","url","URL","githubToken","searchParams","set","MarkdownMusicSourceFetcher","queryParams","queryString","search","parseInt","isLoaded","markdown","repos","atob","content","_this$state","components_Toolbar","components_MarkdownMusic","newTransposeAmount","newColumnCount","newFontSize","RepositoriesNavDropdown","repoDropdownItems","repoList","forEach","repoId","itemHref","stringify","push","NavLink","to","key","NavDropdown_default","Item","Divider","MusicMarkdownNavbar","repoMap","storedRepos","setItem","addRepository","Navbar_default","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav_default","MusicMarkdownNavbar_RepositoriesNavDropdown","activeClassName","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","Container_default","children","RepositoryNavigation","repository","contents","queryStringMap","newProps","newQueryStringMap","listGroupItems","item","resourceQueryStringCopy","objectSpread","name","newQueryString","react_router_bootstrap_lib","ListGroupItem_default","breadcrumbsComponent","breadcrumbItems","baseLink","keyBase","subDirectoriesArr","split","shift","i","directory","queryStringMapCopy","link","Breadcrumb_default","active","getBreadcrumbsComponent","Fragment","ListGroup_default","MarkdownEditor","value","handleChange","editorStyles","minHeight","marginRight","fontFamily","whiteSpace","style","display","onChange","AllChords","Array","from","guitarChordLibrary","keys","map","chord","index","align","get","renderChordDiagram","Sandbox","Sandbox_MarkdownEditor","Sandbox_AllChords","HomeRouter","es","HashRouter","Route","component","exact","Navigation","App","components_ResponsiveContainer","ReactDOM","src_components_App","document","getElementById","process","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ac30cb9d.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { UPDATE_COLUMN_COUNT } from '../actionTypes';\n\nconst columnCount = (state = 1, action) => {\n  switch (action.type) {\n  case UPDATE_COLUMN_COUNT: {\n    return action.payload.columnCount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default columnCount;\n","export const TRANSPOSE = 'TRANSPOSE';\nexport const UPDATE_COLUMN_COUNT = 'UPDATE_COLUMN_COUNT';\nexport const UPDATE_FONT_SIZE = 'UPDATE_FONT_SIZE';\n","import { UPDATE_FONT_SIZE } from '../actionTypes';\n\nconst fontSize = (state = 13, action) => {\n  switch (action.type) {\n  case UPDATE_FONT_SIZE: {\n    return action.payload.fontSize;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default fontSize;\n","import { TRANSPOSE } from '../actionTypes';\n\nconst transposeAmount = (state = 0, action) => {\n  switch (action.type) {\n  case TRANSPOSE: {\n    return action.payload.transposeAmount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default transposeAmount;\n","import { combineReducers } from 'redux';\nimport columnCount from './updateColumnCount';\nimport fontSize from './updateFontSize';\nimport transposeAmount from './transpose';\n\nexport default combineReducers({ transposeAmount, columnCount, fontSize });\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nlet store = undefined;\nif (process.env.NODE_ENV === 'production') {\n  store = createStore(rootReducer);\n} else {\n  store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nexport default store;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\n\nconst YouTubePlayer = ({ youTubeId }) => (\n  <div className=\"embed-responsive embed-responsive-16by9\">\n    <iframe\n      title={youTubeId}\n      className='embed-responsive-item'\n      src={`https://www.youtube.com/embed/${youTubeId}`}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen>\n    </iframe>\n  </div>\n);\n\nclass YouTubeToggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    this.setState((state) => ({\n      visible: !state.visible\n    }));\n  }\n\n  render() {\n    if (!this.props.youTubeId) {\n      return <div></div>;\n    }\n\n    return (\n      <div>\n        <FontAwesomeIcon icon={faYoutube} size='2x' onClick={this.handleToggle} />\n        {this.state.visible ? <YouTubePlayer youTubeId={this.props.youTubeId} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport {\n  YouTubePlayer,\n  YouTubeToggle\n};\n","import ContainerDimensions from 'react-container-dimensions';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\n\nimport { YouTubeToggle } from './YouTube';\n\nclass MarkdownMusicRender extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.md = new MarkdownIt()\n      .use(MarkdownItMusic);\n  }\n\n  render() {\n    this.md.setTranspose(this.props.transposeAmount);\n    this.md.setColumnCount(this.props.columnCount);\n    this.md.setFontSize(this.props.fontSize);\n    this.md.setMaxWidth(this.props.width);\n    const html = this.md.render(this.props.source);\n\n    return (\n      <div>\n        <YouTubeToggle youTubeId={this.md.meta.youTubeId} />\n        <span dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { transposeAmount, columnCount, fontSize } = state;\n  return { transposeAmount, columnCount, fontSize };\n}\n\nconst ConnectMarkdownMusicRender = connect(mapStateToProps)(MarkdownMusicRender);\n\nconst MarkdownMusic = ({ source }) => (\n  <ContainerDimensions>\n    <ConnectMarkdownMusicRender source={source} />\n  </ContainerDimensions>\n);\n\nexport default MarkdownMusic;\n","import {\n  TRANSPOSE,\n  UPDATE_COLUMN_COUNT,\n  UPDATE_FONT_SIZE\n} from './actionTypes';\n\nlet transposeAmount = 0;\nlet columnCount = 1;\nlet fontSize = 13;\n\nexport const transpose = (isIncreaseTransposeAmount) => ({\n  type: TRANSPOSE,\n  payload: {\n    transposeAmount: isIncreaseTransposeAmount ? ++transposeAmount : --transposeAmount\n  }\n});\n\nexport const updateColumnCount = (isIncreaseColumnCount) => ({\n  type: UPDATE_COLUMN_COUNT,\n  payload: {\n    columnCount: isIncreaseColumnCount ? ++columnCount : --columnCount\n  }\n});\n\nexport const updateFontSize = (isIncreaseFontSize) => ({\n  type: UPDATE_FONT_SIZE,\n  payload: {\n    fontSize: isIncreaseFontSize ? ++fontSize : --fontSize\n  }\n});\n\nexport const setTranspose = (newTransposeAmount) => {\n  transposeAmount = newTransposeAmount;\n\n  return {\n    type: TRANSPOSE,\n    payload: {\n      transposeAmount\n    }\n  };\n};\n\nexport const setColumnCount = (newColumnCount) => {\n  columnCount = newColumnCount;\n\n  return {\n    type: UPDATE_COLUMN_COUNT,\n    payload: {\n      columnCount\n    }\n  };\n};\n\nexport const setFontSize = (newFontSize) => {\n  fontSize = newFontSize;\n\n  return {\n    type: UPDATE_FONT_SIZE,\n    payload: {\n      fontSize\n    }\n  };\n};\n","import React from 'react';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\n\nimport { transpose } from '../redux/actions';\nimport { updateColumnCount } from '../redux/actions';\nimport { updateFontSize } from '../redux/actions';\n\nclass Toolbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTransposeClick = this.handleTransposeClick.bind(this);\n    this.handleColumnClick = this.handleColumnClick.bind(this);\n    this.handleFontClick = this.handleFontClick.bind(this);\n\n    this.increase = '+1';\n    this.decrease = '-1';\n  }\n\n  handleTransposeClick(event) {\n    // TODO: Update history with new transposeAmount\n    this.props.transpose(event.target.textContent === this.increase);\n  }\n\n  handleColumnClick(event) {\n    // TODO: Update history with new columnCount\n    this.props.updateColumnCount(event.target.textContent === this.increase);\n  }\n\n  handleFontClick(event) {\n    // TODO: Update history with new fontSize\n    this.props.updateFontSize(event.target.textContent === this.increase);\n  }\n\n  render() {\n    // TODO: Move dark theme to redux store.\n    return (\n      <ButtonToolbar className='border justify-content-center bg-dark'>\n        <span className='padding bg-dark text-light my-auto'>Transpose</span>\n        <ButtonGroup>\n          <Button variant='dark' onClick={this.handleTransposeClick}>{this.decrease}</Button>\n          <Button variant='dark' onClick={this.handleTransposeClick}>{this.increase}</Button>\n        </ButtonGroup>\n        <span className='padding bg-dark text-light my-auto'>Columns</span>\n        <ButtonGroup>\n          <Button variant='dark' onClick={this.handleColumnClick}>{this.decrease}</Button>\n          <Button variant='dark' onClick={this.handleColumnClick}>{this.increase}</Button>\n        </ButtonGroup>\n        <span className='padding bg-dark text-light my-auto'>Font Size</span>\n        <ButtonGroup>\n          <Button variant='dark' onClick={this.handleFontClick}>{this.decrease}</Button>\n          <Button variant='dark' onClick={this.handleFontClick}>{this.increase}</Button>\n        </ButtonGroup>\n      </ButtonToolbar>\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  { transpose, updateColumnCount, updateFontSize }\n)(Toolbar);\n","/* Local Storage */\n\n/** Key namespace for music-markdown when storing app specific values in localStorage */\nexport const MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE = 'music-markdown';\n/** Key for markdown-music repositories specific localStorage values*/\nexport const REPOS_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:repositories`;\nexport const GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:github_token`;\nexport const GITHUB_API_URL = 'https://api.github.com';\n\n/* Resources */\nexport const REPO_RESOURCE = '/repo';\nexport const RENDER_RESOURCE = '/render';\nexport const SANDBOX_RESOURCE = '/sandbox';\n","import { REPOS_LOCAL_STORAGE_KEY, GITHUB_TOKEN_LOCAL_STORAGE_KEY, GITHUB_API_URL } from './constants';\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n * @param {string} path The directory or file to retrieve\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(owner, repo, path) {\n  if (path === undefined || path.length === 0) {\n    path = '';\n  }\n  const apiUrl = getApiUrl(`/repos/${owner}/${repo}/contents${path}`);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} owner Repo owner\n * @param {string} repo Repo name\n * @param {string} path Subdirectory\n */\nexport function addRepository(owner, repo, path) {\n  const repoMap = {\n    'owner': owner,\n    'repo': repo,\n    'path': path\n  };\n  const storedRepos = getRepositories();\n  const repoList = storedRepos.length > 0 ? storedRepos : [];\n  repoList.push(repoMap);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repoList));\n}\n\n/**\n * Composes the GitHub API url for the given url, attaching the user's GitHub\n * access token if it exists.\n * @param {string} url The path and search params\n * @return {URL} Composed GitHub API url with user's personal access token\n */\nexport function getApiUrl(url) {\n  url = new URL(url, GITHUB_API_URL);\n\n  const githubToken = localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    url.searchParams.set('access_token', githubToken);\n  }\n\n  return url;\n}\n","import React from 'react';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\n\nimport MarkdownMusic from './MarkdownMusic';\nimport Toolbar from './Toolbar';\nimport { getContents } from '../lib/github';\nimport { setTranspose, setColumnCount, setFontSize } from '../redux/actions';\n\n// TODO: Decouple retrieval of source markdown and controlling arguments to MarkdownMusic.\n// https://github.com/music-markdown/music-markdown/pull/25#discussion_r259598474\nclass MarkdownMusicSourceFetcher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.props.setTranspose(parseInt(this.queryParams.transpose, 10) || 0);\n    this.props.setColumnCount(parseInt(this.queryParams.columnCount, 10) || 1);\n    this.props.setFontSize(parseInt(this.queryParams.fontSize, 10) || 13);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n      repos: this.queryParams.repos,\n      path: this.queryParams.path,\n    };\n  }\n\n  async componentDidMount() {\n    const owner = this.queryParams.owner;\n    const repo = this.queryParams.repo;\n    const path = this.queryParams.path;\n\n    const json = await getContents(owner, repo, path);\n    this.setState({\n      isLoaded: true,\n      markdown: atob(json.content)\n    });\n  }\n\n  // TODO: Separate the UI component with the fetch logic, we don't necessarily need the fetcher\n  // to be a React Component\n  render() {\n    const { isLoaded, markdown } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"Markdown\">\n          <Toolbar></Toolbar>\n          <MarkdownMusic source={markdown} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(\n  undefined,\n  { setTranspose, setColumnCount, setFontSize }\n)(MarkdownMusicSourceFetcher);\n","import Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getRepositories, addRepository } from '../lib/github';\nimport { REPOS_LOCAL_STORAGE_KEY } from '../lib/constants';\nimport queryString from 'query-string';\n\n// TODO: Build button toggle for dark/light\nconst darkLightThemeFlag = 'dark';\n\nconst MusicMarkdownNavbar = () => {\n  if (!localStorage.getItem(REPOS_LOCAL_STORAGE_KEY)) {\n    // TODO: sanitize this input when storing\n    addRepository('music-markdown', 'almost-in-time', '/');\n  }\n  return (\n    <Navbar bg={darkLightThemeFlag} expand=\"lg\" variant={darkLightThemeFlag} key=\"top-navbar\">\n      <Navbar.Brand href=\"/\">Music Markdown</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          <RepositoriesNavDropdown />\n          <NavLink to=\"/sandbox\" className=\"nav-link\" activeClassName=\"active\">Sandbox</NavLink>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\n/**\n * For all added repositories, add it to the dropdown list\n */\n// TODO: List first x items, then put in dropdown item to expand full list\nconst RepositoriesNavDropdown = () => {\n  const repoDropdownItems = [];\n  const repoList = getRepositories();\n  if (repoList.length > 0) {\n    repoList.forEach((repo) => {\n      const repoId = `${repo.owner}/${repo.repo}${repo.path}`;\n      // TODO: List valid files after clicking on repo name\n      const queryParams = {\n        'owner': repo.owner,\n        'repo': repo.repo,\n        'path': repo.path\n      };\n      const itemHref = `/repo?${queryString.stringify(queryParams)}`;\n      repoDropdownItems.push(\n        <NavLink to={itemHref} key={`dropdown-item-${repoId}`} className=\"dropdown-item\">\n          {repoId}\n        </NavLink>);\n    });\n  }\n\n  return (\n    <NavDropdown title=\"Music Repositories\">\n      {/* TODO: Build edit repo functionality */}\n      <NavDropdown.Item><b>Edit Repositories</b></NavDropdown.Item>\n      <NavDropdown.Divider />\n      {repoDropdownItems}\n    </NavDropdown>\n  );\n};\n\nexport default MusicMarkdownNavbar;\n","import Container from 'react-bootstrap/Container.js';\nimport React from 'react';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Container key={RESPONSIVE_CONTAINER_KEY}>\n      {props.children}\n    </Container>\n  );\n}\n\nexport default ResponsiveContainer;\n","import React from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { getContents } from '../lib/github';\nimport { REPO_RESOURCE, RENDER_RESOURCE } from '../lib/constants';\nimport queryString from 'query-string';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass RepositoryNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      repository: {\n        isLoaded: false,\n        contents: []\n      }\n    };\n  }\n\n  /**\n   * When component first initializes, execute following lifecycle actions\n   */\n  async componentDidMount() {\n    const queryStringMap = queryString.parse(this.props.location.search);\n    const owner = queryStringMap.owner;\n    const repo = queryStringMap.repo;\n    const path = queryStringMap.path;\n\n    const json = await getContents(owner, repo, path);\n    this.setState({\n      repository: {\n        isLoaded: true,\n        queryStringMap: queryStringMap,\n        contents: json\n      }\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new query string, then following lifecycle actions\n   * @param {Object} newProps Updated query string\n   */\n  async componentWillReceiveProps(newProps) {\n    const newQueryStringMap = queryString.parse(newProps.location.search);\n    const owner = this.state.repository.queryStringMap.owner;\n    const repo = this.state.repository.queryStringMap.repo;\n    const path = newQueryStringMap.path;\n\n    if (newQueryStringMap !== this.state.repository.queryStringMap) {\n      const json = await getContents(owner, repo, path);\n      this.setState({\n        repository: {\n          isLoaded: true,\n          queryStringMap: newQueryStringMap,\n          contents: json\n        }\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded } = this.state.repository;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      const listGroupItems = [];\n      const contents = this.state.repository.contents;\n      const queryStringMap = this.state.repository.queryStringMap;\n\n      contents.forEach((item) => {\n        // Create a new copy of the old query string map, then modify it with references to each\n        // item's relative path\n        const resourceQueryStringCopy = { ...queryStringMap };\n        const key = `list-group-item-${item.name}`;\n        resourceQueryStringCopy.path = `/${item.path}`;\n        const newQueryString = queryString.stringify(resourceQueryStringCopy);\n        listGroupItems.push(\n          item.type === 'dir' ? (\n            <LinkContainer to={`${REPO_RESOURCE}?${newQueryString}`} key={key}>\n              <ListGroupItem action>\n                <i>{`/${item.name}`}</i>\n              </ListGroupItem>\n            </LinkContainer>\n          ) : item.type === 'file' ? (\n            <LinkContainer to={`${RENDER_RESOURCE}?${newQueryString}`} key={key}>\n              <ListGroupItem action>\n                {item.name}\n              </ListGroupItem>\n            </LinkContainer>\n          ) : <div>File type {item.type} not supported</div>\n        );\n      });\n      const breadcrumbsComponent = getBreadcrumbsComponent(this.state.repository.queryStringMap);\n\n      return (\n        <>\n          <h2>Repository Contents</h2>\n            {breadcrumbsComponent}\n          <ListGroup>\n            {listGroupItems}\n          </ListGroup>\n        </>\n      );\n    }\n  }\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {Object} queryStringMap JSON map of query string\n * @return {Array} List of BreadcrumbItems\n */\nfunction getBreadcrumbsComponent(queryStringMap) {\n  const breadcrumbItems = [];\n  const baseLink = `${REPO_RESOURCE}`;\n  const keyBase = 'breadcrumb-item-';\n\n  const subDirectoriesArr = queryStringMap.path.split('/');\n  // discord root case, as '/' gets split into ['', '']\n  if (subDirectoriesArr[1] === '') {\n    subDirectoriesArr.shift();\n  }\n  // using currDir to rebuild intermediary paths for each subdirectory in queryStringMap\n  const currDir = '';\n  for (let i = 0; i < subDirectoriesArr.length; i++) {\n    const directory = subDirectoriesArr[i];\n    const queryStringMapCopy = { ...queryStringMap };\n    queryStringMapCopy.path = currDir.concat('/', directory);\n    const link = `${baseLink}?${queryString.stringify(queryStringMapCopy)}`;\n    switch (i) {\n    // Root has no inherent value, so using home as UI element\n    case 0:\n      breadcrumbItems.push(\n        <LinkContainer to={link} key={`${keyBase}${i}`}>\n          <Breadcrumb.Item>\n            home\n          </Breadcrumb.Item>\n        </LinkContainer>\n      );\n      break;\n    // Last item should be active\n    case subDirectoriesArr.length - 1:\n      breadcrumbItems.push(\n        <LinkContainer to={link} key={`${keyBase}${i}`}>\n          <Breadcrumb.Item active>\n            {directory}\n          </Breadcrumb.Item>\n        </LinkContainer>\n      );\n      break;\n    default:\n      breadcrumbItems.push(\n        <LinkContainer to={link} key={`${keyBase}${i}`}>\n          <Breadcrumb.Item>\n            {directory}\n          </Breadcrumb.Item>\n        </LinkContainer>\n      );\n      break;\n    };\n  };\n\n  return (\n    <Breadcrumb>\n      {breadcrumbItems}\n    </Breadcrumb>\n  );\n}\n\nexport default RepositoryNavigation;\n","import React from 'react';\nimport MarkdownMusic from './MarkdownMusic';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport { guitarChordLibrary } from 'markdown-it-music/renderers/chord_library';\nimport Toolbar from './Toolbar';\n\nconst Sandbox = () => (\n  <div>\n    <Toolbar></Toolbar>\n\n    <h1>Music Markdown Sandbox</h1>\n    <p>\n      This page exercises various subcomponents of music-markdown and\n      markdown-it-music.\n    </p>\n\n    <h2>Markdown Editor</h2>\n    <MarkdownEditor/>\n\n    <h2>Chord Diagram Renderer</h2>\n    <p>\n      This section exercises the Chord Diagram Renderer.\n    </p>\n    <h3>Esus4 (200x200)</h3>\n    <div dangerouslySetInnerHTML={\n      { __html: renderChordDiagram('o2 m1 m2 n3,2 n4,4 b5,6,5', 200, 200) }\n    } />\n\n    <h2>Entire Chord Library</h2>\n    <AllChords/>\n  </div>\n);\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const value = '```chords\\n' +\n      'c1:                    Am     G  F          G      Esus4  E\\n' +\n      'v1: All the leaves are brown        and the sky is gray\\n\\n' +\n      'c1: F               C     E  Am       F        Esus4  E\\n' +\n      'v1: I\\'ve been for a walk         on a winter\\'s day\\n\\n' +\n      'c1:                 Am    G  F       G      Esus4  E\\n' +\n      'v1: I\\'d be safe and warm        if I was in L.A.\\n\\n' +\n      'c1:            Am        G  F     G               Esus4  E\\n' +\n      'v1: California dreamin\\'        on such a winter\\'s day\\n' +\n      '```';\n\n    this.state = {\n      value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const styles = { display: 'flex', width: '100%' };\n    const editorStyles = {\n      minHeight: '500px', width: '50%', marginRight: '20px',\n      fontFamily: 'monospace', whiteSpace: 'pre'\n    };\n\n    return <div style={styles}>\n      <textarea value={this.state.value} onChange={this.handleChange} style={editorStyles}></textarea>\n      <div style={editorStyles}>\n        <MarkdownMusic source={this.state.value}></MarkdownMusic>\n      </div>\n    </div>;\n  }\n}\n\nconst AllChords = () => (\n  Array.from(guitarChordLibrary.keys()).map((chord, index) => (\n    <div key={index} align=\"center\" style={{ display: 'inline-block' }}>\n      {guitarChordLibrary.get(chord).map((value, index) => (\n        <span key={index} dangerouslySetInnerHTML={\n          { __html: renderChordDiagram(value) }\n        } />\n      ))}\n      <h5>{chord}</h5>\n    </div>\n  ))\n);\n\nexport default Sandbox;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\n\nimport MarkdownMusicSourceFetcher from './MarkdownMusicSourceFetcher';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar';\nimport ResponsiveContainer from './ResponsiveContainer';\nimport RepositoryNavigation from './RepositoryNavigation';\nimport Sandbox from './Sandbox.js';\nimport { REPO_RESOURCE, RENDER_RESOURCE, SANDBOX_RESOURCE } from '../lib/constants';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => (\n  <ResponsiveContainer children={[HomeRouter()]} />\n);\n\nconst HomeRouter = () => (\n  <Provider key=\"home-provider\" store={store}>\n    <Router key=\"home-router\">\n      <div>\n        <Route component={MusicMarkdownNavbar} />\n        <Route exact path=\"/\" component={Navigation} />\n        <Route exact path={REPO_RESOURCE} component={RepositoryNavigation} />\n        <Route path={SANDBOX_RESOURCE} component={Sandbox} />\n        <Route path={RENDER_RESOURCE} component={MarkdownMusicSourceFetcher} />\n      </div>\n    </Router>\n  </Provider>\n);\n\nconst Navigation = () => (\n  <h1>Welcome to Music Markdown!</h1>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}