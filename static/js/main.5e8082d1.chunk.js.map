{"version":3,"sources":["registerServiceWorker.js","redux/actions.js","components/MusicMarkdown.js","redux/actionTypes.js","lib/constants.js","lib/github.js","components/MarkdownMusicSourceFetcher.js","components/YouTube.js","components/MusicToolbar.js","components/MusicMarkdownNavbar.js","components/ResponsiveContainer.js","components/AddRepository.js","components/RepositoryEditor.js","components/NavigationListItem.js","components/RouterBreadcrumbs.js","components/RepositoryNavigation.js","components/BranchNavigation.js","components/Sandbox.js","redux/reducers/updateColumnCount.js","redux/reducers/updateFontSize.js","redux/reducers/transpose.js","redux/reducers/youTubeId.js","redux/reducers/updateTheme.js","redux/reducers/index.js","redux/store.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","transposeAmount","columnCount","fontSize","MusicMarkdownRender","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","md","MarkdownIt","use","MarkdownItMusic","updateYouTubeId","meta","youTubeId","_this$props","classes","theme","setTranspose","setColumnCount","setFontSize","setMaxWidth","width","html","render","source","react_default","a","createElement","dangerouslySetInnerHTML","__html","className","concat","palette","type","markdownBody","React","Component","ConnectMarkdownMusicRender","connect","youtubeId","payload","withStyles","filter","withTheme","MusicMarkdown","_ref","lib_default","REPOS_LOCAL_STORAGE_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","GITHUB_API_URL","getContents","_x","_x2","_x3","_getContents","apply","arguments","_callee","repo","path","branch","apiUrl","response","regenerator_default","wrap","_context","prev","next","undefined","length","getApiUrl","fetch","sent","abrupt","json","stop","getRepositories","repoListStr","localStorage","getItem","JSON","parse","verifyRepoExists","_callee2","_context2","status","Error","verifyRepoUnregistered","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","err","return","addRepository","_x5","_addRepository","_callee3","repos","_context3","push","setItem","stringify","getBranches","_x6","_getBranches","_callee4","_context4","url","URL","githubToken","searchParams","set","MarkdownMusicSourceFetcher","queryParams","queryString","search","parseInt","transpose","isLoaded","markdown","params","setState","atob","content","_this$state","components_MusicMarkdown","newTransposeAmount","newColumnCount","newFontSize","YouTubePlayer","title","src","allow","allowFullScreen","YouTubeToggle","visible","anchorEl","handleToggle","bind","assertThisInitialized","_this2","Fragment","IconButton_default","onClick","buttonRef","node","PlayArrow_default","Popper_default","id","open","placement","disablePortal","modifiers","flip","enabled","YouTube_YouTubePlayer","ConnectedYouTubeToggle","MusicToolbar","handleTransposeClick","handleColumnClick","handleFontClick","increase","decrease","event","target","textContent","updateColumnCount","updateFontSize","Toolbar_default","Grid_default","container","direction","justify","alignItems","spacing","name","clickCallback","map","key","item","Badge_default","color","badgeContent","Typography_default","variant","padding","Button_default","isIncreaseTransposeAmount","isIncreaseColumnCount","isIncreaseFontSize","unit","MusicMarkdownNavbar","toolbarOpen","settingsOpen","isDarkTheme","settingsAnchorEl","handleDrawerOpen","handleSettingsClick","handleDarkThemeSwitch","setDarkTheme","pathname","split","AppBar_default","position","reactRouterHoverInherit","component","Link","to","alt","MusicMarkdownNavbar_RepositoriesNavDropdown","grow","Settings_default","Paper_default","paper","FormControlLabel_default","control","Switch_default","defaultChecked","onChange","label","Drawer_default","anchor","Divider_default","components_MusicToolbar","RepositoriesNavDropdown","_this3","handleClick","handleClose","_this4","repoDropdownItems","repoList","forEach","MenuItem_default","NavLink","Menu_default","onClose","flexGrow","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","children","StyledErrorSnackbar","backgroundColor","dark","icon","iconVariant","opacity","marginRight","message","display","margin","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent_default","aria-describedby","Error_default","classNames","action","aria-label","close","Close_default","AddRepository","owner","handleDialogOpen","handleDialogClose","handleShowError","handleClearError","reason","handleDialogAdd","handleAddRepository","t0","handleUpdateOwner","handleUpdateName","Add_default","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","e","fullWidth","DialogActions_default","ListRepositories","loadRepositories","handleDeleteRepository","r","deleteRepository","componentDidMount","List_default","ListItem_default","button","ListItemAvatar_default","Avatar_default","Book_default","ListItemText_default","primary","ListItemSecondaryAction_default","Delete_default","components_AddRepository","RepositoryEditor","RepositoryEditor_ListRepositories","NavigationListItem","itemName","breadcrumbItems","previousPath","ignoreIndex","currDir","i","directory","indexOf","core_Link_default","RouterLink","buildBreadcrumb","Breadcrumbs_default","RepositoryNavigation","contents","prevProps","prevRepo","prevPath","prevBranch","listGroupItems","_this2$props$match$pa","viewType","itemJsx","linkToContent","components_NavigationListItem","RouterBreadcrumbs","BranchNavigation","branches","MarkdownEditor","handleChange","editorStyles","minHeight","style","AllChords","Array","from","guitarChordLibrary","keys","chord","index","align","get","renderChordDiagram","Sandbox","Sandbox_MarkdownEditor","parseVoicing","Sandbox_AllChords","defaultTheme","typography","useNextVariants","&:hover","newTheme","paletteType","combineReducers","store","createStore","rootReducer","REPO_REGEX","ThemeProvider","MuiThemeProvider_default","createMuiTheme","CssBaseline_default","components_ResponsiveContainer","HomeRouter","es","HashRouter","Route","Switch","exact","Navigation","App","ReactDOM","src_components_App","document","getElementById","process","origin","addEventListener","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5e8082d1.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  TRANSPOSE,\n  UPDATE_COLUMN_COUNT,\n  UPDATE_FONT_SIZE,\n  UPDATE_YOUTUBE_ID,\n  SET_DARK_THEME\n} from './actionTypes';\n\nlet transposeAmount = 0;\nlet columnCount = 1;\nlet fontSize = 13;\n\nexport const updateYouTubeId = (youtubeId) => ({\n  type: UPDATE_YOUTUBE_ID,\n  payload: {\n    youtubeId\n  }\n});\n\nexport const transpose = (isIncreaseTransposeAmount) => ({\n  type: TRANSPOSE,\n  payload: {\n    transposeAmount: isIncreaseTransposeAmount ? ++transposeAmount : --transposeAmount\n  }\n});\n\nexport const updateColumnCount = (isIncreaseColumnCount) => ({\n  type: UPDATE_COLUMN_COUNT,\n  payload: {\n    columnCount: isIncreaseColumnCount ? ++columnCount : --columnCount\n  }\n});\n\nexport const updateFontSize = (isIncreaseFontSize) => ({\n  type: UPDATE_FONT_SIZE,\n  payload: {\n    fontSize: isIncreaseFontSize ? ++fontSize : --fontSize\n  }\n});\n\nexport const setTranspose = (newTransposeAmount) => {\n  transposeAmount = newTransposeAmount;\n\n  return {\n    type: TRANSPOSE,\n    payload: {\n      transposeAmount\n    }\n  };\n};\n\nexport const setColumnCount = (newColumnCount) => {\n  columnCount = newColumnCount;\n\n  return {\n    type: UPDATE_COLUMN_COUNT,\n    payload: {\n      columnCount\n    }\n  };\n};\n\nexport const setFontSize = (newFontSize) => {\n  fontSize = newFontSize;\n\n  return {\n    type: UPDATE_FONT_SIZE,\n    payload: {\n      fontSize\n    }\n  };\n};\n\nexport const setDarkTheme = (isDarkTheme) => {\n  return {\n    type: SET_DARK_THEME,\n    payload: {\n      isDarkTheme\n    }\n  };\n};\n","import ContainerDimensions from 'react-container-dimensions';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { updateYouTubeId } from '../redux/actions';\n\nconst styles = () => ({\n  markdownBody: {\n    filter: 'invert(100%)'\n  },\n});\n\nclass MusicMarkdownRender extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.md = new MarkdownIt()\n      .use(MarkdownItMusic);\n  }\n\n  componentDidMount() {\n    this.props.updateYouTubeId(this.md.meta.youTubeId);\n  }\n\n  render() {\n    const { classes, theme } = this.props;\n\n    this.md.setTranspose(this.props.transposeAmount)\n      .setColumnCount(this.props.columnCount)\n      .setFontSize(this.props.fontSize)\n      .setMaxWidth(this.props.width);\n    const html = this.md.render(this.props.source);\n\n    return (\n      <div dangerouslySetInnerHTML={{ __html: html }}\n        className={`${theme.palette.type === 'dark' ? classes.markdownBody : ''}`}/>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { transposeAmount, columnCount, fontSize } = state;\n  return { transposeAmount, columnCount, fontSize };\n}\n\nconst ConnectMarkdownMusicRender =\n  connect(mapStateToProps, { updateYouTubeId })(withStyles(styles, { withTheme: true })(MusicMarkdownRender));\n\nconst MusicMarkdown = ({ source }) => (\n  <ContainerDimensions>\n    <ConnectMarkdownMusicRender source={source} />\n  </ContainerDimensions>\n);\n\nexport default MusicMarkdown;\n","export const TRANSPOSE = 'TRANSPOSE';\nexport const UPDATE_COLUMN_COUNT = 'UPDATE_COLUMN_COUNT';\nexport const UPDATE_FONT_SIZE = 'UPDATE_FONT_SIZE';\nexport const UPDATE_YOUTUBE_ID = 'UPDATE_YOUTUBE_ID';\nexport const SET_DARK_THEME = 'SET_DARK_THEME';\n","/* Local Storage */\n\n/** Key namespace for music-markdown when storing app specific values in localStorage */\nexport const MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE = 'music-markdown';\n/** Key for markdown-music repositories specific localStorage values*/\nexport const REPOS_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:repositories`;\nexport const GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:github_token`;\nexport const GITHUB_API_URL = 'https://api.github.com';\n","import { REPOS_LOCAL_STORAGE_KEY, GITHUB_TOKEN_LOCAL_STORAGE_KEY, GITHUB_API_URL } from './constants';\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} repo The owner and repo in the form :owner/:repo\n * @param {string} path The directory or file to retrieve\n * @param {string} branch The branch to retrive contents from\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(repo, path, branch) {\n  if (path === undefined || path.length === 0) {\n    path = '';\n  }\n  const apiUrl = getApiUrl(`/repos/${repo}/contents/${path}`, branch);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\nasync function verifyRepoExists(repo) {\n  const apiUrl = getApiUrl(`/repos/${repo}`);\n  const response = await fetch(apiUrl);\n  if (response.status === 404) {\n    throw new Error(`\"${repo}\" not found on GitHub.`);\n  }\n}\n\nfunction verifyRepoUnregistered(repo) {\n  for (const r of getRepositories()) {\n    if (r === repo) {\n      throw new Error(`\"${repo}\" is already registered.`);\n    }\n  }\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function addRepository(repo) {\n  verifyRepoUnregistered(repo);\n  await verifyRepoExists(repo);\n  const repos = getRepositories();\n  repos.push(repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Returns a promise of a list of branches for the given repository.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function getBranches(repo) {\n  const apiUrl = getApiUrl(`/repos/${repo}/branches`);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Removes a GitHub repo from localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport function deleteRepository(repo) {\n  const repos = getRepositories().filter((r) => r !== repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Composes the GitHub API url for the given url, attaching the user's GitHub\n * access token if it exists.\n * @param {string} url The path and search params\n * @param {string} branch The branch to get from\n * @return {URL} Composed GitHub API url with user's personal access token\n */\nexport function getApiUrl(url, branch) {\n  url = new URL(url, GITHUB_API_URL);\n\n  const githubToken = localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    url.searchParams.set('access_token', githubToken);\n  }\n\n  if (branch) {\n    url.searchParams.set('ref', branch);\n  }\n\n  return url;\n}\n","import React from 'react';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\n\nimport MusicMarkdown from './MusicMarkdown';\nimport { getContents } from '../lib/github';\nimport { setTranspose, setColumnCount, setFontSize } from '../redux/actions';\n\n// TODO: Decouple retrieval of source markdown and controlling arguments to MarkdownMusic.\n// https://github.com/music-markdown/music-markdown/pull/25#discussion_r259598474\nclass MarkdownMusicSourceFetcher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.props.setTranspose(parseInt(this.queryParams.transpose, 10) || 0);\n    this.props.setColumnCount(parseInt(this.queryParams.columnCount, 10) || 1);\n    this.props.setFontSize(parseInt(this.queryParams.fontSize, 10) || 13);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n    };\n  }\n\n  async componentDidMount() {\n    const { repo, path } = this.props.match.params;\n\n    const json = await getContents(repo, path);\n    this.setState({\n      isLoaded: true,\n      markdown: atob(json.content)\n    });\n  }\n\n  // TODO: Separate the UI component with the fetch logic, we don't necessarily need the fetcher\n  // to be a React Component\n  render() {\n    const { isLoaded, markdown } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"Markdown\">\n          <MusicMarkdown source={markdown} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(\n  undefined,\n  { setTranspose, setColumnCount, setFontSize }\n)(MarkdownMusicSourceFetcher);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Popper from '@material-ui/core/Popper';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nconst YouTubePlayer = ({ youTubeId }) => (\n  <div className=\"embed-responsive embed-responsive-16by9\">\n    <iframe\n      title={youTubeId}\n      className='embed-responsive-item'\n      src={`https://www.youtube.com/embed/${youTubeId}`}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen>\n    </iframe>\n  </div>\n);\n\nclass YouTubeToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.anchorEl = undefined;\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    this.setState((state) => ({\n      visible: !state.visible\n    }));\n  }\n\n  render() {\n    if (!this.props.youTubeId) {\n      return <div></div>;\n    }\n\n    return (\n      <>\n        <IconButton onClick={this.handleToggle} buttonRef={(node) => {\n          this.anchorEl = node;\n        }}>\n          <PlayArrowIcon />\n        </IconButton>\n        <Popper\n          id='youtube-player'\n          open={this.state.visible}\n          anchorEl={this.anchorEl}\n          placement='top'\n          disablePortal={false}\n          modifiers={{\n            flip: {\n              enabled: true,\n            }\n          }}\n        >\n          <YouTubePlayer youTubeId={this.props.youTubeId} />\n        </Popper>\n      </>\n    );\n  }\n}\n\nconst ConnectedYouTubeToggle = connect((state) => ({ youTubeId: state.youTubeId }))(YouTubeToggle);\n\nexport {\n  YouTubePlayer,\n  ConnectedYouTubeToggle as YouTubeToggle\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Badge from '@material-ui/core/Badge';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { connect } from 'react-redux';\n\nimport { transpose } from '../redux/actions';\nimport { updateColumnCount } from '../redux/actions';\nimport { updateFontSize } from '../redux/actions';\nimport { YouTubeToggle } from './YouTube';\n\nconst styles = (theme) => ({\n  padding: {\n    padding: `0 ${theme.spacing.unit}px`,\n  }\n});\n\nclass MusicToolbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTransposeClick = this.handleTransposeClick.bind(this);\n    this.handleColumnClick = this.handleColumnClick.bind(this);\n    this.handleFontClick = this.handleFontClick.bind(this);\n\n    this.increase = '+1';\n    this.decrease = '-1';\n  }\n\n  handleTransposeClick(event) {\n    // TODO: Update history with new transposeAmount\n    this.props.transpose(event.target.textContent === this.increase);\n  }\n\n  handleColumnClick(event) {\n    // TODO: Update history with new columnCount\n    this.props.updateColumnCount(event.target.textContent === this.increase);\n  }\n\n  handleFontClick(event) {\n    // TODO: Update history with new fontSize\n    this.props.updateFontSize(event.target.textContent === this.increase);\n  }\n\n  render() {\n    const { transposeAmount, columnCount, fontSize, classes } = this.props;\n\n    return (\n      <Toolbar>\n        <Grid container direction='row' justify='center' alignItems='center' spacing={16}>\n          {[{ name: 'Transpose', clickCallback: this.handleTransposeClick, value: transposeAmount },\n            { name: 'Column Count', clickCallback: this.handleColumnClick, value: columnCount },\n            { name: 'Font Size', clickCallback: this.handleFontClick, value: fontSize }]\n            .map(({ name, clickCallback, value }) => (\n              <React.Fragment key={name}>\n                <Grid item>\n                  <Badge color='primary' badgeContent={value}>\n                    <Typography variant='h6' className={classes.padding}>{name}</Typography>\n                  </Badge>\n                </Grid>\n                <Grid item>\n                  <Button onClick={clickCallback}>\n                    <Typography>{this.decrease}</Typography>\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button onClick={clickCallback}>\n                    <Typography>{this.increase}</Typography>\n                  </Button>\n                </Grid>\n              </React.Fragment>\n            ))}\n          <Grid item>\n            <YouTubeToggle youTubeId={this.props.youTubeId} />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { youtubeId, transposeAmount, columnCount, fontSize } = state;\n  return { youtubeId, transposeAmount, columnCount, fontSize };\n}\n\nexport default connect(\n  mapStateToProps,\n  { transpose, updateColumnCount, updateFontSize })(withStyles(styles)(MusicToolbar));\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport { getRepositories } from '../lib/github';\nimport MusicToolbar from './MusicToolbar';\nimport { setDarkTheme } from '../redux/actions';\n\nconst styles = (theme) => ({\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n  paper: {\n    padding: `${theme.spacing.unit}px`,\n  },\n  grow: {\n    flexGrow: 1\n  },\n  filter: {\n    filter: 'invert(100%)'\n  }\n});\n\nclass MusicMarkdownNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toolbarOpen: false,\n      settingsOpen: false,\n      isDarkTheme: props.theme.palette.type === 'dark'\n    };\n\n    this.settingsAnchorEl = undefined;\n\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    this.handleSettingsClick = this.handleSettingsClick.bind(this);\n    this.handleDarkThemeSwitch = this.handleDarkThemeSwitch.bind(this);\n  }\n\n  handleDrawerOpen() {\n    this.setState({ toolbarOpen: !this.state.toolbarOpen });\n  };\n\n  handleSettingsClick() {\n    this.setState({ settingsOpen: !this.state.settingsOpen });\n  }\n\n  handleDarkThemeSwitch() {\n    this.props.setDarkTheme(!this.state.isDarkTheme);\n    this.setState({ isDarkTheme: !this.state.isDarkTheme });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { toolbarOpen, settingsOpen, isDarkTheme } = this.state;\n\n    const MusicMarkdownNavbar = () => (\n      <>\n        <AppBar position={'sticky'} key='top-navbar'>\n          <Toolbar>\n            <Button className={classes.reactRouterHoverInherit} component={Link} to='/'>\n              <img className={isDarkTheme ? classes.filter : ''}\n                src=\"music-markdown.svg\" width={50} alt=\"Music Markdown\" />\n            </Button>\n            <RepositoriesNavDropdown {...this.props} />\n            <div className={classes.grow} />\n            <Button onClick={this.handleDrawerOpen}>\n              Toolbar\n            </Button>\n            <IconButton onClick={this.handleSettingsClick} buttonRef={(node) => {\n              this.settingsAnchorEl = node;\n            }}>\n              <SettingsIcon/>\n            </IconButton>\n            <Popper\n              id='settings-popper'\n              open={settingsOpen}\n              anchorEl={this.settingsAnchorEl}\n              placement='bottom-end'>\n              <Paper className={classes.paper}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      defaultChecked={isDarkTheme}\n                      onChange={this.handleDarkThemeSwitch}\n                      value='darkTheme' />\n                  }\n                  label='Toggle Dark Mode?'\n                />\n              </Paper>\n            </Popper>\n          </Toolbar>\n        </AppBar>\n        <Drawer open={toolbarOpen} variant={'persistent'} anchor={'bottom'}>\n          <Divider />\n          <MusicToolbar></MusicToolbar>\n        </Drawer>\n      </>\n    );\n\n    const BaseNavbar = () => (\n      <>\n        <AppBar position={'sticky'} key='top-navbar'>\n          <Toolbar>\n            <Button className={classes.reactRouterHoverInherit} component={Link} to='/'>\n              <img src=\"music-markdown.svg\" width={50} alt=\"Music Markdown\" />\n            </Button>\n            <RepositoriesNavDropdown {...this.props} />\n            <div className={classes.grow} />\n          </Toolbar>\n        </AppBar>\n      </>\n    );\n\n    const basePath = this.props.location.pathname.split('/')[1];\n\n    switch (basePath) {\n    case 'repos':\n      return MusicMarkdownNavbar();\n    default:\n      return BaseNavbar();\n    }\n  }\n};\n\n/**\n * For all added repositories, add it to the dropdown list\n */\n// TODO: List first x items, then put in dropdown item to expand full list\nclass RepositoriesNavDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick() {\n    this.setState((state) => ({\n      open: !state.open\n    }));\n  }\n\n  handleClose() {\n    this.setState(() => ({\n      open: false\n    }));\n  }\n\n  render() {\n    const repoDropdownItems = [];\n    const repoList = getRepositories();\n\n    if (repoList.length > 0) {\n      const { reactRouterHoverInherit } = this.props.classes;\n\n      repoList.forEach((repo) => {\n        repoDropdownItems.push(\n          <MenuItem component={NavLink}\n            to={`/repos/${repo}`}\n            key={`dropdown-item-${repo}`}\n            onClick={this.handleClose}\n            className={reactRouterHoverInherit}>\n            {repo}\n          </MenuItem>);\n      });\n    }\n\n    const { open } = this.state;\n\n    return (\n      <>\n        <Button onClick={this.handleClick} buttonRef={(node) => {\n          this.anchorEl = node;\n        }}>\n          Music Repositories\n        </Button>\n\n        <Menu id='dropdown-menu' anchorEl={this.anchorEl} open={open} onClose={this.handleClose}>\n          {repoDropdownItems}\n          <Divider />\n          <MenuItem component={NavLink}\n            to='/repos'\n            key='edit-repos'\n            onClick={this.handleClose}\n            className={this.props.classes.reactRouterHoverInherit}>\n            Edit Repositories\n          </MenuItem>\n        </Menu>\n      </>\n    );\n  }\n};\n\nexport default connect(undefined, { setDarkTheme })(withStyles(styles, { withTheme: true })(MusicMarkdownNavbar));\n","import Grid from '@material-ui/core/Grid';\nimport React from 'react';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Grid key={RESPONSIVE_CONTAINER_KEY}>\n      {props.children}\n    </Grid>\n  );\n}\n\nexport default ResponsiveContainer;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Add from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = (theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n});\n\nconst ErrorSnackbar = ({ open, handleClose, classes, message }) => (\n  <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n    open={open} autoHideDuration={6000} onClose={handleClose}>\n    <SnackbarContent\n      className={classes.error}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <ErrorIcon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={handleClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n    />\n  </Snackbar>\n);\n\nconst StyledErrorSnackbar = withStyles(styles)(ErrorSnackbar);\n\n\nclass AddRepository extends React.Component {\n  state = {\n    open: false,\n    name: '',\n    owner: '',\n    message: null,\n    error: false\n  };\n\n  handleDialogOpen = () => {\n    this.setState({ open: true });\n  }\n\n  handleDialogClose = () => {\n    this.setState({\n      open: false,\n      name: '',\n      owner: '',\n      error: false\n    });\n  }\n\n  handleShowError = (message) => {\n    this.setState({\n      message: message,\n      error: true\n    });\n  }\n\n  handleClearError = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ error: false });\n  }\n\n  handleDialogAdd = async () => {\n    try {\n      await this.props.handleAddRepository(`${this.state.owner}/${this.state.name}`);\n      this.handleDialogClose();\n    } catch (err) {\n      this.handleShowError(err.message);\n    }\n  }\n\n  handleUpdateOwner = (event) => {\n    this.setState({ owner: event.target.value });\n  }\n\n  handleUpdateName = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n  // TODO: style to add margin on right.\n  render = () => (\n    <>\n      <Grid container direction='row' justify='flex-end' alignItems='flex-end'>\n        <IconButton aria-label='Add' onClick={this.handleDialogOpen}>\n          <Add />\n        </IconButton>\n        <Dialog open={this.state.open} aria-labelledby='add-repository-dialog'>\n          <DialogTitle id='add-repository-dialog-title'>Add Repository</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin='dense'\n              id='owner'\n              label='Repository Owner'\n              value={this.state.owner}\n              onChange={(e) => this.handleUpdateOwner(e)}\n              fullWidth\n            />\n            <TextField\n              margin='dense'\n              id='name'\n              label='Repository Name'\n              value={this.state.name}\n              onChange={(e) => this.handleUpdateName(e)}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleDialogClose}>Cancel</Button>\n            <Button onClick={this.handleDialogAdd}>Add</Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n      <StyledErrorSnackbar\n        message={this.state.message}\n        open={this.state.error}\n        handleClose={this.handleClearError} />\n    </>\n  );\n}\n\nexport default AddRepository;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Book from '@material-ui/icons/Book';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from 'react-router-dom/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport AddRepository from './AddRepository';\nimport { getRepositories, deleteRepository, addRepository } from '../lib/github';\n\n\nclass ListRepositories extends React.Component {\n  state = {\n    repos: [],\n  }\n\n  handleAddRepository = async (repo) => {\n    await addRepository(repo);\n    this.loadRepositories();\n  }\n\n  handleDeleteRepository = (repo) => {\n    deleteRepository(repo);\n    this.loadRepositories();\n  }\n\n  loadRepositories = () => {\n    this.setState({\n      repos: getRepositories()\n    });\n  }\n\n  componentDidMount = () => {\n    this.loadRepositories();\n  }\n\n  render = () => (\n    <>\n      <List>\n        {this.state.repos.map((repo) => (\n          <ListItem button key={`repo-item-${repo}`} component={Link} to={`/repos/${repo}`}>\n            <ListItemAvatar>\n              <Avatar>\n                <Book />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={repo} />\n            <ListItemSecondaryAction>\n              <IconButton aria-label=\"Delete\" onClick={() => this.handleDeleteRepository(repo)}>\n                <Delete />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      <AddRepository handleAddRepository={this.handleAddRepository} />\n    </>\n  );\n}\n\nconst RepositoryEditor = () => (\n  <ListRepositories />\n);\n\nexport default RepositoryEditor;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\n\nconst NavigationListItem = ({ to, itemName }) => (\n  <ListItem button component={Link} to={to}>\n    <ListItemText primary={itemName}></ListItemText>\n  </ListItem>\n);\n\nexport default NavigationListItem;\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/lab/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst styles = (theme) => ({\n  paper: {\n    padding: `${theme.spacing.unit}px`,\n  },\n  reactRouterHoverInherit: theme.reactRouterHoverInherit\n});\n\nfunction buildBreadcrumb(previousPath, classes) {\n  const breadcrumbItems = [];\n\n  // ignoreIndex matches the Route defined in App.js.\n  // Certain portions are not useful to user in the breadcrumb, so we remove them.\n  const ignoreIndex = [0/* /repos */, 3/* /:viewName(browser|viewer|editor) */];\n  const keyBase = 'breadcrumb-item-';\n\n  let currDir = '';\n  for (let i = 0; i < previousPath.length; i++) {\n    const directory = previousPath[i];\n    currDir = currDir.concat('/', directory);\n\n    if (ignoreIndex.indexOf(i) !== -1) {\n      continue;\n    }\n\n    if (i === previousPath.length - 1) {\n      // Last item should be active\n      breadcrumbItems.push(\n        <Typography color=\"textPrimary\" key={`${keyBase}${i}`}>\n          {directory}\n        </Typography>\n      );\n    } else {\n      breadcrumbItems.push(\n        <Link\n          component={RouterLink}\n          to={`${currDir}/`}\n          key={`${keyBase}${i}`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          {directory}\n        </Link>\n      );\n    }\n  };\n\n  return breadcrumbItems;\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {string} pathname current URI pathname\n * @return {Array} List of BreadcrumbItems\n */\nconst DirectoryBreadcrumbs = ({ pathname, classes }) => {\n  const keyBase = 'breadcrumb-item-';\n\n  const subDirectoriesArr = pathname.split('/').filter((value) => !!value);\n\n  const breadcrumbItems = buildBreadcrumb(subDirectoriesArr, classes);\n\n  return (\n    <Paper className={classes.paper}>\n      <Breadcrumbs>\n        <Link\n          component={RouterLink}\n          to={`/`}\n          key={`${keyBase}Home`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          Home\n        </Link>\n        {breadcrumbItems}\n      </Breadcrumbs>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(DirectoryBreadcrumbs);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationListItem from './NavigationListItem';\nimport RouterBreadcrumbs from './RouterBreadcrumbs';\nimport { getContents } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass RepositoryNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      contents: []\n    };\n  }\n\n  async componentDidMount() {\n    const { repo, path, branch } = this.props.match.params;\n\n    const contents = await getContents(repo, path, branch);\n    this.setState({\n      isLoaded: true,\n      contents\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Props before update\n   */\n  async componentDidUpdate(prevProps) {\n    const { repo: prevRepo, path: prevPath, branch: prevBranch } = prevProps.match.params;\n    const { repo, path, branch } = this.props.match.params;\n\n    if (prevRepo !== repo || prevPath !== path || prevBranch !== branch) {\n      const contents = await getContents(repo, path, branch);\n      this.setState({\n        isLoaded: true,\n        contents\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded, contents } = this.state;\n    if (!isLoaded) {\n      return <div className=\"Markdown\">Loading...</div>;\n    }\n\n    if (!contents.forEach) {\n      return <div>{contents.message}</div>;\n    }\n\n    const listGroupItems = [];\n\n    contents.forEach((item) => {\n      const key = `list-group-item-${item.name}`;\n\n      const { repo, branch } = this.props.match.params;\n\n      let viewType = 'error';\n      let itemJsx = <div>File type {item.type} not supported</div>;\n\n      if (item.type === 'dir') {\n        viewType = 'browser';\n        itemJsx = <i>{`/${item.name}`}</i>;\n      } else if (item.type === 'file') {\n        viewType = 'viewer';\n        itemJsx = item.name;\n      }\n\n      const linkToContent = `/repos/${repo}/${viewType}/${branch}/${item.path}`;\n\n      listGroupItems.push(<Divider key={`navigation-divider-${item.name}`}/>);\n      listGroupItems.push(<NavigationListItem to={linkToContent} key={key} action itemName={itemJsx} />);\n    });\n\n    return (\n      <>\n        <Typography variant='h3'>\n          Repository Contents\n        </Typography>\n        <RouterBreadcrumbs pathname={this.props.location.pathname} />\n        <List key={'repo-navigation-list'}>\n          {listGroupItems}\n          <Divider key={'end-of-list-divider'}/>\n        </List>\n      </>\n    );\n  }\n}\n\nexport default RepositoryNavigation;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationListItem from './NavigationListItem';\nimport DirectoryBreadcrumbs from './RouterBreadcrumbs';\nimport { getBranches } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass BranchNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      branches: []\n    };\n  }\n\n  /**\n   * When component first initializes, execute following lifecycle actions\n   */\n  async componentDidMount() {\n    const branches = await getBranches(this.props.match.params.repo);\n    this.setState({\n      isLoaded: true,\n      branches\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Updated query string\n   */\n  async componentDidUpdate(prevProps) {\n    if (prevProps.match.params.repo !== this.props.match.params.repo) {\n      const branches = await getBranches(this.props.match.params.repo);\n      this.setState({\n        isLoaded: true,\n        branches\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      const listGroupItems = [];\n      const { branches } = this.state;\n\n      if (!branches.forEach) {\n        return <div>{branches.message}</div>;\n      }\n\n      branches.forEach((item) => {\n        const key = `list-group-item-${item.name}`;\n        const linkToContent = `/repos/${this.props.match.params.repo}/browser/${item.name}`;\n        listGroupItems.push(<Divider key={`navigation-divider-${item.name}`}/>);\n        listGroupItems.push(<NavigationListItem to={linkToContent} key={key} itemName={item.name} action />);\n      });\n\n      return (\n        <>\n          <Typography variant='h3'>\n            Branches\n          </Typography>\n          <DirectoryBreadcrumbs pathname={this.props.location.pathname} />\n          <List>\n            {listGroupItems}\n            <Divider />\n          </List>\n        </>\n      );\n    }\n  }\n}\n\nexport default BranchNavigation;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport MusicMarkdown from './MusicMarkdown';\nimport { parseVoicing } from 'markdown-it-music/lib/voicing';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport { guitarChordLibrary } from 'markdown-it-music/renderers/chord_library';\n\nconst Sandbox = () => (\n  <div>\n    <Typography variant='h2'>Music Markdown Sandbox</Typography>\n    <Typography>\n      This page exercises various subcomponents of music-markdown and\n      markdown-it-music.\n    </Typography>\n\n    <Typography variant='h3'>Markdown Editor</Typography>\n    <MarkdownEditor/>\n\n    <Typography variant='h3'>\n      Chord Diagram Renderer\n    </Typography>\n    <Typography>\n      This section exercises the Chord Diagram Renderer.\n    </Typography>\n    <Typography variant='h4'>Esus4 (200x200)</Typography>\n    <div dangerouslySetInnerHTML={\n      { __html: renderChordDiagram(parseVoicing('o2 m1 m2 n3,2 n4,4 b5,6,5'), 200, 200) }\n    } />\n\n    <h2>Entire Chord Library</h2>\n    <AllChords/>\n  </div>\n);\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const value = '```chords\\n' +\n      'c1:                    Am     G  F          G      Esus4  E\\n' +\n      'v1: All the leaves are brown        and the sky is gray\\n\\n' +\n      'c1: F               C     E  Am       F        Esus4  E\\n' +\n      'v1: I\\'ve been for a walk         on a winter\\'s day\\n\\n' +\n      'c1:                 Am    G  F       G      Esus4  E\\n' +\n      'v1: I\\'d be safe and warm        if I was in L.A.\\n\\n' +\n      'c1:            Am        G  F     G               Esus4  E\\n' +\n      'v1: California dreamin\\'        on such a winter\\'s day\\n' +\n      '```';\n\n    this.state = {\n      value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const styles = { display: 'flex', width: '100%' };\n    const editorStyles = {\n      minHeight: '500px', width: '50%', marginRight: '20px'\n    };\n\n    return <div style={styles}>\n      <textarea value={this.state.value} onChange={this.handleChange} style={editorStyles}></textarea>\n      <div style={editorStyles}>\n        <MusicMarkdown source={this.state.value}></MusicMarkdown>\n      </div>\n    </div>;\n  }\n}\n\nconst AllChords = () => (\n  Array.from(guitarChordLibrary.keys()).map((chord, index) => (\n    <div key={index} align=\"center\" style={{ display: 'inline-block' }}>\n      {guitarChordLibrary.get(chord).map((value, index) => (\n        <span key={index} dangerouslySetInnerHTML={\n          { __html: renderChordDiagram(value) }\n        } />\n      ))}\n      <h5>{chord}</h5>\n    </div>\n  ))\n);\n\nexport default Sandbox;\n","import { UPDATE_COLUMN_COUNT } from '../actionTypes';\n\nconst columnCount = (state = 1, action) => {\n  switch (action.type) {\n  case UPDATE_COLUMN_COUNT: {\n    return action.payload.columnCount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default columnCount;\n","import { UPDATE_FONT_SIZE } from '../actionTypes';\n\nconst fontSize = (state = 13, action) => {\n  switch (action.type) {\n  case UPDATE_FONT_SIZE: {\n    return action.payload.fontSize;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default fontSize;\n","import { TRANSPOSE } from '../actionTypes';\n\nconst transposeAmount = (state = 0, action) => {\n  switch (action.type) {\n  case TRANSPOSE: {\n    return action.payload.transposeAmount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default transposeAmount;\n","import { UPDATE_YOUTUBE_ID } from '../actionTypes';\n\nconst youTubeId = (state = '', action) => {\n  switch (action.type) {\n  case UPDATE_YOUTUBE_ID: {\n    return action.payload.youtubeId || '';\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default youTubeId;\n","import { SET_DARK_THEME } from '../actionTypes';\nimport { MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE } from '../../lib/constants';\n\nconst defaultTheme = {\n  typography: {\n    useNextVariants: true,\n  },\n  reactRouterHoverInherit: {\n    '&:hover': {\n      color: 'inherit'\n    },\n  },\n  palette: {\n    type: window.localStorage.getItem(`${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:palette-type`) || 'light',\n  }\n};\n\nconst theme = (state = defaultTheme, action) => {\n  switch (action.type) {\n  case SET_DARK_THEME: {\n    const newTheme = JSON.parse(JSON.stringify(state));\n    const paletteType = action.payload.isDarkTheme ? 'dark' : 'light';\n\n    newTheme.palette.type = paletteType;\n    window.localStorage.setItem(`${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:palette-type`, paletteType);\n\n    return newTheme;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default theme;\n","import { combineReducers } from 'redux';\nimport columnCount from './updateColumnCount';\nimport fontSize from './updateFontSize';\nimport transposeAmount from './transpose';\nimport youTubeId from './youTubeId';\nimport theme from './updateTheme';\n\nexport default combineReducers({\n  transposeAmount,\n  columnCount,\n  fontSize,\n  youTubeId,\n  theme });\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nlet store = undefined;\nif (process.env.NODE_ENV === 'production') {\n  store = createStore(rootReducer);\n} else {\n  store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nexport default store;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider, connect } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nimport MarkdownMusicSourceFetcher from './MarkdownMusicSourceFetcher';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar';\nimport ResponsiveContainer from './ResponsiveContainer';\nimport RepositoryEditor from './RepositoryEditor';\nimport RepositoryNavigation from './RepositoryNavigation';\nimport BranchNavigation from './BranchNavigation';\nimport Sandbox from './Sandbox.js';\nimport store from '../redux/store';\nimport './App.scss';\n\nconst REPO_REGEX = '/repos/:repo([^/]+/[^/]+)';\nconst App = () => (\n  <Provider key=\"home-provider\" store={store}>\n    <ThemeProvider />\n  </Provider>\n);\n\nfunction mapStateToProps(state) {\n  const { theme } = state;\n  return { theme };\n}\n\nconst ThemeProvider = connect(mapStateToProps)(({ theme }) => (\n  <MuiThemeProvider theme={createMuiTheme(theme)}>\n    <CssBaseline />\n    <ResponsiveContainer children={[HomeRouter()]} />\n  </MuiThemeProvider>\n));\n\nconst HomeRouter = () => (\n  <Provider key=\"home-provider\" store={store}>\n    <Router key=\"home-router\">\n      <>\n        <Route component={MusicMarkdownNavbar} />\n        <Switch>\n          <Route exact path=\"/\" component={Navigation} />\n          <Route path={`${REPO_REGEX}/viewer/:branch/:path+`} component={MarkdownMusicSourceFetcher} />\n          <Route path={`${REPO_REGEX}/browser/:branch/:path*`} component={RepositoryNavigation} />\n          {/* TODO: Add editor component */}\n          <Route path={`${REPO_REGEX}/editor/:branch/:path+`} component={Sandbox} />\n          <Route path={REPO_REGEX} component={BranchNavigation} />\n          <Route path='/repos' component={RepositoryEditor} />\n          <Route path='/sandbox' component={Sandbox} />\n        </Switch>\n      </>\n    </Router>\n  </Provider>\n);\n\nconst Navigation = () => (\n  <Typography variant='h2'>\n    Welcome to Music Markdown!\n  </Typography>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}