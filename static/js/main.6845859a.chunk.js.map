{"version":3,"sources":["registerServiceWorker.js","components/MarkdownItRender.js","components/MusicMarkdownNavbar.js","components/ResponsiveContainer.js","components/Sandbox.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","history","createBrowserHistory","MarkdownMusic","_React$Component","props","_this","Object","classCallCheck","this","musicOpts","transpose","possibleConstructorReturn","getPrototypeOf","call","md","MarkdownIt","use","MarkdownItMusic","inherits","createClass","key","value","setTranspose","react_default","a","createElement","dangerouslySetInnerHTML","__html","render","source","React","Component","MarkdownMusicSourceFetcher","_this2","arrowUpKeyCode","arrowDownKeyCode","queryParams","queryString","parse","search","isLoaded","markdown","parseInt","repos","path","handleKeyUpEvent","bind","assertThisInitialized","_this3","owner","params","repo","fetch","concat","response","json","setState","atob","content","event","keyCode","push","pathname","stringify","_this$state","className","tabIndex","onKeyUp","MarkdownItRender_MarkdownMusic","MusicMarkdownNavbar","repoList","createNavbar","Navbar_default","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","Nav_default","NavDropdown_default","title","Item","Divider","getRepositoriesDropdownItems","Link","repoDropdownItems","forEach","repoId","itemHref","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","Container_default","components_MusicMarkdownNavbar","children","MarkdownEditor","handleChange","target","editorStyles","minHeight","width","marginRight","fontFamily","whiteSpace","style","display","onChange","AllChords","Array","from","guitarChordLibrary","keys","map","chord","index","align","get","renderChordDiagram","Sandbox","Sandbox_MarkdownEditor","Sandbox_AllChords","HomeRouter","HashRouter","Route","exact","component","Navigation","to","App","components_ResponsiveContainer","ReactDOM","src_components_App","document","getElementById","URL","process","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6845859a.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { createBrowserHistory } from 'history';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\nimport queryString from 'query-string';\n\nconst history = createBrowserHistory();\n\nexport class MarkdownMusic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const musicOpts = {\n      transpose: this.props.transpose\n    };\n\n    this.md = new MarkdownIt()\n      .use(MarkdownItMusic, musicOpts);\n  }\n\n  render() {\n    this.md.setTranspose(this.props.transpose);\n    return (\n      <span dangerouslySetInnerHTML={{ __html: this.md.render(this.props.source) }} />\n    );\n  }\n}\n\n// TODO: Decouple retrieval of source markdown and controlling arguments to MarkdownMusic.\n// https://github.com/music-markdown/music-markdown/pull/25#discussion_r259598474\nclass MarkdownMusicSourceFetcher extends React.Component {\n  arrowUpKeyCode = 38;\n  arrowDownKeyCode = 40;\n\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n      transpose: parseInt(this.queryParams.transpose, 10) || 0,\n      repos: this.queryParams.repos,\n      path: this.queryParams.path,\n    };\n\n    this.handleKeyUpEvent = this.handleKeyUpEvent.bind(this);\n  }\n\n  componentDidMount() {\n    const owner = this.props.match.params.owner;\n    const repo = this.props.match.params.repo;\n    const path = this.props.match.params.path;\n\n    fetch(`https://api.github.com/repos/${owner}/${repo}/contents/${path}`)\n      .then((response) => response.json())\n      .then(\n        (json) => {\n          this.setState({\n            isLoaded: true,\n            markdown: atob(json.content),\n          });\n        }\n      );\n  }\n\n  handleKeyUpEvent(event) {\n    if (event.keyCode === this.arrowUpKeyCode) {\n      this.setState({\n        transpose: this.state.transpose + 1\n      });\n    } else if (event.keyCode === this.arrowDownKeyCode) {\n      this.setState({\n        transpose: this.state.transpose - 1\n      });\n    }\n\n    this.queryParams.transpose = this.state.transpose + 1;\n    history.push(`#${this.props.location.pathname}?${queryString.stringify(this.queryParams)}`);\n  }\n\n  // TODO: Separate the UI component with the fetch logic, we don't necessarily need the fetcher\n  // to be a React Component\n  render() {\n    const { isLoaded, markdown, transpose } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"Markdown\" tabIndex=\"0\" onKeyUp={this.handleKeyUpEvent}>\n          <MarkdownMusic source={markdown} transpose={transpose} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default MarkdownMusicSourceFetcher;\n","import Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport React from 'react';\n\nclass MusicMarkdownNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.repoList = [{\n      'owner': 'music-markdown',\n      'repo': 'almost-in-time',\n      'path': '/'\n    }];\n  }\n\n  render() {\n    return this.createNavbar();\n  }\n\n  createNavbar() {\n    const darkLightThemeFlag = 'dark';\n    return (\n      <Navbar bg={darkLightThemeFlag} expand=\"lg\" variant={darkLightThemeFlag} key=\"test\">\n        <Navbar.Brand href=\"/\">Music Markdown</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav className=\"mr-auto\">\n            <NavDropdown title=\"Music Repositories\">\n              {/* TODO: Build edit repo functionality */}\n              <NavDropdown.Item><b>Edit Repositories</b></NavDropdown.Item>\n              <NavDropdown.Divider />\n              {this.getRepositoriesDropdownItems()}\n            </NavDropdown>\n            <Nav.Link href=\"#/sandbox\">Sandbox (Beta)</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n\n  /**\n   * For all added repositories, add it to the dropdown list\n   */\n  // TODO: List first x items, then put in dropdown item to expand full list\n  getRepositoriesDropdownItems() {\n    const repoDropdownItems = [];\n    this.repoList.forEach(function(repo) {\n      const repoId = `${repo.owner}/${repo.repo}${repo.path}`;\n      // TODO: List valid files after clicking on repo name\n      const itemHref = `/repos/${repo.owner}/${repo.repo}/contents${repo.path}`;\n      repoDropdownItems.push(\n        <NavDropdown.Item href={itemHref} key={`dropdown-item-${repoId}`}>\n          {repoId}\n        </NavDropdown.Item>);\n    });\n    return repoDropdownItems;\n  }\n}\n\nexport default MusicMarkdownNavbar;\n","import Container from '../../node_modules/react-bootstrap/Container.js';\nimport React from 'react';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar.js';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Container key={RESPONSIVE_CONTAINER_KEY}>\n      <MusicMarkdownNavbar />\n      {props.children}\n    </Container>\n  );\n}\n\nexport default ResponsiveContainer;\n","import React from 'react';\nimport { MarkdownMusic } from './MarkdownItRender.js';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport { guitarChordLibrary } from 'markdown-it-music/renderers/chord_library';\n\nconst Sandbox = () => (\n  <div>\n    <h1>Music Markdown Sandbox</h1>\n    <p>\n      This page exercises various subcomponents of music-markdown and\n      markdown-it-music.\n    </p>\n\n    <h2>Markdown Editor</h2>\n    <MarkdownEditor/>\n\n    <h2>Chord Diagram Renderer</h2>\n    <p>\n      This section exercises the Chord Diagram Renderer.\n    </p>\n    <h3>Esus4 (200x200)</h3>\n    <div dangerouslySetInnerHTML={\n      { __html: renderChordDiagram('o2 m1 m2 n3,2 n4,4 b5,6,5', 200, 200) }\n    } />\n\n    <h2>Entire Chord Library</h2>\n    <AllChords/>\n  </div>\n);\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const value = '```chords\\n' +\n      'c1:                    Am     G  F          G      Esus4  E\\n' +\n      'v1: All the leaves are brown        and the sky is gray\\n\\n' +\n      'c1: F               C     E  Am       F        Esus4  E\\n' +\n      'v1: I\\'ve been for a walk         on a winter\\'s day\\n\\n' +\n      'c1:                 Am    G  F       G      Esus4  E\\n' +\n      'v1: I\\'d be safe and warm        if I was in L.A.\\n\\n' +\n      'c1:            Am        G  F     G               Esus4  E\\n' +\n      'v1: California dreamin\\'        on such a winter\\'s day\\n' +\n      '```';\n\n    this.state = {\n      value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const styles = { display: 'flex', width: '100%' };\n    const editorStyles = {\n      minHeight: '500px', width: '50%', marginRight: '20px',\n      fontFamily: 'monospace', whiteSpace: 'pre'\n    };\n\n    return <div style={styles}>\n      <textarea value={this.state.value} onChange={this.handleChange} style={editorStyles}></textarea>\n      <div style={editorStyles}>\n        <MarkdownMusic source={this.state.value}></MarkdownMusic>\n      </div>\n    </div>;\n  }\n}\n\nconst AllChords = () => (\n  Array.from(guitarChordLibrary.keys()).map((chord, index) => (\n    <div key={index} align=\"center\" style={{ display: 'inline-block' }}>\n      {guitarChordLibrary.get(chord).map((value, index) => (\n        <span key={index} dangerouslySetInnerHTML={\n          { __html: renderChordDiagram(value) }\n        } />\n      ))}\n      <h5>{chord}</h5>\n    </div>\n  ))\n);\n\nexport default Sandbox;\n","import React from 'react';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport MarkdownMusicSourceFetcher from './MarkdownItRender.js';\nimport ResponsiveContainer from './ResponsiveContainer.js';\nimport Sandbox from './Sandbox.js';\nimport './App.scss';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => (\n  <ResponsiveContainer children={[HomeRouter()]} />\n);\n\nconst HomeRouter = () => (\n  <Router key=\"home-router\">\n    <div>\n      <Route exact path=\"/\" component={Navigation} />\n      <Route path=\"/sandbox\" component={Sandbox} />\n      <Route path=\"/repos/:owner/:repo/contents/:path\" component={MarkdownMusicSourceFetcher} />\n    </div>\n  </Router>\n);\n\nconst Navigation = () => (\n  <div>\n    <Link to=\"/repos/music-markdown/almost-in-time/contents/California Dreamin' - The Mamas and the Papas.md\">\n      California Dreamin\n    </Link>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}