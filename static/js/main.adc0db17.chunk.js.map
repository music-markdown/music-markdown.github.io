{"version":3,"sources":["registerServiceWorker.js","components/YouTube.js","components/MarkdownMusic.js","redux/actions.js","components/Toolbar.js","redux/actionTypes.js","lib/constants.js","lib/github.js","components/MarkdownMusicSourceFetcher.js","components/MusicMarkdownNavbar.js","components/ResponsiveContainer.js","components/NavigationListItem.js","components/RouterBreadcrumbs.js","components/RepositoryNavigation.js","components/BranchNavigation.js","components/Sandbox.js","redux/reducers/updateColumnCount.js","redux/reducers/updateFontSize.js","redux/reducers/transpose.js","redux/reducers/index.js","redux/store.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","YouTubePlayer","_ref","youTubeId","react_default","a","createElement","className","title","src","concat","allow","allowFullScreen","YouTubeToggle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","visible","handleToggle","bind","assertThisInitialized","setState","index_es","icon","faYoutube","size","onClick","YouTube_YouTubePlayer","React","Component","MarkdownMusicRender","md","MarkdownIt","use","MarkdownItMusic","setTranspose","transposeAmount","setColumnCount","columnCount","setFontSize","fontSize","setMaxWidth","width","html","render","source","YouTube_YouTubeToggle","meta","dangerouslySetInnerHTML","__html","ConnectMarkdownMusicRender","connect","MarkdownMusic","lib_default","Toolbar","handleTransposeClick","handleColumnClick","handleFontClick","increase","decrease","event","transpose","target","textContent","updateColumnCount","updateFontSize","ButtonToolbar_default","ButtonGroup_default","Button_default","variant","undefined","isIncreaseTransposeAmount","type","payload","isIncreaseColumnCount","isIncreaseFontSize","REPOS_LOCAL_STORAGE_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","GITHUB_API_URL","getContents","_x","_x2","_x3","_x4","_getContents","apply","arguments","_callee","owner","repo","path","branch","apiUrl","response","regenerator_default","wrap","_context","prev","next","length","getApiUrl","fetch","sent","abrupt","json","stop","getRepositories","repoListStr","localStorage","getItem","JSON","parse","getBranches","_x5","_x6","_getBranches","_callee2","_context2","url","URL","githubToken","searchParams","set","MarkdownMusicSourceFetcher","queryParams","queryString","search","parseInt","isLoaded","markdown","params","atob","content","_this$state","components_Toolbar","components_MarkdownMusic","newTransposeAmount","newColumnCount","newFontSize","RepositoriesNavDropdown","open","handleClick","handleClose","_this2","repoDropdownItems","repoList","reactRouterHoverInherit","classes","forEach","repoId","push","MenuItem_default","component","NavLink","to","key","Fragment","core_Button_default","buttonRef","node","anchorEl","Menu_default","id","onClose","withStyles","theme","repoMap","storedRepos","setItem","stringify","addRepository","AppBar_default","position","Toolbar_default","Link","Typography_default","MusicMarkdownNavbar_RepositoriesNavDropdown","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","Grid_default","children","NavigationListItem","itemName","ListItem_default","button","ListItemText_default","primary","paper","padding","spacing","unit","pathname","breadcrumbItems","previousPath","ignoreIndex","currDir","i","directory","indexOf","color","Link_default","RouterLink","buildBreadcrumb","split","filter","value","Paper_default","Breadcrumbs_default","RepositoryNavigation","contents","prevProps","prevOwner","prevRepo","prevPath","prevBranch","message","listGroupItems","item","name","_this2$props$match$pa","viewType","itemJsx","linkToContent","Divider_default","components_NavigationListItem","action","components_RouterBreadcrumbs","List_default","BranchNavigation","branches","MarkdownEditor","handleChange","editorStyles","minHeight","marginRight","fontFamily","whiteSpace","style","display","onChange","AllChords","Array","from","guitarChordLibrary","keys","map","chord","index","align","get","renderChordDiagram","Sandbox","Sandbox_MarkdownEditor","parseVoicing","Sandbox_AllChords","combineReducers","store","createStore","rootReducer","createMuiTheme","typography","useNextVariants","palette","&:hover","HomeRouter","es","HashRouter","Route","MusicMarkdownNavbar","exact","Navigation","excat","App","MuiThemeProvider_default","CssBaseline_default","components_ResponsiveContainer","ReactDOM","src_components_App","document","getElementById","process","origin","addEventListener","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.adc0db17.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\n\nconst YouTubePlayer = ({ youTubeId }) => (\n  <div className=\"embed-responsive embed-responsive-16by9\">\n    <iframe\n      title={youTubeId}\n      className='embed-responsive-item'\n      src={`https://www.youtube.com/embed/${youTubeId}`}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen>\n    </iframe>\n  </div>\n);\n\nclass YouTubeToggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    this.setState((state) => ({\n      visible: !state.visible\n    }));\n  }\n\n  render() {\n    if (!this.props.youTubeId) {\n      return <div></div>;\n    }\n\n    return (\n      <div>\n        <FontAwesomeIcon icon={faYoutube} size='2x' onClick={this.handleToggle} />\n        {this.state.visible ? <YouTubePlayer youTubeId={this.props.youTubeId} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport {\n  YouTubePlayer,\n  YouTubeToggle\n};\n","import ContainerDimensions from 'react-container-dimensions';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\n\nimport { YouTubeToggle } from './YouTube';\n\nclass MarkdownMusicRender extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.md = new MarkdownIt()\n      .use(MarkdownItMusic);\n  }\n\n  render() {\n    this.md.setTranspose(this.props.transposeAmount);\n    this.md.setColumnCount(this.props.columnCount);\n    this.md.setFontSize(this.props.fontSize);\n    this.md.setMaxWidth(this.props.width);\n    const html = this.md.render(this.props.source);\n\n    return (\n      <div>\n        <YouTubeToggle youTubeId={this.md.meta.youTubeId} />\n        <span dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { transposeAmount, columnCount, fontSize } = state;\n  return { transposeAmount, columnCount, fontSize };\n}\n\nconst ConnectMarkdownMusicRender = connect(mapStateToProps)(MarkdownMusicRender);\n\nconst MarkdownMusic = ({ source }) => (\n  <ContainerDimensions>\n    <ConnectMarkdownMusicRender source={source} />\n  </ContainerDimensions>\n);\n\nexport default MarkdownMusic;\n","import {\n  TRANSPOSE,\n  UPDATE_COLUMN_COUNT,\n  UPDATE_FONT_SIZE\n} from './actionTypes';\n\nlet transposeAmount = 0;\nlet columnCount = 1;\nlet fontSize = 13;\n\nexport const transpose = (isIncreaseTransposeAmount) => ({\n  type: TRANSPOSE,\n  payload: {\n    transposeAmount: isIncreaseTransposeAmount ? ++transposeAmount : --transposeAmount\n  }\n});\n\nexport const updateColumnCount = (isIncreaseColumnCount) => ({\n  type: UPDATE_COLUMN_COUNT,\n  payload: {\n    columnCount: isIncreaseColumnCount ? ++columnCount : --columnCount\n  }\n});\n\nexport const updateFontSize = (isIncreaseFontSize) => ({\n  type: UPDATE_FONT_SIZE,\n  payload: {\n    fontSize: isIncreaseFontSize ? ++fontSize : --fontSize\n  }\n});\n\nexport const setTranspose = (newTransposeAmount) => {\n  transposeAmount = newTransposeAmount;\n\n  return {\n    type: TRANSPOSE,\n    payload: {\n      transposeAmount\n    }\n  };\n};\n\nexport const setColumnCount = (newColumnCount) => {\n  columnCount = newColumnCount;\n\n  return {\n    type: UPDATE_COLUMN_COUNT,\n    payload: {\n      columnCount\n    }\n  };\n};\n\nexport const setFontSize = (newFontSize) => {\n  fontSize = newFontSize;\n\n  return {\n    type: UPDATE_FONT_SIZE,\n    payload: {\n      fontSize\n    }\n  };\n};\n","import React from 'react';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\n\nimport { transpose } from '../redux/actions';\nimport { updateColumnCount } from '../redux/actions';\nimport { updateFontSize } from '../redux/actions';\n\nclass Toolbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTransposeClick = this.handleTransposeClick.bind(this);\n    this.handleColumnClick = this.handleColumnClick.bind(this);\n    this.handleFontClick = this.handleFontClick.bind(this);\n\n    this.increase = '+1';\n    this.decrease = '-1';\n  }\n\n  handleTransposeClick(event) {\n    // TODO: Update history with new transposeAmount\n    this.props.transpose(event.target.textContent === this.increase);\n  }\n\n  handleColumnClick(event) {\n    // TODO: Update history with new columnCount\n    this.props.updateColumnCount(event.target.textContent === this.increase);\n  }\n\n  handleFontClick(event) {\n    // TODO: Update history with new fontSize\n    this.props.updateFontSize(event.target.textContent === this.increase);\n  }\n\n  render() {\n    // TODO: Move dark theme to redux store.\n    return (\n      <ButtonToolbar className='border justify-content-center bg-dark'>\n        <span className='padding bg-dark text-light my-auto'>Transpose</span>\n        <ButtonGroup>\n          <Button variant='dark' onClick={this.handleTransposeClick}>{this.decrease}</Button>\n          <Button variant='dark' onClick={this.handleTransposeClick}>{this.increase}</Button>\n        </ButtonGroup>\n        <span className='padding bg-dark text-light my-auto'>Columns</span>\n        <ButtonGroup>\n          <Button variant='dark' onClick={this.handleColumnClick}>{this.decrease}</Button>\n          <Button variant='dark' onClick={this.handleColumnClick}>{this.increase}</Button>\n        </ButtonGroup>\n        <span className='padding bg-dark text-light my-auto'>Font Size</span>\n        <ButtonGroup>\n          <Button variant='dark' onClick={this.handleFontClick}>{this.decrease}</Button>\n          <Button variant='dark' onClick={this.handleFontClick}>{this.increase}</Button>\n        </ButtonGroup>\n      </ButtonToolbar>\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  { transpose, updateColumnCount, updateFontSize }\n)(Toolbar);\n","export const TRANSPOSE = 'TRANSPOSE';\nexport const UPDATE_COLUMN_COUNT = 'UPDATE_COLUMN_COUNT';\nexport const UPDATE_FONT_SIZE = 'UPDATE_FONT_SIZE';\n","/* Local Storage */\n\n/** Key namespace for music-markdown when storing app specific values in localStorage */\nexport const MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE = 'music-markdown';\n/** Key for markdown-music repositories specific localStorage values*/\nexport const REPOS_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:repositories`;\nexport const GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:github_token`;\nexport const GITHUB_API_URL = 'https://api.github.com';\n","import { REPOS_LOCAL_STORAGE_KEY, GITHUB_TOKEN_LOCAL_STORAGE_KEY, GITHUB_API_URL } from './constants';\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n * @param {string} path The directory or file to retrieve\n * @param {string} branch The branch to retrive contents from\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(owner, repo, path, branch) {\n  if (path === undefined || path.length === 0) {\n    path = '';\n  }\n  const apiUrl = getApiUrl(`/repos/${owner}/${repo}/contents/${path}`, branch);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\n/**\n * Returns a promise of a list of branches for the given repository.\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n */\nexport async function getBranches(owner, repo) {\n  const apiUrl = getApiUrl(`/repos/${owner}/${repo}/branches`);\n  const response = await fetch(apiUrl);\n\n  return response.json();\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} owner Repo owner\n * @param {string} repo Repo name\n * @param {string} path Subdirectory\n * @param {string} branch Branch name\n */\nexport function addRepository(owner, repo, path, branch) {\n  const repoMap = { owner, repo, path, branch };\n  const storedRepos = getRepositories();\n  const repoList = storedRepos.length > 0 ? storedRepos : [];\n  repoList.push(repoMap);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repoList));\n}\n\n/**\n * Composes the GitHub API url for the given url, attaching the user's GitHub\n * access token if it exists.\n * @param {string} url The path and search params\n * @param {string} branch The branch to get from\n * @return {URL} Composed GitHub API url with user's personal access token\n */\nexport function getApiUrl(url, branch) {\n  url = new URL(url, GITHUB_API_URL);\n\n  const githubToken = localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    url.searchParams.set('access_token', githubToken);\n  }\n\n  if (branch) {\n    url.searchParams.set('ref', branch);\n  }\n\n  return url;\n}\n","import React from 'react';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\n\nimport MarkdownMusic from './MarkdownMusic';\nimport Toolbar from './Toolbar';\nimport { getContents } from '../lib/github';\nimport { setTranspose, setColumnCount, setFontSize } from '../redux/actions';\n\n// TODO: Decouple retrieval of source markdown and controlling arguments to MarkdownMusic.\n// https://github.com/music-markdown/music-markdown/pull/25#discussion_r259598474\nclass MarkdownMusicSourceFetcher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.props.setTranspose(parseInt(this.queryParams.transpose, 10) || 0);\n    this.props.setColumnCount(parseInt(this.queryParams.columnCount, 10) || 1);\n    this.props.setFontSize(parseInt(this.queryParams.fontSize, 10) || 13);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n    };\n  }\n\n  async componentDidMount() {\n    const { owner, repo, path } = this.props.match.params;\n\n    const json = await getContents(owner, repo, path);\n    this.setState({\n      isLoaded: true,\n      markdown: atob(json.content)\n    });\n  }\n\n  // TODO: Separate the UI component with the fetch logic, we don't necessarily need the fetcher\n  // to be a React Component\n  render() {\n    const { isLoaded, markdown } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"Markdown\">\n          <Toolbar></Toolbar>\n          <MarkdownMusic source={markdown} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(\n  undefined,\n  { setTranspose, setColumnCount, setFontSize }\n)(MarkdownMusicSourceFetcher);\n","import AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { getRepositories, addRepository } from '../lib/github';\nimport { REPOS_LOCAL_STORAGE_KEY } from '../lib/constants';\n\nconst styles = (theme) => ({\n  reactRouterHoverInherit: theme.reactRouterHoverInherit\n});\n\nconst MusicMarkdownNavbar = (props) => {\n  const { classes } = props;\n\n  if (!localStorage.getItem(REPOS_LOCAL_STORAGE_KEY)) {\n    // TODO: sanitize this input when storing\n    addRepository('music-markdown', 'almost-in-time', '/', 'master');\n  }\n\n  return (\n    <AppBar position={'sticky'} key='top-navbar'>\n      <Toolbar>\n        <Button className={classes.reactRouterHoverInherit} component={Link} to='/'>\n          <Typography variant='h6'>\n            Music Markdown\n          </Typography>\n        </Button>\n        <RepositoriesNavDropdown {...props} />\n        <Button className={classes.reactRouterHoverInherit} component={NavLink} to='/sandbox'>\n          Sandbox\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\n/**\n * For all added repositories, add it to the dropdown list\n */\n// TODO: List first x items, then put in dropdown item to expand full list\nclass RepositoriesNavDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick() {\n    this.setState((state) => ({\n      open: !state.open\n    }));\n  }\n\n  handleClose() {\n    this.setState(() => ({\n      open: false\n    }));\n  }\n\n  render() {\n    const repoDropdownItems = [];\n    const repoList = getRepositories();\n\n    if (repoList.length > 0) {\n      const { reactRouterHoverInherit } = this.props.classes;\n\n      repoList.forEach((repo) => {\n        const repoId = `${repo.owner}/${repo.repo}/${repo.branch}${repo.path}`;\n        repoDropdownItems.push(\n          <MenuItem component={NavLink}\n            to={`/repos/${repo.owner}/${repo.repo}/browser/${repo.branch}${repo.path}`}\n            key={`dropdown-item-${repoId}`}\n            onClick={this.handleClose}\n            className={reactRouterHoverInherit}>\n            {repoId}\n          </MenuItem>);\n      });\n    }\n\n    const { open } = this.state;\n\n    return (\n      <>\n        <Button onClick={this.handleClick} buttonRef={(node) => {\n          this.anchorEl = node;\n        }}>\n          Music Repositories\n        </Button>\n\n        <Menu id='dropdown-menu' anchorEl={this.anchorEl} open={open} onClose={this.handleClose}>\n          {repoDropdownItems}\n        </Menu>\n      </>\n    );\n  }\n};\n\nexport default withStyles(styles)(MusicMarkdownNavbar);\n","import Grid from '@material-ui/core/Grid';\nimport React from 'react';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Grid key={RESPONSIVE_CONTAINER_KEY}>\n      {props.children}\n    </Grid>\n  );\n}\n\nexport default ResponsiveContainer;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\n\nconst NavigationListItem = ({ to, itemName }) => (\n  <ListItem button component={Link} to={to}>\n    <ListItemText primary={itemName}></ListItemText>\n  </ListItem>\n);\n\nexport default NavigationListItem;\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/lab/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst styles = (theme) => ({\n  paper: {\n    padding: `${theme.spacing.unit}px`,\n  },\n  reactRouterHoverInherit: theme.reactRouterHoverInherit\n});\n\nfunction buildBreadcrumb(previousPath, classes) {\n  const breadcrumbItems = [];\n\n  // ignoreIndex matches the Route defined in App.js.\n  // Certain portions are not useful to user in the breadcrumb, so we remove them.\n  const ignoreIndex = [0/* /repos */, 3/* /:viewName(browser|viewer|editor) */];\n  const keyBase = 'breadcrumb-item-';\n\n  let currDir = '';\n  for (let i = 0; i < previousPath.length; i++) {\n    const directory = previousPath[i];\n    currDir = currDir.concat('/', directory);\n\n    if (ignoreIndex.indexOf(i) !== -1) {\n      continue;\n    }\n\n    if (i === previousPath.length - 1) {\n      // Last item should be active\n      breadcrumbItems.push(\n        <Typography color=\"textPrimary\" key={`${keyBase}${i}`}>\n          {directory}\n        </Typography>\n      );\n    } else {\n      breadcrumbItems.push(\n        <Link\n          component={RouterLink}\n          to={`${currDir}/`}\n          key={`${keyBase}${i}`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          {directory}\n        </Link>\n      );\n    }\n  };\n\n  return breadcrumbItems;\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {string} pathname current URI pathname\n * @return {Array} List of BreadcrumbItems\n */\nconst RouterBreadcrumbs = ({ pathname, classes }) => {\n  const keyBase = 'breadcrumb-item-';\n\n  const subDirectoriesArr = pathname.split('/').filter((value) => !!value);\n\n  const breadcrumbItems = buildBreadcrumb(subDirectoriesArr, classes);\n\n  return (\n    <Paper className={classes.paper}>\n      <Breadcrumbs>\n        <Link\n          component={RouterLink}\n          to={`/`}\n          key={`${keyBase}Home`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          Home\n        </Link>\n        {breadcrumbItems}\n      </Breadcrumbs>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(RouterBreadcrumbs);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationListItem from './NavigationListItem';\nimport RouterBreadcrumbs from './RouterBreadcrumbs';\nimport { getContents } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass RepositoryNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      contents: []\n    };\n  }\n\n  async componentDidMount() {\n    const { owner, repo, path, branch } = this.props.match.params;\n\n    const contents = await getContents(owner, repo, path, branch);\n    this.setState({\n      isLoaded: true,\n      contents\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Props before update\n   */\n  async componentDidUpdate(prevProps) {\n    const { owner: prevOwner, repo: prevRepo, path: prevPath, branch: prevBranch } = prevProps.match.params;\n    const { owner, repo, path, branch } = this.props.match.params;\n\n    if (prevOwner !== owner || prevRepo !== repo || prevPath !== path || prevBranch !== branch) {\n      const contents = await getContents(owner, repo, path, branch);\n      this.setState({\n        isLoaded: true,\n        contents\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded, contents } = this.state;\n    if (!isLoaded) {\n      return <div className=\"Markdown\">Loading...</div>;\n    }\n\n    if (!contents.forEach) {\n      return <div>{contents.message}</div>;\n    }\n\n    const listGroupItems = [];\n\n    contents.forEach((item) => {\n      const key = `list-group-item-${item.name}`;\n\n      const { owner, repo, branch } = this.props.match.params;\n\n      let viewType = 'error';\n      let itemJsx = <div>File type {item.type} not supported</div>;\n\n      if (item.type === 'dir') {\n        viewType = 'browser';\n        itemJsx = <i>{`/${item.name}`}</i>;\n      } else if (item.type === 'file') {\n        viewType = 'viewer';\n        itemJsx = item.name;\n      }\n\n      const linkToContent = `/repos/${owner}/${repo}/${viewType}/${branch}/${item.path}`;\n\n      listGroupItems.push(<Divider key={`navigation-divider-${item.name}`}/>);\n      listGroupItems.push(<NavigationListItem to={linkToContent} key={key} action itemName={itemJsx} />);\n    });\n\n    return (\n      <>\n        <Typography variant='h3'>\n          Repository Contents\n        </Typography>\n        <RouterBreadcrumbs pathname={this.props.location.pathname} />\n        <List key={'repo-navigation-list'}>\n          {listGroupItems}\n          <Divider key={'end-of-list-divider'}/>\n        </List>\n      </>\n    );\n  }\n}\n\nexport default RepositoryNavigation;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationListItem from './NavigationListItem';\nimport RouterBreadcrumbs from './RouterBreadcrumbs';\nimport { getBranches } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass BranchNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      branches: []\n    };\n  }\n\n  /**\n   * When component first initializes, execute following lifecycle actions\n   */\n  async componentDidMount() {\n    const { owner, repo } = this.props.match.params;\n\n    const branches = await getBranches(owner, repo);\n    this.setState({\n      isLoaded: true,\n      branches\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Updated query string\n   */\n  async componentDidUpdate(prevProps) {\n    const { owner: prevOwner, repo: prevRepo } = prevProps.match.params;\n    const { owner, repo } = this.props.match.params;\n\n    if (prevOwner !== owner || prevRepo !== repo) {\n      const branches = await getBranches(owner, repo);\n      this.setState({\n        isLoaded: true,\n        branches\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      const listGroupItems = [];\n      const { branches } = this.state;\n\n      if (!branches.forEach) {\n        return <div>{branches.message}</div>;\n      }\n\n      branches.forEach((item) => {\n        const key = `list-group-item-${item.name}`;\n\n        const { owner, repo } = this.props.match.params;\n\n        const linkToContent = `/repos/${owner}/${repo}/browser/${item.name}`;\n\n        listGroupItems.push(<Divider key={`navigation-divider-${item.name}`}/>);\n        listGroupItems.push(<NavigationListItem to={linkToContent} key={key} itemName={item.name} action />);\n      });\n\n      return (\n        <>\n          <Typography variant='h3'>\n            Branches\n          </Typography>\n          <RouterBreadcrumbs pathname={this.props.location.pathname} />\n          <List>\n            {listGroupItems}\n            <Divider />\n          </List>\n        </>\n      );\n    }\n  }\n}\n\nexport default BranchNavigation;\n","import React from 'react';\nimport MarkdownMusic from './MarkdownMusic';\nimport { parseVoicing } from 'markdown-it-music/lib/voicing';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport { guitarChordLibrary } from 'markdown-it-music/renderers/chord_library';\nimport Toolbar from './Toolbar';\n\nconst Sandbox = () => (\n  <div>\n    <Toolbar></Toolbar>\n\n    <h1>Music Markdown Sandbox</h1>\n    <p>\n      This page exercises various subcomponents of music-markdown and\n      markdown-it-music.\n    </p>\n\n    <h2>Markdown Editor</h2>\n    <MarkdownEditor/>\n\n    <h2>Chord Diagram Renderer</h2>\n    <p>\n      This section exercises the Chord Diagram Renderer.\n    </p>\n    <h3>Esus4 (200x200)</h3>\n    <div dangerouslySetInnerHTML={\n      { __html: renderChordDiagram(parseVoicing('o2 m1 m2 n3,2 n4,4 b5,6,5'), 200, 200) }\n    } />\n\n    <h2>Entire Chord Library</h2>\n    <AllChords/>\n  </div>\n);\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const value = '```chords\\n' +\n      'c1:                    Am     G  F          G      Esus4  E\\n' +\n      'v1: All the leaves are brown        and the sky is gray\\n\\n' +\n      'c1: F               C     E  Am       F        Esus4  E\\n' +\n      'v1: I\\'ve been for a walk         on a winter\\'s day\\n\\n' +\n      'c1:                 Am    G  F       G      Esus4  E\\n' +\n      'v1: I\\'d be safe and warm        if I was in L.A.\\n\\n' +\n      'c1:            Am        G  F     G               Esus4  E\\n' +\n      'v1: California dreamin\\'        on such a winter\\'s day\\n' +\n      '```';\n\n    this.state = {\n      value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const styles = { display: 'flex', width: '100%' };\n    const editorStyles = {\n      minHeight: '500px', width: '50%', marginRight: '20px',\n      fontFamily: 'monospace', whiteSpace: 'pre'\n    };\n\n    return <div style={styles}>\n      <textarea value={this.state.value} onChange={this.handleChange} style={editorStyles}></textarea>\n      <div style={editorStyles}>\n        <MarkdownMusic source={this.state.value}></MarkdownMusic>\n      </div>\n    </div>;\n  }\n}\n\nconst AllChords = () => (\n  Array.from(guitarChordLibrary.keys()).map((chord, index) => (\n    <div key={index} align=\"center\" style={{ display: 'inline-block' }}>\n      {guitarChordLibrary.get(chord).map((value, index) => (\n        <span key={index} dangerouslySetInnerHTML={\n          { __html: renderChordDiagram(value) }\n        } />\n      ))}\n      <h5>{chord}</h5>\n    </div>\n  ))\n);\n\nexport default Sandbox;\n","import { UPDATE_COLUMN_COUNT } from '../actionTypes';\n\nconst columnCount = (state = 1, action) => {\n  switch (action.type) {\n  case UPDATE_COLUMN_COUNT: {\n    return action.payload.columnCount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default columnCount;\n","import { UPDATE_FONT_SIZE } from '../actionTypes';\n\nconst fontSize = (state = 13, action) => {\n  switch (action.type) {\n  case UPDATE_FONT_SIZE: {\n    return action.payload.fontSize;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default fontSize;\n","import { TRANSPOSE } from '../actionTypes';\n\nconst transposeAmount = (state = 0, action) => {\n  switch (action.type) {\n  case TRANSPOSE: {\n    return action.payload.transposeAmount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default transposeAmount;\n","import { combineReducers } from 'redux';\nimport columnCount from './updateColumnCount';\nimport fontSize from './updateFontSize';\nimport transposeAmount from './transpose';\n\nexport default combineReducers({ transposeAmount, columnCount, fontSize });\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nlet store = undefined;\nif (process.env.NODE_ENV === 'production') {\n  store = createStore(rootReducer);\n} else {\n  store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nexport default store;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nimport MarkdownMusicSourceFetcher from './MarkdownMusicSourceFetcher';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar';\nimport ResponsiveContainer from './ResponsiveContainer';\nimport RepositoryNavigation from './RepositoryNavigation';\nimport BranchNavigation from './BranchNavigation';\nimport Sandbox from './Sandbox.js';\nimport store from '../redux/store';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// TODO: Build button toggle for dark/light\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    type: 'light',\n  },\n  reactRouterHoverInherit: {\n    '&:hover': {\n      color: 'inherit'\n    },\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <ResponsiveContainer children={[HomeRouter()]} />\n  </MuiThemeProvider>\n);\n\nconst HomeRouter = () => (\n  <Provider key=\"home-provider\" store={store}>\n    <Router key=\"home-router\">\n      <div>\n        <Route component={MusicMarkdownNavbar} />\n        <Route exact path=\"/\" component={Navigation} />\n        <Route excat path='/sandbox' component={Sandbox} />\n        <Route exact path='/repos/:owner/:repo' component={BranchNavigation} />\n        <Route exact path='/repos/:owner/:repo/:view(viewer)/:branch/:path+' component={MarkdownMusicSourceFetcher} />\n        <Route exact path='/repos/:owner/:repo/:view(browser)/:branch/:path*' component={RepositoryNavigation} />\n        {/* TODO: Add editor component */}\n        <Route exact path='/repos/:owner/:repo/:view(editor)/:branch/:path+' component={Sandbox} />\n      </div>\n    </Router>\n  </Provider>\n);\n\nconst Navigation = () => (\n  <Typography variant='h2'>\n    Welcome to Music Markdown!\n  </Typography>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}