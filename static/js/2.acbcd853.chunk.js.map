{"version":3,"sources":["../node_modules/prop-types/index.js","../node_modules/react/index.js","../node_modules/markdown-it/lib/common/utils.js","../node_modules/history/node_modules/warning/browser.js","../node_modules/abcjs/src/parse/abc_common.js","../node_modules/invariant/browser.js","../node_modules/abcjs/src/write/abc_spacing.js","../node_modules/warning/warning.js","../node_modules/abcjs/src/write/abc_relative_element.js","../node_modules/abcjs/src/write/abc_glyphs.js","../node_modules/abcjs/src/write/abc_absolute_element.js","../node_modules/resolve-pathname/index.js","../node_modules/value-equal/index.js","../node_modules/history/es/PathUtils.js","../node_modules/history/es/LocationUtils.js","../node_modules/history/es/createTransitionManager.js","../node_modules/history/es/DOMUtils.js","../node_modules/history/es/createBrowserHistory.js","../node_modules/history/es/createHashHistory.js","../node_modules/history/es/createMemoryHistory.js","../node_modules/history/es/index.js","../node_modules/abcjs/src/write/sprintf.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/uc.micro/categories/P/regex.js","../node_modules/markdown-it/lib/ruler.js","../node_modules/markdown-it/lib/token.js","../node_modules/abcjs/src/api/abc_tunebook.js","../node_modules/abcjs/src/parse/abc_parse.js","../node_modules/abcjs/src/parse/abc_parse_directive.js","../node_modules/abcjs/src/parse/abc_parse_key_voice.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/query-string/index.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/object-assign/index.js","../node_modules/webpack/buildin/global.js","../node_modules/markdown-it/lib/common/entities.js","../node_modules/mdurl/index.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/markdown-it/lib/common/html_re.js","../node_modules/markdown-it/lib/rules_inline/strikethrough.js","../node_modules/markdown-it/lib/rules_inline/emphasis.js","../node_modules/webpack/buildin/module.js","../node_modules/abcjs/src/api/abc_timing_callbacks.js","../node_modules/abcjs/src/parse/abc_transpose.js","../node_modules/abcjs/src/parse/wrap_lines.js","../node_modules/abcjs/src/write/abc_engraver_controller.js","../node_modules/abcjs/src/write/abc_tie_element.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/inheritsLoose.js","../node_modules/react-dom/index.js","../node_modules/markdown-it/index.js","../node_modules/markdown-it-music/index.js","../node_modules/react-bootstrap/Container.js","../node_modules/react-router/node_modules/path-to-regexp/index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/markdown-it/lib/index.js","../node_modules/mdurl/encode.js","../node_modules/mdurl/decode.js","../node_modules/mdurl/format.js","../node_modules/mdurl/parse.js","../node_modules/uc.micro/index.js","../node_modules/uc.micro/categories/Cf/regex.js","../node_modules/markdown-it/lib/helpers/index.js","../node_modules/markdown-it/lib/helpers/parse_link_label.js","../node_modules/markdown-it/lib/helpers/parse_link_destination.js","../node_modules/markdown-it/lib/helpers/parse_link_title.js","../node_modules/markdown-it/lib/renderer.js","../node_modules/markdown-it/lib/parser_core.js","../node_modules/markdown-it/lib/rules_core/normalize.js","../node_modules/markdown-it/lib/rules_core/block.js","../node_modules/markdown-it/lib/rules_core/inline.js","../node_modules/markdown-it/lib/rules_core/linkify.js","../node_modules/markdown-it/lib/rules_core/replacements.js","../node_modules/markdown-it/lib/rules_core/smartquotes.js","../node_modules/markdown-it/lib/rules_core/state_core.js","../node_modules/markdown-it/lib/parser_block.js","../node_modules/markdown-it/lib/rules_block/table.js","../node_modules/markdown-it/lib/rules_block/code.js","../node_modules/markdown-it/lib/rules_block/fence.js","../node_modules/markdown-it/lib/rules_block/blockquote.js","../node_modules/markdown-it/lib/rules_block/hr.js","../node_modules/markdown-it/lib/rules_block/list.js","../node_modules/markdown-it/lib/rules_block/reference.js","../node_modules/markdown-it/lib/rules_block/heading.js","../node_modules/markdown-it/lib/rules_block/lheading.js","../node_modules/markdown-it/lib/rules_block/html_block.js","../node_modules/markdown-it/lib/common/html_blocks.js","../node_modules/markdown-it/lib/rules_block/paragraph.js","../node_modules/markdown-it/lib/rules_block/state_block.js","../node_modules/markdown-it/lib/parser_inline.js","../node_modules/markdown-it/lib/rules_inline/text.js","../node_modules/markdown-it/lib/rules_inline/newline.js","../node_modules/markdown-it/lib/rules_inline/escape.js","../node_modules/markdown-it/lib/rules_inline/backticks.js","../node_modules/markdown-it/lib/rules_inline/link.js","../node_modules/markdown-it/lib/rules_inline/image.js","../node_modules/markdown-it/lib/rules_inline/autolink.js","../node_modules/markdown-it/lib/rules_inline/html_inline.js","../node_modules/markdown-it/lib/rules_inline/entity.js","../node_modules/markdown-it/lib/rules_inline/balance_pairs.js","../node_modules/markdown-it/lib/rules_inline/text_collapse.js","../node_modules/markdown-it/lib/rules_inline/state_inline.js","../node_modules/linkify-it/index.js","../node_modules/linkify-it/lib/re.js","../node_modules/node-libs-browser/node_modules/punycode/punycode.js","../node_modules/markdown-it/lib/presets/default.js","../node_modules/markdown-it/lib/presets/zero.js","../node_modules/markdown-it/lib/presets/commonmark.js","../node_modules/markdown-it-music/renderers/abc_renderer.js","../node_modules/abcjs/index.js","../node_modules/abcjs/src/api/abc_animation.js","../node_modules/abcjs/src/parse/abc_parse_header.js","../node_modules/abcjs/src/parse/abc_tokenizer.js","../node_modules/abcjs/src/data/abc_tune.js","../node_modules/abcjs/src/api/abc_tunebook_svg.js","../node_modules/abcjs/src/write/abc_abstract_engraver.js","../node_modules/abcjs/src/write/abc_beam_element.js","../node_modules/abcjs/src/write/abc_brace_element.js","../node_modules/abcjs/src/write/abc_create_clef.js","../node_modules/abcjs/src/write/abc_create_key_signature.js","../node_modules/abcjs/src/write/abc_create_time_signature.js","../node_modules/abcjs/src/write/abc_decoration.js","../node_modules/abcjs/src/write/abc_dynamic_decoration.js","../node_modules/abcjs/src/write/abc_crescendo_element.js","../node_modules/abcjs/src/write/abc_ending_element.js","../node_modules/abcjs/src/write/abc_staff_group_element.js","../node_modules/abcjs/src/write/abc_tempo_element.js","../node_modules/abcjs/src/write/abc_triplet_element.js","../node_modules/abcjs/src/write/abc_voice_element.js","../node_modules/abcjs/src/write/abc_renderer.js","../node_modules/abcjs/src/write/svg.js","../node_modules/abcjs/src/edit/abc_editor.js","../node_modules/abcjs/src/transform/abc2abc_write.js","../node_modules/markdown-it-music/renderers/chords_renderer.js","../node_modules/markdown-it-music/parsers/verse.js","../node_modules/markdown-it-music/parsers/chord.js","../node_modules/randomcolor/randomColor.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/strict-uri-encode/index.js","../node_modules/decode-uri-component/index.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/classnames/index.js","../node_modules/react-bootstrap/ThemeProvider.js","../node_modules/react-context-toolbox/forwardRef.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-router/node_modules/isarray/index.js","../node_modules/react-router-dom/es/Link.js","../node_modules/react-router/es/Router.js","../node_modules/react-router-dom/es/Router.js","../node_modules/react-router-dom/es/HashRouter.js","../node_modules/react-router/es/matchPath.js","../node_modules/react-router/es/Route.js","../node_modules/react-router-dom/es/Route.js"],"names":["module","exports","__webpack_require__","_hasOwnProperty","Object","prototype","hasOwnProperty","has","object","key","call","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","RegExp","source","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","&","<",">","\"","replaceUnsafeChar","ch","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","assign","obj","Array","slice","arguments","forEach","TypeError","keys","isString","toString","_class","unescapeMd","str","indexOf","replace","unescapeAll","match","escaped","entity","name","code","charCodeAt","test","toLowerCase","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","src","pos","newElements","concat","isSpace","isWhiteSpace","isMdAsciiPunct","isPunctChar","escapeRE","normalizeReference","trim","toUpperCase","parseCommon","clone","destination","property","cloneArray","i","length","push","cloneHashOfHash","cloneHashOfArrayOfHash","gsub","pattern","replacement","split","join","strip","startsWith","endsWith","d","lastIndexOf","each","arr","iterator","context","apply","last","compact","output","detect","Element","CharacterData","DocumentType","item","defineProperty","configurable","enumerable","writable","value","this","parentNode","removeChild","condition","format","a","b","e","f","error","undefined","Error","args","argIndex","framesToPop","spacing","FONTEM","FONTSIZE","STEP","SPACE","TOPNOTE","STAVEHEIGHT","INDENT","warning","RelativeElement","dx","w","pitch","opt","x","scalex","scaley","type","pitch2","linewidth","klass","top","bottom","thickness","stemHeight","height","centerVertically","chordHeightAbove","position","lyricHeightBelow","lyricHeightAbove","chordHeightBelow","partHeightAbove","setX","setUpperAndLowerElements","positionY","window","console","draw","renderer","bartop","y","calcY","graphelem","printSymbol","addClasses","renderText","printStem","printStaveLine","scaleExistingElem","glyphs","0","h","1","2","3","4","5","6","7","8","9","rests.multimeasure","rests.whole","rests.half","rests.quarter","rests.8th","rests.16th","rests.32nd","rests.64th","rests.128th","accidentals.sharp","accidentals.halfsharp","accidentals.nat","accidentals.flat","accidentals.halfflat","accidentals.dblflat","accidentals.dblsharp","dots.dot","noteheads.dbl","noteheads.whole","noteheads.half","noteheads.quarter","noteheads.slash.nostem","noteheads.indeterminate","scripts.ufermata","scripts.dfermata","scripts.sforzato","scripts.staccato","scripts.tenuto","scripts.umarcato","scripts.dmarcato","scripts.stopped","scripts.upbow","scripts.downbow","scripts.turn","scripts.trill","scripts.segno","scripts.coda","scripts.comma","scripts.roll","scripts.prall","scripts.arpeggio","scripts.mordent","flags.u8th","flags.u16th","flags.u32nd","flags.u64th","flags.d8th","flags.ugrace","flags.dgrace","flags.d16th","flags.d32nd","flags.d64th","clefs.C","clefs.F","clefs.G","clefs.perc","timesig.common","timesig.cut","timesig.imperfectum","timesig.imperfectum2","timesig.perfectum","timesig.perfectum2","m","p","r","s","z","+",",","-",".","scripts.wedge","scripts.thumb","scripts.open","scripts.longphrase","scripts.mediumphrase","scripts.shortphrase","scripts.snap","noteheads.slash.whole","noteheads.slash.quarter","noteheads.harmonic.quarter","symb","paper","pathArray","pathClone","path","stroke","fill","class","getPathForSymbol","pathScale","getSymbolWidth","symbol","getSymbolHeight","symbolHeightInPitches","getSymbolAlign","substring","res","ii","j","jj","kx","ky","getYCorr","AbsoluteElement","abcelem","duration","minspacing","tuneNumber","options","durationClass","durationClassOveride","children","heads","extra","extraw","right","invisible","specialY","tempoHeightAbove","volumeHeightAbove","dynamicHeightAbove","endingHeightAbove","volumeHeightBelow","dynamicHeightBelow","specialYResolved","child","pushTop","pushBottom","getMinWidth","getExtraWidth","addExtra","addChild","addHead","head","addRight","addCentered","elem","half","setLimit","member","Math","max","parent","min","setHint","hint","elemset","beginGroup","el","pitches","g","endGroup","setClass","target","printShadedBox","self","controller","addEventListener","classes","es","getAttribute","notifySelect","abselem","isIE","addClass","removeClass","color","setAttribute","kls","charAt","highlight","unhighlight","isAbsolute","pathname","spliceOne","list","index","k","n","pop","resolve_pathname","to","from","toParts","fromParts","isToAbs","isFromAbs","mustEndAbs","hasTrailingSlash","up","part","unshift","result","substr","_typeof","Symbol","constructor","value_equal","valueEqual","isArray","every","aType","aValue","valueOf","bValue","aKeys","bKeys","addLeadingSlash","stripLeadingSlash","hasBasename","prefix","stripBasename","stripTrailingSlash","createPath","location","search","hash","_extends","LocationUtils_createLocation","state","currentLocation","hashIndex","searchIndex","parsePath","decodeURI","URIError","es_createTransitionManager","prompt","listeners","setPrompt","nextPrompt","browser_default","confirmTransitionTo","action","getUserConfirmation","callback","appendListener","fn","isActive","listener","filter","notifyListeners","_len","_key","canUseDOM","document","createElement","node","event","attachEvent","removeEventListener","detachEvent","getConfirmation","message","confirm","createBrowserHistory_typeof","createBrowserHistory_extends","getHistoryState","history","es_createBrowserHistory","props","invariant_browser_default","globalHistory","canUseHistory","ua","navigator","userAgent","supportsHistory","needsHashChangeListener","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_ref","_window$location","createKey","random","transitionManager","setState","nextState","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","revertPop","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","initialLocation","createHref","listenerCount","checkDOMListeners","isBlocked","href","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","createHashHistory_extends","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","getHashPath","replaceHashPath","es_createHashHistory","canGoWithoutReload","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","pushHashPath","nextPaths","__webpack_exports__","o","exec","toExponential","parseFloat","toFixed","abs","str_repeat","_assertThisInitialized","ReferenceError","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","alt","altName","chain","at","before","beforeName","ruleName","splice","after","afterName","enable","ignoreInvalid","idx","enableOnly","disable","getRules","chainName","Token","tag","nesting","attrs","map","level","content","markup","info","meta","hidden","attrIndex","len","attrPush","attrData","attrSet","attrGet","attrJoin","Parse","tunebook","numberOfTunes","abc","num","TuneBook","book","This","directives","tunes","tune","startPos","arrDir","shift","line","header","end","pure","title","id","getTuneById","getTuneByTitle","parseOnly","params","numTunes","renderEngine","ret","testObject","propertyIsEnumerable","currentTune","startingTune","abcParser","div","getElementById","parse","getTune","override","innerHTML","extractMeasures","arr2","lastChord","measureStartChord","fragStart","measures","hasNotes","tuneObj","hasPickup","getPickupLength","lines","staff","kk","voice","voices","kkk","startChar","chord","el_type","measure","endChar","startEnding","endEnding","parseDirective","ParseHeader","parseKeyVoice","Tokenizer","transpose","wrap","Tune","tokenizer","addPositioning","positioning","addFont","fonts","multilineVars","reset","iChar","accidentals","root","acc","mode","meter","origMeter","hasMainTitle","default_length","clef","verticalPos","next_note_duration","start_new_line","is_in_header","is_in_history","partForNextLine","havent_set_length","staves","macros","currBarNumber","barCounter","inTextBlock","inPsBlock","ignoredDecorations","textBlock","score_is_present","inEnding","inTie","inTieChord","vocalPosition","dynamicPosition","chordPosition","ornamentPosition","volumePosition","openSlurs","differentFont","defaultFonts","decoration","face","size","style","weight","addFormattingOptions","elType","annotationfont","gchordfont","vocalfont","tripletfont","measurefont","repeatfont","encode","warn","col_num","bad_char","warningObject","clean_line","warnings","addWarning","getNumLines","column","warningObjects","getWarnings","getWarningObjects","letter_to_chord","getBrackettedSubstring","getFloat","digits","ws","skipWhiteSpace","chordName","legalAccents","volumeDecorations","dynamicDecorations","accentPseudonyms","accentDynamicPseudonyms","letter_to_accent","macro","dec","letter_to_spacer","start","letter_to_bar","curr_pos","getBarLine","orig_bar_len","ending","token","retRep","getTokenOf","tripletQ","letter_to_open_slurs_and_triplets","triplet","num_notes","startSlur","consumed","getBrokenRhythm","addEndBeam","end_beam","A","B","C","D","E","F","G","rests","Z","getCoreNote","canHaveBrokenRhythm","isComplete","durationSetByPreviousNote","endSlur","accidental","note","currentVoice","dblflat","flat","natural","sharp","dblsharp","formatting","midi","drummap","midipitch","rest","startTie","endTie","grace_notes","fraction","getFraction","getNumber","addTieToLastNote","br2","startNewLine","staffNum","scoreTranspose","standardKey","impliedNaturals","explicitAccidentals","found","targetKey","addPosToKey","st","brace","bracket","connectBarLines","subname","stem","stafflines","staffscale","scale","isFirstVoice","barNumbers","barNumber","letter_to_grace","gra","gracenotes","acciaccatura","letter_to_overlay","durationOfMeasure","den","parseLine","parseHeader","regular","resolveTempo","startOfLine","delayStartNewLine","continueall","tripletNotesLeft","retHeader","letter_to_body_header","overlayLevel","startI","retInlineHeader","letter_to_inline_header","eatWhiteSpace","translateString","addedChord","ci","rel_position","force_end_beam_last","appendElement","measureNotEmpty","bar","barFirstEndingNum","startTriplet","tripletMultiplier","chordStartChar","chordDuration","rememberEndBeam","done","accent","chordNote","endTriplet","postChordDone","el2","core","graceNotes","parseRegularMusicLine","newline","words","word_list","last_divider","addWord","word","syllable","divider","skip","lyric","addWords","getCurrentVoice","symbols","addSymbols","recurse","appendLastMeasure","nextVoice","element","addHintMeasure","nextStaff","stave","nextStave","strTune","switches","print","media","visualTranspose","globalTranspose","lineBreaks","all","backslash","comment","globalFormatting","header_only","stop_on_warning","addMetaText","stripComment","addText","ph","pl","papersize","landscape","cleanUp","barsperstaff","staffnonote","err","hint_measures","addHintMeasures","wrapLines","initialize","tokenizer_","warn_","multilineVars_","tune_","historyfont","infofont","partsfont","textfont","wordsfont","composerfont","subtitlefont","tempofont","titlefont","footerfont","headerfont","voicefont","fontTypeCanHaveBox","getFontParameter","tokens","currentSetting","cmd","processNumberOnly","box","hyphenLast","currToken","psFont","fontFace","fontTranslation","font","getChangingFont","setScale","scratch","tok","isNaN","addMultilineVar","intt","addMultilineVarBool","addMultilineVarOneParamChoice","choices","choice","midiCmdParam0","midiCmdParam1String","midiCmdParam1Integer","midiCmdParam1Integer1OptionalInteger","midiCmdParam2Integer","midiCmdParam4Integer","midiCmdParam5Integer","midiCmdParam1String1Integer","midiCmdParamFraction","midiCmdParam1StringVariableIntegers","parseFontChangeLine","textstr","textParts","setfont","textarr","text","positionChoices","addDirective","tokenize","restOfString","bagpipes","flatbeams","slurgraces","stretchlast","titlecaps","titleleft","measurebox","points","getMeasurement","used","oneParameterMeasurement","voiceScale","floatt","changeVoiceScale","vskip","getRequiredMeasurement","addSpacing","addSeparator","spaceAbove","spaceBelow","lenLine","partsBox","centerstr","sfTokens","sfNum","getGlobalFont","lastVoice","addVoice","newStaff","continueBar","numVoices","openParen","openBracket","openBrace","justOpenParen","justOpenBracket","justOpenBrace","addContinueBar","ty","t","vc","continueId","pgNum","getInt","addNewPage","subCmd","footerStr","getMeat","footerArr","footer","left","center","addMetaTextObj","midi_cmd","midi_params","hasBeginMusic","parseMidiCommand","formatHash","keyName","localTranspose","key1sharp","key2sharp","key3sharp","key4sharp","key5sharp","key6sharp","key7sharp","key1flat","key2flat","key3flat","key4flat","key5flat","key6flat","key7flat","C#","A#m","G#Mix","D#Dor","E#Phr","F#Lyd","B#Loc","F#","D#m","C#Mix","G#Dor","A#Phr","BLyd","E#Loc","G#m","F#Mix","C#Dor","D#Phr","ELyd","A#Loc","C#m","BMix","F#Dor","G#Phr","ALyd","D#Loc","F#m","EMix","BDor","C#Phr","DLyd","G#Loc","Bm","AMix","EDor","F#Phr","GLyd","C#Loc","Em","DMix","ADor","BPhr","CLyd","F#Loc","Am","GMix","DDor","EPhr","FLyd","BLoc","Dm","CMix","GDor","APhr","BbLyd","ELoc","Bb","Gm","FMix","CDor","DPhr","EbLyd","ALoc","Eb","Cm","BbMix","FDor","GPhr","AbLyd","DLoc","Ab","Fm","EbMix","BbDor","CPhr","DbLyd","GLoc","Db","Bbm","AbMix","EbDor","FPhr","GbLyd","CLoc","Gb","Ebm","DbMix","AbDor","BbPhr","CbLyd","FLoc","Cb","Abm","GbMix","DbDor","EbPhr","FbLyd","BbLoc","A#","B#","D#","E#","G#","Gbm","keySignature","clefLines","treble","mid","treble+8","treble-8","treble^8","treble_8","treble1","treble2","treble3","treble4","treble5","perc","none","bass","bass+8","bass-8","bass^8","bass_8","bass+16","bass-16","bass^16","bass_16","bass1","bass2","bass3","bass4","bass5","tenor","tenor1","tenor2","tenor3","tenor4","tenor5","alto","alto1","alto2","alto3","alto4","alto5","alto+8","alto-8","alto^8","alto_8","calcMiddle","oct","fixClef","clefPos","deepCopyKey","fixKey","fixedKey","parseMiddle","parseKey","foundKey","retPitch","getKeyPitch","retAcc","getSharpFlat","retMode","getMode","oldKey","keyCompensate","accs","getKeyAccidentals2","normalizeAccidentals","getPitchFromTokens","foundClef","parseVoice","getToken","isNew","staffInfo","startStaff","addNextTokenToStaffInfo","attr","getVoiceToken","addNextTokenToVoiceInfo","getNextToken","addNextNoteTokenToVoiceInfo","_B","_E","_b","_e","suppressChords","cue","vi","v","spacing_below_offset","setCurrentVoice","_classCallCheck","instance","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_slicedToArray","strictUriEncode","decodeComponent","strict","encodeURIComponent","decode","extract","input","queryStart","formatter","arrayFormat","accumulator","parserForArrayFormat","create","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","_param$replace$split","_param$replace$split2","return","sort","reduce","Boolean","keysSorter","Number","stringify","encoderForArrayFormat","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","value2","parseUrl","hashStart","url","query","_typeof2","_possibleConstructorReturn","assertThisInitialized","_setPrototypeOf","_inherits","subClass","superClass","getOwnPropertySymbols","propIsEnumerable","test1","getOwnPropertyNames","test2","test3","letter","shouldUseNative","val","toObject","Function","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","silent","scanned","marker","scanDelims","delimiters","jump","open","can_open","close","can_close","postProcess","startDelim","endDelim","loneMarkers","isStrong","webpackPolyfill","deprecate","paths","get","l","getLineEndTimings","timings","anticipation","callbackTimes","lastTop","timing","milliseconds","qpm","tempo","metaText","getBpm","extraMeasuresAtBeginning","beatCallback","eventCallback","lineEndCallback","lineEndAnticipation","replaceTarget","newTarget","setTiming","noteTimings","lineEndTimings","millisecondsPerBeat","lastMoment","startTime","currentBeat","currentEvent","isPaused","pausedTime","justUnpaused","doTiming","timestamp","timePaused","currentTime","requestAnimationFrame","pause","stop","keyIndex","newKey","newKeyMinor","localTransposeVerticalMovement","localTransposePreferFlats","globalTransposeOrigKeySig","baseKey","newKeyName","transposedKey","newKeySig","distance","floor","ceil","sharpChords","flatChords","transposeFactor","chordNum","pitchToLetter","accidentals2","-2","-1","origPitch","newPitch","origKeySig","origPitchLetter","origAccidental","newPitchLetter","newAccidental","calcAccidental","accidentalChange","getVariance","widths","numLines","avg","total","largestVariance","measureNumber","breakMeasure","measureWidths","thisVariance","lineVariance","thisTotal","lineWidth","optimizeLineWidths","lineBreakPoint","explanation","variance","failed","reason","lastLineStart","lastLines","possibilities","lastLinePossibilities","attempts","getAttempts","linesLeft","nextLines","newVariance","round","totalAttempts","attempt","getRevisedTune","staffWidth","abcString","revisedParams","staffwidth","newLines","currentLine","measureMarker","lastMeter","staffs","JSON","calcLineWraps","engraver_controller","minSpacing","minSpacingLimit","maxSpacing","lastLineLimit","targetHeight","preferredMeasuresPerLine","minLineSize","allowableVariance","minWidth","totals","thisWidth","fixedMeasureLineBreaks","ff","totalThisLine","width","attemptedWidth","freeFormLineBreaks","newWidths","getMeasureWidths","gotTune","newWidth","AbstractEngraver","Renderer","EngraverController","responsive","space","staffwidthScreen","staffwidthPrint","editable","clickListener","addSelectListener","regression","add_classes","setPaddingOverride","calcHorizontalSpacing","isLastLine","stretchLast","targetWidth","spacingUnits","minSpace","selected","ingroup","staffgroups","lastStaffGroupIndex","engraver","engraveABC","abctunes","engraveTune","doRegression","regressionLines","adjustNonScaledItems","abcTune","lineNumber","newTune","setStemHeight","isPrint","padding","music","hasPrintedTempo","abcLine","staffGroup","createABCLine","layout","foundNotStaffExtra","lastXPosition","isClef","isKeySig","calcHeight","abctune","maxWidth","setXSpacing","layoutBeams","topMargin","engraveTopText","addMusicPadding","engraveStaffLine","subtitle","outputSubtitle","outputFreeText","separator","outputSeparator","moveY","engraveExtraText","setPaperSize","debug","newspace","it","log","minspace","absElem","midpoint","centerWholeRests","addStaffPadding","voiceNumber","clearSelection","rangeHighlight","elems","elStart","elEnd","TieElem","anchor1","anchor2","above","forceandshift","isTie","force","setEndAnchor","setStartX","startLimitElem","startLimitX","setEndX","endLimitElem","endLimitX","lineStartX","lineEndX","getPitch","anchor","isAbove","highestVert","tieAbove","startX","endX","startY","endY","linestartx","lineendx","drawArc","__esModule","default","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","chords","md","musicOpts","highlightRegistry","set","lang","setTranspose","_interopRequireDefault","_extends2","_objectWithoutPropertiesLoose2","_inheritsLoose2","_classnames","_react","_ThemeProvider","Container","_React$Component","render","_this$props","bsPrefix","fluid","Component","as","className","defaultProps","_default","createBootstrapComponent","isarray","pathToRegexp","compile","tokensToFunction","tokensToRegExp","PATH_REGEXP","defaultDelimiter","delimiter","offset","capture","group","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","matches","opts","data","pretty","segment","attachKeys","re","flags","sensitive","route","endsWithDelimiter","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","for","q","u","aa","ba","ca","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","refs","updater","isReactComponent","forceUpdate","H","isPureReactComponent","I","current","J","K","L","ref","__self","__source","M","$$typeof","_owner","N","O","P","Q","keyPrefix","func","count","R","U","S","T","=",":","escape","ea","fa","V","da","W","X","Children","toArray","only","createRef","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","bind","isValidElement","version","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","ha","ia","ja","onError","ka","ma","na","oa","pa","extractEvents","eventTypes","ra","phasedRegistrationNames","sa","registrationName","ta","dependencies","va","wa","xa","ya","currentTarget","la","za","Aa","Ba","Ca","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Da","injectEventPluginOrder","injectEventPluginsByName","Ea","stateNode","disabled","Fa","Ga","Ha","Ia","Ja","Ka","La","Ma","Na","Oa","dispatchConfig","Pa","_targetInst","Qa","Ra","Sa","Ta","Ua","Va","animationend","animationiteration","animationstart","transitionend","Wa","Xa","Ya","animation","transition","Za","$a","ab","bb","cb","db","eb","fb","gb","textContent","hb","ib","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","kb","eventPool","lb","destructor","jb","getPooled","preventDefault","stopPropagation","cancelBubble","persist","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","extend","mb","nb","ob","pb","qb","documentMode","rb","sb","tb","ub","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","wb","xb","keyCode","yb","detail","zb","locale","which","ctrlKey","altKey","metaKey","char","Fb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","Ob","date","datetime","datetime-local","email","month","number","password","range","tel","time","week","Pb","nodeName","Qb","srcElement","correspondingUseElement","nodeType","Sb","Tb","Vb","_valueTracker","getOwnPropertyDescriptor","getValue","setValue","stopTracking","Ub","Wb","checked","Xb","Yb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","displayName","nc","_debugOwner","_debugSource","fileName","oc","pc","qc","rc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","wc","xc","tc","uc","sc","removeAttribute","setAttributeNS","yc","zc","defaultChecked","defaultValue","_wrapperState","initialChecked","Ac","initialValue","controlled","Bc","Cc","Dc","Ec","ownerDocument","activeElement","tabIndex","Fc","change","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","Sc","Tc","_isInputEventSupported","Uc","view","Vc","Alt","Control","Meta","Shift","Wc","getModifierState","Xc","Yc","Zc","$c","ad","bd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","cd","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","dd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ed","defaultView","parentWindow","alternate","fd","gd","hd","kd","effectTag","ld","nd","sibling","od","animationName","elapsedTime","pseudoElement","pd","clipboardData","qd","rd","charCode","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","vd","dataTransfer","wd","touches","targetTouches","changedTouches","xd","yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Ad","Bd","Cd","isInteractive","Dd","isInteractiveTopLevelEventType","Ed","Fd","Gd","targetInst","ancestors","containerInfo","topLevelType","Hd","Id","Jd","Kd","Ld","Md","Nd","Od","Pd","body","Qd","firstChild","Rd","nextSibling","Td","HTMLIFrameElement","contentDocument","Ud","contentEditable","Vd","Wd","select","Xd","Yd","Zd","$d","ae","selectionStart","selectionEnd","anchorNode","getSelection","anchorOffset","focusNode","focusOffset","be","onSelect","de","ce","ee","defaultSelected","fe","dangerouslySetInnerHTML","ge","he","ie","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","je","html","mathml","svg","ke","le","me","ne","namespaceURI","appendChild","MSApp","execUnsafeLocalFunction","oe","lastChild","nodeValue","pe","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qe","se","setProperty","te","menuitem","area","base","br","col","embed","hr","img","keygen","link","param","track","wbr","ue","ve","is","we","blur","focus","xe","ye","ze","Ae","autoFocus","Be","__html","Ce","setTimeout","De","clearTimeout","Ee","unstable_scheduleCallback","Fe","unstable_cancelCallback","He","Ie","Set","Je","Ke","Le","Me","Oe","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Pe","Qe","Re","Se","getChildContext","Te","__reactInternalMemoizedMergedChildContext","Ue","Ve","We","Xe","Ze","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","$e","bf","cf","df","ef","gf","pendingChildren","implementation","hf","didError","earliestPendingTime","latestPendingTime","jf","kf","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","lf","nextExpirationTimeToWorkOn","nf","of","baseState","xf","_reactInternalFiber","pf","rf","qf","payload","sf","tf","uf","vf","wf","yf","shouldComponentUpdate","zf","contextType","Af","Bf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Cf","Df","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ef","Ff","_stringRef","Gf","Hf","Map","delete","If","Jf","Kf","Lf","Mf","Nf","Of","Pf","documentElement","tagName","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","queue","baseUpdate","ug","vg","wg","dispatch","xg","eagerReducer","eagerState","yg","destroy","deps","zg","Bg","Cg","Dg","Eg","readContext","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","Rg","Sg","Tg","Ug","Vg","Wg","Xg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Yg","getDerivedStateFromError","Zg","pendingContext","$g","timedOutAt","fallback","ah","bh","then","mf","af","hydrate","first","observedBits","unstable_observedBits","dh","eh","fh","gh","hh","ih","jh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","kh","lh","mh","nh","oh","qh","rh","stack","sh","wh","xh","yh","zh","onClick","onclick","Ah","WeakSet","Bh","Ch","Dh","Eh","Gh","componentWillUnmount","Hh","Ih","Jh","insertBefore","_reactRootContainer","Kh","wasMultiple","multiple","Ge","display","Fh","oi","fi","add","Mh","WeakMap","Nh","Oh","Ph","componentDidCatch","Qh","componentStack","Rh","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","di","gi","createElementNS","createTextNode","hi","pendingCommitExpirationTime","ji","maxDuration","pingCache","ki","finishedWork","li","mi","ni","pi","qi","ri","si","ti","ui","wi","xi","yi","zi","Ai","unstable_now","Bi","Ci","Di","Ei","Fi","Gi","timeout","timeoutHandle","Ii","Ji","nextScheduledRoot","Ki","Li","Mi","unstable_shouldYield","_onComplete","Oi","firstBatch","_expirationTime","_defer","rangeCount","vb","focusedElem","selectionRange","Ag","Ni","__reactInternalSnapshotBeforeUpdate","Sd","contains","compareDocumentPosition","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","qa","Rb","dj","th","uh","ej","jd","vh","Ne","Pi","Qi","Ri","Si","Ti","Ui","Wi","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Xi","_didCommit","_onCommit","Yi","_internalRoot","Zi","aj","legacy_renderSubtreeIntoContainer","hasAttribute","$i","bj","Vi","querySelectorAll","form","commit","unmount","createBatch","fj","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","isDisabled","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Ye","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","gj","hj","global","_r","previous","priorityLevel","cancelAnimationFrame","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_NormalPriority","unstable_IdlePriority","unstable_LowPriority","unstable_runWithPriority","unstable_wrapCallback","unstable_getCurrentPriorityLevel","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","utils","helpers","ParserCore","ParserBlock","ParserInline","LinkifyIt","punycode","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","hostname","protocol","toASCII","er","normalizeLinkText","toUnicode","MarkdownIt","presetName","inline","linkify","configure","presets","components","rules","ruler","rules2","ruler2","missed","use","plugin","env","State","process","parseInline","inlineMode","renderInline","encodeCache","string","exclude","keepEscaped","nextCode","cache","defaultChars","getEncodeCache","componentChars","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","slashes","auth","port","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","javascript:","slashedProtocol","http","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","slashesDenoteHost","lowerProto","hec","simplePath","proto","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","newpart","validParts","notHost","bit","qm","Any","parseLinkLabel","parseLinkDestination","parseLinkTitle","disableNested","prevPos","labelEnd","posMax","oldPos","skipToken","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","langPrefix","image","renderInlineAsText","renderToken","hardbreak","xhtmlOut","softbreak","breaks","html_block","html_inline","nextToken","needLf","_rules","Core","NEWLINES_RE","NULL_RE","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","pretest","schema","lastIndex","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","openQuote","closeQuote","OUTER","single","quotes","StateCore","startLine","endLine","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","getLine","bMarks","eMarks","escapedSplit","escapes","backTicked","lastBackTick","lineText","nextLine","aligns","tableLines","tbodyLines","tShift","getLines","mem","haveEndMarker","skipChars","skipSpaces","adjustTab","initial","lastLineEmpty","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","wasOutdented","oldLineMax","bsCount","parentType","cnt","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldLIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","markTightParagraphs","_endLine","destEndPos","destEndLineNo","label","references","tmp","skipSpacesBack","skipCharsBack","block_names","HTML_SEQUENCES","StateBlock","indent_found","ddIndent","begin","keepLastLF","lineIndent","lineStart","_rules2","pending","pushPending","isTerminatorChar","pmax","ESCAPED","matchStart","matchEnd","labelStart","parseReference","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","isLetter","DIGITAL_RE","NAMED_RE","lastDelim","currDelim","curr","StateInline","pendingLevel","canSplitWord","left_flanking","right_flanking","isFunction","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","src_auth","src_host_port_strict","src_path","//","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto:","mailto","src_email_name","src_host_strict","tlds_2ch_src_re","tlds_default","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","__compiled__","__schemas__","compiled","isRegExp","normalize","alias","slist","schema_test","src_ZPCc","schema_search","__index__","__text_cache__","resetScanCache","Match","__last_index__","__schema__","raw","createMatch","schemas","definition","ml","tld_pos","testSchemaAt","keepOld","reverse","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","__WEBPACK_AMD_DEFINE_RESULT__","freeGlobal","maxInt","tMin","tMax","skew","damp","initialBias","initialN","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","not-basic","invalid-input","baseMinusTMin","stringFromCharCode","RangeError","array","mapDomain","ucs2decode","counter","ucs2encode","digitToBasic","digit","flag","adapt","numPoints","firstTime","out","basic","oldi","baseMinusT","codePoint","inputLength","bias","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","ucs2","renderAbc","outerHTML","tuneBook","abcjs","signature","TimingCallbacks","editor","timer","cursor","startAnimation","hideMeasures","elements","classList","lastMeasure","measureCallback","selector","hideCurrentMeasure","disappearMeasuresBefore","hideFinishedMeasures","disappearMeasuresAfter","showCursor","querySelector","bpm","measureStart","pauseAnimation","stopAnimation","setTitle","addSubtitle","titleStr","theReverser","setMeter","parseFraction","parseNum","totalLength","mv","calcTempo","relTempo","dur","addUserDefinition","equals","setDefaultLength","len_arr","tempoString","larghissimo","adagissimo","sostenuto","grave","largo","lento","larghetto","adagio","adagietto","andante","andantino","marcia moderato","andante moderato","moderato","allegretto","allegro moderato","allegro","animato","agitato","veloce","mosso vivo","vivace","vivacissimo","allegrissimo","presto","prestissimo","setTempo","delaySet","preString","suppressBpm","postString","printTempo","suppress","msg","appendStartingElement","lineNum","metaTextHeaders","field","addMetaTextArray","finished","skipAlpha","firstThree","getClef","bExplicitOnly","strOrig","needsClef","strClef","isMatch","explicit","colons","legalChars","getKeyAccidental","accTranslation","^","^^","_","__","_/","^/","isNumber","alphaUntilWhiteSpace","float2","charMap","`a","'a","^a","~a","\"a","=a",";a","`e","'e","^e","\"e","=e",";e",".e","`i","'i","^i","\"i","=i",";i","`o","'o","^o","~o","\"o","=o","uo","/o","`u","'u","^u","~u","\"u","ou","=u","uu",";u","`A","'A","^A","~A","\"A","oA","AA","=A","uA",";A","`E","'E","^E","\"E","=E","uE",";E",".E","`I","'I","^I","~I","\"I","=I","uI",";I",".I","`O","'O","^O","~O","\"O","=O","uO","/O","`U","'U","^U","~U","\"U","oU","=U","uU",";U","AE","OE","ss","'c","^c",".c","cC","'C","^C","uC",".C","~N","~n","=s","vs","DH","HO","Ho","HU","Hu","'Y","'y","^Y","^y","\"Y","\"y","vS","vZ","vz","charMap1","#","charMap2","201","202","203","241","242","252","262","272","302","312","322","332","342","352","362","372","243","253","263","273","303","313","323","333","343","353","363","373","244","254","264","274","304","314","324","334","344","354","364","374","245","255","265","275","305","315","325","335","345","355","365","375","246","256","266","276","306","316","326","336","346","356","366","376","247","257","267","277","307","317","327","337","347","357","367","377","250","260","270","300","310","320","330","340","350","360","370","251","261","271","301","311","321","331","341","351","361","371","iSave","ret2","substInChord","maxErrorChars","_matchChar","matchChar","getBeatLength","pickupLength","barLength","getBarLength","isSpacer","getMeterFraction","millisecondsPerMeasure","bpmOverride","beatsPerMeasure","voiceNum","resolveOverlays","madeChanges","overlayVoice","hasOverlay","snip","durationThisBar","inOverlay","snipStart","ov","defWidth","defLength","currSlur","closeLine","anyDeleted","hasAny","containsNotes","wrapMusicLines","keepThis","containsNotesStrict","firstMusicLine","hasATitle","fixTitles","workingClef","cleanUpSlursInLine","addEndSlur","chordPos","offNum","slurNum","addStartSlur","usedNums","nextNum","ggg","fixClefPlacement","permanentItems","barNumThisLine","getNextMusicLine","cp","vv","startElement","section","pagewidth","pageheight","potentialStartBeam","potentialEndBeam","vskipPending","getLastNote","getDuration","startBeam","endBeam","hashParams","endBeamLast","hp","mid2","pushNote","hashParams2","pushLine","newpage","lineLength","createVoice","thisStaff","direction","createStaff","createLine","isFirstLine","getMeter","addElementToEvents","eventHash","voiceTimeMilliseconds","timeDivider","isTiedState","nextIsBar","realDuration","isTiedToNext","startCharArray","endCharArray","makeVoicesArray","voicesArr","firstStaff","middleC","absoluteY","lastStaff","noteFound","setupEvents","startingDelay","timingEvents","voiceTime","startingRepeatElem","endingRepeatElem","barType","endRepeat","startRepeat","element2","lastBarTop","lastBarBottom","lastEventTop","lastEventBottom","ev","nextTop","nextBottom","addVerticalInfo","diff","makeSortedArray","beatLength","measuresOfDelay","beatsPerSecond","resizeDivs","resizeOuter","innerWidth","outer","offsetLeft","renderOne","viewportHorizontal","scrollHorizontal","overflowX","overflowY","viewportVertical","renderEachLineSeparately","initializeTuneLine","tuneLine","rhythm","origin","composer","author","partOrder","lastLine","unalignedWords","discography","notes","transcription","ep","origPaddingTop","paddingtop","origPaddingBottom","paddingbottom","lineEl","parserParams","engraverParams","renderParams","oneSvgPerLine","doLineWrapping","BeamElem","BraceElem","createClef","createKeySignature","createTimeSignature","Decoration","EndingElem","StaffGroupElement","TempoElement","TripletElem","VoiceElement","chartable","multi","nostem","harmonic","uflags","dflags","getBeamGroup","abcline","setAveragePitch","sortPitch","sum","averagepitch","minpitch","maxpitch","isBagpipes","flatBeams","slurs","ties","slursbyvoice","tiesbyvoice","endingsbyvoice","scaleByVoice","tripletmultiplier","accidentalSlot","accidentalshiftx","dotshiftx","hasVocals","minY","partstartelem","startlimitelem","stemdir","heightInPixels","getCurrentVoiceId","pushCrossLineElems","popCrossLineElems","containsLyrics","staffgroup","tempoSet","restoreState","createABCStaff","abcstaff","barfrom","barto","duplicate","addMeasureNumber","keySig","ts","staffLines","isSingleLineStaff","createABCVoice","setStaffLimits","increaseStavesIncluded","slur","addOther","isFirstStaff","abselems","createABCElement","createNoteHead","saveState","tiesSave","slursSave","slursbyvoiceSave","tiesbyvoiceSave","createBeam","createNote","isClosed","createBarLine","absKey","dim","getTextSize","abselem3","abselem2","calcBeamDir","beamelem","calcDir","abselemset","dir","oldDir","addBeam","sorted","ledgerLines","minPitch","maxPitch","isRest","symbolWidth","additionalLedgers","ofs","addIfNotExist","addGraceNotes","notehead","roomtaken","gracebeam","mainNote","graceoffsets","gracepitch","grace","addSlursAndTies","dAcciaccatura","graceDuration","pseudoabselem","p1","p2","addNoteToAbcElement","dot","zeroDuration","durlog","noteHead","noteSymbol","roomTaken","roomTakenRight","prev","printer_shift","pp","hasStem","extraLeft","addLyric","lyricStr","ly","lyricDim","addChord","chordWidth","chordHeight","relPositionY","pos2","roomtakenright","tot","pow","inc","durationForSpacing","absType","ret1","isMultiVoice","restpitch","mmWidth","numMeasures","addRestToAbsElement","voicetotal","createDecoration","ret3","setCloseAnchor","middleNote","pitchelem","headx","extrax","newDotShiftX","shiftheadx","adjust","xdelta","dotadjusty","accSlotFound","accPlace","tie","slurid","measureNumHeight","firstdots","firstthin","thick","secondthin","seconddots","textWidth","getDurlog","isflat","isgrace","forceup","forcedown","allrests","beams","beam","minStem","stemsUp","referencePitch","minStemHeight","calcAverage","numElements","getBarYAt","startx","starty","endx","endy","drawBeam","dy","isHint","pathString","printPath","asc","isGrace","calcDy","firstElement","lastElement","yPos","firstAveragePitch","lastAveragePitch","isFlat","average","barpos","barminpos","slant","leftAveragePitch","rightAveragePitch","numStems","maxSlant","calcSlant","calcYPos","xPos","starthead","endhead","calcXPos","auxBeams","furthestHead","bary","sy","auxBeamEndX","auxBeamEndY","createAdditionalBeams","createStems","heightAtMidpoint","midPoint","yAtNote","xAtMidpoint","setLocation","getWidth","drawBrace","octave","adjustspacing","numWidth","i2","denWidth","i3","DynamicDecoration","CrescendoElem","compoundDecoration","placement","lowestPitch","highestPitch","startDiminuendoX","startCrescendoX","minTop","minBottom","dynamicDecoration","diminuendo","crescendo","volumeDecoration","yPos2","blank1","blank2","below","closeDecoration","incrementPlacement","getPlacement","textDecoration","symbolDecoration","symbolList","snap","wedge","thumb","shortphrase","mediumphrase","longphrase","trill","roll","irishroll","marcato","dmarcato","umarcato","turn","uppermordent","pralltriller","mordent","lowermordent","downbow","upbow","fermata","invertedfermata","breath","coda","segno","hasOne","stackedDecoration","leftDecoration","sprintf","drawLine","y1","y2","staffnumber","lastStaffBottom","forcedSpacingBetween","addedSpace","systemStaffSeparation","layoutEnded","spacingunits","voiceheaderw","getLeftEdgeOfStaff","currentduration","beginLayout","spacingunit","getDurationIndex","currentvoices","othervoices","spacingduration","getNextX","getSpacingUnits","voicechildx","layoutOneItem","shiftRight","updateNextX","updateIndices","addInvisibleMarker","topLine","bottomLine","staff1","noteNumber","printStave","tempoPitch","tempoNote","preWidth","getBBox","postWidth","middleElems","hasBeam","yTextPos","startNote","endNote","xTextPos","x1","x2","midX","slope","leftEndX","rightStartX","drawBracket","voicenumber","otherchildren","firstItem","setRange","moveDecorations","adjustRange","durationindex","sqrt","minx","nextx","staffbottom","textpitch","justInitializedMeasureNumber","Svg","shouldAddClasses","kernSymbols","lastSymbol","thisSymbol","lastSymbolWidth","clear","lastM","initVerticalSpace","setVerticalSpace","setPrintMode","setPadding","createElemSet","openGroup","closeElemSet","closeGroup","maxwidth","parentStyles","setResponsiveWidth","setSize","setParentStyles","paddingOverride","paddingright","paddingleft","setPaddingVariable","paddingKey","formattingKey","printDefault","screenDefault","graceBefore","graceInside","graceAfter","lineSkipFactor","paragraphSkipFactor","slurHeight","staffSeparation","vocal","staffsep","composerspace","partsspace","textspace","musicspace","titlespace","sysstaffsep","subtitlespace","topspace","vocalspace","wordsspace","lastStaffGroup","thisStaffGroup","lastBottomLine","separationInPixels","headerTextHeight","outputTextIf","rSpace","composerLine","getFontAndAttr","largestY","offsetX","extraText","isCentered","alignment","printSeparator","addPath","addToRegression","extraClass","pathToBack","ycorr","scaleX","scaleY","setAttributeOnElement","xLeft","yTop","yBottom","yHeight","xCurve","yCurve","pitch1","norm","ux","uy","flatten","maxFlatten","curve","controlx1","controly1","controlx2","controly2","prepend","isNote","font-size","font-style","font-family","font-weight","text-decoration","rect","em","skipSpaceY","kind","marginTop","marginBottom","fill-opacity","data-vertical","printHorizontalLine","vertical","text-anchor","stroke-opacity","printVerticalLine","svgNS","wrapper","createSvg","titleEl","titleNode","cls","transform","append","currentGroup","TextPrinter","CustomEvent","evt","createEvent","initCustomEvent","Event","EditArea","textareaid","textarea","initialText","isDragging","addSelectionListener","onmousemove","fireSelectionChanged","addChangeListener","changelistener","onkeyup","fireChanged","onmousedown","onmouseup","onchange","setSelection","setSelectionRange","createTextRange","collapse","moveEnd","moveStart","getString","setString","getElem","Editor","editarea","abcjsParams","midi_options","parser_options","render_options","indicate_changed","canvas_id","paper_id","generate_midi","generateDownload","midi_download_id","downloadMidi","generateInline","midi_id","inlineMidi","generate_warnings","warnings_id","warningsdiv","onchangeCallback","gui","oldt","bReentry","parseABC","modelChanged","addClassName","elementClassName","hasClassName","removeClassName","setReadOnly","readOnly","renderTune","redrawMidi","midiPause","downloadMidiEl","inlineMidiEl","engravingEl","dispatchEvent","timerId","printABC","updateSelection","paramChanged","selection","setDirtyStyle","isDirty","bIsPaused","wasDirty","setNotDirty","shouldPause","pauseMidi","reposition","printString","printNewLine","printSpace","printHeader","printBody","printHeaderLine","getMeterString","getKeyString","fieldname","abcfield","defaut","valarray","getNextElem","printABCLine","printABCStaff","printABCVoice","printABCElement","printBeam","printBarLine","printNote","decorations","staccato","slide","lower","getNoteString","ignoreslur","multiplyString","pitchstr","extractNote","extractOctave","getDurationString","barstr","parseVerse","randomColor","VoiceColors","colors","voiceColorMap","seed","getUnusedColor","createHtmlChordChart","verse","chordChartHtml","voiceColors","phrase","verseDiv","transposeAmount","voiceElements","events","voiceName","getVoiceColor","parentVoice","whitespace","whitespaceDiv","textDiv","appendVoiceContentDiv","voiceElementsList","createListOfWrappedVoices","Chord","voicePattern","instrument","parsePhrase","chordPattern","chordSequenceSharp","chordSequenceFlat","_transpose","amount","chordSequence","quality","factory","colorDictionary","defineColor","colorRanges","pickHue","hueRange","colorHue","hue","HexToHSB","getColorInfo","getRealHueRange","randomWithin","step","colorInput","getHueRange","pickSaturation","luminosity","saturationRange","getSaturationRange","sMin","sMax","pickBrightness","bMin","lowerBounds","s1","v1","s2","v2","getMinimumBrightness","bMax","setFormat","hsv","HSVtoHSL","hsl","hslColor","alpha","HSVtoRGB","rgb","rgbColor","componentToHex","hex","HSVtoHex","colorName","rnd","brightnessRange","h_i","red","green","blue","cMax","saturation","MAX_SAFE_INTEGER","stringToInteger","totalColors","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_arr","_n","_d","_s","_i","singleMatcher","multiMatcher","decodeComponents","decodeURIComponent","encodedURI","replaceMap","%FE%FF","%FF%FE","entries","customDecodeURIComponent","excluded","sourceKeys","hasOwn","classNames","arg","argType","inner","isClassy","_opts","_opts$forwardRefAs","forwardRefAs","_forwardRef","prefixes","ThemeConsumer","_React$createContext","ThemeProvider","_this","renderFn","propTypes","_ref$allowFallback","allowFallback","ReactPropTypesSecret","emptyFunction","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","bool","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","invariant__WEBPACK_IMPORTED_MODULE_2__","invariant__WEBPACK_IMPORTED_MODULE_2___default","history__WEBPACK_IMPORTED_MODULE_3__","isModifiedEvent","Link","_temp","handleClick","router","_props","innerRef","_objectWithoutProperties","Router_Router","Router","computeMatch","isExact","_this2","react_default","nextProps","warning_default","prop_types_default","react_router_dom_es_Router","HashRouter_possibleConstructorReturn","HashRouter_HashRouter","HashRouter","HashRouter_classCallCheck","HashRouter_inherits","patternCache","cacheCount","es_matchPath","_options","_options$exact","_options$strict","_options$sensitive","_compilePath","cacheKey","compiledPattern","path_to_regexp_default","matchPath_compilePath","values","Route_isEmptyChildren","Route_Route","Route","computedMatch","component","nextContext","_context$router","staticContext","es_Route"],"mappings":"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KAAA,gBACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,0BACA,OACAC,KAAA,gBACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,sBACA,OACAC,KAAA,mBACAG,OAAA,SACAD,MAAA,SACAH,WAAA,QAGA,6BACA,OACAC,KAAA,mBACAG,OAAA,SACAD,MAAA,SACAH,WAAA,QAGA,sBACA,uBACA,OACAC,KAAA,mBACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,6BACA,OACAC,KAAA,mBACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,wBACA,OACAC,KAAA,YACAG,OAAA,SACAD,MAAA,SACAH,WAAA,QAGA,qBACA,OACAC,KAAA,YACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,4BACA,OACAC,KAAA,YACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,uBACA,OACAC,KAAA,+BACAG,OAAA,SACAD,MAAA,SACAH,WAAA,QAGA,+BACA,OACAC,KAAA,+BACAG,OAAA,SACAD,MAAA,SACAH,WAAA,QAGA,4BACA,OACAC,KAAA,+BACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,mCACA,OACAC,KAAA,+BACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,qBACA,OACAC,KAAA,WACAG,OAAA,SACAD,MAAA,SACAH,WAAA,QAGA,sBACA,OACAC,KAAA,WACAG,OAAA,SACAD,MAAA,SACAH,WAAA,QAGA,oBACA,OACAC,KAAA,WACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,0BACA,OACAC,KAAA,WACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,6BACA,OACAC,KAAA,sBACAG,OAAA,SACAD,MAAA,SACAH,WAAA,QAGA,8BACA,OACAC,KAAA,sBACAG,OAAA,SACAD,MAAA,SACAH,WAAA,QAGA,4BACA,OACAC,KAAA,sBACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,kCACA,OACAC,KAAA,sBACAG,OAAA,OACAD,MAAA,SACAH,WAAA,QAGA,YACA,kBACA,mBACA,oBACA,sBACA,OACAC,KA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","file":"static/js/2.acbcd853.chunk.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n\n  var isValidElement = function isValidElement(object) {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }; // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n\n\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}","// Utilities\n//\n'use strict';\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n} // Merge objects\n//\n\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n} // Remove element from array and put another array at those position.\n// Useful for some operations with tokens\n\n\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) {\n    return false;\n  } // never used\n\n\n  if (c >= 0xFDD0 && c <= 0xFDEF) {\n    return false;\n  }\n\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n    return false;\n  } // control codes\n\n\n  if (c >= 0x00 && c <= 0x08) {\n    return false;\n  }\n\n  if (c === 0x0B) {\n    return false;\n  }\n\n  if (c >= 0x0E && c <= 0x1F) {\n    return false;\n  }\n\n  if (c >= 0x7F && c <= 0x9F) {\n    return false;\n  } // out of range\n\n\n  if (c > 0x10FFFF) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n\n  return String.fromCharCode(c);\n}\n\nvar UNESCAPE_MD_RE = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23\n  /* # */\n  && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) {\n      return escaped;\n    }\n\n    return replaceEntityPattern(match, entity);\n  });\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n\n  return str;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n\n  return false;\n} // Zs (unicode class) || [\\t\\f\\v\\r\\n]\n\n\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) {\n    return true;\n  }\n\n  switch (code) {\n    case 0x09: // \\t\n\n    case 0x0A: // \\n\n\n    case 0x0B: // \\v\n\n    case 0x0C: // \\f\n\n    case 0x0D: // \\r\n\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n\n  return false;\n} ////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\n\n\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex'); // Currently without astral characters support.\n\n\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n} // Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\n\n\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21\n    /* ! */\n    :\n    case 0x22\n    /* \" */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x27\n    /* ' */\n    :\n    case 0x28\n    /* ( */\n    :\n    case 0x29\n    /* ) */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2C\n    /* , */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x2E\n    /* . */\n    :\n    case 0x2F\n    /* / */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3B\n    /* ; */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x3F\n    /* ? */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7C\n    /* | */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n} // Hepler to unify [reference labels].\n//\n\n\nfunction normalizeReference(str) {\n  // use .toUpperCase() instead of .toLowerCase()\n  // here to avoid a conflict with Object.prototype\n  // members (most notably, `__proto__`)\n  return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n} ////////////////////////////////////////////////////////////////////////////////\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\n\n\nexports.lib = {};\nexports.lib.mdurl = require('mdurl');\nexports.lib.ucmicro = require('uc.micro');\nexports.assign = assign;\nexports.isString = isString;\nexports.has = has;\nexports.unescapeMd = unescapeMd;\nexports.unescapeAll = unescapeAll;\nexports.isValidEntityCode = isValidEntityCode;\nexports.fromCodePoint = fromCodePoint; // exports.replaceEntities     = replaceEntities;\n\nexports.escapeHtml = escapeHtml;\nexports.arrayReplaceAt = arrayReplaceAt;\nexports.isSpace = isSpace;\nexports.isWhiteSpace = isWhiteSpace;\nexports.isMdAsciiPunct = isMdAsciiPunct;\nexports.isPunctChar = isPunctChar;\nexports.escapeRE = escapeRE;\nexports.normalizeReference = normalizeReference;","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function warning() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function warning(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.length < 10 || /^[s\\W]*$/.test(format)) {\n      throw new Error('The warning format should be able to uniquely identify this ' + 'warning. Please, use a more descriptive format than: ' + format);\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    }\n  };\n}\n\nmodule.exports = warning;","//    abc_parse.js: parses a string representing ABC Music Notation into a usable internal structure.\n//    Copyright (C) 2010-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar parseCommon = {};\n\nparseCommon.clone = function (source) {\n  var destination = {};\n\n  for (var property in source) {\n    if (source.hasOwnProperty(property)) destination[property] = source[property];\n  }\n\n  return destination;\n};\n\nparseCommon.cloneArray = function (source) {\n  var destination = [];\n\n  for (var i = 0; i < source.length; i++) {\n    destination.push(parseCommon.clone(source[i]));\n  }\n\n  return destination;\n};\n\nparseCommon.cloneHashOfHash = function (source) {\n  var destination = {};\n\n  for (var property in source) {\n    if (source.hasOwnProperty(property)) destination[property] = parseCommon.clone(source[property]);\n  }\n\n  return destination;\n};\n\nparseCommon.cloneHashOfArrayOfHash = function (source) {\n  var destination = {};\n\n  for (var property in source) {\n    if (source.hasOwnProperty(property)) destination[property] = parseCommon.cloneArray(source[property]);\n  }\n\n  return destination;\n};\n\nparseCommon.gsub = function (source, pattern, replacement) {\n  return source.split(pattern).join(replacement);\n};\n\nparseCommon.strip = function (str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n};\n\nparseCommon.startsWith = function (str, pattern) {\n  return str.indexOf(pattern) === 0;\n};\n\nparseCommon.endsWith = function (str, pattern) {\n  var d = str.length - pattern.length;\n  return d >= 0 && str.lastIndexOf(pattern) === d;\n};\n\nparseCommon.each = function (arr, iterator, context) {\n  for (var i = 0, length = arr.length; i < length; i++) {\n    iterator.apply(context, [arr[i], i]);\n  }\n};\n\nparseCommon.last = function (arr) {\n  if (arr.length === 0) return null;\n  return arr[arr.length - 1];\n};\n\nparseCommon.compact = function (arr) {\n  var output = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) output.push(arr[i]);\n  }\n\n  return output;\n};\n\nparseCommon.detect = function (arr, iterator) {\n  for (var i = 0; i < arr.length; i++) {\n    if (iterator(arr[i])) return true;\n  }\n\n  return false;\n}; // The following is a polyfill for Object.remove for IE9, IE10, and IE11.\n// from:https://github.com/jserz/js_piece/blob/master/DOM/ChildNode/remove()/remove().md\n\n\n(function (arr) {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty('remove')) {\n      return;\n    }\n\n    Object.defineProperty(item, 'remove', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function remove() {\n        if (this.parentNode !== null) this.parentNode.removeChild(this);\n      }\n    });\n  });\n})([Element.prototype, CharacterData.prototype, DocumentType.prototype]);\n\nmodule.exports = parseCommon;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function invariant(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n\n    throw error;\n  }\n};\n\nmodule.exports = invariant;","//    Copyright (C) 2014-2018 Gregory Dyke (gregdyke at gmail dot com)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar spacing = {};\nspacing.FONTEM = 360;\nspacing.FONTSIZE = 30;\nspacing.STEP = spacing.FONTSIZE * 93 / 720;\nspacing.SPACE = 10;\nspacing.TOPNOTE = 15;\nspacing.STAVEHEIGHT = 100;\nspacing.INDENT = 50;\nmodule.exports = spacing;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function warning() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;","//    abc_relative_element.js: Definition of the RelativeElement class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar glyphs = require('./abc_glyphs');\n\nvar RelativeElement = function RelativeElement(c, dx, w, pitch, opt) {\n  opt = opt || {};\n  this.x = 0;\n  this.c = c; // character or path or string\n\n  this.dx = dx; // relative x position\n\n  this.w = w; // minimum width taken up by this element (can include gratuitous space)\n\n  this.pitch = pitch; // relative y position by pitch\n\n  this.scalex = opt.scalex || 1; // should the character/path be scaled?\n\n  this.scaley = opt.scaley || 1; // should the character/path be scaled?\n\n  this.type = opt.type || \"symbol\"; // cheap types.\n\n  this.pitch2 = opt.pitch2;\n  this.linewidth = opt.linewidth;\n  this.klass = opt.klass;\n  this.top = pitch;\n  if (this.pitch2 !== undefined && this.pitch2 > this.top) this.top = this.pitch2;\n  this.bottom = pitch;\n  if (this.pitch2 !== undefined && this.pitch2 < this.bottom) this.bottom = this.pitch2;\n\n  if (opt.thickness) {\n    this.top += opt.thickness / 2;\n    this.bottom -= opt.thickness / 2;\n  }\n\n  if (opt.stemHeight) {\n    if (opt.stemHeight > 0) this.top += opt.stemHeight;else this.bottom += opt.stemHeight;\n  } //if (this.type === \"symbol\") {\n  //\tvar offset = glyphs.getYCorr(this.c);\n  //\tthis.top += offset;\n  //\tthis.bottom += offset;\n  //}\n\n\n  this.height = opt.height ? opt.height : 4; // The +1 is to give a little bit of padding.\n\n  this.centerVertically = false;\n\n  switch (this.type) {\n    case \"debug\":\n      this.chordHeightAbove = this.height;\n      break;\n\n    case \"lyric\":\n      if (opt.position && opt.position === 'below') this.lyricHeightBelow = this.height;else this.lyricHeightAbove = this.height;\n      break;\n\n    case \"chord\":\n      if (opt.position && opt.position === 'below') this.chordHeightBelow = this.height;else this.chordHeightAbove = this.height;\n      break;\n\n    case \"text\":\n      if (this.pitch === undefined) {\n        if (opt.position && opt.position === 'below') this.chordHeightBelow = this.height;else this.chordHeightAbove = this.height;\n      } else this.centerVertically = true;\n\n      break;\n\n    case \"part\":\n      this.partHeightAbove = this.height;\n      break;\n  }\n};\n\nRelativeElement.prototype.setX = function (x) {\n  this.x = x + this.dx;\n};\n\nRelativeElement.prototype.setUpperAndLowerElements = function (positionY) {\n  switch (this.type) {\n    case \"part\":\n      this.top = positionY.partHeightAbove + this.height;\n      this.bottom = positionY.partHeightAbove;\n      break;\n\n    case \"text\":\n    case \"chord\":\n      if (this.chordHeightAbove) {\n        this.top = positionY.chordHeightAbove;\n        this.bottom = positionY.chordHeightAbove;\n      } else {\n        this.top = positionY.chordHeightBelow;\n        this.bottom = positionY.chordHeightBelow;\n      }\n\n      break;\n\n    case \"lyric\":\n      if (this.lyricHeightAbove) {\n        this.top = positionY.lyricHeightAbove;\n        this.bottom = positionY.lyricHeightAbove;\n      } else {\n        this.top = positionY.lyricHeightBelow;\n        this.bottom = positionY.lyricHeightBelow;\n      }\n\n      break;\n\n    case \"debug\":\n      this.top = positionY.chordHeightAbove;\n      this.bottom = positionY.chordHeightAbove;\n      break;\n  }\n\n  if (this.pitch === undefined || this.top === undefined) window.console.error(\"RelativeElement position not set.\", this.type, this.pitch, this.top, positionY);\n};\n\nRelativeElement.prototype.draw = function (renderer, bartop) {\n  if (this.pitch === undefined) window.console.error(this.type + \" Relative Element y-coordinate not set.\");\n  var y = renderer.calcY(this.pitch);\n\n  switch (this.type) {\n    case \"symbol\":\n      if (this.c === null) return null;\n      var klass = \"symbol\";\n      if (this.klass) klass += \" \" + this.klass;\n      this.graphelem = renderer.printSymbol(this.x, this.pitch, this.c, this.scalex, this.scaley, renderer.addClasses(klass));\n      break;\n\n    case \"debug\":\n      this.graphelem = renderer.renderText(this.x, renderer.calcY(15), \"\" + this.c, \"debugfont\", 'debug-msg', 'start');\n      break;\n\n    case \"barNumber\":\n      this.graphelem = renderer.renderText(this.x, y, \"\" + this.c, \"measurefont\", 'bar-number', \"middle\");\n      break;\n\n    case \"lyric\":\n      this.graphelem = renderer.renderText(this.x, y, this.c, \"vocalfont\", 'lyric', \"middle\");\n      break;\n\n    case \"chord\":\n      this.graphelem = renderer.renderText(this.x, y, this.c, 'gchordfont', \"chord\", \"middle\");\n      break;\n\n    case \"decoration\":\n      this.graphelem = renderer.renderText(this.x, y, this.c, 'annotationfont', \"annotation\", \"middle\", true);\n      break;\n\n    case \"text\":\n      this.graphelem = renderer.renderText(this.x, y, this.c, 'annotationfont', \"annotation\", \"start\", this.centerVertically);\n      break;\n\n    case \"multimeasure-text\":\n      this.graphelem = renderer.renderText(this.x + this.w / 2, y, this.c, 'tempofont', \"rest\", \"middle\", false);\n      break;\n\n    case \"part\":\n      this.graphelem = renderer.renderText(this.x, y, this.c, 'partsfont', \"part\", \"start\");\n      break;\n\n    case \"bar\":\n      this.graphelem = renderer.printStem(this.x, this.linewidth, y, bartop ? bartop : renderer.calcY(this.pitch2));\n      break;\n    // bartop can't be 0\n\n    case \"stem\":\n      this.graphelem = renderer.printStem(this.x, this.linewidth, y, renderer.calcY(this.pitch2));\n      break;\n\n    case \"ledger\":\n      this.graphelem = renderer.printStaveLine(this.x, this.x + this.w, this.pitch);\n      break;\n  }\n\n  if (this.scalex !== 1 && this.graphelem) {\n    renderer.scaleExistingElem(this.graphelem, this.scalex, this.scaley, this.x, y);\n  }\n\n  return this.graphelem;\n};\n\nmodule.exports = RelativeElement;","var spacing = require('./abc_spacing');\n/**\n * Glyphs and some methods to adjust for their x and y baseline\n */\n\n\nvar Glyphs = function Glyphs() {\n  \"use strict\";\n\n  var glyphs = {\n    '0': {\n      d: [['M', 4.83, -14.97], ['c', 0.33, -0.03, 1.11, 0.00, 1.47, 0.06], ['c', 1.68, 0.36, 2.97, 1.59, 3.78, 3.60], ['c', 1.20, 2.97, 0.81, 6.96, -0.90, 9.27], ['c', -0.78, 1.08, -1.71, 1.71, -2.91, 1.95], ['c', -0.45, 0.09, -1.32, 0.09, -1.77, 0.00], ['c', -0.81, -0.18, -1.47, -0.51, -2.07, -1.02], ['c', -2.34, -2.07, -3.15, -6.72, -1.74, -10.20], ['c', 0.87, -2.16, 2.28, -3.42, 4.14, -3.66], ['z'], ['m', 1.11, 0.87], ['c', -0.21, -0.06, -0.69, -0.09, -0.87, -0.06], ['c', -0.54, 0.12, -0.87, 0.42, -1.17, 0.99], ['c', -0.36, 0.66, -0.51, 1.56, -0.60, 3.00], ['c', -0.03, 0.75, -0.03, 4.59, 0.00, 5.31], ['c', 0.09, 1.50, 0.27, 2.40, 0.60, 3.06], ['c', 0.24, 0.48, 0.57, 0.78, 0.96, 0.90], ['c', 0.27, 0.09, 0.78, 0.09, 1.05, 0.00], ['c', 0.39, -0.12, 0.72, -0.42, 0.96, -0.90], ['c', 0.33, -0.66, 0.51, -1.56, 0.60, -3.06], ['c', 0.03, -0.72, 0.03, -4.56, 0.00, -5.31], ['c', -0.09, -1.47, -0.27, -2.37, -0.60, -3.03], ['c', -0.24, -0.48, -0.54, -0.78, -0.93, -0.90], ['z']],\n      w: 10.78,\n      h: 14.959\n    },\n    '1': {\n      d: [['M', 3.30, -15.06], ['c', 0.06, -0.06, 0.21, -0.03, 0.66, 0.15], ['c', 0.81, 0.39, 1.08, 0.39, 1.83, 0.03], ['c', 0.21, -0.09, 0.39, -0.15, 0.42, -0.15], ['c', 0.12, 0.00, 0.21, 0.09, 0.27, 0.21], ['c', 0.06, 0.12, 0.06, 0.33, 0.06, 5.94], ['c', 0.00, 3.93, 0.00, 5.85, 0.03, 6.03], ['c', 0.06, 0.36, 0.15, 0.69, 0.27, 0.96], ['c', 0.36, 0.75, 0.93, 1.17, 1.68, 1.26], ['c', 0.30, 0.03, 0.39, 0.09, 0.39, 0.30], ['c', 0.00, 0.15, -0.03, 0.18, -0.09, 0.24], ['c', -0.06, 0.06, -0.09, 0.06, -0.48, 0.06], ['c', -0.42, 0.00, -0.69, -0.03, -2.10, -0.24], ['c', -0.90, -0.15, -1.77, -0.15, -2.67, 0.00], ['c', -1.41, 0.21, -1.68, 0.24, -2.10, 0.24], ['c', -0.39, 0.00, -0.42, 0.00, -0.48, -0.06], ['c', -0.06, -0.06, -0.06, -0.09, -0.06, -0.24], ['c', 0.00, -0.21, 0.06, -0.27, 0.36, -0.30], ['c', 0.75, -0.09, 1.32, -0.51, 1.68, -1.26], ['c', 0.12, -0.27, 0.21, -0.60, 0.27, -0.96], ['c', 0.03, -0.18, 0.03, -1.59, 0.03, -4.29], ['c', 0.00, -3.87, 0.00, -4.05, -0.06, -4.14], ['c', -0.09, -0.15, -0.18, -0.24, -0.39, -0.24], ['c', -0.12, 0.00, -0.15, 0.03, -0.21, 0.06], ['c', -0.03, 0.06, -0.45, 0.99, -0.96, 2.13], ['c', -0.48, 1.14, -0.90, 2.10, -0.93, 2.16], ['c', -0.06, 0.15, -0.21, 0.24, -0.33, 0.24], ['c', -0.24, 0.00, -0.42, -0.18, -0.42, -0.39], ['c', 0.00, -0.06, 3.27, -7.62, 3.33, -7.74], ['z']],\n      w: 8.94,\n      h: 15.058\n    },\n    '2': {\n      d: [['M', 4.23, -14.97], ['c', 0.57, -0.06, 1.68, 0.00, 2.34, 0.18], ['c', 0.69, 0.18, 1.50, 0.54, 2.01, 0.90], ['c', 1.35, 0.96, 1.95, 2.25, 1.77, 3.81], ['c', -0.15, 1.35, -0.66, 2.34, -1.68, 3.15], ['c', -0.60, 0.48, -1.44, 0.93, -3.12, 1.65], ['c', -1.32, 0.57, -1.80, 0.81, -2.37, 1.14], ['c', -0.57, 0.33, -0.57, 0.33, -0.24, 0.27], ['c', 0.39, -0.09, 1.26, -0.09, 1.68, 0.00], ['c', 0.72, 0.15, 1.41, 0.45, 2.10, 0.90], ['c', 0.99, 0.63, 1.86, 0.87, 2.55, 0.75], ['c', 0.24, -0.06, 0.42, -0.15, 0.57, -0.30], ['c', 0.12, -0.09, 0.30, -0.42, 0.30, -0.51], ['c', 0.00, -0.09, 0.12, -0.21, 0.24, -0.24], ['c', 0.18, -0.03, 0.39, 0.12, 0.39, 0.30], ['c', 0.00, 0.12, -0.15, 0.57, -0.30, 0.87], ['c', -0.54, 1.02, -1.56, 1.74, -2.79, 2.01], ['c', -0.42, 0.09, -1.23, 0.09, -1.62, 0.03], ['c', -0.81, -0.18, -1.32, -0.45, -2.01, -1.11], ['c', -0.45, -0.45, -0.63, -0.57, -0.96, -0.69], ['c', -0.84, -0.27, -1.89, 0.12, -2.25, 0.90], ['c', -0.12, 0.21, -0.21, 0.54, -0.21, 0.72], ['c', 0.00, 0.12, -0.12, 0.21, -0.27, 0.24], ['c', -0.15, 0.00, -0.27, -0.03, -0.33, -0.15], ['c', -0.09, -0.21, 0.09, -1.08, 0.33, -1.71], ['c', 0.24, -0.66, 0.66, -1.26, 1.29, -1.89], ['c', 0.45, -0.45, 0.90, -0.81, 1.92, -1.56], ['c', 1.29, -0.93, 1.89, -1.44, 2.34, -1.98], ['c', 0.87, -1.05, 1.26, -2.19, 1.20, -3.63], ['c', -0.06, -1.29, -0.39, -2.31, -0.96, -2.91], ['c', -0.36, -0.33, -0.72, -0.51, -1.17, -0.54], ['c', -0.84, -0.03, -1.53, 0.42, -1.59, 1.05], ['c', -0.03, 0.33, 0.12, 0.60, 0.57, 1.14], ['c', 0.45, 0.54, 0.54, 0.87, 0.42, 1.41], ['c', -0.15, 0.63, -0.54, 1.11, -1.08, 1.38], ['c', -0.63, 0.33, -1.20, 0.33, -1.83, 0.00], ['c', -0.24, -0.12, -0.33, -0.18, -0.54, -0.39], ['c', -0.18, -0.18, -0.27, -0.30, -0.36, -0.51], ['c', -0.24, -0.45, -0.27, -0.84, -0.21, -1.38], ['c', 0.12, -0.75, 0.45, -1.41, 1.02, -1.98], ['c', 0.72, -0.72, 1.74, -1.17, 2.85, -1.32], ['z']],\n      w: 10.764,\n      h: 14.97\n    },\n    '3': {\n      d: [['M', 3.78, -14.97], ['c', 0.30, -0.03, 1.41, 0.00, 1.83, 0.06], ['c', 2.22, 0.30, 3.51, 1.32, 3.72, 2.91], ['c', 0.03, 0.33, 0.03, 1.26, -0.03, 1.65], ['c', -0.12, 0.84, -0.48, 1.47, -1.05, 1.77], ['c', -0.27, 0.15, -0.36, 0.24, -0.45, 0.39], ['c', -0.09, 0.21, -0.09, 0.36, 0.00, 0.57], ['c', 0.09, 0.15, 0.18, 0.24, 0.51, 0.39], ['c', 0.75, 0.42, 1.23, 1.14, 1.41, 2.13], ['c', 0.06, 0.42, 0.06, 1.35, 0.00, 1.71], ['c', -0.18, 0.81, -0.48, 1.38, -1.02, 1.95], ['c', -0.75, 0.72, -1.80, 1.20, -3.18, 1.38], ['c', -0.42, 0.06, -1.56, 0.06, -1.95, 0.00], ['c', -1.89, -0.33, -3.18, -1.29, -3.51, -2.64], ['c', -0.03, -0.12, -0.03, -0.33, -0.03, -0.60], ['c', 0.00, -0.36, 0.00, -0.42, 0.06, -0.63], ['c', 0.12, -0.30, 0.27, -0.51, 0.51, -0.75], ['c', 0.24, -0.24, 0.45, -0.39, 0.75, -0.51], ['c', 0.21, -0.06, 0.27, -0.06, 0.60, -0.06], ['c', 0.33, 0.00, 0.39, 0.00, 0.60, 0.06], ['c', 0.30, 0.12, 0.51, 0.27, 0.75, 0.51], ['c', 0.36, 0.33, 0.57, 0.75, 0.60, 1.20], ['c', 0.00, 0.21, 0.00, 0.27, -0.06, 0.42], ['c', -0.09, 0.18, -0.12, 0.24, -0.54, 0.54], ['c', -0.51, 0.36, -0.63, 0.54, -0.60, 0.87], ['c', 0.06, 0.54, 0.54, 0.90, 1.38, 0.99], ['c', 0.36, 0.06, 0.72, 0.03, 0.96, -0.06], ['c', 0.81, -0.27, 1.29, -1.23, 1.44, -2.79], ['c', 0.03, -0.45, 0.03, -1.95, -0.03, -2.37], ['c', -0.09, -0.75, -0.33, -1.23, -0.75, -1.44], ['c', -0.33, -0.18, -0.45, -0.18, -1.98, -0.18], ['c', -1.35, 0.00, -1.41, 0.00, -1.50, -0.06], ['c', -0.18, -0.12, -0.24, -0.39, -0.12, -0.60], ['c', 0.12, -0.15, 0.15, -0.15, 1.68, -0.15], ['c', 1.50, 0.00, 1.62, 0.00, 1.89, -0.15], ['c', 0.18, -0.09, 0.42, -0.36, 0.54, -0.57], ['c', 0.18, -0.42, 0.27, -0.90, 0.30, -1.95], ['c', 0.03, -1.20, -0.06, -1.80, -0.36, -2.37], ['c', -0.24, -0.48, -0.63, -0.81, -1.14, -0.96], ['c', -0.30, -0.06, -1.08, -0.06, -1.38, 0.03], ['c', -0.60, 0.15, -0.90, 0.42, -0.96, 0.84], ['c', -0.03, 0.30, 0.06, 0.45, 0.63, 0.84], ['c', 0.33, 0.24, 0.42, 0.39, 0.45, 0.63], ['c', 0.03, 0.72, -0.57, 1.50, -1.32, 1.65], ['c', -1.05, 0.27, -2.10, -0.57, -2.10, -1.65], ['c', 0.00, -0.45, 0.15, -0.96, 0.39, -1.38], ['c', 0.12, -0.21, 0.54, -0.63, 0.81, -0.81], ['c', 0.57, -0.42, 1.38, -0.69, 2.25, -0.81], ['z']],\n      w: 9.735,\n      h: 14.967\n    },\n    '4': {\n      d: [['M', 8.64, -14.94], ['c', 0.27, -0.09, 0.42, -0.12, 0.54, -0.03], ['c', 0.09, 0.06, 0.15, 0.21, 0.15, 0.30], ['c', -0.03, 0.06, -1.92, 2.31, -4.23, 5.04], ['c', -2.31, 2.73, -4.23, 4.98, -4.26, 5.01], ['c', -0.03, 0.06, 0.12, 0.06, 2.55, 0.06], ['l', 2.61, 0.00], ['l', 0.00, -2.37], ['c', 0.00, -2.19, 0.03, -2.37, 0.06, -2.46], ['c', 0.03, -0.06, 0.21, -0.18, 0.57, -0.42], ['c', 1.08, -0.72, 1.38, -1.08, 1.86, -2.16], ['c', 0.12, -0.30, 0.24, -0.54, 0.27, -0.57], ['c', 0.12, -0.12, 0.39, -0.06, 0.45, 0.12], ['c', 0.06, 0.09, 0.06, 0.57, 0.06, 3.96], ['l', 0.00, 3.90], ['l', 1.08, 0.00], ['c', 1.05, 0.00, 1.11, 0.00, 1.20, 0.06], ['c', 0.24, 0.15, 0.24, 0.54, 0.00, 0.69], ['c', -0.09, 0.06, -0.15, 0.06, -1.20, 0.06], ['l', -1.08, 0.00], ['l', 0.00, 0.33], ['c', 0.00, 0.57, 0.09, 1.11, 0.30, 1.53], ['c', 0.36, 0.75, 0.93, 1.17, 1.68, 1.26], ['c', 0.30, 0.03, 0.39, 0.09, 0.39, 0.30], ['c', 0.00, 0.15, -0.03, 0.18, -0.09, 0.24], ['c', -0.06, 0.06, -0.09, 0.06, -0.48, 0.06], ['c', -0.42, 0.00, -0.69, -0.03, -2.10, -0.24], ['c', -0.90, -0.15, -1.77, -0.15, -2.67, 0.00], ['c', -1.41, 0.21, -1.68, 0.24, -2.10, 0.24], ['c', -0.39, 0.00, -0.42, 0.00, -0.48, -0.06], ['c', -0.06, -0.06, -0.06, -0.09, -0.06, -0.24], ['c', 0.00, -0.21, 0.06, -0.27, 0.36, -0.30], ['c', 0.75, -0.09, 1.32, -0.51, 1.68, -1.26], ['c', 0.21, -0.42, 0.30, -0.96, 0.30, -1.53], ['l', 0.00, -0.33], ['l', -2.70, 0.00], ['c', -2.91, 0.00, -2.85, 0.00, -3.09, -0.15], ['c', -0.18, -0.12, -0.30, -0.39, -0.27, -0.54], ['c', 0.03, -0.06, 0.18, -0.24, 0.33, -0.45], ['c', 0.75, -0.90, 1.59, -2.07, 2.13, -3.03], ['c', 0.33, -0.54, 0.84, -1.62, 1.05, -2.16], ['c', 0.57, -1.41, 0.84, -2.64, 0.90, -4.05], ['c', 0.03, -0.63, 0.06, -0.72, 0.24, -0.81], ['l', 0.12, -0.06], ['l', 0.45, 0.12], ['c', 0.66, 0.18, 1.02, 0.24, 1.47, 0.27], ['c', 0.60, 0.03, 1.23, -0.09, 2.01, -0.33], ['z']],\n      w: 11.795,\n      h: 14.994\n    },\n    '5': {\n      d: [['M', 1.02, -14.94], ['c', 0.12, -0.09, 0.03, -0.09, 1.08, 0.06], ['c', 2.49, 0.36, 4.35, 0.36, 6.96, -0.06], ['c', 0.57, -0.09, 0.66, -0.06, 0.81, 0.06], ['c', 0.15, 0.18, 0.12, 0.24, -0.15, 0.51], ['c', -1.29, 1.26, -3.24, 2.04, -5.58, 2.31], ['c', -0.60, 0.09, -1.20, 0.12, -1.71, 0.12], ['c', -0.39, 0.00, -0.45, 0.00, -0.57, 0.06], ['c', -0.09, 0.06, -0.15, 0.12, -0.21, 0.21], ['l', -0.06, 0.12], ['l', 0.00, 1.65], ['l', 0.00, 1.65], ['l', 0.21, -0.21], ['c', 0.66, -0.57, 1.41, -0.96, 2.19, -1.14], ['c', 0.33, -0.06, 1.41, -0.06, 1.95, 0.00], ['c', 2.61, 0.36, 4.02, 1.74, 4.26, 4.14], ['c', 0.03, 0.45, 0.03, 1.08, -0.03, 1.44], ['c', -0.18, 1.02, -0.78, 2.01, -1.59, 2.70], ['c', -0.72, 0.57, -1.62, 1.02, -2.49, 1.20], ['c', -1.38, 0.27, -3.03, 0.06, -4.20, -0.54], ['c', -1.08, -0.54, -1.71, -1.32, -1.86, -2.28], ['c', -0.09, -0.69, 0.09, -1.29, 0.57, -1.74], ['c', 0.24, -0.24, 0.45, -0.39, 0.75, -0.51], ['c', 0.21, -0.06, 0.27, -0.06, 0.60, -0.06], ['c', 0.33, 0.00, 0.39, 0.00, 0.60, 0.06], ['c', 0.30, 0.12, 0.51, 0.27, 0.75, 0.51], ['c', 0.36, 0.33, 0.57, 0.75, 0.60, 1.20], ['c', 0.00, 0.21, 0.00, 0.27, -0.06, 0.42], ['c', -0.09, 0.18, -0.12, 0.24, -0.54, 0.54], ['c', -0.18, 0.12, -0.36, 0.30, -0.42, 0.33], ['c', -0.36, 0.42, -0.18, 0.99, 0.36, 1.26], ['c', 0.51, 0.27, 1.47, 0.36, 2.01, 0.27], ['c', 0.93, -0.21, 1.47, -1.17, 1.65, -2.91], ['c', 0.06, -0.45, 0.06, -1.89, 0.00, -2.31], ['c', -0.15, -1.20, -0.51, -2.10, -1.05, -2.55], ['c', -0.21, -0.18, -0.54, -0.36, -0.81, -0.39], ['c', -0.30, -0.06, -0.84, -0.03, -1.26, 0.06], ['c', -0.93, 0.18, -1.65, 0.60, -2.16, 1.20], ['c', -0.15, 0.21, -0.27, 0.30, -0.39, 0.30], ['c', -0.15, 0.00, -0.30, -0.09, -0.36, -0.18], ['c', -0.06, -0.09, -0.06, -0.15, -0.06, -3.66], ['c', 0.00, -3.39, 0.00, -3.57, 0.06, -3.66], ['c', 0.03, -0.06, 0.09, -0.15, 0.15, -0.18], ['z']],\n      w: 10.212,\n      h: 14.997\n    },\n    '6': {\n      d: [['M', 4.98, -14.97], ['c', 0.36, -0.03, 1.20, 0.00, 1.59, 0.06], ['c', 0.90, 0.15, 1.68, 0.51, 2.25, 1.05], ['c', 0.57, 0.51, 0.87, 1.23, 0.84, 1.98], ['c', -0.03, 0.51, -0.21, 0.90, -0.60, 1.26], ['c', -0.24, 0.24, -0.45, 0.39, -0.75, 0.51], ['c', -0.21, 0.06, -0.27, 0.06, -0.60, 0.06], ['c', -0.33, 0.00, -0.39, 0.00, -0.60, -0.06], ['c', -0.30, -0.12, -0.51, -0.27, -0.75, -0.51], ['c', -0.39, -0.36, -0.57, -0.78, -0.57, -1.26], ['c', 0.00, -0.27, 0.00, -0.30, 0.09, -0.42], ['c', 0.03, -0.09, 0.18, -0.21, 0.30, -0.30], ['c', 0.12, -0.09, 0.30, -0.21, 0.39, -0.27], ['c', 0.09, -0.06, 0.21, -0.18, 0.27, -0.24], ['c', 0.06, -0.12, 0.09, -0.15, 0.09, -0.33], ['c', 0.00, -0.18, -0.03, -0.24, -0.09, -0.36], ['c', -0.24, -0.39, -0.75, -0.60, -1.38, -0.57], ['c', -0.54, 0.03, -0.90, 0.18, -1.23, 0.48], ['c', -0.81, 0.72, -1.08, 2.16, -0.96, 5.37], ['l', 0.00, 0.63], ['l', 0.30, -0.12], ['c', 0.78, -0.27, 1.29, -0.33, 2.10, -0.27], ['c', 1.47, 0.12, 2.49, 0.54, 3.27, 1.29], ['c', 0.48, 0.51, 0.81, 1.11, 0.96, 1.89], ['c', 0.06, 0.27, 0.06, 0.42, 0.06, 0.93], ['c', 0.00, 0.54, 0.00, 0.69, -0.06, 0.96], ['c', -0.15, 0.78, -0.48, 1.38, -0.96, 1.89], ['c', -0.54, 0.51, -1.17, 0.87, -1.98, 1.08], ['c', -1.14, 0.30, -2.40, 0.33, -3.24, 0.03], ['c', -1.50, -0.48, -2.64, -1.89, -3.27, -4.02], ['c', -0.36, -1.23, -0.51, -2.82, -0.42, -4.08], ['c', 0.30, -3.66, 2.28, -6.30, 4.95, -6.66], ['z'], ['m', 0.66, 7.41], ['c', -0.27, -0.09, -0.81, -0.12, -1.08, -0.06], ['c', -0.72, 0.18, -1.08, 0.69, -1.23, 1.71], ['c', -0.06, 0.54, -0.06, 3.00, 0.00, 3.54], ['c', 0.18, 1.26, 0.72, 1.77, 1.80, 1.74], ['c', 0.39, -0.03, 0.63, -0.09, 0.90, -0.27], ['c', 0.66, -0.42, 0.90, -1.32, 0.90, -3.24], ['c', 0.00, -2.22, -0.36, -3.12, -1.29, -3.42], ['z']],\n      w: 9.956,\n      h: 14.982\n    },\n    '7': {\n      d: [['M', 0.21, -14.97], ['c', 0.21, -0.06, 0.45, 0.00, 0.54, 0.15], ['c', 0.06, 0.09, 0.06, 0.15, 0.06, 0.39], ['c', 0.00, 0.24, 0.00, 0.33, 0.06, 0.42], ['c', 0.06, 0.12, 0.21, 0.24, 0.27, 0.24], ['c', 0.03, 0.00, 0.12, -0.12, 0.24, -0.21], ['c', 0.96, -1.20, 2.58, -1.35, 3.99, -0.42], ['c', 0.15, 0.12, 0.42, 0.30, 0.54, 0.45], ['c', 0.48, 0.39, 0.81, 0.57, 1.29, 0.60], ['c', 0.69, 0.03, 1.50, -0.30, 2.13, -0.87], ['c', 0.09, -0.09, 0.27, -0.30, 0.39, -0.45], ['c', 0.12, -0.15, 0.24, -0.27, 0.30, -0.30], ['c', 0.18, -0.06, 0.39, 0.03, 0.51, 0.21], ['c', 0.06, 0.18, 0.06, 0.24, -0.27, 0.72], ['c', -0.18, 0.24, -0.54, 0.78, -0.78, 1.17], ['c', -2.37, 3.54, -3.54, 6.27, -3.87, 9.00], ['c', -0.03, 0.33, -0.03, 0.66, -0.03, 1.26], ['c', 0.00, 0.90, 0.00, 1.08, 0.15, 1.89], ['c', 0.06, 0.45, 0.06, 0.48, 0.03, 0.60], ['c', -0.06, 0.09, -0.21, 0.21, -0.30, 0.21], ['c', -0.03, 0.00, -0.27, -0.06, -0.54, -0.15], ['c', -0.84, -0.27, -1.11, -0.30, -1.65, -0.30], ['c', -0.57, 0.00, -0.84, 0.03, -1.56, 0.27], ['c', -0.60, 0.18, -0.69, 0.21, -0.81, 0.15], ['c', -0.12, -0.06, -0.21, -0.18, -0.21, -0.30], ['c', 0.00, -0.15, 0.60, -1.44, 1.20, -2.61], ['c', 1.14, -2.22, 2.73, -4.68, 5.10, -8.01], ['c', 0.21, -0.27, 0.36, -0.48, 0.33, -0.48], ['c', 0.00, 0.00, -0.12, 0.06, -0.27, 0.12], ['c', -0.54, 0.30, -0.99, 0.39, -1.56, 0.39], ['c', -0.75, 0.03, -1.20, -0.18, -1.83, -0.75], ['c', -0.99, -0.90, -1.83, -1.17, -2.31, -0.72], ['c', -0.18, 0.15, -0.36, 0.51, -0.45, 0.84], ['c', -0.06, 0.24, -0.06, 0.33, -0.09, 1.98], ['c', 0.00, 1.62, -0.03, 1.74, -0.06, 1.80], ['c', -0.15, 0.24, -0.54, 0.24, -0.69, 0.00], ['c', -0.06, -0.09, -0.06, -0.15, -0.06, -3.57], ['c', 0.00, -3.42, 0.00, -3.48, 0.06, -3.57], ['c', 0.03, -0.06, 0.09, -0.12, 0.15, -0.15], ['z']],\n      w: 10.561,\n      h: 15.093\n    },\n    '8': {\n      d: [['M', 4.98, -14.97], ['c', 0.33, -0.03, 1.02, -0.03, 1.32, 0.00], ['c', 1.32, 0.12, 2.49, 0.60, 3.21, 1.32], ['c', 0.39, 0.39, 0.66, 0.81, 0.78, 1.29], ['c', 0.09, 0.36, 0.09, 1.08, 0.00, 1.44], ['c', -0.21, 0.84, -0.66, 1.59, -1.59, 2.55], ['l', -0.30, 0.30], ['l', 0.27, 0.18], ['c', 1.47, 0.93, 2.31, 2.31, 2.25, 3.75], ['c', -0.03, 0.75, -0.24, 1.35, -0.63, 1.95], ['c', -0.45, 0.66, -1.02, 1.14, -1.83, 1.53], ['c', -1.80, 0.87, -4.20, 0.87, -6.00, 0.03], ['c', -1.62, -0.78, -2.52, -2.16, -2.46, -3.66], ['c', 0.06, -0.99, 0.54, -1.77, 1.80, -2.97], ['c', 0.54, -0.51, 0.54, -0.54, 0.48, -0.57], ['c', -0.39, -0.27, -0.96, -0.78, -1.20, -1.14], ['c', -0.75, -1.11, -0.87, -2.40, -0.30, -3.60], ['c', 0.69, -1.35, 2.25, -2.25, 4.20, -2.40], ['z'], ['m', 1.53, 0.69], ['c', -0.42, -0.09, -1.11, -0.12, -1.38, -0.06], ['c', -0.30, 0.06, -0.60, 0.18, -0.81, 0.30], ['c', -0.21, 0.12, -0.60, 0.51, -0.72, 0.72], ['c', -0.51, 0.87, -0.42, 1.89, 0.21, 2.52], ['c', 0.21, 0.21, 0.36, 0.30, 1.95, 1.23], ['c', 0.96, 0.54, 1.74, 0.99, 1.77, 1.02], ['c', 0.09, 0.00, 0.63, -0.60, 0.99, -1.11], ['c', 0.21, -0.36, 0.48, -0.87, 0.57, -1.23], ['c', 0.06, -0.24, 0.06, -0.36, 0.06, -0.72], ['c', 0.00, -0.45, -0.03, -0.66, -0.15, -0.99], ['c', -0.39, -0.81, -1.29, -1.44, -2.49, -1.68], ['z'], ['m', -1.44, 8.07], ['l', -1.89, -1.08], ['c', -0.03, 0.00, -0.18, 0.15, -0.39, 0.33], ['c', -1.20, 1.08, -1.65, 1.95, -1.59, 3.00], ['c', 0.09, 1.59, 1.35, 2.85, 3.21, 3.24], ['c', 0.33, 0.06, 0.45, 0.06, 0.93, 0.06], ['c', 0.63, 0.00, 0.81, -0.03, 1.29, -0.27], ['c', 0.90, -0.42, 1.47, -1.41, 1.41, -2.40], ['c', -0.06, -0.66, -0.39, -1.29, -0.90, -1.65], ['c', -0.12, -0.09, -1.05, -0.63, -2.07, -1.23], ['z']],\n      w: 10.926,\n      h: 14.989\n    },\n    '9': {\n      d: [['M', 4.23, -14.97], ['c', 0.42, -0.03, 1.29, 0.00, 1.62, 0.06], ['c', 0.51, 0.12, 0.93, 0.30, 1.38, 0.57], ['c', 1.53, 1.02, 2.52, 3.24, 2.73, 5.94], ['c', 0.18, 2.55, -0.48, 4.98, -1.83, 6.57], ['c', -1.05, 1.26, -2.40, 1.89, -3.93, 1.83], ['c', -1.23, -0.06, -2.31, -0.45, -3.03, -1.14], ['c', -0.57, -0.51, -0.87, -1.23, -0.84, -1.98], ['c', 0.03, -0.51, 0.21, -0.90, 0.60, -1.26], ['c', 0.24, -0.24, 0.45, -0.39, 0.75, -0.51], ['c', 0.21, -0.06, 0.27, -0.06, 0.60, -0.06], ['c', 0.33, 0.00, 0.39, 0.00, 0.60, 0.06], ['c', 0.30, 0.12, 0.51, 0.27, 0.75, 0.51], ['c', 0.39, 0.36, 0.57, 0.78, 0.57, 1.26], ['c', 0.00, 0.27, 0.00, 0.30, -0.09, 0.42], ['c', -0.03, 0.09, -0.18, 0.21, -0.30, 0.30], ['c', -0.12, 0.09, -0.30, 0.21, -0.39, 0.27], ['c', -0.09, 0.06, -0.21, 0.18, -0.27, 0.24], ['c', -0.06, 0.12, -0.06, 0.15, -0.06, 0.33], ['c', 0.00, 0.18, 0.00, 0.24, 0.06, 0.36], ['c', 0.24, 0.39, 0.75, 0.60, 1.38, 0.57], ['c', 0.54, -0.03, 0.90, -0.18, 1.23, -0.48], ['c', 0.81, -0.72, 1.08, -2.16, 0.96, -5.37], ['l', 0.00, -0.63], ['l', -0.30, 0.12], ['c', -0.78, 0.27, -1.29, 0.33, -2.10, 0.27], ['c', -1.47, -0.12, -2.49, -0.54, -3.27, -1.29], ['c', -0.48, -0.51, -0.81, -1.11, -0.96, -1.89], ['c', -0.06, -0.27, -0.06, -0.42, -0.06, -0.96], ['c', 0.00, -0.51, 0.00, -0.66, 0.06, -0.93], ['c', 0.15, -0.78, 0.48, -1.38, 0.96, -1.89], ['c', 0.15, -0.12, 0.33, -0.27, 0.42, -0.36], ['c', 0.69, -0.51, 1.62, -0.81, 2.76, -0.93], ['z'], ['m', 1.17, 0.66], ['c', -0.21, -0.06, -0.57, -0.06, -0.81, -0.03], ['c', -0.78, 0.12, -1.26, 0.69, -1.41, 1.74], ['c', -0.12, 0.63, -0.15, 1.95, -0.09, 2.79], ['c', 0.12, 1.71, 0.63, 2.40, 1.77, 2.46], ['c', 1.08, 0.03, 1.62, -0.48, 1.80, -1.74], ['c', 0.06, -0.54, 0.06, -3.00, 0.00, -3.54], ['c', -0.15, -1.05, -0.51, -1.53, -1.26, -1.68], ['z']],\n      w: 9.959,\n      h: 14.986\n    },\n    'rests.multimeasure': {\n      d: [['M', 0, -4], ['l', 0, 16], ['l', 1, 0], ['l', 0, -5], ['l', 40, 0], ['l', 0, 5], ['l', 1, 0], ['l', 0, -16], ['l', -1, 0], ['l', 0, 5], ['l', -40, 0], ['l', 0, -5], ['z']],\n      w: 42,\n      h: 18\n    },\n    'rests.whole': {\n      d: [['M', 0.06, 0.03], ['l', 0.09, -0.06], ['l', 5.46, 0.00], ['l', 5.49, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 2.19], ['l', 0.00, 2.19], ['l', -0.06, 0.09], ['l', -0.09, 0.06], ['l', -5.49, 0.00], ['l', -5.46, 0.00], ['l', -0.09, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -2.19], ['l', 0.00, -2.19], ['z']],\n      w: 11.25,\n      h: 4.68\n    },\n    'rests.half': {\n      d: [['M', 0.06, -4.62], ['l', 0.09, -0.06], ['l', 5.46, 0.00], ['l', 5.49, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 2.19], ['l', 0.00, 2.19], ['l', -0.06, 0.09], ['l', -0.09, 0.06], ['l', -5.49, 0.00], ['l', -5.46, 0.00], ['l', -0.09, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -2.19], ['l', 0.00, -2.19], ['z']],\n      w: 11.25,\n      h: 4.68\n    },\n    'rests.quarter': {\n      d: [['M', 1.89, -11.82], ['c', 0.12, -0.06, 0.24, -0.06, 0.36, -0.03], ['c', 0.09, 0.06, 4.74, 5.58, 4.86, 5.82], ['c', 0.21, 0.39, 0.15, 0.78, -0.15, 1.26], ['c', -0.24, 0.33, -0.72, 0.81, -1.62, 1.56], ['c', -0.45, 0.36, -0.87, 0.75, -0.96, 0.84], ['c', -0.93, 0.99, -1.14, 2.49, -0.60, 3.63], ['c', 0.18, 0.39, 0.27, 0.48, 1.32, 1.68], ['c', 1.92, 2.25, 1.83, 2.16, 1.83, 2.34], ['c', 0.00, 0.18, -0.18, 0.36, -0.36, 0.39], ['c', -0.15, 0.00, -0.27, -0.06, -0.48, -0.27], ['c', -0.75, -0.75, -2.46, -1.29, -3.39, -1.08], ['c', -0.45, 0.09, -0.69, 0.27, -0.90, 0.69], ['c', -0.12, 0.30, -0.21, 0.66, -0.24, 1.14], ['c', -0.03, 0.66, 0.09, 1.35, 0.30, 2.01], ['c', 0.15, 0.42, 0.24, 0.66, 0.45, 0.96], ['c', 0.18, 0.24, 0.18, 0.33, 0.03, 0.42], ['c', -0.12, 0.06, -0.18, 0.03, -0.45, -0.30], ['c', -1.08, -1.38, -2.07, -3.36, -2.40, -4.83], ['c', -0.27, -1.05, -0.15, -1.77, 0.27, -2.07], ['c', 0.21, -0.12, 0.42, -0.15, 0.87, -0.15], ['c', 0.87, 0.06, 2.10, 0.39, 3.30, 0.90], ['l', 0.39, 0.18], ['l', -1.65, -1.95], ['c', -2.52, -2.97, -2.61, -3.09, -2.70, -3.27], ['c', -0.09, -0.24, -0.12, -0.48, -0.03, -0.75], ['c', 0.15, -0.48, 0.57, -0.96, 1.83, -2.01], ['c', 0.45, -0.36, 0.84, -0.72, 0.93, -0.78], ['c', 0.69, -0.75, 1.02, -1.80, 0.90, -2.79], ['c', -0.06, -0.33, -0.21, -0.84, -0.39, -1.11], ['c', -0.09, -0.15, -0.45, -0.60, -0.81, -1.05], ['c', -0.36, -0.42, -0.69, -0.81, -0.72, -0.87], ['c', -0.09, -0.18, 0.00, -0.42, 0.21, -0.51], ['z']],\n      w: 7.888,\n      h: 21.435\n    },\n    'rests.8th': {\n      d: [['M', 1.68, -6.12], ['c', 0.66, -0.09, 1.23, 0.09, 1.68, 0.51], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.12, 0.27, 0.33, 0.45, 0.60, 0.48], ['c', 0.12, 0.00, 0.18, 0.00, 0.33, -0.09], ['c', 0.39, -0.18, 1.32, -1.29, 1.68, -1.98], ['c', 0.09, -0.21, 0.24, -0.30, 0.39, -0.30], ['c', 0.12, 0.00, 0.27, 0.09, 0.33, 0.18], ['c', 0.03, 0.06, -0.27, 1.11, -1.86, 6.42], ['c', -1.02, 3.48, -1.89, 6.39, -1.92, 6.42], ['c', 0.00, 0.03, -0.12, 0.12, -0.24, 0.15], ['c', -0.18, 0.09, -0.21, 0.09, -0.45, 0.09], ['c', -0.24, 0.00, -0.30, 0.00, -0.48, -0.06], ['c', -0.09, -0.06, -0.21, -0.12, -0.21, -0.15], ['c', -0.06, -0.03, 0.15, -0.57, 1.68, -4.92], ['c', 0.96, -2.67, 1.74, -4.89, 1.71, -4.89], ['l', -0.51, 0.15], ['c', -1.08, 0.36, -1.74, 0.48, -2.55, 0.48], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.33, -0.45, 0.84, -0.81, 1.38, -0.90], ['z']],\n      w: 7.534,\n      h: 13.883\n    },\n    'rests.16th': {\n      d: [['M', 3.33, -6.12], ['c', 0.66, -0.09, 1.23, 0.09, 1.68, 0.51], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.15, 0.39, 0.57, 0.57, 0.87, 0.42], ['c', 0.39, -0.18, 1.20, -1.23, 1.62, -2.07], ['c', 0.06, -0.15, 0.24, -0.24, 0.36, -0.24], ['c', 0.12, 0.00, 0.27, 0.09, 0.33, 0.18], ['c', 0.03, 0.06, -0.45, 1.86, -2.67, 10.17], ['c', -1.50, 5.55, -2.73, 10.14, -2.76, 10.17], ['c', -0.03, 0.03, -0.12, 0.12, -0.24, 0.15], ['c', -0.18, 0.09, -0.21, 0.09, -0.45, 0.09], ['c', -0.24, 0.00, -0.30, 0.00, -0.48, -0.06], ['c', -0.09, -0.06, -0.21, -0.12, -0.21, -0.15], ['c', -0.06, -0.03, 0.12, -0.57, 1.44, -4.92], ['c', 0.81, -2.67, 1.47, -4.86, 1.47, -4.89], ['c', -0.03, 0.00, -0.27, 0.06, -0.54, 0.15], ['c', -1.08, 0.36, -1.77, 0.48, -2.58, 0.48], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.72, -1.05, 2.22, -1.23, 3.06, -0.42], ['c', 0.30, 0.33, 0.42, 0.60, 0.60, 1.38], ['c', 0.09, 0.45, 0.21, 0.78, 0.33, 0.90], ['c', 0.09, 0.09, 0.27, 0.18, 0.45, 0.21], ['c', 0.12, 0.00, 0.18, 0.00, 0.33, -0.09], ['c', 0.33, -0.15, 1.02, -0.93, 1.41, -1.59], ['c', 0.12, -0.21, 0.18, -0.39, 0.39, -1.08], ['c', 0.66, -2.10, 1.17, -3.84, 1.17, -3.87], ['c', 0.00, 0.00, -0.21, 0.06, -0.42, 0.15], ['c', -0.51, 0.15, -1.20, 0.33, -1.68, 0.42], ['c', -0.33, 0.06, -0.51, 0.06, -0.96, 0.06], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.33, -0.45, 0.84, -0.81, 1.38, -0.90], ['z']],\n      w: 9.724,\n      h: 21.383\n    },\n    'rests.32nd': {\n      d: [['M', 4.23, -13.62], ['c', 0.66, -0.09, 1.23, 0.09, 1.68, 0.51], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.12, 0.27, 0.33, 0.45, 0.60, 0.48], ['c', 0.12, 0.00, 0.18, 0.00, 0.27, -0.06], ['c', 0.33, -0.21, 0.99, -1.11, 1.44, -1.98], ['c', 0.09, -0.24, 0.21, -0.33, 0.39, -0.33], ['c', 0.12, 0.00, 0.27, 0.09, 0.33, 0.18], ['c', 0.03, 0.06, -0.57, 2.67, -3.21, 13.89], ['c', -1.80, 7.62, -3.30, 13.89, -3.30, 13.92], ['c', -0.03, 0.06, -0.12, 0.12, -0.24, 0.18], ['c', -0.21, 0.09, -0.24, 0.09, -0.48, 0.09], ['c', -0.24, 0.00, -0.30, 0.00, -0.48, -0.06], ['c', -0.09, -0.06, -0.21, -0.12, -0.21, -0.15], ['c', -0.06, -0.03, 0.09, -0.57, 1.23, -4.92], ['c', 0.69, -2.67, 1.26, -4.86, 1.29, -4.89], ['c', 0.00, -0.03, -0.12, -0.03, -0.48, 0.12], ['c', -1.17, 0.39, -2.22, 0.57, -3.00, 0.54], ['c', -0.42, -0.03, -0.75, -0.12, -1.11, -0.30], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.72, -1.05, 2.22, -1.23, 3.06, -0.42], ['c', 0.30, 0.33, 0.42, 0.60, 0.60, 1.38], ['c', 0.09, 0.45, 0.21, 0.78, 0.33, 0.90], ['c', 0.12, 0.09, 0.30, 0.18, 0.48, 0.21], ['c', 0.12, 0.00, 0.18, 0.00, 0.30, -0.09], ['c', 0.42, -0.21, 1.29, -1.29, 1.56, -1.89], ['c', 0.03, -0.12, 1.23, -4.59, 1.23, -4.65], ['c', 0.00, -0.03, -0.18, 0.03, -0.39, 0.12], ['c', -0.63, 0.18, -1.20, 0.36, -1.74, 0.45], ['c', -0.39, 0.06, -0.54, 0.06, -1.02, 0.06], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.72, -1.05, 2.22, -1.23, 3.06, -0.42], ['c', 0.30, 0.33, 0.42, 0.60, 0.60, 1.38], ['c', 0.09, 0.45, 0.21, 0.78, 0.33, 0.90], ['c', 0.18, 0.18, 0.51, 0.27, 0.72, 0.15], ['c', 0.30, -0.12, 0.69, -0.57, 1.08, -1.17], ['c', 0.42, -0.60, 0.39, -0.51, 1.05, -3.03], ['c', 0.33, -1.26, 0.60, -2.31, 0.60, -2.34], ['c', 0.00, 0.00, -0.21, 0.03, -0.45, 0.12], ['c', -0.57, 0.18, -1.14, 0.33, -1.62, 0.42], ['c', -0.33, 0.06, -0.51, 0.06, -0.96, 0.06], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.33, -0.45, 0.84, -0.81, 1.38, -0.90], ['z']],\n      w: 11.373,\n      h: 28.883\n    },\n    'rests.64th': {\n      d: [['M', 5.13, -13.62], ['c', 0.66, -0.09, 1.23, 0.09, 1.68, 0.51], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.15, 0.63, 0.21, 0.81, 0.33, 0.96], ['c', 0.18, 0.21, 0.54, 0.30, 0.75, 0.18], ['c', 0.24, -0.12, 0.63, -0.66, 1.08, -1.56], ['c', 0.33, -0.66, 0.39, -0.72, 0.60, -0.72], ['c', 0.12, 0.00, 0.27, 0.09, 0.33, 0.18], ['c', 0.03, 0.06, -0.69, 3.66, -3.54, 17.64], ['c', -1.95, 9.66, -3.57, 17.61, -3.57, 17.64], ['c', -0.03, 0.06, -0.12, 0.12, -0.24, 0.18], ['c', -0.21, 0.09, -0.24, 0.09, -0.48, 0.09], ['c', -0.24, 0.00, -0.30, 0.00, -0.48, -0.06], ['c', -0.09, -0.06, -0.21, -0.12, -0.21, -0.15], ['c', -0.06, -0.03, 0.06, -0.57, 1.05, -4.95], ['c', 0.60, -2.70, 1.08, -4.89, 1.08, -4.92], ['c', 0.00, 0.00, -0.24, 0.06, -0.51, 0.15], ['c', -0.66, 0.24, -1.20, 0.36, -1.77, 0.48], ['c', -0.42, 0.06, -0.57, 0.06, -1.05, 0.06], ['c', -0.69, 0.00, -0.87, -0.03, -1.35, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.72, -1.05, 2.22, -1.23, 3.06, -0.42], ['c', 0.30, 0.33, 0.42, 0.60, 0.60, 1.38], ['c', 0.09, 0.45, 0.21, 0.78, 0.33, 0.90], ['c', 0.09, 0.09, 0.27, 0.18, 0.45, 0.21], ['c', 0.21, 0.03, 0.39, -0.09, 0.72, -0.42], ['c', 0.45, -0.45, 1.02, -1.26, 1.17, -1.65], ['c', 0.03, -0.09, 0.27, -1.14, 0.54, -2.34], ['c', 0.27, -1.20, 0.48, -2.19, 0.51, -2.22], ['c', 0.00, -0.03, -0.09, -0.03, -0.48, 0.12], ['c', -1.17, 0.39, -2.22, 0.57, -3.00, 0.54], ['c', -0.42, -0.03, -0.75, -0.12, -1.11, -0.30], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.15, 0.39, 0.57, 0.57, 0.90, 0.42], ['c', 0.36, -0.18, 1.20, -1.26, 1.47, -1.89], ['c', 0.03, -0.09, 0.30, -1.20, 0.57, -2.43], ['l', 0.51, -2.28], ['l', -0.54, 0.18], ['c', -1.11, 0.36, -1.80, 0.48, -2.61, 0.48], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.15, 0.63, 0.21, 0.81, 0.33, 0.96], ['c', 0.21, 0.21, 0.54, 0.30, 0.75, 0.18], ['c', 0.36, -0.18, 0.93, -0.93, 1.29, -1.68], ['c', 0.12, -0.24, 0.18, -0.48, 0.63, -2.55], ['l', 0.51, -2.31], ['c', 0.00, -0.03, -0.18, 0.03, -0.39, 0.12], ['c', -1.14, 0.36, -2.10, 0.54, -2.82, 0.51], ['c', -0.42, -0.03, -0.75, -0.12, -1.11, -0.30], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.33, -0.45, 0.84, -0.81, 1.38, -0.90], ['z']],\n      w: 12.453,\n      h: 36.383\n    },\n    'rests.128th': {\n      d: [['M', 6.03, -21.12], ['c', 0.66, -0.09, 1.23, 0.09, 1.68, 0.51], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.12, 0.27, 0.33, 0.45, 0.60, 0.48], ['c', 0.21, 0.00, 0.33, -0.06, 0.54, -0.36], ['c', 0.15, -0.21, 0.54, -0.93, 0.78, -1.47], ['c', 0.15, -0.33, 0.18, -0.39, 0.30, -0.48], ['c', 0.18, -0.09, 0.45, 0.00, 0.51, 0.15], ['c', 0.03, 0.09, -7.11, 42.75, -7.17, 42.84], ['c', -0.03, 0.03, -0.15, 0.09, -0.24, 0.15], ['c', -0.18, 0.06, -0.24, 0.06, -0.45, 0.06], ['c', -0.24, 0.00, -0.30, 0.00, -0.48, -0.06], ['c', -0.09, -0.06, -0.21, -0.12, -0.21, -0.15], ['c', -0.06, -0.03, 0.03, -0.57, 0.84, -4.98], ['c', 0.51, -2.70, 0.93, -4.92, 0.90, -4.92], ['c', 0.00, 0.00, -0.15, 0.06, -0.36, 0.12], ['c', -0.78, 0.27, -1.62, 0.48, -2.31, 0.57], ['c', -0.15, 0.03, -0.54, 0.03, -0.81, 0.03], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.12, 0.27, 0.33, 0.45, 0.63, 0.48], ['c', 0.12, 0.00, 0.18, 0.00, 0.30, -0.09], ['c', 0.42, -0.21, 1.14, -1.11, 1.50, -1.83], ['c', 0.12, -0.27, 0.12, -0.27, 0.54, -2.52], ['c', 0.24, -1.23, 0.42, -2.25, 0.39, -2.25], ['c', 0.00, 0.00, -0.24, 0.06, -0.51, 0.18], ['c', -1.26, 0.39, -2.25, 0.57, -3.06, 0.54], ['c', -0.42, -0.03, -0.75, -0.12, -1.11, -0.30], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.15, 0.63, 0.21, 0.81, 0.33, 0.96], ['c', 0.18, 0.21, 0.51, 0.30, 0.75, 0.18], ['c', 0.36, -0.15, 1.05, -0.99, 1.41, -1.77], ['l', 0.15, -0.30], ['l', 0.42, -2.25], ['c', 0.21, -1.26, 0.42, -2.28, 0.39, -2.28], ['l', -0.51, 0.15], ['c', -1.11, 0.39, -1.89, 0.51, -2.70, 0.51], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.15, 0.63, 0.21, 0.81, 0.33, 0.96], ['c', 0.18, 0.18, 0.48, 0.27, 0.72, 0.21], ['c', 0.33, -0.12, 1.14, -1.26, 1.41, -1.95], ['c', 0.00, -0.09, 0.21, -1.11, 0.45, -2.34], ['c', 0.21, -1.20, 0.39, -2.22, 0.39, -2.28], ['c', 0.03, -0.03, 0.00, -0.03, -0.45, 0.12], ['c', -0.57, 0.18, -1.20, 0.33, -1.71, 0.42], ['c', -0.30, 0.06, -0.51, 0.06, -0.93, 0.06], ['c', -0.66, 0.00, -0.84, -0.03, -1.32, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.36, -0.54, 0.96, -0.87, 1.65, -0.93], ['c', 0.54, -0.03, 1.02, 0.15, 1.41, 0.54], ['c', 0.27, 0.30, 0.39, 0.54, 0.57, 1.26], ['c', 0.09, 0.33, 0.18, 0.66, 0.21, 0.72], ['c', 0.12, 0.27, 0.33, 0.45, 0.60, 0.48], ['c', 0.18, 0.00, 0.36, -0.09, 0.57, -0.33], ['c', 0.33, -0.36, 0.78, -1.14, 0.93, -1.56], ['c', 0.03, -0.12, 0.24, -1.20, 0.45, -2.40], ['c', 0.24, -1.20, 0.42, -2.22, 0.42, -2.28], ['c', 0.03, -0.03, 0.00, -0.03, -0.39, 0.09], ['c', -1.05, 0.36, -1.80, 0.48, -2.58, 0.48], ['c', -0.63, 0.00, -0.84, -0.03, -1.29, -0.27], ['c', -1.32, -0.63, -1.77, -2.16, -1.02, -3.30], ['c', 0.33, -0.45, 0.84, -0.81, 1.38, -0.90], ['z']],\n      w: 12.992,\n      h: 43.883\n    },\n    'accidentals.sharp': {\n      d: [['M', 5.73, -11.19], ['c', 0.21, -0.12, 0.54, -0.03, 0.66, 0.24], ['c', 0.06, 0.12, 0.06, 0.21, 0.06, 2.31], ['c', 0.00, 1.23, 0.00, 2.22, 0.03, 2.22], ['c', 0.00, 0.00, 0.27, -0.12, 0.60, -0.24], ['c', 0.69, -0.27, 0.78, -0.30, 0.96, -0.15], ['c', 0.21, 0.15, 0.21, 0.18, 0.21, 1.38], ['c', 0.00, 1.02, 0.00, 1.11, -0.06, 1.20], ['c', -0.03, 0.06, -0.09, 0.12, -0.12, 0.15], ['c', -0.06, 0.03, -0.42, 0.21, -0.84, 0.36], ['l', -0.75, 0.33], ['l', -0.03, 2.43], ['c', 0.00, 1.32, 0.00, 2.43, 0.03, 2.43], ['c', 0.00, 0.00, 0.27, -0.12, 0.60, -0.24], ['c', 0.69, -0.27, 0.78, -0.30, 0.96, -0.15], ['c', 0.21, 0.15, 0.21, 0.18, 0.21, 1.38], ['c', 0.00, 1.02, 0.00, 1.11, -0.06, 1.20], ['c', -0.03, 0.06, -0.09, 0.12, -0.12, 0.15], ['c', -0.06, 0.03, -0.42, 0.21, -0.84, 0.36], ['l', -0.75, 0.33], ['l', -0.03, 2.52], ['c', 0.00, 2.28, -0.03, 2.55, -0.06, 2.64], ['c', -0.21, 0.36, -0.72, 0.36, -0.93, 0.00], ['c', -0.03, -0.09, -0.06, -0.33, -0.06, -2.43], ['l', 0.00, -2.31], ['l', -1.29, 0.51], ['l', -1.26, 0.51], ['l', 0.00, 2.43], ['c', 0.00, 2.58, 0.00, 2.52, -0.15, 2.67], ['c', -0.06, 0.09, -0.27, 0.18, -0.36, 0.18], ['c', -0.12, 0.00, -0.33, -0.09, -0.39, -0.18], ['c', -0.15, -0.15, -0.15, -0.09, -0.15, -2.43], ['c', 0.00, -1.23, 0.00, -2.22, -0.03, -2.22], ['c', 0.00, 0.00, -0.27, 0.12, -0.60, 0.24], ['c', -0.69, 0.27, -0.78, 0.30, -0.96, 0.15], ['c', -0.21, -0.15, -0.21, -0.18, -0.21, -1.38], ['c', 0.00, -1.02, 0.00, -1.11, 0.06, -1.20], ['c', 0.03, -0.06, 0.09, -0.12, 0.12, -0.15], ['c', 0.06, -0.03, 0.42, -0.21, 0.84, -0.36], ['l', 0.78, -0.33], ['l', 0.00, -2.43], ['c', 0.00, -1.32, 0.00, -2.43, -0.03, -2.43], ['c', 0.00, 0.00, -0.27, 0.12, -0.60, 0.24], ['c', -0.69, 0.27, -0.78, 0.30, -0.96, 0.15], ['c', -0.21, -0.15, -0.21, -0.18, -0.21, -1.38], ['c', 0.00, -1.02, 0.00, -1.11, 0.06, -1.20], ['c', 0.03, -0.06, 0.09, -0.12, 0.12, -0.15], ['c', 0.06, -0.03, 0.42, -0.21, 0.84, -0.36], ['l', 0.78, -0.33], ['l', 0.00, -2.52], ['c', 0.00, -2.28, 0.03, -2.55, 0.06, -2.64], ['c', 0.21, -0.36, 0.72, -0.36, 0.93, 0.00], ['c', 0.03, 0.09, 0.06, 0.33, 0.06, 2.43], ['l', 0.03, 2.31], ['l', 1.26, -0.51], ['l', 1.26, -0.51], ['l', 0.00, -2.43], ['c', 0.00, -2.28, 0.00, -2.43, 0.06, -2.55], ['c', 0.06, -0.12, 0.12, -0.18, 0.27, -0.24], ['z'], ['m', -0.33, 10.65], ['l', 0.00, -2.43], ['l', -1.29, 0.51], ['l', -1.26, 0.51], ['l', 0.00, 2.46], ['l', 0.00, 2.43], ['l', 0.09, -0.03], ['c', 0.06, -0.03, 0.63, -0.27, 1.29, -0.51], ['l', 1.17, -0.48], ['l', 0.00, -2.46], ['z']],\n      w: 8.25,\n      h: 22.462\n    },\n    'accidentals.halfsharp': {\n      d: [['M', 2.43, -10.05], ['c', 0.21, -0.12, 0.54, -0.03, 0.66, 0.24], ['c', 0.06, 0.12, 0.06, 0.21, 0.06, 2.01], ['c', 0.00, 1.05, 0.00, 1.89, 0.03, 1.89], ['l', 0.72, -0.48], ['c', 0.69, -0.48, 0.69, -0.51, 0.87, -0.51], ['c', 0.15, 0.00, 0.18, 0.03, 0.27, 0.09], ['c', 0.21, 0.15, 0.21, 0.18, 0.21, 1.41], ['c', 0.00, 1.11, -0.03, 1.14, -0.09, 1.23], ['c', -0.03, 0.03, -0.48, 0.39, -1.02, 0.75], ['l', -0.99, 0.66], ['l', 0.00, 2.37], ['c', 0.00, 1.32, 0.00, 2.37, 0.03, 2.37], ['l', 0.72, -0.48], ['c', 0.69, -0.48, 0.69, -0.51, 0.87, -0.51], ['c', 0.15, 0.00, 0.18, 0.03, 0.27, 0.09], ['c', 0.21, 0.15, 0.21, 0.18, 0.21, 1.41], ['c', 0.00, 1.11, -0.03, 1.14, -0.09, 1.23], ['c', -0.03, 0.03, -0.48, 0.39, -1.02, 0.75], ['l', -0.99, 0.66], ['l', 0.00, 2.25], ['c', 0.00, 1.95, 0.00, 2.28, -0.06, 2.37], ['c', -0.06, 0.12, -0.12, 0.21, -0.24, 0.27], ['c', -0.27, 0.12, -0.54, 0.03, -0.69, -0.24], ['c', -0.06, -0.12, -0.06, -0.21, -0.06, -2.01], ['c', 0.00, -1.05, 0.00, -1.89, -0.03, -1.89], ['l', -0.72, 0.48], ['c', -0.69, 0.48, -0.69, 0.48, -0.87, 0.48], ['c', -0.15, 0.00, -0.18, 0.00, -0.27, -0.06], ['c', -0.21, -0.15, -0.21, -0.18, -0.21, -1.41], ['c', 0.00, -1.11, 0.03, -1.14, 0.09, -1.23], ['c', 0.03, -0.03, 0.48, -0.39, 1.02, -0.75], ['l', 0.99, -0.66], ['l', 0.00, -2.37], ['c', 0.00, -1.32, 0.00, -2.37, -0.03, -2.37], ['l', -0.72, 0.48], ['c', -0.69, 0.48, -0.69, 0.48, -0.87, 0.48], ['c', -0.15, 0.00, -0.18, 0.00, -0.27, -0.06], ['c', -0.21, -0.15, -0.21, -0.18, -0.21, -1.41], ['c', 0.00, -1.11, 0.03, -1.14, 0.09, -1.23], ['c', 0.03, -0.03, 0.48, -0.39, 1.02, -0.75], ['l', 0.99, -0.66], ['l', 0.00, -2.25], ['c', 0.00, -2.13, 0.00, -2.28, 0.06, -2.40], ['c', 0.06, -0.12, 0.12, -0.18, 0.27, -0.24], ['z']],\n      w: 5.25,\n      h: 20.174\n    },\n    'accidentals.nat': {\n      d: [['M', 0.21, -11.40], ['c', 0.24, -0.06, 0.78, 0.00, 0.99, 0.15], ['c', 0.03, 0.03, 0.03, 0.48, 0.00, 2.61], ['c', -0.03, 1.44, -0.03, 2.61, -0.03, 2.61], ['c', 0.00, 0.03, 0.75, -0.09, 1.68, -0.24], ['c', 0.96, -0.18, 1.71, -0.27, 1.74, -0.27], ['c', 0.15, 0.03, 0.27, 0.15, 0.36, 0.30], ['l', 0.06, 0.12], ['l', 0.09, 8.67], ['c', 0.09, 6.96, 0.12, 8.67, 0.09, 8.67], ['c', -0.03, 0.03, -0.12, 0.06, -0.21, 0.09], ['c', -0.24, 0.09, -0.72, 0.09, -0.96, 0.00], ['c', -0.09, -0.03, -0.18, -0.06, -0.21, -0.09], ['c', -0.03, -0.03, -0.03, -0.48, 0.00, -2.61], ['c', 0.03, -1.44, 0.03, -2.61, 0.03, -2.61], ['c', 0.00, -0.03, -0.75, 0.09, -1.68, 0.24], ['c', -0.96, 0.18, -1.71, 0.27, -1.74, 0.27], ['c', -0.15, -0.03, -0.27, -0.15, -0.36, -0.30], ['l', -0.06, -0.15], ['l', -0.09, -7.53], ['c', -0.06, -4.14, -0.09, -8.04, -0.12, -8.67], ['l', 0.00, -1.11], ['l', 0.15, -0.06], ['c', 0.09, -0.03, 0.21, -0.06, 0.27, -0.09], ['z'], ['m', 3.75, 8.40], ['c', 0.00, -0.33, 0.00, -0.42, -0.03, -0.42], ['c', -0.12, 0.00, -2.79, 0.45, -2.79, 0.48], ['c', -0.03, 0.00, -0.09, 6.30, -0.09, 6.33], ['c', 0.03, 0.00, 2.79, -0.45, 2.82, -0.48], ['c', 0.00, 0.00, 0.09, -4.53, 0.09, -5.91], ['z']],\n      w: 5.4,\n      h: 22.8\n    },\n    'accidentals.flat': {\n      d: [['M', -0.36, -14.07], ['c', 0.33, -0.06, 0.87, 0.00, 1.08, 0.15], ['c', 0.06, 0.03, 0.06, 0.36, -0.03, 5.25], ['c', -0.06, 2.85, -0.09, 5.19, -0.09, 5.19], ['c', 0.00, 0.03, 0.12, -0.03, 0.24, -0.12], ['c', 0.63, -0.42, 1.41, -0.66, 2.19, -0.72], ['c', 0.81, -0.03, 1.47, 0.21, 2.04, 0.78], ['c', 0.57, 0.54, 0.87, 1.26, 0.93, 2.04], ['c', 0.03, 0.57, -0.09, 1.08, -0.36, 1.62], ['c', -0.42, 0.81, -1.02, 1.38, -2.82, 2.61], ['c', -1.14, 0.78, -1.44, 1.02, -1.80, 1.44], ['c', -0.18, 0.18, -0.39, 0.39, -0.45, 0.42], ['c', -0.27, 0.18, -0.57, 0.15, -0.81, -0.06], ['c', -0.06, -0.09, -0.12, -0.18, -0.15, -0.27], ['c', -0.03, -0.06, -0.09, -3.27, -0.18, -8.34], ['c', -0.09, -4.53, -0.15, -8.58, -0.18, -9.03], ['l', 0.00, -0.78], ['l', 0.12, -0.06], ['c', 0.06, -0.03, 0.18, -0.09, 0.27, -0.12], ['z'], ['m', 3.18, 11.01], ['c', -0.21, -0.12, -0.54, -0.15, -0.81, -0.06], ['c', -0.54, 0.15, -0.99, 0.63, -1.17, 1.26], ['c', -0.06, 0.30, -0.12, 2.88, -0.06, 3.87], ['c', 0.03, 0.42, 0.03, 0.81, 0.06, 0.90], ['l', 0.03, 0.12], ['l', 0.45, -0.39], ['c', 0.63, -0.54, 1.26, -1.17, 1.56, -1.59], ['c', 0.30, -0.42, 0.60, -0.99, 0.72, -1.41], ['c', 0.18, -0.69, 0.09, -1.47, -0.18, -2.07], ['c', -0.15, -0.30, -0.33, -0.51, -0.60, -0.63], ['z']],\n      w: 6.75,\n      h: 18.801\n    },\n    'accidentals.halfflat': {\n      d: [['M', 4.83, -14.07], ['c', 0.33, -0.06, 0.87, 0.00, 1.08, 0.15], ['c', 0.06, 0.03, 0.06, 0.60, -0.12, 9.06], ['c', -0.09, 5.55, -0.15, 9.06, -0.18, 9.12], ['c', -0.03, 0.09, -0.09, 0.18, -0.15, 0.27], ['c', -0.24, 0.21, -0.54, 0.24, -0.81, 0.06], ['c', -0.06, -0.03, -0.27, -0.24, -0.45, -0.42], ['c', -0.36, -0.42, -0.66, -0.66, -1.80, -1.44], ['c', -1.23, -0.84, -1.83, -1.32, -2.25, -1.77], ['c', -0.66, -0.78, -0.96, -1.56, -0.93, -2.46], ['c', 0.09, -1.41, 1.11, -2.58, 2.40, -2.79], ['c', 0.30, -0.06, 0.84, -0.03, 1.23, 0.06], ['c', 0.54, 0.12, 1.08, 0.33, 1.53, 0.63], ['c', 0.12, 0.09, 0.24, 0.15, 0.24, 0.12], ['c', 0.00, 0.00, -0.12, -8.37, -0.18, -9.75], ['l', 0.00, -0.66], ['l', 0.12, -0.06], ['c', 0.06, -0.03, 0.18, -0.09, 0.27, -0.12], ['z'], ['m', -1.65, 10.95], ['c', -0.60, -0.18, -1.08, 0.09, -1.38, 0.69], ['c', -0.27, 0.60, -0.36, 1.38, -0.18, 2.07], ['c', 0.12, 0.42, 0.42, 0.99, 0.72, 1.41], ['c', 0.30, 0.42, 0.93, 1.05, 1.56, 1.59], ['l', 0.48, 0.39], ['l', 0.00, -0.12], ['c', 0.03, -0.09, 0.03, -0.48, 0.06, -0.90], ['c', 0.03, -0.57, 0.03, -1.08, 0.00, -2.22], ['c', -0.03, -1.62, -0.03, -1.62, -0.24, -2.07], ['c', -0.21, -0.42, -0.60, -0.75, -1.02, -0.84], ['z']],\n      w: 6.728,\n      h: 18.801\n    },\n    'accidentals.dblflat': {\n      d: [['M', -0.36, -14.07], ['c', 0.33, -0.06, 0.87, 0.00, 1.08, 0.15], ['c', 0.06, 0.03, 0.06, 0.33, -0.03, 4.89], ['c', -0.06, 2.67, -0.09, 5.01, -0.09, 5.22], ['l', 0.00, 0.36], ['l', 0.15, -0.15], ['c', 0.36, -0.30, 0.75, -0.51, 1.20, -0.63], ['c', 0.33, -0.09, 0.96, -0.09, 1.26, -0.03], ['c', 0.27, 0.09, 0.63, 0.27, 0.87, 0.45], ['l', 0.21, 0.15], ['l', 0.00, -0.27], ['c', 0.00, -0.15, -0.03, -2.43, -0.09, -5.10], ['c', -0.09, -4.56, -0.09, -4.86, -0.03, -4.89], ['c', 0.15, -0.12, 0.39, -0.15, 0.72, -0.15], ['c', 0.30, 0.00, 0.54, 0.03, 0.69, 0.15], ['c', 0.06, 0.03, 0.06, 0.33, -0.03, 4.95], ['c', -0.06, 2.70, -0.09, 5.04, -0.09, 5.22], ['l', 0.03, 0.30], ['l', 0.21, -0.15], ['c', 0.69, -0.48, 1.44, -0.69, 2.28, -0.69], ['c', 0.51, 0.00, 0.78, 0.03, 1.20, 0.21], ['c', 1.32, 0.63, 2.01, 2.28, 1.53, 3.69], ['c', -0.21, 0.57, -0.51, 1.02, -1.05, 1.56], ['c', -0.42, 0.42, -0.81, 0.72, -1.92, 1.50], ['c', -1.26, 0.87, -1.50, 1.08, -1.86, 1.50], ['c', -0.39, 0.45, -0.54, 0.54, -0.81, 0.51], ['c', -0.18, 0.00, -0.21, 0.00, -0.33, -0.06], ['l', -0.21, -0.21], ['l', -0.06, -0.12], ['l', -0.03, -0.99], ['c', -0.03, -0.54, -0.03, -1.29, -0.06, -1.68], ['l', 0.00, -0.69], ['l', -0.21, 0.24], ['c', -0.36, 0.42, -0.75, 0.75, -1.80, 1.62], ['c', -1.02, 0.84, -1.20, 0.99, -1.44, 1.38], ['c', -0.36, 0.51, -0.54, 0.60, -0.90, 0.51], ['c', -0.15, -0.03, -0.39, -0.27, -0.42, -0.42], ['c', -0.03, -0.06, -0.09, -3.27, -0.18, -8.34], ['c', -0.09, -4.53, -0.15, -8.58, -0.18, -9.03], ['l', 0.00, -0.78], ['l', 0.12, -0.06], ['c', 0.06, -0.03, 0.18, -0.09, 0.27, -0.12], ['z'], ['m', 2.52, 10.98], ['c', -0.18, -0.09, -0.48, -0.12, -0.66, -0.06], ['c', -0.39, 0.15, -0.69, 0.54, -0.84, 1.14], ['c', -0.06, 0.24, -0.06, 0.39, -0.09, 1.74], ['c', -0.03, 1.44, 0.00, 2.73, 0.06, 3.18], ['l', 0.03, 0.15], ['l', 0.27, -0.27], ['c', 0.93, -0.96, 1.50, -1.95, 1.74, -3.06], ['c', 0.06, -0.27, 0.06, -0.39, 0.06, -0.96], ['c', 0.00, -0.54, 0.00, -0.69, -0.06, -0.93], ['c', -0.09, -0.51, -0.27, -0.81, -0.51, -0.93], ['z'], ['m', 5.43, 0.00], ['c', -0.18, -0.09, -0.51, -0.12, -0.72, -0.06], ['c', -0.54, 0.12, -0.96, 0.63, -1.17, 1.26], ['c', -0.06, 0.30, -0.12, 2.88, -0.06, 3.90], ['c', 0.03, 0.42, 0.03, 0.81, 0.06, 0.90], ['l', 0.03, 0.12], ['l', 0.36, -0.30], ['c', 0.42, -0.36, 1.02, -0.96, 1.29, -1.29], ['c', 0.36, -0.45, 0.66, -0.99, 0.81, -1.41], ['c', 0.42, -1.23, 0.15, -2.76, -0.60, -3.12], ['z']],\n      w: 11.613,\n      h: 18.804\n    },\n    'accidentals.dblsharp': {\n      d: [['M', -0.18, -3.96], ['c', 0.06, -0.03, 0.12, -0.06, 0.15, -0.06], ['c', 0.09, 0.00, 2.76, 0.27, 2.79, 0.30], ['c', 0.12, 0.03, 0.15, 0.12, 0.15, 0.51], ['c', 0.06, 0.96, 0.24, 1.59, 0.57, 2.10], ['c', 0.06, 0.09, 0.15, 0.21, 0.18, 0.24], ['l', 0.09, 0.06], ['l', 0.09, -0.06], ['c', 0.03, -0.03, 0.12, -0.15, 0.18, -0.24], ['c', 0.33, -0.51, 0.51, -1.14, 0.57, -2.10], ['c', 0.00, -0.39, 0.03, -0.45, 0.12, -0.51], ['c', 0.03, 0.00, 0.66, -0.09, 1.44, -0.15], ['c', 1.47, -0.15, 1.50, -0.15, 1.56, -0.03], ['c', 0.03, 0.06, 0.00, 0.42, -0.09, 1.44], ['c', -0.09, 0.72, -0.15, 1.35, -0.15, 1.38], ['c', 0.00, 0.03, -0.03, 0.09, -0.06, 0.12], ['c', -0.06, 0.06, -0.12, 0.09, -0.51, 0.09], ['c', -1.08, 0.06, -1.80, 0.30, -2.28, 0.75], ['l', -0.12, 0.09], ['l', 0.09, 0.09], ['c', 0.12, 0.15, 0.39, 0.33, 0.63, 0.45], ['c', 0.42, 0.18, 0.96, 0.27, 1.68, 0.33], ['c', 0.39, 0.00, 0.45, 0.03, 0.51, 0.09], ['c', 0.03, 0.03, 0.06, 0.09, 0.06, 0.12], ['c', 0.00, 0.03, 0.06, 0.66, 0.15, 1.38], ['c', 0.09, 1.02, 0.12, 1.38, 0.09, 1.44], ['c', -0.06, 0.12, -0.09, 0.12, -1.56, -0.03], ['c', -0.78, -0.06, -1.41, -0.15, -1.44, -0.15], ['c', -0.09, -0.06, -0.12, -0.12, -0.12, -0.54], ['c', -0.06, -0.93, -0.24, -1.56, -0.57, -2.07], ['c', -0.06, -0.09, -0.15, -0.21, -0.18, -0.24], ['l', -0.09, -0.06], ['l', -0.09, 0.06], ['c', -0.03, 0.03, -0.12, 0.15, -0.18, 0.24], ['c', -0.33, 0.51, -0.51, 1.14, -0.57, 2.07], ['c', 0.00, 0.42, -0.03, 0.48, -0.12, 0.54], ['c', -0.03, 0.00, -0.66, 0.09, -1.44, 0.15], ['c', -1.47, 0.15, -1.50, 0.15, -1.56, 0.03], ['c', -0.03, -0.06, 0.00, -0.42, 0.09, -1.44], ['c', 0.09, -0.72, 0.15, -1.35, 0.15, -1.38], ['c', 0.00, -0.03, 0.03, -0.09, 0.06, -0.12], ['c', 0.06, -0.06, 0.12, -0.09, 0.51, -0.09], ['c', 0.72, -0.06, 1.26, -0.15, 1.68, -0.33], ['c', 0.24, -0.12, 0.51, -0.30, 0.63, -0.45], ['l', 0.09, -0.09], ['l', -0.12, -0.09], ['c', -0.48, -0.45, -1.20, -0.69, -2.28, -0.75], ['c', -0.39, 0.00, -0.45, -0.03, -0.51, -0.09], ['c', -0.03, -0.03, -0.06, -0.09, -0.06, -0.12], ['c', 0.00, -0.03, -0.06, -0.63, -0.12, -1.38], ['c', -0.09, -0.72, -0.15, -1.35, -0.15, -1.38], ['z']],\n      w: 7.95,\n      h: 7.977\n    },\n    'dots.dot': {\n      d: [['M', 1.32, -1.68], ['c', 0.09, -0.03, 0.27, -0.06, 0.39, -0.06], ['c', 0.96, 0.00, 1.74, 0.78, 1.74, 1.71], ['c', 0.00, 0.96, -0.78, 1.74, -1.71, 1.74], ['c', -0.96, 0.00, -1.74, -0.78, -1.74, -1.71], ['c', 0.00, -0.78, 0.54, -1.50, 1.32, -1.68], ['z']],\n      w: 3.45,\n      h: 3.45\n    },\n    'noteheads.dbl': {\n      d: [['M', -0.69, -4.02], ['c', 0.18, -0.09, 0.36, -0.09, 0.54, 0.00], ['c', 0.18, 0.09, 0.24, 0.15, 0.33, 0.30], ['c', 0.06, 0.15, 0.06, 0.18, 0.06, 1.41], ['l', 0.00, 1.23], ['l', 0.12, -0.18], ['c', 0.72, -1.26, 2.64, -2.31, 4.86, -2.64], ['c', 0.81, -0.15, 1.11, -0.15, 2.13, -0.15], ['c', 0.99, 0.00, 1.29, 0.00, 2.10, 0.15], ['c', 0.75, 0.12, 1.38, 0.27, 2.04, 0.54], ['c', 1.35, 0.51, 2.34, 1.26, 2.82, 2.10], ['l', 0.12, 0.18], ['l', 0.00, -1.23], ['c', 0.00, -1.20, 0.00, -1.26, 0.06, -1.38], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['c', 0.18, -0.09, 0.36, -0.09, 0.54, 0.00], ['c', 0.18, 0.09, 0.24, 0.15, 0.33, 0.30], ['l', 0.06, 0.15], ['l', 0.00, 3.54], ['l', 0.00, 3.54], ['l', -0.06, 0.15], ['c', -0.09, 0.18, -0.15, 0.24, -0.33, 0.33], ['c', -0.18, 0.09, -0.36, 0.09, -0.54, 0.00], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['c', -0.06, -0.12, -0.06, -0.18, -0.06, -1.38], ['l', 0.00, -1.23], ['l', -0.12, 0.18], ['c', -0.48, 0.84, -1.47, 1.59, -2.82, 2.10], ['c', -0.84, 0.33, -1.71, 0.54, -2.85, 0.66], ['c', -0.45, 0.06, -2.16, 0.06, -2.61, 0.00], ['c', -1.14, -0.12, -2.01, -0.33, -2.85, -0.66], ['c', -1.35, -0.51, -2.34, -1.26, -2.82, -2.10], ['l', -0.12, -0.18], ['l', 0.00, 1.23], ['c', 0.00, 1.23, 0.00, 1.26, -0.06, 1.38], ['c', -0.09, 0.18, -0.15, 0.24, -0.33, 0.33], ['c', -0.18, 0.09, -0.36, 0.09, -0.54, 0.00], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['l', -0.06, -0.15], ['l', 0.00, -3.54], ['c', 0.00, -3.48, 0.00, -3.54, 0.06, -3.66], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['z'], ['m', 7.71, 0.63], ['c', -0.36, -0.06, -0.90, -0.06, -1.14, 0.00], ['c', -0.30, 0.03, -0.66, 0.24, -0.87, 0.42], ['c', -0.60, 0.54, -0.90, 1.62, -0.75, 2.82], ['c', 0.12, 0.93, 0.51, 1.68, 1.11, 2.31], ['c', 0.75, 0.72, 1.83, 1.20, 2.85, 1.26], ['c', 1.05, 0.06, 1.83, -0.54, 2.10, -1.65], ['c', 0.21, -0.90, 0.12, -1.95, -0.24, -2.82], ['c', -0.36, -0.81, -1.08, -1.53, -1.95, -1.95], ['c', -0.30, -0.15, -0.78, -0.30, -1.11, -0.39], ['z']],\n      w: 16.83,\n      h: 8.145\n    },\n    'noteheads.whole': {\n      d: [['M', 6.51, -4.05], ['c', 0.51, -0.03, 2.01, 0.00, 2.52, 0.03], ['c', 1.41, 0.18, 2.64, 0.51, 3.72, 1.08], ['c', 1.20, 0.63, 1.95, 1.41, 2.19, 2.31], ['c', 0.09, 0.33, 0.09, 0.90, 0.00, 1.23], ['c', -0.24, 0.90, -0.99, 1.68, -2.19, 2.31], ['c', -1.08, 0.57, -2.28, 0.90, -3.75, 1.08], ['c', -0.66, 0.06, -2.31, 0.06, -2.97, 0.00], ['c', -1.47, -0.18, -2.67, -0.51, -3.75, -1.08], ['c', -1.20, -0.63, -1.95, -1.41, -2.19, -2.31], ['c', -0.09, -0.33, -0.09, -0.90, 0.00, -1.23], ['c', 0.24, -0.90, 0.99, -1.68, 2.19, -2.31], ['c', 1.20, -0.63, 2.61, -0.99, 4.23, -1.11], ['z'], ['m', 0.57, 0.66], ['c', -0.87, -0.15, -1.53, 0.00, -2.04, 0.51], ['c', -0.15, 0.15, -0.24, 0.27, -0.33, 0.48], ['c', -0.24, 0.51, -0.36, 1.08, -0.33, 1.77], ['c', 0.03, 0.69, 0.18, 1.26, 0.42, 1.77], ['c', 0.60, 1.17, 1.74, 1.98, 3.18, 2.22], ['c', 1.11, 0.21, 1.95, -0.15, 2.34, -0.99], ['c', 0.24, -0.51, 0.36, -1.08, 0.33, -1.80], ['c', -0.06, -1.11, -0.45, -2.04, -1.17, -2.76], ['c', -0.63, -0.63, -1.47, -1.05, -2.40, -1.20], ['z']],\n      w: 14.985,\n      h: 8.097\n    },\n    'noteheads.half': {\n      d: [['M', 7.44, -4.05], ['c', 0.06, -0.03, 0.27, -0.03, 0.48, -0.03], ['c', 1.05, 0.00, 1.71, 0.24, 2.10, 0.81], ['c', 0.42, 0.60, 0.45, 1.35, 0.18, 2.40], ['c', -0.42, 1.59, -1.14, 2.73, -2.16, 3.39], ['c', -1.41, 0.93, -3.18, 1.44, -5.40, 1.53], ['c', -1.17, 0.03, -1.89, -0.21, -2.28, -0.81], ['c', -0.42, -0.60, -0.45, -1.35, -0.18, -2.40], ['c', 0.42, -1.59, 1.14, -2.73, 2.16, -3.39], ['c', 0.63, -0.42, 1.23, -0.72, 1.98, -0.96], ['c', 0.90, -0.30, 1.65, -0.42, 3.12, -0.54], ['z'], ['m', 1.29, 0.87], ['c', -0.27, -0.09, -0.63, -0.12, -0.90, -0.03], ['c', -0.72, 0.24, -1.53, 0.69, -3.27, 1.80], ['c', -2.34, 1.50, -3.30, 2.25, -3.57, 2.79], ['c', -0.36, 0.72, -0.06, 1.50, 0.66, 1.77], ['c', 0.24, 0.12, 0.69, 0.09, 0.99, 0.00], ['c', 0.84, -0.30, 1.92, -0.93, 4.14, -2.37], ['c', 1.62, -1.08, 2.37, -1.71, 2.61, -2.19], ['c', 0.36, -0.72, 0.06, -1.50, -0.66, -1.77], ['z']],\n      w: 10.37,\n      h: 8.132\n    },\n    'noteheads.quarter': {\n      d: [['M', 6.09, -4.05], ['c', 0.36, -0.03, 1.20, 0.00, 1.53, 0.06], ['c', 1.17, 0.24, 1.89, 0.84, 2.16, 1.83], ['c', 0.06, 0.18, 0.06, 0.30, 0.06, 0.66], ['c', 0.00, 0.45, 0.00, 0.63, -0.15, 1.08], ['c', -0.66, 2.04, -3.06, 3.93, -5.52, 4.38], ['c', -0.54, 0.09, -1.44, 0.09, -1.83, 0.03], ['c', -1.23, -0.27, -1.98, -0.87, -2.25, -1.86], ['c', -0.06, -0.18, -0.06, -0.30, -0.06, -0.66], ['c', 0.00, -0.45, 0.00, -0.63, 0.15, -1.08], ['c', 0.24, -0.78, 0.75, -1.53, 1.44, -2.22], ['c', 1.20, -1.20, 2.85, -2.01, 4.47, -2.22], ['z']],\n      w: 9.81,\n      h: 8.094\n    },\n    'noteheads.slash.nostem': {\n      d: [['M', 9.30, -7.77], ['c', 0.06, -0.06, 0.18, -0.06, 1.71, -0.06], ['l', 1.65, 0.00], ['l', 0.09, 0.09], ['c', 0.06, 0.06, 0.06, 0.09, 0.06, 0.15], ['c', -0.03, 0.12, -9.21, 15.24, -9.30, 15.33], ['c', -0.06, 0.06, -0.18, 0.06, -1.71, 0.06], ['l', -1.65, 0.00], ['l', -0.09, -0.09], ['c', -0.06, -0.06, -0.06, -0.09, -0.06, -0.15], ['c', 0.03, -0.12, 9.21, -15.24, 9.30, -15.33], ['z']],\n      w: 12.81,\n      h: 15.63\n    },\n    'noteheads.indeterminate': {\n      d: [['M', 0.78, -4.05], ['c', 0.12, -0.03, 0.24, -0.03, 0.36, 0.03], ['c', 0.03, 0.03, 0.93, 0.72, 1.95, 1.56], ['l', 1.86, 1.50], ['l', 1.86, -1.50], ['c', 1.02, -0.84, 1.92, -1.53, 1.95, -1.56], ['c', 0.21, -0.12, 0.33, -0.09, 0.75, 0.24], ['c', 0.30, 0.27, 0.36, 0.36, 0.36, 0.54], ['c', 0.00, 0.03, -0.03, 0.12, -0.06, 0.18], ['c', -0.03, 0.06, -0.90, 0.75, -1.89, 1.56], ['l', -1.80, 1.47], ['c', 0.00, 0.03, 0.81, 0.69, 1.80, 1.50], ['c', 0.99, 0.81, 1.86, 1.50, 1.89, 1.56], ['c', 0.03, 0.06, 0.06, 0.15, 0.06, 0.18], ['c', 0.00, 0.18, -0.06, 0.27, -0.36, 0.54], ['c', -0.42, 0.33, -0.54, 0.36, -0.75, 0.24], ['c', -0.03, -0.03, -0.93, -0.72, -1.95, -1.56], ['l', -1.86, -1.50], ['l', -1.86, 1.50], ['c', -1.02, 0.84, -1.92, 1.53, -1.95, 1.56], ['c', -0.21, 0.12, -0.33, 0.09, -0.75, -0.24], ['c', -0.30, -0.27, -0.36, -0.36, -0.36, -0.54], ['c', 0.00, -0.03, 0.03, -0.12, 0.06, -0.18], ['c', 0.03, -0.06, 0.90, -0.75, 1.89, -1.56], ['l', 1.80, -1.47], ['c', 0.00, -0.03, -0.81, -0.69, -1.80, -1.50], ['c', -0.99, -0.81, -1.86, -1.50, -1.89, -1.56], ['c', -0.06, -0.12, -0.09, -0.21, -0.03, -0.36], ['c', 0.03, -0.09, 0.57, -0.57, 0.72, -0.63], ['z']],\n      w: 9.843,\n      h: 8.139\n    },\n    'scripts.ufermata': {\n      d: [['M', -0.75, -10.77], ['c', 0.12, 0.00, 0.45, -0.03, 0.69, -0.03], ['c', 2.91, -0.03, 5.55, 1.53, 7.41, 4.35], ['c', 1.17, 1.71, 1.95, 3.72, 2.43, 6.03], ['c', 0.12, 0.51, 0.12, 0.57, 0.03, 0.69], ['c', -0.12, 0.21, -0.48, 0.27, -0.69, 0.12], ['c', -0.12, -0.09, -0.18, -0.24, -0.27, -0.69], ['c', -0.78, -3.63, -3.42, -6.54, -6.78, -7.38], ['c', -0.78, -0.21, -1.20, -0.24, -2.07, -0.24], ['c', -0.63, 0.00, -0.84, 0.00, -1.20, 0.06], ['c', -1.83, 0.27, -3.42, 1.08, -4.80, 2.37], ['c', -1.41, 1.35, -2.40, 3.21, -2.85, 5.19], ['c', -0.09, 0.45, -0.15, 0.60, -0.27, 0.69], ['c', -0.21, 0.15, -0.57, 0.09, -0.69, -0.12], ['c', -0.09, -0.12, -0.09, -0.18, 0.03, -0.69], ['c', 0.33, -1.62, 0.78, -3.00, 1.47, -4.38], ['c', 1.77, -3.54, 4.44, -5.67, 7.56, -5.97], ['z'], ['m', 0.33, 7.47], ['c', 1.38, -0.30, 2.58, 0.90, 2.31, 2.25], ['c', -0.15, 0.72, -0.78, 1.35, -1.47, 1.50], ['c', -1.38, 0.27, -2.58, -0.93, -2.31, -2.31], ['c', 0.15, -0.69, 0.78, -1.29, 1.47, -1.44], ['z']],\n      w: 19.748,\n      h: 11.289\n    },\n    'scripts.dfermata': {\n      d: [['M', -9.63, -0.42], ['c', 0.15, -0.09, 0.36, -0.06, 0.51, 0.03], ['c', 0.12, 0.09, 0.18, 0.24, 0.27, 0.66], ['c', 0.78, 3.66, 3.42, 6.57, 6.78, 7.41], ['c', 0.78, 0.21, 1.20, 0.24, 2.07, 0.24], ['c', 0.63, 0.00, 0.84, 0.00, 1.20, -0.06], ['c', 1.83, -0.27, 3.42, -1.08, 4.80, -2.37], ['c', 1.41, -1.35, 2.40, -3.21, 2.85, -5.22], ['c', 0.09, -0.42, 0.15, -0.57, 0.27, -0.66], ['c', 0.21, -0.15, 0.57, -0.09, 0.69, 0.12], ['c', 0.09, 0.12, 0.09, 0.18, -0.03, 0.69], ['c', -0.33, 1.62, -0.78, 3.00, -1.47, 4.38], ['c', -1.92, 3.84, -4.89, 6.00, -8.31, 6.00], ['c', -3.42, 0.00, -6.39, -2.16, -8.31, -6.00], ['c', -0.48, -0.96, -0.84, -1.92, -1.14, -2.97], ['c', -0.18, -0.69, -0.42, -1.74, -0.42, -1.92], ['c', 0.00, -0.12, 0.09, -0.27, 0.24, -0.33], ['z'], ['m', 9.21, 0.00], ['c', 1.20, -0.27, 2.34, 0.63, 2.34, 1.86], ['c', 0.00, 0.90, -0.66, 1.68, -1.50, 1.89], ['c', -1.38, 0.27, -2.58, -0.93, -2.31, -2.31], ['c', 0.15, -0.69, 0.78, -1.29, 1.47, -1.44], ['z']],\n      w: 19.744,\n      h: 11.274\n    },\n    'scripts.sforzato': {\n      d: [['M', -6.45, -3.69], ['c', 0.06, -0.03, 0.15, -0.06, 0.18, -0.06], ['c', 0.06, 0.00, 2.85, 0.72, 6.24, 1.59], ['l', 6.33, 1.65], ['c', 0.33, 0.06, 0.45, 0.21, 0.45, 0.51], ['c', 0.00, 0.30, -0.12, 0.45, -0.45, 0.51], ['l', -6.33, 1.65], ['c', -3.39, 0.87, -6.18, 1.59, -6.21, 1.59], ['c', -0.21, 0.00, -0.48, -0.24, -0.51, -0.45], ['c', 0.00, -0.15, 0.06, -0.36, 0.18, -0.45], ['c', 0.09, -0.06, 0.87, -0.27, 3.84, -1.05], ['c', 2.04, -0.54, 3.84, -0.99, 4.02, -1.02], ['c', 0.15, -0.06, 1.14, -0.24, 2.22, -0.42], ['c', 1.05, -0.18, 1.92, -0.36, 1.92, -0.36], ['c', 0.00, 0.00, -0.87, -0.18, -1.92, -0.36], ['c', -1.08, -0.18, -2.07, -0.36, -2.22, -0.42], ['c', -0.18, -0.03, -1.98, -0.48, -4.02, -1.02], ['c', -2.97, -0.78, -3.75, -0.99, -3.84, -1.05], ['c', -0.12, -0.09, -0.18, -0.30, -0.18, -0.45], ['c', 0.03, -0.15, 0.15, -0.30, 0.30, -0.39], ['z']],\n      w: 13.5,\n      h: 7.5\n    },\n    'scripts.staccato': {\n      d: [['M', -0.36, -1.47], ['c', 0.93, -0.21, 1.86, 0.51, 1.86, 1.47], ['c', 0.00, 0.93, -0.87, 1.65, -1.80, 1.47], ['c', -0.54, -0.12, -1.02, -0.57, -1.14, -1.08], ['c', -0.21, -0.81, 0.27, -1.65, 1.08, -1.86], ['z']],\n      w: 2.989,\n      h: 3.004\n    },\n    'scripts.tenuto': {\n      d: [['M', -4.20, -0.48], ['l', 0.12, -0.06], ['l', 4.08, 0.00], ['l', 4.08, 0.00], ['l', 0.12, 0.06], ['c', 0.39, 0.21, 0.39, 0.75, 0.00, 0.96], ['l', -0.12, 0.06], ['l', -4.08, 0.00], ['l', -4.08, 0.00], ['l', -0.12, -0.06], ['c', -0.39, -0.21, -0.39, -0.75, 0.00, -0.96], ['z']],\n      w: 8.985,\n      h: 1.08\n    },\n    'scripts.umarcato': {\n      d: [['M', -0.15, -8.19], ['c', 0.15, -0.12, 0.36, -0.03, 0.45, 0.15], ['c', 0.21, 0.42, 3.45, 7.65, 3.45, 7.71], ['c', 0.00, 0.12, -0.12, 0.27, -0.21, 0.30], ['c', -0.03, 0.03, -0.51, 0.03, -1.14, 0.03], ['c', -1.05, 0.00, -1.08, 0.00, -1.17, -0.06], ['c', -0.09, -0.06, -0.24, -0.36, -1.17, -2.40], ['c', -0.57, -1.29, -1.05, -2.34, -1.08, -2.34], ['c', 0.00, -0.03, -0.51, 1.02, -1.08, 2.34], ['c', -0.93, 2.07, -1.08, 2.34, -1.14, 2.40], ['c', -0.06, 0.03, -0.15, 0.06, -0.18, 0.06], ['c', -0.15, 0.00, -0.33, -0.18, -0.33, -0.33], ['c', 0.00, -0.06, 3.24, -7.32, 3.45, -7.71], ['c', 0.03, -0.06, 0.09, -0.15, 0.15, -0.15], ['z']],\n      w: 7.5,\n      h: 8.245\n    },\n    'scripts.dmarcato': {\n      d: [['M', -3.57, 0.03], ['c', 0.03, 0.00, 0.57, -0.03, 1.17, -0.03], ['c', 1.05, 0.00, 1.08, 0.00, 1.17, 0.06], ['c', 0.09, 0.06, 0.24, 0.36, 1.17, 2.40], ['c', 0.57, 1.29, 1.05, 2.34, 1.08, 2.34], ['c', 0.00, 0.03, 0.51, -1.02, 1.08, -2.34], ['c', 0.93, -2.07, 1.08, -2.34, 1.14, -2.40], ['c', 0.06, -0.03, 0.15, -0.06, 0.18, -0.06], ['c', 0.15, 0.00, 0.33, 0.18, 0.33, 0.33], ['c', 0.00, 0.09, -3.45, 7.74, -3.54, 7.83], ['c', -0.12, 0.12, -0.30, 0.12, -0.42, 0.00], ['c', -0.09, -0.09, -3.54, -7.74, -3.54, -7.83], ['c', 0.00, -0.09, 0.12, -0.27, 0.18, -0.30], ['z']],\n      w: 7.5,\n      h: 8.25\n    },\n    'scripts.stopped': {\n      d: [['M', -0.27, -4.08], ['c', 0.18, -0.09, 0.36, -0.09, 0.54, 0.00], ['c', 0.18, 0.09, 0.24, 0.15, 0.33, 0.30], ['l', 0.06, 0.15], ['l', 0.00, 1.50], ['l', 0.00, 1.47], ['l', 1.47, 0.00], ['l', 1.50, 0.00], ['l', 0.15, 0.06], ['c', 0.15, 0.09, 0.21, 0.15, 0.30, 0.33], ['c', 0.09, 0.18, 0.09, 0.36, 0.00, 0.54], ['c', -0.09, 0.18, -0.15, 0.24, -0.33, 0.33], ['c', -0.12, 0.06, -0.18, 0.06, -1.62, 0.06], ['l', -1.47, 0.00], ['l', 0.00, 1.47], ['l', 0.00, 1.47], ['l', -0.06, 0.15], ['c', -0.09, 0.18, -0.15, 0.24, -0.33, 0.33], ['c', -0.18, 0.09, -0.36, 0.09, -0.54, 0.00], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['l', -0.06, -0.15], ['l', 0.00, -1.47], ['l', 0.00, -1.47], ['l', -1.47, 0.00], ['c', -1.44, 0.00, -1.50, 0.00, -1.62, -0.06], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['c', -0.09, -0.18, -0.09, -0.36, 0.00, -0.54], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['l', 0.15, -0.06], ['l', 1.47, 0.00], ['l', 1.47, 0.00], ['l', 0.00, -1.47], ['c', 0.00, -1.44, 0.00, -1.50, 0.06, -1.62], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['z']],\n      w: 8.295,\n      h: 8.295\n    },\n    'scripts.upbow': {\n      d: [['M', -4.65, -15.54], ['c', 0.12, -0.09, 0.36, -0.06, 0.48, 0.03], ['c', 0.03, 0.03, 0.09, 0.09, 0.12, 0.15], ['c', 0.03, 0.06, 0.66, 2.13, 1.41, 4.62], ['c', 1.35, 4.41, 1.38, 4.56, 2.01, 6.96], ['l', 0.63, 2.46], ['l', 0.63, -2.46], ['c', 0.63, -2.40, 0.66, -2.55, 2.01, -6.96], ['c', 0.75, -2.49, 1.38, -4.56, 1.41, -4.62], ['c', 0.06, -0.15, 0.18, -0.21, 0.36, -0.24], ['c', 0.15, 0.00, 0.30, 0.06, 0.39, 0.18], ['c', 0.15, 0.21, 0.24, -0.18, -2.10, 7.56], ['c', -1.20, 3.96, -2.22, 7.32, -2.25, 7.41], ['c', 0.00, 0.12, -0.06, 0.27, -0.09, 0.30], ['c', -0.12, 0.21, -0.60, 0.21, -0.72, 0.00], ['c', -0.03, -0.03, -0.09, -0.18, -0.09, -0.30], ['c', -0.03, -0.09, -1.05, -3.45, -2.25, -7.41], ['c', -2.34, -7.74, -2.25, -7.35, -2.10, -7.56], ['c', 0.03, -0.03, 0.09, -0.09, 0.15, -0.12], ['z']],\n      w: 9.73,\n      h: 15.608\n    },\n    'scripts.downbow': {\n      d: [['M', -5.55, -9.93], ['l', 0.09, -0.06], ['l', 5.46, 0.00], ['l', 5.46, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 4.77], ['c', 0.00, 5.28, 0.00, 4.89, -0.18, 5.01], ['c', -0.18, 0.12, -0.42, 0.06, -0.54, -0.12], ['c', -0.06, -0.09, -0.06, -0.18, -0.06, -2.97], ['l', 0.00, -2.85], ['l', -4.83, 0.00], ['l', -4.83, 0.00], ['l', 0.00, 2.85], ['c', 0.00, 2.79, 0.00, 2.88, -0.06, 2.97], ['c', -0.15, 0.24, -0.51, 0.24, -0.66, 0.00], ['c', -0.06, -0.09, -0.06, -0.21, -0.06, -4.89], ['l', 0.00, -4.77], ['z']],\n      w: 11.22,\n      h: 9.992\n    },\n    'scripts.turn': {\n      d: [['M', -4.77, -3.90], ['c', 0.36, -0.06, 1.05, -0.06, 1.44, 0.03], ['c', 0.78, 0.15, 1.50, 0.51, 2.34, 1.14], ['c', 0.60, 0.45, 1.05, 0.87, 2.22, 2.01], ['c', 1.11, 1.08, 1.62, 1.50, 2.22, 1.86], ['c', 0.60, 0.36, 1.32, 0.57, 1.92, 0.57], ['c', 0.90, 0.00, 1.71, -0.57, 1.89, -1.35], ['c', 0.24, -0.93, -0.39, -1.89, -1.35, -2.10], ['l', -0.15, -0.06], ['l', -0.09, 0.15], ['c', -0.03, 0.09, -0.15, 0.24, -0.24, 0.33], ['c', -0.72, 0.72, -2.04, 0.54, -2.49, -0.36], ['c', -0.48, -0.93, 0.03, -1.86, 1.17, -2.19], ['c', 0.30, -0.09, 1.02, -0.09, 1.35, 0.00], ['c', 0.99, 0.27, 1.74, 0.87, 2.25, 1.83], ['c', 0.69, 1.41, 0.63, 3.00, -0.21, 4.26], ['c', -0.21, 0.30, -0.69, 0.81, -0.99, 1.02], ['c', -0.30, 0.21, -0.84, 0.45, -1.17, 0.54], ['c', -1.23, 0.36, -2.49, 0.15, -3.72, -0.60], ['c', -0.75, -0.48, -1.41, -1.02, -2.85, -2.46], ['c', -1.11, -1.08, -1.62, -1.50, -2.22, -1.86], ['c', -0.60, -0.36, -1.32, -0.57, -1.92, -0.57], ['c', -0.90, 0.00, -1.71, 0.57, -1.89, 1.35], ['c', -0.24, 0.93, 0.39, 1.89, 1.35, 2.10], ['l', 0.15, 0.06], ['l', 0.09, -0.15], ['c', 0.03, -0.09, 0.15, -0.24, 0.24, -0.33], ['c', 0.72, -0.72, 2.04, -0.54, 2.49, 0.36], ['c', 0.48, 0.93, -0.03, 1.86, -1.17, 2.19], ['c', -0.30, 0.09, -1.02, 0.09, -1.35, 0.00], ['c', -0.99, -0.27, -1.74, -0.87, -2.25, -1.83], ['c', -0.69, -1.41, -0.63, -3.00, 0.21, -4.26], ['c', 0.21, -0.30, 0.69, -0.81, 0.99, -1.02], ['c', 0.48, -0.33, 1.11, -0.57, 1.74, -0.66], ['z']],\n      w: 16.366,\n      h: 7.893\n    },\n    'scripts.trill': {\n      d: [['M', -0.51, -16.02], ['c', 0.12, -0.09, 0.21, -0.18, 0.21, -0.18], ['l', -0.81, 4.02], ['l', -0.81, 4.02], ['c', 0.03, 0.00, 0.51, -0.27, 1.08, -0.60], ['c', 0.60, -0.30, 1.14, -0.63, 1.26, -0.66], ['c', 1.14, -0.54, 2.31, -0.60, 3.09, -0.18], ['c', 0.27, 0.15, 0.54, 0.36, 0.60, 0.51], ['l', 0.06, 0.12], ['l', 0.21, -0.21], ['c', 0.90, -0.81, 2.22, -0.99, 3.12, -0.42], ['c', 0.60, 0.42, 0.90, 1.14, 0.78, 2.07], ['c', -0.15, 1.29, -1.05, 2.31, -1.95, 2.25], ['c', -0.48, -0.03, -0.78, -0.30, -0.96, -0.81], ['c', -0.09, -0.27, -0.09, -0.90, -0.03, -1.20], ['c', 0.21, -0.75, 0.81, -1.23, 1.59, -1.32], ['l', 0.24, -0.03], ['l', -0.09, -0.12], ['c', -0.51, -0.66, -1.62, -0.63, -2.31, 0.03], ['c', -0.39, 0.42, -0.30, 0.09, -1.23, 4.77], ['l', -0.81, 4.14], ['c', -0.03, 0.00, -0.12, -0.03, -0.21, -0.09], ['c', -0.33, -0.15, -0.54, -0.18, -0.99, -0.18], ['c', -0.42, 0.00, -0.66, 0.03, -1.05, 0.18], ['c', -0.12, 0.06, -0.21, 0.09, -0.21, 0.09], ['c', 0.00, -0.03, 0.36, -1.86, 0.81, -4.11], ['c', 0.90, -4.47, 0.87, -4.26, 0.69, -4.53], ['c', -0.21, -0.36, -0.66, -0.51, -1.17, -0.36], ['c', -0.15, 0.06, -2.22, 1.14, -2.58, 1.38], ['c', -0.12, 0.09, -0.12, 0.09, -0.21, 0.60], ['l', -0.09, 0.51], ['l', 0.21, 0.24], ['c', 0.63, 0.75, 1.02, 1.47, 1.20, 2.19], ['c', 0.06, 0.27, 0.06, 0.36, 0.06, 0.81], ['c', 0.00, 0.42, 0.00, 0.54, -0.06, 0.78], ['c', -0.15, 0.54, -0.33, 0.93, -0.63, 1.35], ['c', -0.18, 0.24, -0.57, 0.63, -0.81, 0.78], ['c', -0.24, 0.15, -0.63, 0.36, -0.84, 0.42], ['c', -0.27, 0.06, -0.66, 0.06, -0.87, 0.03], ['c', -0.81, -0.18, -1.32, -1.05, -1.38, -2.46], ['c', -0.03, -0.60, 0.03, -0.99, 0.33, -2.46], ['c', 0.21, -1.08, 0.24, -1.32, 0.21, -1.29], ['c', -1.20, 0.48, -2.40, 0.75, -3.21, 0.72], ['c', -0.69, -0.06, -1.17, -0.30, -1.41, -0.72], ['c', -0.39, -0.75, -0.12, -1.80, 0.66, -2.46], ['c', 0.24, -0.18, 0.69, -0.42, 1.02, -0.51], ['c', 0.69, -0.18, 1.53, -0.15, 2.31, 0.09], ['c', 0.30, 0.09, 0.75, 0.30, 0.99, 0.45], ['c', 0.12, 0.09, 0.15, 0.09, 0.15, 0.03], ['c', 0.03, -0.03, 0.33, -1.59, 0.72, -3.45], ['c', 0.36, -1.86, 0.66, -3.42, 0.69, -3.45], ['c', 0.00, -0.03, 0.03, -0.03, 0.21, 0.03], ['c', 0.21, 0.06, 0.27, 0.06, 0.48, 0.06], ['c', 0.42, -0.03, 0.78, -0.18, 1.26, -0.48], ['c', 0.15, -0.12, 0.36, -0.27, 0.48, -0.39], ['z'], ['m', -5.73, 7.68], ['c', -0.27, -0.03, -0.96, -0.06, -1.20, -0.03], ['c', -0.81, 0.12, -1.35, 0.57, -1.50, 1.20], ['c', -0.18, 0.66, 0.12, 1.14, 0.75, 1.29], ['c', 0.66, 0.12, 1.92, -0.12, 3.18, -0.66], ['l', 0.33, -0.15], ['l', 0.09, -0.39], ['c', 0.06, -0.21, 0.09, -0.42, 0.09, -0.45], ['c', 0.00, -0.03, -0.45, -0.30, -0.75, -0.45], ['c', -0.27, -0.15, -0.66, -0.27, -0.99, -0.36], ['z'], ['m', 4.29, 3.63], ['c', -0.24, -0.39, -0.51, -0.75, -0.51, -0.69], ['c', -0.06, 0.12, -0.39, 1.92, -0.45, 2.28], ['c', -0.09, 0.54, -0.12, 1.14, -0.06, 1.38], ['c', 0.06, 0.42, 0.21, 0.60, 0.51, 0.57], ['c', 0.39, -0.06, 0.75, -0.48, 0.93, -1.14], ['c', 0.09, -0.33, 0.09, -1.05, 0.00, -1.38], ['c', -0.09, -0.39, -0.24, -0.69, -0.42, -1.02], ['z']],\n      w: 17.963,\n      h: 16.49\n    },\n    'scripts.segno': {\n      d: [['M', -3.72, -11.22], ['c', 0.78, -0.09, 1.59, 0.03, 2.31, 0.42], ['c', 1.20, 0.60, 2.01, 1.71, 2.31, 3.09], ['c', 0.09, 0.42, 0.09, 1.20, 0.03, 1.50], ['c', -0.15, 0.45, -0.39, 0.81, -0.66, 0.93], ['c', -0.33, 0.18, -0.84, 0.21, -1.23, 0.15], ['c', -0.81, -0.18, -1.32, -0.93, -1.26, -1.89], ['c', 0.03, -0.36, 0.09, -0.57, 0.24, -0.90], ['c', 0.15, -0.33, 0.45, -0.60, 0.72, -0.75], ['c', 0.12, -0.06, 0.18, -0.09, 0.18, -0.12], ['c', 0.00, -0.03, -0.03, -0.15, -0.09, -0.24], ['c', -0.18, -0.45, -0.54, -0.87, -0.96, -1.08], ['c', -1.11, -0.57, -2.34, -0.18, -2.88, 0.90], ['c', -0.24, 0.51, -0.33, 1.11, -0.24, 1.83], ['c', 0.27, 1.92, 1.50, 3.54, 3.93, 5.13], ['c', 0.48, 0.33, 1.26, 0.78, 1.29, 0.78], ['c', 0.03, 0.00, 1.35, -2.19, 2.94, -4.89], ['l', 2.88, -4.89], ['l', 0.84, 0.00], ['l', 0.87, 0.00], ['l', -0.03, 0.06], ['c', -0.15, 0.21, -6.15, 10.41, -6.15, 10.44], ['c', 0.00, 0.00, 0.21, 0.15, 0.48, 0.27], ['c', 2.61, 1.47, 4.35, 3.03, 5.13, 4.65], ['c', 1.14, 2.34, 0.51, 5.07, -1.44, 6.39], ['c', -0.66, 0.42, -1.32, 0.63, -2.13, 0.69], ['c', -2.01, 0.09, -3.81, -1.41, -4.26, -3.54], ['c', -0.09, -0.42, -0.09, -1.20, -0.03, -1.50], ['c', 0.15, -0.45, 0.39, -0.81, 0.66, -0.93], ['c', 0.33, -0.18, 0.84, -0.21, 1.23, -0.15], ['c', 0.81, 0.18, 1.32, 0.93, 1.26, 1.89], ['c', -0.03, 0.36, -0.09, 0.57, -0.24, 0.90], ['c', -0.15, 0.33, -0.45, 0.60, -0.72, 0.75], ['c', -0.12, 0.06, -0.18, 0.09, -0.18, 0.12], ['c', 0.00, 0.03, 0.03, 0.15, 0.09, 0.24], ['c', 0.18, 0.45, 0.54, 0.87, 0.96, 1.08], ['c', 1.11, 0.57, 2.34, 0.18, 2.88, -0.90], ['c', 0.24, -0.51, 0.33, -1.11, 0.24, -1.83], ['c', -0.27, -1.92, -1.50, -3.54, -3.93, -5.13], ['c', -0.48, -0.33, -1.26, -0.78, -1.29, -0.78], ['c', -0.03, 0.00, -1.35, 2.19, -2.91, 4.89], ['l', -2.88, 4.89], ['l', -0.87, 0.00], ['l', -0.87, 0.00], ['l', 0.03, -0.06], ['c', 0.15, -0.21, 6.15, -10.41, 6.15, -10.44], ['c', 0.00, 0.00, -0.21, -0.15, -0.48, -0.30], ['c', -2.61, -1.44, -4.35, -3.00, -5.13, -4.62], ['c', -0.90, -1.89, -0.72, -4.02, 0.48, -5.52], ['c', 0.69, -0.84, 1.68, -1.41, 2.73, -1.53], ['z'], ['m', 8.76, 9.09], ['c', 0.03, -0.03, 0.15, -0.03, 0.27, -0.03], ['c', 0.33, 0.03, 0.57, 0.18, 0.72, 0.48], ['c', 0.09, 0.18, 0.09, 0.57, 0.00, 0.75], ['c', -0.09, 0.18, -0.21, 0.30, -0.36, 0.39], ['c', -0.15, 0.06, -0.21, 0.06, -0.39, 0.06], ['c', -0.21, 0.00, -0.27, 0.00, -0.39, -0.06], ['c', -0.30, -0.15, -0.48, -0.45, -0.48, -0.75], ['c', 0.00, -0.39, 0.24, -0.72, 0.63, -0.84], ['z'], ['m', -10.53, 2.61], ['c', 0.03, -0.03, 0.15, -0.03, 0.27, -0.03], ['c', 0.33, 0.03, 0.57, 0.18, 0.72, 0.48], ['c', 0.09, 0.18, 0.09, 0.57, 0.00, 0.75], ['c', -0.09, 0.18, -0.21, 0.30, -0.36, 0.39], ['c', -0.15, 0.06, -0.21, 0.06, -0.39, 0.06], ['c', -0.21, 0.00, -0.27, 0.00, -0.39, -0.06], ['c', -0.30, -0.15, -0.48, -0.45, -0.48, -0.75], ['c', 0.00, -0.39, 0.24, -0.72, 0.63, -0.84], ['z']],\n      w: 15,\n      h: 22.504\n    },\n    'scripts.coda': {\n      d: [['M', -0.21, -10.47], ['c', 0.18, -0.12, 0.42, -0.06, 0.54, 0.12], ['c', 0.06, 0.09, 0.06, 0.18, 0.06, 1.50], ['l', 0.00, 1.38], ['l', 0.18, 0.00], ['c', 0.39, 0.06, 0.96, 0.24, 1.38, 0.48], ['c', 1.68, 0.93, 2.82, 3.24, 3.03, 6.12], ['c', 0.03, 0.24, 0.03, 0.45, 0.03, 0.45], ['c', 0.00, 0.03, 0.60, 0.03, 1.35, 0.03], ['c', 1.50, 0.00, 1.47, 0.00, 1.59, 0.18], ['c', 0.09, 0.12, 0.09, 0.30, 0.00, 0.42], ['c', -0.12, 0.18, -0.09, 0.18, -1.59, 0.18], ['c', -0.75, 0.00, -1.35, 0.00, -1.35, 0.03], ['c', 0.00, 0.00, 0.00, 0.21, -0.03, 0.42], ['c', -0.24, 3.15, -1.53, 5.58, -3.45, 6.36], ['c', -0.27, 0.12, -0.72, 0.24, -0.96, 0.27], ['l', -0.18, 0.00], ['l', 0.00, 1.38], ['c', 0.00, 1.32, 0.00, 1.41, -0.06, 1.50], ['c', -0.15, 0.24, -0.51, 0.24, -0.66, 0.00], ['c', -0.06, -0.09, -0.06, -0.18, -0.06, -1.50], ['l', 0.00, -1.38], ['l', -0.18, 0.00], ['c', -0.39, -0.06, -0.96, -0.24, -1.38, -0.48], ['c', -1.68, -0.93, -2.82, -3.24, -3.03, -6.15], ['c', -0.03, -0.21, -0.03, -0.42, -0.03, -0.42], ['c', 0.00, -0.03, -0.60, -0.03, -1.35, -0.03], ['c', -1.50, 0.00, -1.47, 0.00, -1.59, -0.18], ['c', -0.09, -0.12, -0.09, -0.30, 0.00, -0.42], ['c', 0.12, -0.18, 0.09, -0.18, 1.59, -0.18], ['c', 0.75, 0.00, 1.35, 0.00, 1.35, -0.03], ['c', 0.00, 0.00, 0.00, -0.21, 0.03, -0.45], ['c', 0.24, -3.12, 1.53, -5.55, 3.45, -6.33], ['c', 0.27, -0.12, 0.72, -0.24, 0.96, -0.27], ['l', 0.18, 0.00], ['l', 0.00, -1.38], ['c', 0.00, -1.53, 0.00, -1.50, 0.18, -1.62], ['z'], ['m', -0.18, 6.93], ['c', 0.00, -2.97, 0.00, -3.15, -0.06, -3.15], ['c', -0.09, 0.00, -0.51, 0.15, -0.66, 0.21], ['c', -0.87, 0.51, -1.38, 1.62, -1.56, 3.51], ['c', -0.06, 0.54, -0.12, 1.59, -0.12, 2.16], ['l', 0.00, 0.42], ['l', 1.20, 0.00], ['l', 1.20, 0.00], ['l', 0.00, -3.15], ['z'], ['m', 1.17, -3.06], ['c', -0.09, -0.03, -0.21, -0.06, -0.27, -0.09], ['l', -0.12, 0.00], ['l', 0.00, 3.15], ['l', 0.00, 3.15], ['l', 1.20, 0.00], ['l', 1.20, 0.00], ['l', 0.00, -0.81], ['c', -0.06, -2.40, -0.33, -3.69, -0.93, -4.59], ['c', -0.27, -0.39, -0.66, -0.69, -1.08, -0.81], ['z'], ['m', -1.17, 10.14], ['l', 0.00, -3.15], ['l', -1.20, 0.00], ['l', -1.20, 0.00], ['l', 0.00, 0.81], ['c', 0.03, 0.96, 0.06, 1.47, 0.15, 2.13], ['c', 0.24, 2.04, 0.96, 3.12, 2.13, 3.36], ['l', 0.12, 0.00], ['l', 0.00, -3.15], ['z'], ['m', 3.18, -2.34], ['l', 0.00, -0.81], ['l', -1.20, 0.00], ['l', -1.20, 0.00], ['l', 0.00, 3.15], ['l', 0.00, 3.15], ['l', 0.12, 0.00], ['c', 1.17, -0.24, 1.89, -1.32, 2.13, -3.36], ['c', 0.09, -0.66, 0.12, -1.17, 0.15, -2.13], ['z']],\n      w: 16.035,\n      h: 21.062\n    },\n    'scripts.comma': {\n      d: [['M', 1.14, -4.62], ['c', 0.30, -0.12, 0.69, -0.03, 0.93, 0.15], ['c', 0.12, 0.12, 0.36, 0.45, 0.51, 0.78], ['c', 0.90, 1.77, 0.54, 4.05, -1.08, 6.75], ['c', -0.36, 0.63, -0.87, 1.38, -0.96, 1.44], ['c', -0.18, 0.12, -0.42, 0.06, -0.54, -0.12], ['c', -0.09, -0.18, -0.09, -0.30, 0.12, -0.60], ['c', 0.96, -1.44, 1.44, -2.97, 1.38, -4.35], ['c', -0.06, -0.93, -0.30, -1.68, -0.78, -2.46], ['c', -0.27, -0.39, -0.33, -0.63, -0.24, -0.96], ['c', 0.09, -0.27, 0.36, -0.54, 0.66, -0.63], ['z']],\n      w: 3.042,\n      h: 9.237\n    },\n    'scripts.roll': {\n      d: [['M', 1.95, -6.00], ['c', 0.21, -0.09, 0.36, -0.09, 0.57, 0.00], ['c', 0.39, 0.15, 0.63, 0.39, 1.47, 1.35], ['c', 0.66, 0.75, 0.78, 0.87, 1.08, 1.05], ['c', 0.75, 0.45, 1.65, 0.42, 2.40, -0.06], ['c', 0.12, -0.09, 0.27, -0.27, 0.54, -0.60], ['c', 0.42, -0.54, 0.51, -0.63, 0.69, -0.63], ['c', 0.09, 0.00, 0.30, 0.12, 0.36, 0.21], ['c', 0.09, 0.12, 0.12, 0.30, 0.03, 0.42], ['c', -0.06, 0.12, -3.15, 3.90, -3.30, 4.08], ['c', -0.06, 0.06, -0.18, 0.12, -0.27, 0.18], ['c', -0.27, 0.12, -0.60, 0.06, -0.99, -0.27], ['c', -0.27, -0.21, -0.42, -0.39, -1.08, -1.14], ['c', -0.63, -0.72, -0.81, -0.90, -1.17, -1.08], ['c', -0.36, -0.18, -0.57, -0.21, -0.99, -0.21], ['c', -0.39, 0.00, -0.63, 0.03, -0.93, 0.18], ['c', -0.36, 0.15, -0.51, 0.27, -0.90, 0.81], ['c', -0.24, 0.27, -0.45, 0.51, -0.48, 0.54], ['c', -0.12, 0.09, -0.27, 0.06, -0.39, 0.00], ['c', -0.24, -0.15, -0.33, -0.39, -0.21, -0.60], ['c', 0.09, -0.12, 3.18, -3.87, 3.33, -4.02], ['c', 0.06, -0.06, 0.18, -0.15, 0.24, -0.21], ['z']],\n      w: 10.817,\n      h: 6.125\n    },\n    'scripts.prall': {\n      d: [['M', -4.38, -3.69], ['c', 0.06, -0.03, 0.18, -0.06, 0.24, -0.06], ['c', 0.30, 0.00, 0.27, -0.03, 1.89, 1.95], ['l', 1.53, 1.83], ['c', 0.03, 0.00, 0.57, -0.84, 1.23, -1.83], ['c', 1.14, -1.68, 1.23, -1.83, 1.35, -1.89], ['c', 0.06, -0.03, 0.18, -0.06, 0.24, -0.06], ['c', 0.30, 0.00, 0.27, -0.03, 1.89, 1.95], ['l', 1.53, 1.83], ['l', 0.48, -0.69], ['c', 0.51, -0.78, 0.54, -0.84, 0.69, -0.90], ['c', 0.42, -0.18, 0.87, 0.15, 0.81, 0.60], ['c', -0.03, 0.12, -0.30, 0.51, -1.50, 2.37], ['c', -1.38, 2.07, -1.50, 2.22, -1.62, 2.28], ['c', -0.06, 0.03, -0.18, 0.06, -0.24, 0.06], ['c', -0.30, 0.00, -0.27, 0.03, -1.89, -1.95], ['l', -1.53, -1.83], ['c', -0.03, 0.00, -0.57, 0.84, -1.23, 1.83], ['c', -1.14, 1.68, -1.23, 1.83, -1.35, 1.89], ['c', -0.06, 0.03, -0.18, 0.06, -0.24, 0.06], ['c', -0.30, 0.00, -0.27, 0.03, -1.89, -1.95], ['l', -1.53, -1.83], ['l', -0.48, 0.69], ['c', -0.51, 0.78, -0.54, 0.84, -0.69, 0.90], ['c', -0.42, 0.18, -0.87, -0.15, -0.81, -0.60], ['c', 0.03, -0.12, 0.30, -0.51, 1.50, -2.37], ['c', 1.38, -2.07, 1.50, -2.22, 1.62, -2.28], ['z']],\n      w: 15.011,\n      h: 7.5\n    },\n    'scripts.arpeggio': {\n      d: [['M', 1.5, 0], ['c', 1.5, 2, 1.5, 3, 1.5, 3], ['s', 0, 1, -2, 1.5], ['s', -0.5, 3, 1, 5.5], ['l', 1.5, 0], ['s', -1.75, -2, -1.9, -3.25], ['s', 2.15, -0.6, 2.95, -1.6], ['s', 0.45, -1, 0.5, -1.25], ['s', 0, -1, -2, -3.9], ['l', -1.5, 0], ['z']],\n      w: 5,\n      h: 10\n    },\n    'scripts.mordent': {\n      d: [['M', -0.21, -4.95], ['c', 0.27, -0.15, 0.63, 0.00, 0.75, 0.27], ['c', 0.06, 0.12, 0.06, 0.24, 0.06, 1.44], ['l', 0.00, 1.29], ['l', 0.57, -0.84], ['c', 0.51, -0.75, 0.57, -0.84, 0.69, -0.90], ['c', 0.06, -0.03, 0.18, -0.06, 0.24, -0.06], ['c', 0.30, 0.00, 0.27, -0.03, 1.89, 1.95], ['l', 1.53, 1.83], ['l', 0.48, -0.69], ['c', 0.51, -0.78, 0.54, -0.84, 0.69, -0.90], ['c', 0.42, -0.18, 0.87, 0.15, 0.81, 0.60], ['c', -0.03, 0.12, -0.30, 0.51, -1.50, 2.37], ['c', -1.38, 2.07, -1.50, 2.22, -1.62, 2.28], ['c', -0.06, 0.03, -0.18, 0.06, -0.24, 0.06], ['c', -0.30, 0.00, -0.27, 0.03, -1.83, -1.89], ['c', -0.81, -0.99, -1.50, -1.80, -1.53, -1.86], ['c', -0.06, -0.03, -0.06, -0.03, -0.12, 0.03], ['c', -0.06, 0.06, -0.06, 0.15, -0.06, 2.28], ['c', 0.00, 1.95, 0.00, 2.25, -0.06, 2.34], ['c', -0.18, 0.45, -0.81, 0.48, -1.05, 0.03], ['c', -0.03, -0.06, -0.06, -0.24, -0.06, -1.41], ['l', 0.00, -1.35], ['l', -0.57, 0.84], ['c', -0.54, 0.78, -0.60, 0.87, -0.72, 0.93], ['c', -0.06, 0.03, -0.18, 0.06, -0.24, 0.06], ['c', -0.30, 0.00, -0.27, 0.03, -1.89, -1.95], ['l', -1.53, -1.83], ['l', -0.48, 0.69], ['c', -0.51, 0.78, -0.54, 0.84, -0.69, 0.90], ['c', -0.42, 0.18, -0.87, -0.15, -0.81, -0.60], ['c', 0.03, -0.12, 0.30, -0.51, 1.50, -2.37], ['c', 1.38, -2.07, 1.50, -2.22, 1.62, -2.28], ['c', 0.06, -0.03, 0.18, -0.06, 0.24, -0.06], ['c', 0.30, 0.00, 0.27, -0.03, 1.89, 1.95], ['l', 1.53, 1.83], ['c', 0.03, 0.00, 0.06, -0.06, 0.09, -0.09], ['c', 0.06, -0.12, 0.06, -0.15, 0.06, -2.28], ['c', 0.00, -1.92, 0.00, -2.22, 0.06, -2.31], ['c', 0.06, -0.15, 0.15, -0.24, 0.30, -0.30], ['z']],\n      w: 15.011,\n      h: 10.012\n    },\n    'flags.u8th': {\n      d: [['M', -0.42, 3.75], ['l', 0.00, -3.75], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 0.18], ['c', 0.00, 0.30, 0.06, 0.84, 0.12, 1.23], ['c', 0.24, 1.53, 0.90, 3.12, 2.13, 5.16], ['l', 0.99, 1.59], ['c', 0.87, 1.44, 1.38, 2.34, 1.77, 3.09], ['c', 0.81, 1.68, 1.20, 3.06, 1.26, 4.53], ['c', 0.03, 1.53, -0.21, 3.27, -0.75, 5.01], ['c', -0.21, 0.69, -0.51, 1.50, -0.60, 1.59], ['c', -0.09, 0.12, -0.27, 0.21, -0.42, 0.21], ['c', -0.15, 0.00, -0.42, -0.12, -0.51, -0.21], ['c', -0.15, -0.18, -0.18, -0.42, -0.09, -0.66], ['c', 0.15, -0.33, 0.45, -1.20, 0.57, -1.62], ['c', 0.42, -1.38, 0.60, -2.58, 0.60, -3.90], ['c', 0.00, -0.66, 0.00, -0.81, -0.06, -1.11], ['c', -0.39, -2.07, -1.80, -4.26, -4.59, -7.14], ['l', -0.42, -0.45], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -3.75], ['z']],\n      w: 6.692,\n      h: 22.59\n    },\n    'flags.u16th': {\n      d: [['M', -0.42, 7.50], ['l', 0.00, -7.50], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 0.39], ['c', 0.06, 1.08, 0.39, 2.19, 0.99, 3.39], ['c', 0.45, 0.90, 0.87, 1.59, 1.95, 3.12], ['c', 1.29, 1.86, 1.77, 2.64, 2.22, 3.57], ['c', 0.45, 0.93, 0.72, 1.80, 0.87, 2.64], ['c', 0.06, 0.51, 0.06, 1.50, 0.00, 1.92], ['c', -0.12, 0.60, -0.30, 1.20, -0.54, 1.71], ['l', -0.09, 0.24], ['l', 0.18, 0.45], ['c', 0.51, 1.20, 0.72, 2.22, 0.69, 3.42], ['c', -0.06, 1.53, -0.39, 3.03, -0.99, 4.53], ['c', -0.30, 0.75, -0.36, 0.81, -0.57, 0.90], ['c', -0.15, 0.09, -0.33, 0.06, -0.48, 0.00], ['c', -0.18, -0.09, -0.27, -0.18, -0.33, -0.33], ['c', -0.09, -0.18, -0.06, -0.30, 0.12, -0.75], ['c', 0.66, -1.41, 1.02, -2.88, 1.08, -4.32], ['c', 0.00, -0.60, -0.03, -1.05, -0.18, -1.59], ['c', -0.30, -1.20, -0.99, -2.40, -2.25, -3.87], ['c', -0.42, -0.48, -1.53, -1.62, -2.19, -2.22], ['l', -0.45, -0.42], ['l', -0.03, 1.11], ['l', 0.00, 1.11], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -7.50], ['z'], ['m', 1.65, 0.09], ['c', -0.30, -0.30, -0.69, -0.72, -0.90, -0.87], ['l', -0.33, -0.33], ['l', 0.00, 0.15], ['c', 0.00, 0.30, 0.06, 0.81, 0.15, 1.26], ['c', 0.27, 1.29, 0.87, 2.61, 2.04, 4.29], ['c', 0.15, 0.24, 0.60, 0.87, 0.96, 1.38], ['l', 1.08, 1.53], ['l', 0.42, 0.63], ['c', 0.03, 0.00, 0.12, -0.36, 0.21, -0.72], ['c', 0.06, -0.33, 0.06, -1.20, 0.00, -1.62], ['c', -0.33, -1.71, -1.44, -3.48, -3.63, -5.70], ['z']],\n      w: 6.693,\n      h: 26.337\n    },\n    'flags.u32nd': {\n      d: [['M', -0.42, 11.25], ['l', 0.00, -11.25], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 0.36], ['c', 0.09, 1.68, 0.69, 3.27, 2.07, 5.46], ['l', 0.87, 1.35], ['c', 1.02, 1.62, 1.47, 2.37, 1.86, 3.18], ['c', 0.48, 1.02, 0.78, 1.92, 0.93, 2.88], ['c', 0.06, 0.48, 0.06, 1.50, 0.00, 1.89], ['c', -0.09, 0.42, -0.21, 0.87, -0.36, 1.26], ['l', -0.12, 0.30], ['l', 0.15, 0.39], ['c', 0.69, 1.56, 0.84, 2.88, 0.54, 4.38], ['c', -0.09, 0.45, -0.27, 1.08, -0.45, 1.47], ['l', -0.12, 0.24], ['l', 0.18, 0.36], ['c', 0.33, 0.72, 0.57, 1.56, 0.69, 2.34], ['c', 0.12, 1.02, -0.06, 2.52, -0.42, 3.84], ['c', -0.27, 0.93, -0.75, 2.13, -0.93, 2.31], ['c', -0.18, 0.15, -0.45, 0.18, -0.66, 0.09], ['c', -0.18, -0.09, -0.27, -0.18, -0.33, -0.33], ['c', -0.09, -0.18, -0.06, -0.30, 0.06, -0.60], ['c', 0.21, -0.36, 0.42, -0.90, 0.57, -1.38], ['c', 0.51, -1.41, 0.69, -3.06, 0.48, -4.08], ['c', -0.15, -0.81, -0.57, -1.68, -1.20, -2.55], ['c', -0.72, -0.99, -1.83, -2.13, -3.30, -3.33], ['l', -0.48, -0.42], ['l', -0.03, 1.53], ['l', 0.00, 1.56], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -11.25], ['z'], ['m', 1.26, -3.96], ['c', -0.27, -0.30, -0.54, -0.60, -0.66, -0.72], ['l', -0.18, -0.21], ['l', 0.00, 0.42], ['c', 0.06, 0.87, 0.24, 1.74, 0.66, 2.67], ['c', 0.36, 0.87, 0.96, 1.86, 1.92, 3.18], ['c', 0.21, 0.33, 0.63, 0.87, 0.87, 1.23], ['c', 0.27, 0.39, 0.60, 0.84, 0.75, 1.08], ['l', 0.27, 0.39], ['l', 0.03, -0.12], ['c', 0.12, -0.45, 0.15, -1.05, 0.09, -1.59], ['c', -0.27, -1.86, -1.38, -3.78, -3.75, -6.33], ['z'], ['m', -0.27, 6.09], ['c', -0.27, -0.21, -0.48, -0.42, -0.51, -0.45], ['c', -0.06, -0.03, -0.06, -0.03, -0.06, 0.21], ['c', 0.00, 0.90, 0.30, 2.04, 0.81, 3.09], ['c', 0.48, 1.02, 0.96, 1.77, 2.37, 3.63], ['c', 0.60, 0.78, 1.05, 1.44, 1.29, 1.77], ['c', 0.06, 0.12, 0.15, 0.21, 0.15, 0.18], ['c', 0.03, -0.03, 0.18, -0.57, 0.24, -0.87], ['c', 0.06, -0.45, 0.06, -1.32, -0.03, -1.74], ['c', -0.09, -0.48, -0.24, -0.90, -0.51, -1.44], ['c', -0.66, -1.35, -1.83, -2.70, -3.75, -4.38], ['z']],\n      w: 6.697,\n      h: 32.145\n    },\n    'flags.u64th': {\n      d: [['M', -0.42, 15.00], ['l', 0.00, -15.00], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 0.36], ['c', 0.06, 1.20, 0.39, 2.37, 1.02, 3.66], ['c', 0.39, 0.81, 0.84, 1.56, 1.80, 3.09], ['c', 0.81, 1.26, 1.05, 1.68, 1.35, 2.22], ['c', 0.87, 1.50, 1.35, 2.79, 1.56, 4.08], ['c', 0.06, 0.54, 0.06, 1.56, -0.03, 2.04], ['c', -0.09, 0.48, -0.21, 0.99, -0.36, 1.35], ['l', -0.12, 0.27], ['l', 0.12, 0.27], ['c', 0.09, 0.15, 0.21, 0.45, 0.27, 0.66], ['c', 0.69, 1.89, 0.63, 3.66, -0.18, 5.46], ['l', -0.18, 0.39], ['l', 0.15, 0.33], ['c', 0.30, 0.66, 0.51, 1.44, 0.63, 2.10], ['c', 0.06, 0.48, 0.06, 1.35, 0.00, 1.71], ['c', -0.15, 0.57, -0.42, 1.20, -0.78, 1.68], ['l', -0.21, 0.27], ['l', 0.18, 0.33], ['c', 0.57, 1.05, 0.93, 2.13, 1.02, 3.18], ['c', 0.06, 0.72, 0.00, 1.83, -0.21, 2.79], ['c', -0.18, 1.02, -0.63, 2.34, -1.02, 3.09], ['c', -0.15, 0.33, -0.48, 0.45, -0.78, 0.30], ['c', -0.18, -0.09, -0.27, -0.18, -0.33, -0.33], ['c', -0.09, -0.18, -0.06, -0.30, 0.03, -0.54], ['c', 0.75, -1.50, 1.23, -3.45, 1.17, -4.89], ['c', -0.06, -1.02, -0.42, -2.01, -1.17, -3.15], ['c', -0.48, -0.72, -1.02, -1.35, -1.89, -2.22], ['c', -0.57, -0.57, -1.56, -1.50, -1.92, -1.77], ['l', -0.12, -0.09], ['l', 0.00, 1.68], ['l', 0.00, 1.68], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -15.00], ['z'], ['m', 0.93, -8.07], ['c', -0.27, -0.30, -0.48, -0.54, -0.51, -0.54], ['c', 0.00, 0.00, 0.00, 0.69, 0.03, 1.02], ['c', 0.15, 1.47, 0.75, 2.94, 2.04, 4.83], ['l', 1.08, 1.53], ['c', 0.39, 0.57, 0.84, 1.20, 0.99, 1.44], ['c', 0.15, 0.24, 0.30, 0.45, 0.30, 0.45], ['c', 0.00, 0.00, 0.03, -0.09, 0.06, -0.21], ['c', 0.36, -1.59, -0.15, -3.33, -1.47, -5.40], ['c', -0.63, -0.93, -1.35, -1.83, -2.52, -3.12], ['z'], ['m', 0.06, 6.72], ['c', -0.24, -0.21, -0.48, -0.42, -0.51, -0.45], ['l', -0.06, -0.06], ['l', 0.00, 0.33], ['c', 0.00, 1.20, 0.30, 2.34, 0.93, 3.60], ['c', 0.45, 0.90, 0.96, 1.68, 2.25, 3.51], ['c', 0.39, 0.54, 0.84, 1.17, 1.02, 1.44], ['c', 0.21, 0.33, 0.33, 0.51, 0.33, 0.48], ['c', 0.06, -0.09, 0.21, -0.63, 0.30, -0.99], ['c', 0.06, -0.33, 0.06, -0.45, 0.06, -0.96], ['c', 0.00, -0.60, -0.03, -0.84, -0.18, -1.35], ['c', -0.30, -1.08, -1.02, -2.28, -2.13, -3.57], ['c', -0.39, -0.45, -1.44, -1.47, -2.01, -1.98], ['z'], ['m', 0.00, 6.72], ['c', -0.24, -0.21, -0.48, -0.39, -0.51, -0.42], ['l', -0.06, -0.06], ['l', 0.00, 0.33], ['c', 0.00, 1.41, 0.45, 2.82, 1.38, 4.35], ['c', 0.42, 0.72, 0.72, 1.14, 1.86, 2.73], ['c', 0.36, 0.45, 0.75, 0.99, 0.87, 1.20], ['c', 0.15, 0.21, 0.30, 0.36, 0.30, 0.36], ['c', 0.06, 0.00, 0.30, -0.48, 0.39, -0.75], ['c', 0.09, -0.36, 0.12, -0.63, 0.12, -1.05], ['c', -0.06, -1.05, -0.45, -2.04, -1.20, -3.18], ['c', -0.57, -0.87, -1.11, -1.53, -2.07, -2.49], ['c', -0.36, -0.33, -0.84, -0.78, -1.08, -1.02], ['z']],\n      w: 6.682,\n      h: 39.694\n    },\n    'flags.d8th': {\n      d: [['M', 5.67, -21.63], ['c', 0.24, -0.12, 0.54, -0.06, 0.69, 0.15], ['c', 0.06, 0.06, 0.21, 0.36, 0.39, 0.66], ['c', 0.84, 1.77, 1.26, 3.36, 1.32, 5.10], ['c', 0.03, 1.29, -0.21, 2.37, -0.81, 3.63], ['c', -0.60, 1.23, -1.26, 2.13, -3.21, 4.38], ['c', -1.35, 1.53, -1.86, 2.19, -2.40, 2.97], ['c', -0.63, 0.93, -1.11, 1.92, -1.38, 2.79], ['c', -0.15, 0.54, -0.27, 1.35, -0.27, 1.80], ['l', 0.00, 0.15], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -3.75], ['l', 0.00, -3.75], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.48, -0.30], ['c', 1.83, -1.11, 3.12, -2.10, 4.17, -3.12], ['c', 0.78, -0.81, 1.32, -1.53, 1.71, -2.31], ['c', 0.45, -0.93, 0.60, -1.74, 0.51, -2.88], ['c', -0.12, -1.56, -0.63, -3.18, -1.47, -4.68], ['c', -0.12, -0.21, -0.15, -0.33, -0.06, -0.51], ['c', 0.06, -0.15, 0.15, -0.24, 0.33, -0.33], ['z']],\n      w: 8.492,\n      h: 21.691\n    },\n    'flags.ugrace': {\n      d: [['M', 6.03, 6.93], ['c', 0.15, -0.09, 0.33, -0.06, 0.51, 0.00], ['c', 0.15, 0.09, 0.21, 0.15, 0.30, 0.33], ['c', 0.09, 0.18, 0.06, 0.39, -0.03, 0.54], ['c', -0.06, 0.15, -10.89, 8.88, -11.07, 8.97], ['c', -0.15, 0.09, -0.33, 0.06, -0.48, 0.00], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['c', -0.09, -0.18, -0.06, -0.39, 0.03, -0.54], ['c', 0.06, -0.15, 10.89, -8.88, 11.07, -8.97], ['z']],\n      w: 12.019,\n      h: 9.954\n    },\n    'flags.dgrace': {\n      d: [['M', -6.06, -15.93], ['c', 0.18, -0.09, 0.33, -0.12, 0.48, -0.06], ['c', 0.18, 0.09, 14.01, 8.04, 14.10, 8.10], ['c', 0.12, 0.12, 0.18, 0.33, 0.18, 0.51], ['c', -0.03, 0.21, -0.15, 0.39, -0.36, 0.48], ['c', -0.18, 0.09, -0.33, 0.12, -0.48, 0.06], ['c', -0.18, -0.09, -14.01, -8.04, -14.10, -8.10], ['c', -0.12, -0.12, -0.18, -0.33, -0.18, -0.51], ['c', 0.03, -0.21, 0.15, -0.39, 0.36, -0.48], ['z']],\n      w: 15.12,\n      h: 9.212\n    },\n    'flags.d16th': {\n      d: [['M', 6.84, -22.53], ['c', 0.27, -0.12, 0.57, -0.06, 0.72, 0.15], ['c', 0.15, 0.15, 0.33, 0.87, 0.45, 1.56], ['c', 0.06, 0.33, 0.06, 1.35, 0.00, 1.65], ['c', -0.06, 0.33, -0.15, 0.78, -0.27, 1.11], ['c', -0.12, 0.33, -0.45, 0.96, -0.66, 1.32], ['l', -0.18, 0.27], ['l', 0.09, 0.18], ['c', 0.48, 1.02, 0.72, 2.25, 0.69, 3.30], ['c', -0.06, 1.23, -0.42, 2.28, -1.26, 3.45], ['c', -0.57, 0.87, -0.99, 1.32, -3.00, 3.39], ['c', -1.56, 1.56, -2.22, 2.40, -2.76, 3.45], ['c', -0.42, 0.84, -0.66, 1.80, -0.66, 2.55], ['l', 0.00, 0.15], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -7.50], ['l', 0.00, -7.50], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 1.14], ['l', 0.00, 1.11], ['l', 0.27, -0.15], ['c', 1.11, -0.57, 1.77, -0.99, 2.52, -1.47], ['c', 2.37, -1.56, 3.69, -3.15, 4.05, -4.83], ['c', 0.03, -0.18, 0.03, -0.39, 0.03, -0.78], ['c', 0.00, -0.60, -0.03, -0.93, -0.24, -1.50], ['c', -0.06, -0.18, -0.12, -0.39, -0.15, -0.45], ['c', -0.03, -0.24, 0.12, -0.48, 0.36, -0.60], ['z'], ['m', -0.63, 7.50], ['c', -0.06, -0.18, -0.15, -0.36, -0.15, -0.36], ['c', -0.03, 0.00, -0.03, 0.03, -0.06, 0.06], ['c', -0.06, 0.12, -0.96, 1.02, -1.95, 1.98], ['c', -0.63, 0.57, -1.26, 1.17, -1.44, 1.35], ['c', -1.53, 1.62, -2.28, 2.85, -2.55, 4.32], ['c', -0.03, 0.18, -0.03, 0.54, -0.06, 0.99], ['l', 0.00, 0.69], ['l', 0.18, -0.09], ['c', 0.93, -0.54, 2.10, -1.29, 2.82, -1.83], ['c', 0.69, -0.51, 1.02, -0.81, 1.53, -1.29], ['c', 1.86, -1.89, 2.37, -3.66, 1.68, -5.82], ['z']],\n      w: 8.475,\n      h: 22.591\n    },\n    'flags.d32nd': {\n      d: [['M', 6.84, -29.13], ['c', 0.27, -0.12, 0.57, -0.06, 0.72, 0.15], ['c', 0.12, 0.12, 0.27, 0.63, 0.36, 1.11], ['c', 0.33, 1.59, 0.06, 3.06, -0.81, 4.47], ['l', -0.18, 0.27], ['l', 0.09, 0.15], ['c', 0.12, 0.24, 0.33, 0.69, 0.45, 1.05], ['c', 0.63, 1.83, 0.45, 3.57, -0.57, 5.22], ['l', -0.18, 0.30], ['l', 0.15, 0.27], ['c', 0.42, 0.87, 0.60, 1.71, 0.57, 2.61], ['c', -0.06, 1.29, -0.48, 2.46, -1.35, 3.78], ['c', -0.54, 0.81, -0.93, 1.29, -2.46, 3.00], ['c', -0.51, 0.54, -1.05, 1.17, -1.26, 1.41], ['c', -1.56, 1.86, -2.25, 3.36, -2.37, 5.01], ['l', 0.00, 0.33], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -11.25], ['l', 0.00, -11.25], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 1.35], ['l', 0.03, 1.35], ['l', 0.78, -0.39], ['c', 1.38, -0.69, 2.34, -1.26, 3.24, -1.92], ['c', 1.38, -1.02, 2.28, -2.13, 2.64, -3.21], ['c', 0.15, -0.48, 0.18, -0.72, 0.18, -1.29], ['c', 0.00, -0.57, -0.06, -0.90, -0.24, -1.47], ['c', -0.06, -0.18, -0.12, -0.39, -0.15, -0.45], ['c', -0.03, -0.24, 0.12, -0.48, 0.36, -0.60], ['z'], ['m', -0.63, 7.20], ['c', -0.09, -0.18, -0.12, -0.21, -0.12, -0.15], ['c', -0.03, 0.09, -1.02, 1.08, -2.04, 2.04], ['c', -1.17, 1.08, -1.65, 1.56, -2.07, 2.04], ['c', -0.84, 0.96, -1.38, 1.86, -1.68, 2.76], ['c', -0.21, 0.57, -0.27, 0.99, -0.30, 1.65], ['l', 0.00, 0.54], ['l', 0.66, -0.33], ['c', 3.57, -1.86, 5.49, -3.69, 5.94, -5.70], ['c', 0.06, -0.39, 0.06, -1.20, -0.03, -1.65], ['c', -0.06, -0.39, -0.24, -0.90, -0.36, -1.20], ['z'], ['m', -0.06, 7.20], ['c', -0.06, -0.15, -0.12, -0.33, -0.15, -0.45], ['l', -0.06, -0.18], ['l', -0.18, 0.21], ['l', -1.83, 1.83], ['c', -0.87, 0.90, -1.77, 1.80, -1.95, 2.01], ['c', -1.08, 1.29, -1.62, 2.31, -1.89, 3.51], ['c', -0.06, 0.30, -0.06, 0.51, -0.09, 0.93], ['l', 0.00, 0.57], ['l', 0.09, -0.06], ['c', 0.75, -0.45, 1.89, -1.26, 2.52, -1.74], ['c', 0.81, -0.66, 1.74, -1.53, 2.22, -2.16], ['c', 1.26, -1.53, 1.68, -3.06, 1.32, -4.47], ['z']],\n      w: 8.385,\n      h: 29.191\n    },\n    'flags.d64th': {\n      d: [['M', 7.08, -32.88], ['c', 0.30, -0.12, 0.66, -0.03, 0.78, 0.24], ['c', 0.18, 0.33, 0.27, 2.10, 0.15, 2.64], ['c', -0.09, 0.39, -0.21, 0.78, -0.39, 1.08], ['l', -0.15, 0.30], ['l', 0.09, 0.27], ['c', 0.03, 0.12, 0.09, 0.45, 0.12, 0.69], ['c', 0.27, 1.44, 0.18, 2.55, -0.30, 3.60], ['l', -0.12, 0.33], ['l', 0.06, 0.42], ['c', 0.27, 1.35, 0.33, 2.82, 0.21, 3.63], ['c', -0.12, 0.60, -0.30, 1.23, -0.57, 1.80], ['l', -0.15, 0.27], ['l', 0.03, 0.42], ['c', 0.06, 1.02, 0.06, 2.70, 0.03, 3.06], ['c', -0.15, 1.47, -0.66, 2.76, -1.74, 4.41], ['c', -0.45, 0.69, -0.75, 1.11, -1.74, 2.37], ['c', -1.05, 1.38, -1.50, 1.98, -1.95, 2.73], ['c', -0.93, 1.50, -1.38, 2.82, -1.44, 4.20], ['l', 0.00, 0.42], ['l', -0.21, 0.00], ['l', -0.21, 0.00], ['l', 0.00, -15.00], ['l', 0.00, -15.00], ['l', 0.21, 0.00], ['l', 0.21, 0.00], ['l', 0.00, 1.86], ['l', 0.00, 1.89], ['c', 0.00, 0.00, 0.21, -0.03, 0.45, -0.09], ['c', 2.22, -0.39, 4.08, -1.11, 5.19, -2.01], ['c', 0.63, -0.54, 1.02, -1.14, 1.20, -1.80], ['c', 0.06, -0.30, 0.06, -1.14, -0.03, -1.65], ['c', -0.03, -0.18, -0.06, -0.39, -0.09, -0.48], ['c', -0.03, -0.24, 0.12, -0.48, 0.36, -0.60], ['z'], ['m', -0.45, 6.15], ['c', -0.03, -0.18, -0.06, -0.42, -0.06, -0.54], ['l', -0.03, -0.18], ['l', -0.33, 0.30], ['c', -0.42, 0.36, -0.87, 0.72, -1.68, 1.29], ['c', -1.98, 1.38, -2.25, 1.59, -2.85, 2.16], ['c', -0.75, 0.69, -1.23, 1.44, -1.47, 2.19], ['c', -0.15, 0.45, -0.18, 0.63, -0.21, 1.35], ['l', 0.00, 0.66], ['l', 0.39, -0.18], ['c', 1.83, -0.90, 3.45, -1.95, 4.47, -2.91], ['c', 0.93, -0.90, 1.53, -1.83, 1.74, -2.82], ['c', 0.06, -0.33, 0.06, -0.87, 0.03, -1.32], ['z'], ['m', -0.27, 4.86], ['c', -0.03, -0.21, -0.06, -0.36, -0.06, -0.36], ['c', 0.00, -0.03, -0.12, 0.09, -0.24, 0.24], ['c', -0.39, 0.48, -0.99, 1.08, -2.16, 2.19], ['c', -1.47, 1.38, -1.92, 1.83, -2.46, 2.49], ['c', -0.66, 0.87, -1.08, 1.74, -1.29, 2.58], ['c', -0.09, 0.42, -0.15, 0.87, -0.15, 1.44], ['l', 0.00, 0.54], ['l', 0.48, -0.33], ['c', 1.50, -1.02, 2.58, -1.89, 3.51, -2.82], ['c', 1.47, -1.47, 2.25, -2.85, 2.40, -4.26], ['c', 0.03, -0.39, 0.03, -1.17, -0.03, -1.71], ['z'], ['m', -0.66, 7.68], ['c', 0.03, -0.15, 0.03, -0.60, 0.03, -0.99], ['l', 0.00, -0.72], ['l', -0.27, 0.33], ['l', -1.74, 1.98], ['c', -1.77, 1.92, -2.43, 2.76, -2.97, 3.90], ['c', -0.51, 1.02, -0.72, 1.77, -0.75, 2.91], ['c', 0.00, 0.63, 0.00, 0.63, 0.06, 0.60], ['c', 0.03, -0.03, 0.30, -0.27, 0.63, -0.54], ['c', 0.66, -0.60, 1.86, -1.80, 2.31, -2.31], ['c', 1.65, -1.89, 2.52, -3.54, 2.70, -5.16], ['z']],\n      w: 8.485,\n      h: 32.932\n    },\n    'clefs.C': {\n      d: [['M', 0.06, -14.94], ['l', 0.09, -0.06], ['l', 1.92, 0.00], ['l', 1.92, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 14.85], ['l', 0.00, 14.82], ['l', -0.06, 0.09], ['l', -0.09, 0.06], ['l', -1.92, 0.00], ['l', -1.92, 0.00], ['l', -0.09, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -14.82], ['l', 0.00, -14.85], ['z'], ['m', 5.37, 0.00], ['c', 0.09, -0.06, 0.09, -0.06, 0.57, -0.06], ['c', 0.45, 0.00, 0.45, 0.00, 0.54, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 7.14], ['l', 0.00, 7.11], ['l', 0.09, -0.06], ['c', 0.18, -0.18, 0.72, -0.84, 0.96, -1.20], ['c', 0.30, -0.45, 0.66, -1.17, 0.84, -1.65], ['c', 0.36, -0.90, 0.57, -1.83, 0.60, -2.79], ['c', 0.03, -0.48, 0.03, -0.54, 0.09, -0.63], ['c', 0.12, -0.18, 0.36, -0.21, 0.54, -0.12], ['c', 0.18, 0.09, 0.21, 0.15, 0.24, 0.66], ['c', 0.06, 0.87, 0.21, 1.56, 0.57, 2.22], ['c', 0.51, 1.02, 1.26, 1.68, 2.22, 1.92], ['c', 0.21, 0.06, 0.33, 0.06, 0.78, 0.06], ['c', 0.45, 0.00, 0.57, 0.00, 0.84, -0.06], ['c', 0.45, -0.12, 0.81, -0.33, 1.08, -0.60], ['c', 0.57, -0.57, 0.87, -1.41, 0.99, -2.88], ['c', 0.06, -0.54, 0.06, -3.00, 0.00, -3.57], ['c', -0.21, -2.58, -0.84, -3.87, -2.16, -4.50], ['c', -0.48, -0.21, -1.17, -0.36, -1.77, -0.36], ['c', -0.69, 0.00, -1.29, 0.27, -1.50, 0.72], ['c', -0.06, 0.15, -0.06, 0.21, -0.06, 0.42], ['c', 0.00, 0.24, 0.00, 0.30, 0.06, 0.45], ['c', 0.12, 0.24, 0.24, 0.39, 0.63, 0.66], ['c', 0.42, 0.30, 0.57, 0.48, 0.69, 0.72], ['c', 0.06, 0.15, 0.06, 0.21, 0.06, 0.48], ['c', 0.00, 0.39, -0.03, 0.63, -0.21, 0.96], ['c', -0.30, 0.60, -0.87, 1.08, -1.50, 1.26], ['c', -0.27, 0.06, -0.87, 0.06, -1.14, 0.00], ['c', -0.78, -0.24, -1.44, -0.87, -1.65, -1.68], ['c', -0.12, -0.42, -0.09, -1.17, 0.09, -1.71], ['c', 0.51, -1.65, 1.98, -2.82, 3.81, -3.09], ['c', 0.84, -0.09, 2.46, 0.03, 3.51, 0.27], ['c', 2.22, 0.57, 3.69, 1.80, 4.44, 3.75], ['c', 0.36, 0.93, 0.57, 2.13, 0.57, 3.36], ['c', 0.00, 1.44, -0.48, 2.73, -1.38, 3.81], ['c', -1.26, 1.50, -3.27, 2.43, -5.28, 2.43], ['c', -0.48, 0.00, -0.51, 0.00, -0.75, -0.09], ['c', -0.15, -0.03, -0.48, -0.21, -0.78, -0.36], ['c', -0.69, -0.36, -0.87, -0.42, -1.26, -0.42], ['c', -0.27, 0.00, -0.30, 0.00, -0.51, 0.09], ['c', -0.57, 0.30, -0.81, 0.90, -0.81, 2.10], ['c', 0.00, 1.23, 0.24, 1.83, 0.81, 2.13], ['c', 0.21, 0.09, 0.24, 0.09, 0.51, 0.09], ['c', 0.39, 0.00, 0.57, -0.06, 1.26, -0.42], ['c', 0.30, -0.15, 0.63, -0.33, 0.78, -0.36], ['c', 0.24, -0.09, 0.27, -0.09, 0.75, -0.09], ['c', 2.01, 0.00, 4.02, 0.93, 5.28, 2.40], ['c', 0.90, 1.11, 1.38, 2.40, 1.38, 3.84], ['c', 0.00, 1.50, -0.30, 2.88, -0.84, 3.96], ['c', -0.78, 1.59, -2.19, 2.64, -4.17, 3.15], ['c', -1.05, 0.24, -2.67, 0.36, -3.51, 0.27], ['c', -1.83, -0.27, -3.30, -1.44, -3.81, -3.09], ['c', -0.18, -0.54, -0.21, -1.29, -0.09, -1.74], ['c', 0.15, -0.60, 0.63, -1.20, 1.23, -1.47], ['c', 0.36, -0.18, 0.57, -0.21, 0.99, -0.21], ['c', 0.42, 0.00, 0.63, 0.03, 1.02, 0.21], ['c', 0.42, 0.21, 0.84, 0.63, 1.05, 1.05], ['c', 0.18, 0.36, 0.21, 0.60, 0.21, 0.96], ['c', 0.00, 0.30, 0.00, 0.36, -0.06, 0.51], ['c', -0.12, 0.24, -0.27, 0.42, -0.69, 0.72], ['c', -0.57, 0.42, -0.69, 0.63, -0.69, 1.08], ['c', 0.00, 0.24, 0.00, 0.30, 0.06, 0.45], ['c', 0.12, 0.21, 0.30, 0.39, 0.57, 0.54], ['c', 0.42, 0.18, 0.87, 0.21, 1.53, 0.15], ['c', 1.08, -0.15, 1.80, -0.57, 2.34, -1.32], ['c', 0.54, -0.75, 0.84, -1.83, 0.99, -3.51], ['c', 0.06, -0.57, 0.06, -3.03, 0.00, -3.57], ['c', -0.12, -1.47, -0.42, -2.31, -0.99, -2.88], ['c', -0.27, -0.27, -0.63, -0.48, -1.08, -0.60], ['c', -0.27, -0.06, -0.39, -0.06, -0.84, -0.06], ['c', -0.45, 0.00, -0.57, 0.00, -0.78, 0.06], ['c', -1.14, 0.27, -2.01, 1.17, -2.46, 2.49], ['c', -0.21, 0.57, -0.30, 0.99, -0.33, 1.65], ['c', -0.03, 0.51, -0.06, 0.57, -0.24, 0.66], ['c', -0.12, 0.06, -0.27, 0.06, -0.39, 0.00], ['c', -0.21, -0.09, -0.21, -0.15, -0.24, -0.75], ['c', -0.09, -1.92, -0.78, -3.72, -2.01, -5.19], ['c', -0.18, -0.21, -0.36, -0.42, -0.39, -0.45], ['l', -0.09, -0.06], ['l', 0.00, 7.11], ['l', 0.00, 7.14], ['l', -0.06, 0.09], ['c', -0.09, 0.06, -0.09, 0.06, -0.54, 0.06], ['c', -0.48, 0.00, -0.48, 0.00, -0.57, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -14.82], ['l', 0.00, -14.85], ['z']],\n      w: 20.31,\n      h: 29.97\n    },\n    'clefs.F': {\n      d: [['M', 6.30, -7.80], ['c', 0.36, -0.03, 1.65, 0.00, 2.13, 0.03], ['c', 3.60, 0.42, 6.03, 2.10, 6.93, 4.86], ['c', 0.27, 0.84, 0.36, 1.50, 0.36, 2.58], ['c', 0.00, 0.90, -0.03, 1.35, -0.18, 2.16], ['c', -0.78, 3.78, -3.54, 7.08, -8.37, 9.96], ['c', -1.74, 1.05, -3.87, 2.13, -6.18, 3.12], ['c', -0.39, 0.18, -0.75, 0.33, -0.81, 0.36], ['c', -0.06, 0.03, -0.15, 0.06, -0.18, 0.06], ['c', -0.15, 0.00, -0.33, -0.18, -0.33, -0.33], ['c', 0.00, -0.15, 0.06, -0.21, 0.51, -0.48], ['c', 3.00, -1.77, 5.13, -3.21, 6.84, -4.74], ['c', 0.51, -0.45, 1.59, -1.50, 1.95, -1.95], ['c', 1.89, -2.19, 2.88, -4.32, 3.15, -6.78], ['c', 0.06, -0.42, 0.06, -1.77, 0.00, -2.19], ['c', -0.24, -2.01, -0.93, -3.63, -2.04, -4.71], ['c', -0.63, -0.63, -1.29, -1.02, -2.07, -1.20], ['c', -1.62, -0.39, -3.36, 0.15, -4.56, 1.44], ['c', -0.54, 0.60, -1.05, 1.47, -1.32, 2.22], ['l', -0.09, 0.21], ['l', 0.24, -0.12], ['c', 0.39, -0.21, 0.63, -0.24, 1.11, -0.24], ['c', 0.30, 0.00, 0.45, 0.00, 0.66, 0.06], ['c', 1.92, 0.48, 2.85, 2.55, 1.95, 4.38], ['c', -0.45, 0.99, -1.41, 1.62, -2.46, 1.71], ['c', -1.47, 0.09, -2.91, -0.87, -3.39, -2.25], ['c', -0.18, -0.57, -0.21, -1.32, -0.03, -2.28], ['c', 0.39, -2.25, 1.83, -4.20, 3.81, -5.19], ['c', 0.69, -0.36, 1.59, -0.60, 2.37, -0.69], ['z'], ['m', 11.58, 2.52], ['c', 0.84, -0.21, 1.71, 0.30, 1.89, 1.14], ['c', 0.30, 1.17, -0.72, 2.19, -1.89, 1.89], ['c', -0.99, -0.21, -1.50, -1.32, -1.02, -2.25], ['c', 0.18, -0.39, 0.60, -0.69, 1.02, -0.78], ['z'], ['m', 0.00, 7.50], ['c', 0.84, -0.21, 1.71, 0.30, 1.89, 1.14], ['c', 0.21, 0.87, -0.30, 1.71, -1.14, 1.89], ['c', -0.87, 0.21, -1.71, -0.30, -1.89, -1.14], ['c', -0.21, -0.84, 0.30, -1.71, 1.14, -1.89], ['z']],\n      w: 20.153,\n      h: 23.142\n    },\n    'clefs.G': {\n      d: [['M', 9.69, -37.41], ['c', 0.09, -0.09, 0.24, -0.06, 0.36, 0.00], ['c', 0.12, 0.09, 0.57, 0.60, 0.96, 1.11], ['c', 1.77, 2.34, 3.21, 5.85, 3.57, 8.73], ['c', 0.21, 1.56, 0.03, 3.27, -0.45, 4.86], ['c', -0.69, 2.31, -1.92, 4.47, -4.23, 7.44], ['c', -0.30, 0.39, -0.57, 0.72, -0.60, 0.75], ['c', -0.03, 0.06, 0.00, 0.15, 0.18, 0.78], ['c', 0.54, 1.68, 1.38, 4.44, 1.68, 5.49], ['l', 0.09, 0.42], ['l', 0.39, 0.00], ['c', 1.47, 0.09, 2.76, 0.51, 3.96, 1.29], ['c', 1.83, 1.23, 3.06, 3.21, 3.39, 5.52], ['c', 0.09, 0.45, 0.12, 1.29, 0.06, 1.74], ['c', -0.09, 1.02, -0.33, 1.83, -0.75, 2.73], ['c', -0.84, 1.71, -2.28, 3.06, -4.02, 3.72], ['l', -0.33, 0.12], ['l', 0.03, 1.26], ['c', 0.00, 1.74, -0.06, 3.63, -0.21, 4.62], ['c', -0.45, 3.06, -2.19, 5.49, -4.47, 6.21], ['c', -0.57, 0.18, -0.90, 0.21, -1.59, 0.21], ['c', -0.69, 0.00, -1.02, -0.03, -1.65, -0.21], ['c', -1.14, -0.27, -2.13, -0.84, -2.94, -1.65], ['c', -0.99, -0.99, -1.56, -2.16, -1.71, -3.54], ['c', -0.09, -0.81, 0.06, -1.53, 0.45, -2.13], ['c', 0.63, -0.99, 1.83, -1.56, 3.00, -1.53], ['c', 1.50, 0.09, 2.64, 1.32, 2.73, 2.94], ['c', 0.06, 1.47, -0.93, 2.70, -2.37, 2.97], ['c', -0.45, 0.06, -0.84, 0.03, -1.29, -0.09], ['l', -0.21, -0.09], ['l', 0.09, 0.12], ['c', 0.39, 0.54, 0.78, 0.93, 1.32, 1.26], ['c', 1.35, 0.87, 3.06, 1.02, 4.35, 0.36], ['c', 1.44, -0.72, 2.52, -2.28, 2.97, -4.35], ['c', 0.15, -0.66, 0.24, -1.50, 0.30, -3.03], ['c', 0.03, -0.84, 0.03, -2.94, 0.00, -3.00], ['c', -0.03, 0.00, -0.18, 0.00, -0.36, 0.03], ['c', -0.66, 0.12, -0.99, 0.12, -1.83, 0.12], ['c', -1.05, 0.00, -1.71, -0.06, -2.61, -0.30], ['c', -4.02, -0.99, -7.11, -4.35, -7.80, -8.46], ['c', -0.12, -0.66, -0.12, -0.99, -0.12, -1.83], ['c', 0.00, -0.84, 0.00, -1.14, 0.15, -1.92], ['c', 0.36, -2.28, 1.41, -4.62, 3.30, -7.29], ['l', 2.79, -3.60], ['c', 0.54, -0.66, 0.96, -1.20, 0.96, -1.23], ['c', 0.00, -0.03, -0.09, -0.33, -0.18, -0.69], ['c', -0.96, -3.21, -1.41, -5.28, -1.59, -7.68], ['c', -0.12, -1.38, -0.15, -3.09, -0.06, -3.96], ['c', 0.33, -2.67, 1.38, -5.07, 3.12, -7.08], ['c', 0.36, -0.42, 0.99, -1.05, 1.17, -1.14], ['z'], ['m', 2.01, 4.71], ['c', -0.15, -0.30, -0.30, -0.54, -0.30, -0.54], ['c', -0.03, 0.00, -0.18, 0.09, -0.30, 0.21], ['c', -2.40, 1.74, -3.87, 4.20, -4.26, 7.11], ['c', -0.06, 0.54, -0.06, 1.41, -0.03, 1.89], ['c', 0.09, 1.29, 0.48, 3.12, 1.08, 5.22], ['c', 0.15, 0.42, 0.24, 0.78, 0.24, 0.81], ['c', 0.00, 0.03, 0.84, -1.11, 1.23, -1.68], ['c', 1.89, -2.73, 2.88, -5.07, 3.15, -7.53], ['c', 0.09, -0.57, 0.12, -1.74, 0.06, -2.37], ['c', -0.09, -1.23, -0.27, -1.92, -0.87, -3.12], ['z'], ['m', -2.94, 20.70], ['c', -0.21, -0.72, -0.39, -1.32, -0.42, -1.32], ['c', 0.00, 0.00, -1.20, 1.47, -1.86, 2.37], ['c', -2.79, 3.63, -4.02, 6.30, -4.35, 9.30], ['c', -0.03, 0.21, -0.03, 0.69, -0.03, 1.08], ['c', 0.00, 0.69, 0.00, 0.75, 0.06, 1.11], ['c', 0.12, 0.54, 0.27, 0.99, 0.51, 1.47], ['c', 0.69, 1.38, 1.83, 2.55, 3.42, 3.42], ['c', 0.96, 0.54, 2.07, 0.90, 3.21, 1.08], ['c', 0.78, 0.12, 2.04, 0.12, 2.94, -0.03], ['c', 0.51, -0.06, 0.45, -0.03, 0.42, -0.30], ['c', -0.24, -3.33, -0.72, -6.33, -1.62, -10.08], ['c', -0.09, -0.39, -0.18, -0.75, -0.18, -0.78], ['c', -0.03, -0.03, -0.42, 0.00, -0.81, 0.09], ['c', -0.90, 0.18, -1.65, 0.57, -2.22, 1.14], ['c', -0.72, 0.72, -1.08, 1.65, -1.05, 2.64], ['c', 0.06, 0.96, 0.48, 1.83, 1.23, 2.58], ['c', 0.36, 0.36, 0.72, 0.63, 1.17, 0.90], ['c', 0.33, 0.18, 0.36, 0.21, 0.42, 0.33], ['c', 0.18, 0.42, -0.18, 0.90, -0.60, 0.87], ['c', -0.18, -0.03, -0.84, -0.36, -1.26, -0.63], ['c', -0.78, -0.51, -1.38, -1.11, -1.86, -1.83], ['c', -1.77, -2.70, -0.99, -6.42, 1.71, -8.19], ['c', 0.30, -0.21, 0.81, -0.48, 1.17, -0.63], ['c', 0.30, -0.09, 1.02, -0.30, 1.14, -0.30], ['c', 0.06, 0.00, 0.09, 0.00, 0.09, -0.03], ['c', 0.03, -0.03, -0.51, -1.92, -1.23, -4.26], ['z'], ['m', 3.78, 7.41], ['c', -0.18, -0.03, -0.36, -0.06, -0.39, -0.06], ['c', -0.03, 0.00, 0.00, 0.21, 0.18, 1.02], ['c', 0.75, 3.18, 1.26, 6.30, 1.50, 9.09], ['c', 0.06, 0.72, 0.00, 0.69, 0.51, 0.42], ['c', 0.78, -0.36, 1.44, -0.96, 1.98, -1.77], ['c', 1.08, -1.62, 1.20, -3.69, 0.30, -5.55], ['c', -0.81, -1.62, -2.31, -2.79, -4.08, -3.15], ['z']],\n      w: 19.051,\n      h: 57.057\n    },\n    'clefs.perc': {\n      d: [['M', 5.07, -7.44], ['l', 0.09, -0.06], ['l', 1.53, 0.00], ['l', 1.53, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 7.35], ['l', 0.00, 7.32], ['l', -0.06, 0.09], ['l', -0.09, 0.06], ['l', -1.53, 0.00], ['l', -1.53, 0.00], ['l', -0.09, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -7.32], ['l', 0.00, -7.35], ['z'], ['m', 6.63, 0.00], ['l', 0.09, -0.06], ['l', 1.53, 0.00], ['l', 1.53, 0.00], ['l', 0.09, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 7.35], ['l', 0.00, 7.32], ['l', -0.06, 0.09], ['l', -0.09, 0.06], ['l', -1.53, 0.00], ['l', -1.53, 0.00], ['l', -0.09, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -7.32], ['l', 0.00, -7.35], ['z']],\n      w: 9.99,\n      h: 14.97\n    },\n    'timesig.common': {\n      d: [['M', 6.66, -7.83], ['c', 0.72, -0.06, 1.41, -0.03, 1.98, 0.09], ['c', 1.20, 0.27, 2.34, 0.96, 3.09, 1.92], ['c', 0.63, 0.81, 1.08, 1.86, 1.14, 2.73], ['c', 0.06, 1.02, -0.51, 1.92, -1.44, 2.22], ['c', -0.24, 0.09, -0.30, 0.09, -0.63, 0.09], ['c', -0.33, 0.00, -0.42, 0.00, -0.63, -0.06], ['c', -0.66, -0.24, -1.14, -0.63, -1.41, -1.20], ['c', -0.15, -0.30, -0.21, -0.51, -0.24, -0.90], ['c', -0.06, -1.08, 0.57, -2.04, 1.56, -2.37], ['c', 0.18, -0.06, 0.27, -0.06, 0.63, -0.06], ['l', 0.45, 0.00], ['c', 0.06, 0.03, 0.09, 0.03, 0.09, 0.00], ['c', 0.00, 0.00, -0.09, -0.12, -0.24, -0.27], ['c', -1.02, -1.11, -2.55, -1.68, -4.08, -1.50], ['c', -1.29, 0.15, -2.04, 0.69, -2.40, 1.74], ['c', -0.36, 0.93, -0.42, 1.89, -0.42, 5.37], ['c', 0.00, 2.97, 0.06, 3.96, 0.24, 4.77], ['c', 0.24, 1.08, 0.63, 1.68, 1.41, 2.07], ['c', 0.81, 0.39, 2.16, 0.45, 3.18, 0.09], ['c', 1.29, -0.45, 2.37, -1.53, 3.03, -2.97], ['c', 0.15, -0.33, 0.33, -0.87, 0.39, -1.17], ['c', 0.09, -0.24, 0.15, -0.36, 0.30, -0.39], ['c', 0.21, -0.03, 0.42, 0.15, 0.39, 0.36], ['c', -0.06, 0.39, -0.42, 1.38, -0.69, 1.89], ['c', -0.96, 1.80, -2.49, 2.94, -4.23, 3.18], ['c', -0.99, 0.12, -2.58, -0.06, -3.63, -0.45], ['c', -0.96, -0.36, -1.71, -0.84, -2.40, -1.50], ['c', -1.11, -1.11, -1.80, -2.61, -2.04, -4.56], ['c', -0.06, -0.60, -0.06, -2.01, 0.00, -2.61], ['c', 0.24, -1.95, 0.90, -3.45, 2.01, -4.56], ['c', 0.69, -0.66, 1.44, -1.11, 2.37, -1.47], ['c', 0.63, -0.24, 1.47, -0.42, 2.22, -0.48], ['z']],\n      w: 13.038,\n      h: 15.689\n    },\n    'timesig.cut': {\n      d: [['M', 6.24, -10.44], ['c', 0.09, -0.06, 0.09, -0.06, 0.48, -0.06], ['c', 0.36, 0.00, 0.36, 0.00, 0.45, 0.06], ['l', 0.06, 0.09], ['l', 0.00, 1.23], ['l', 0.00, 1.26], ['l', 0.27, 0.00], ['c', 1.26, 0.00, 2.49, 0.45, 3.48, 1.29], ['c', 1.05, 0.87, 1.80, 2.28, 1.89, 3.48], ['c', 0.06, 1.02, -0.51, 1.92, -1.44, 2.22], ['c', -0.24, 0.09, -0.30, 0.09, -0.63, 0.09], ['c', -0.33, 0.00, -0.42, 0.00, -0.63, -0.06], ['c', -0.66, -0.24, -1.14, -0.63, -1.41, -1.20], ['c', -0.15, -0.30, -0.21, -0.51, -0.24, -0.90], ['c', -0.06, -1.08, 0.57, -2.04, 1.56, -2.37], ['c', 0.18, -0.06, 0.27, -0.06, 0.63, -0.06], ['l', 0.45, 0.00], ['c', 0.06, 0.03, 0.09, 0.03, 0.09, 0.00], ['c', 0.00, -0.03, -0.45, -0.51, -0.66, -0.69], ['c', -0.87, -0.69, -1.83, -1.05, -2.94, -1.11], ['l', -0.42, 0.00], ['l', 0.00, 7.17], ['l', 0.00, 7.14], ['l', 0.42, 0.00], ['c', 0.69, -0.03, 1.23, -0.18, 1.86, -0.51], ['c', 1.05, -0.51, 1.89, -1.47, 2.46, -2.70], ['c', 0.15, -0.33, 0.33, -0.87, 0.39, -1.17], ['c', 0.09, -0.24, 0.15, -0.36, 0.30, -0.39], ['c', 0.21, -0.03, 0.42, 0.15, 0.39, 0.36], ['c', -0.03, 0.24, -0.21, 0.78, -0.39, 1.20], ['c', -0.96, 2.37, -2.94, 3.90, -5.13, 3.90], ['l', -0.30, 0.00], ['l', 0.00, 1.26], ['l', 0.00, 1.23], ['l', -0.06, 0.09], ['c', -0.09, 0.06, -0.09, 0.06, -0.45, 0.06], ['c', -0.39, 0.00, -0.39, 0.00, -0.48, -0.06], ['l', -0.06, -0.09], ['l', 0.00, -1.29], ['l', 0.00, -1.29], ['l', -0.21, -0.03], ['c', -1.23, -0.21, -2.31, -0.63, -3.21, -1.29], ['c', -0.15, -0.09, -0.45, -0.36, -0.66, -0.57], ['c', -1.11, -1.11, -1.80, -2.61, -2.04, -4.56], ['c', -0.06, -0.60, -0.06, -2.01, 0.00, -2.61], ['c', 0.24, -1.95, 0.93, -3.45, 2.04, -4.59], ['c', 0.42, -0.39, 0.78, -0.66, 1.26, -0.93], ['c', 0.75, -0.45, 1.65, -0.75, 2.61, -0.90], ['l', 0.21, -0.03], ['l', 0.00, -1.29], ['l', 0.00, -1.29], ['z'], ['m', -0.06, 10.44], ['c', 0.00, -5.58, 0.00, -6.99, -0.03, -6.99], ['c', -0.15, 0.00, -0.63, 0.27, -0.87, 0.45], ['c', -0.45, 0.36, -0.75, 0.93, -0.93, 1.77], ['c', -0.18, 0.81, -0.24, 1.80, -0.24, 4.74], ['c', 0.00, 2.97, 0.06, 3.96, 0.24, 4.77], ['c', 0.24, 1.08, 0.66, 1.68, 1.41, 2.07], ['c', 0.12, 0.06, 0.30, 0.12, 0.33, 0.15], ['l', 0.09, 0.00], ['l', 0.00, -6.96], ['z']],\n      w: 13.038,\n      h: 20.97\n    },\n    'timesig.imperfectum': {\n      d: [['M', 13, -5], ['a', 8, 8, 0, 1, 0, 0, 10]],\n      w: 13.038,\n      h: 20.97\n    },\n    'timesig.imperfectum2': {\n      d: [['M', 13, -5], ['a', 8, 8, 0, 1, 0, 0, 10]],\n      w: 13.038,\n      h: 20.97\n    },\n    'timesig.perfectum': {\n      d: [['M', 13, -5], ['a', 8, 8, 0, 1, 0, 0, 10]],\n      w: 13.038,\n      h: 20.97\n    },\n    'timesig.perfectum2': {\n      d: [['M', 13, -5], ['a', 8, 8, 0, 1, 0, 0, 10]],\n      w: 13.038,\n      h: 20.97\n    },\n    'f': {\n      d: [['M', 9.93, -14.28], ['c', 1.53, -0.18, 2.88, 0.45, 3.12, 1.50], ['c', 0.12, 0.51, 0.00, 1.32, -0.27, 1.86], ['c', -0.15, 0.30, -0.42, 0.57, -0.63, 0.69], ['c', -0.69, 0.36, -1.56, 0.03, -1.83, -0.69], ['c', -0.09, -0.24, -0.09, -0.69, 0.00, -0.87], ['c', 0.06, -0.12, 0.21, -0.24, 0.45, -0.42], ['c', 0.42, -0.24, 0.57, -0.45, 0.60, -0.72], ['c', 0.03, -0.33, -0.09, -0.39, -0.63, -0.42], ['c', -0.30, 0.00, -0.45, 0.00, -0.60, 0.03], ['c', -0.81, 0.21, -1.35, 0.93, -1.74, 2.46], ['c', -0.06, 0.27, -0.48, 2.25, -0.48, 2.31], ['c', 0.00, 0.03, 0.39, 0.03, 0.90, 0.03], ['c', 0.72, 0.00, 0.90, 0.00, 0.99, 0.06], ['c', 0.42, 0.15, 0.45, 0.72, 0.03, 0.90], ['c', -0.12, 0.06, -0.24, 0.06, -1.17, 0.06], ['l', -1.05, 0.00], ['l', -0.78, 2.55], ['c', -0.45, 1.41, -0.87, 2.79, -0.96, 3.06], ['c', -0.87, 2.37, -2.37, 4.74, -3.78, 5.91], ['c', -1.05, 0.90, -2.04, 1.23, -3.09, 1.08], ['c', -1.11, -0.18, -1.89, -0.78, -2.04, -1.59], ['c', -0.12, -0.66, 0.15, -1.71, 0.54, -2.19], ['c', 0.69, -0.75, 1.86, -0.54, 2.22, 0.39], ['c', 0.06, 0.15, 0.09, 0.27, 0.09, 0.48], ['c', 0.00, 0.24, -0.03, 0.27, -0.12, 0.42], ['c', -0.03, 0.09, -0.15, 0.18, -0.27, 0.27], ['c', -0.09, 0.06, -0.27, 0.21, -0.36, 0.27], ['c', -0.24, 0.18, -0.36, 0.36, -0.39, 0.60], ['c', -0.03, 0.33, 0.09, 0.39, 0.63, 0.42], ['c', 0.42, 0.00, 0.63, -0.03, 0.90, -0.15], ['c', 0.60, -0.30, 0.96, -0.96, 1.38, -2.64], ['c', 0.09, -0.42, 0.63, -2.55, 1.17, -4.77], ['l', 1.02, -4.08], ['c', 0.00, -0.03, -0.36, -0.03, -0.81, -0.03], ['c', -0.72, 0.00, -0.81, 0.00, -0.93, -0.06], ['c', -0.42, -0.18, -0.39, -0.75, 0.03, -0.90], ['c', 0.09, -0.06, 0.27, -0.06, 1.05, -0.06], ['l', 0.96, 0.00], ['l', 0.00, -0.09], ['c', 0.06, -0.18, 0.30, -0.72, 0.51, -1.17], ['c', 1.20, -2.46, 3.30, -4.23, 5.34, -4.50], ['z']],\n      w: 16.155,\n      h: 19.445\n    },\n    'm': {\n      d: [['M', 2.79, -8.91], ['c', 0.09, 0.00, 0.30, -0.03, 0.45, -0.03], ['c', 0.24, 0.03, 0.30, 0.03, 0.45, 0.12], ['c', 0.36, 0.15, 0.63, 0.54, 0.75, 1.02], ['l', 0.03, 0.21], ['l', 0.33, -0.30], ['c', 0.69, -0.69, 1.38, -1.02, 2.07, -1.02], ['c', 0.27, 0.00, 0.33, 0.00, 0.48, 0.06], ['c', 0.21, 0.09, 0.48, 0.36, 0.63, 0.60], ['c', 0.03, 0.09, 0.12, 0.27, 0.18, 0.42], ['c', 0.03, 0.15, 0.09, 0.27, 0.12, 0.27], ['c', 0.00, 0.00, 0.09, -0.09, 0.18, -0.21], ['c', 0.33, -0.39, 0.87, -0.81, 1.29, -0.99], ['c', 0.78, -0.33, 1.47, -0.21, 2.01, 0.33], ['c', 0.30, 0.33, 0.48, 0.69, 0.60, 1.14], ['c', 0.09, 0.42, 0.06, 0.54, -0.54, 3.06], ['c', -0.33, 1.29, -0.57, 2.40, -0.57, 2.43], ['c', 0.00, 0.12, 0.09, 0.21, 0.21, 0.21], ['c', 0.24, 0.00, 0.75, -0.30, 1.20, -0.72], ['c', 0.45, -0.39, 0.60, -0.45, 0.78, -0.27], ['c', 0.18, 0.18, 0.09, 0.36, -0.45, 0.87], ['c', -1.05, 0.96, -1.83, 1.47, -2.58, 1.71], ['c', -0.93, 0.33, -1.53, 0.21, -1.80, -0.33], ['c', -0.06, -0.15, -0.06, -0.21, -0.06, -0.45], ['c', 0.00, -0.24, 0.03, -0.48, 0.60, -2.82], ['c', 0.42, -1.71, 0.60, -2.64, 0.63, -2.79], ['c', 0.03, -0.57, -0.30, -0.75, -0.84, -0.48], ['c', -0.24, 0.12, -0.54, 0.39, -0.66, 0.63], ['c', -0.03, 0.09, -0.42, 1.38, -0.90, 3.00], ['c', -0.90, 3.15, -0.84, 3.00, -1.14, 3.15], ['l', -0.15, 0.09], ['l', -0.78, 0.00], ['c', -0.60, 0.00, -0.78, 0.00, -0.84, -0.06], ['c', -0.09, -0.03, -0.18, -0.18, -0.18, -0.27], ['c', 0.00, -0.03, 0.36, -1.38, 0.84, -2.97], ['c', 0.57, -2.04, 0.81, -2.97, 0.84, -3.12], ['c', 0.03, -0.54, -0.30, -0.72, -0.84, -0.45], ['c', -0.24, 0.12, -0.57, 0.42, -0.66, 0.63], ['c', -0.06, 0.09, -0.51, 1.44, -1.05, 2.97], ['c', -0.51, 1.56, -0.99, 2.85, -0.99, 2.91], ['c', -0.06, 0.12, -0.21, 0.24, -0.36, 0.30], ['c', -0.12, 0.06, -0.21, 0.06, -0.90, 0.06], ['c', -0.60, 0.00, -0.78, 0.00, -0.84, -0.06], ['c', -0.09, -0.03, -0.18, -0.18, -0.18, -0.27], ['c', 0.00, -0.03, 0.45, -1.38, 0.99, -2.97], ['c', 1.05, -3.18, 1.05, -3.18, 0.93, -3.45], ['c', -0.12, -0.27, -0.39, -0.30, -0.72, -0.15], ['c', -0.54, 0.27, -1.14, 1.17, -1.56, 2.40], ['c', -0.06, 0.15, -0.15, 0.30, -0.18, 0.36], ['c', -0.21, 0.21, -0.57, 0.27, -0.72, 0.09], ['c', -0.09, -0.09, -0.06, -0.21, 0.06, -0.63], ['c', 0.48, -1.26, 1.26, -2.46, 2.01, -3.21], ['c', 0.57, -0.54, 1.20, -0.87, 1.83, -1.02], ['z']],\n      w: 14.687,\n      h: 9.126\n    },\n    'p': {\n      d: [['M', 1.92, -8.70], ['c', 0.27, -0.09, 0.81, -0.06, 1.11, 0.03], ['c', 0.54, 0.18, 0.93, 0.51, 1.17, 0.99], ['c', 0.09, 0.15, 0.15, 0.33, 0.18, 0.36], ['l', 0.00, 0.12], ['l', 0.30, -0.27], ['c', 0.66, -0.60, 1.35, -1.02, 2.13, -1.20], ['c', 0.21, -0.06, 0.33, -0.06, 0.78, -0.06], ['c', 0.45, 0.00, 0.51, 0.00, 0.84, 0.09], ['c', 1.29, 0.33, 2.07, 1.32, 2.25, 2.79], ['c', 0.09, 0.81, -0.09, 2.01, -0.45, 2.79], ['c', -0.54, 1.26, -1.86, 2.55, -3.18, 3.03], ['c', -0.45, 0.18, -0.81, 0.24, -1.29, 0.24], ['c', -0.69, -0.03, -1.35, -0.18, -1.86, -0.45], ['c', -0.30, -0.15, -0.51, -0.18, -0.69, -0.09], ['c', -0.09, 0.03, -0.18, 0.09, -0.18, 0.12], ['c', -0.09, 0.12, -1.05, 2.94, -1.05, 3.06], ['c', 0.00, 0.24, 0.18, 0.48, 0.51, 0.63], ['c', 0.18, 0.06, 0.54, 0.15, 0.75, 0.15], ['c', 0.21, 0.00, 0.36, 0.06, 0.42, 0.18], ['c', 0.12, 0.18, 0.06, 0.42, -0.12, 0.54], ['c', -0.09, 0.03, -0.15, 0.03, -0.78, 0.00], ['c', -1.98, -0.15, -3.81, -0.15, -5.79, 0.00], ['c', -0.63, 0.03, -0.69, 0.03, -0.78, 0.00], ['c', -0.24, -0.15, -0.24, -0.57, 0.03, -0.66], ['c', 0.06, -0.03, 0.48, -0.09, 0.99, -0.12], ['c', 0.87, -0.06, 1.11, -0.09, 1.35, -0.21], ['c', 0.18, -0.06, 0.33, -0.18, 0.39, -0.30], ['c', 0.06, -0.12, 3.24, -9.42, 3.27, -9.60], ['c', 0.06, -0.33, 0.03, -0.57, -0.15, -0.69], ['c', -0.09, -0.06, -0.12, -0.06, -0.30, -0.06], ['c', -0.69, 0.06, -1.53, 1.02, -2.28, 2.61], ['c', -0.09, 0.21, -0.21, 0.45, -0.27, 0.51], ['c', -0.09, 0.12, -0.33, 0.24, -0.48, 0.24], ['c', -0.18, 0.00, -0.36, -0.15, -0.36, -0.30], ['c', 0.00, -0.24, 0.78, -1.83, 1.26, -2.55], ['c', 0.72, -1.11, 1.47, -1.74, 2.28, -1.92], ['z'], ['m', 5.37, 1.47], ['c', -0.27, -0.12, -0.75, -0.03, -1.14, 0.21], ['c', -0.75, 0.48, -1.47, 1.68, -1.89, 3.15], ['c', -0.45, 1.47, -0.42, 2.34, 0.00, 2.70], ['c', 0.45, 0.39, 1.26, 0.21, 1.83, -0.36], ['c', 0.51, -0.51, 0.99, -1.68, 1.38, -3.27], ['c', 0.30, -1.17, 0.33, -1.74, 0.15, -2.13], ['c', -0.09, -0.15, -0.15, -0.21, -0.33, -0.30], ['z']],\n      w: 14.689,\n      h: 13.127\n    },\n    'r': {\n      d: [['M', 6.33, -9.12], ['c', 0.27, -0.03, 0.93, 0.00, 1.20, 0.06], ['c', 0.84, 0.21, 1.23, 0.81, 1.02, 1.53], ['c', -0.24, 0.75, -0.90, 1.17, -1.56, 0.96], ['c', -0.33, -0.09, -0.51, -0.30, -0.66, -0.75], ['c', -0.03, -0.12, -0.09, -0.24, -0.12, -0.30], ['c', -0.09, -0.15, -0.30, -0.24, -0.48, -0.24], ['c', -0.57, 0.00, -1.38, 0.54, -1.65, 1.08], ['c', -0.06, 0.15, -0.33, 1.17, -0.90, 3.27], ['c', -0.57, 2.31, -0.81, 3.12, -0.87, 3.21], ['c', -0.03, 0.06, -0.12, 0.15, -0.18, 0.21], ['l', -0.12, 0.06], ['l', -0.81, 0.03], ['c', -0.69, 0.00, -0.81, 0.00, -0.90, -0.03], ['c', -0.09, -0.06, -0.18, -0.21, -0.18, -0.30], ['c', 0.00, -0.06, 0.39, -1.62, 0.90, -3.51], ['c', 0.84, -3.24, 0.87, -3.45, 0.87, -3.72], ['c', 0.00, -0.21, 0.00, -0.27, -0.03, -0.36], ['c', -0.12, -0.15, -0.21, -0.24, -0.42, -0.24], ['c', -0.24, 0.00, -0.45, 0.15, -0.78, 0.42], ['c', -0.33, 0.36, -0.45, 0.54, -0.72, 1.14], ['c', -0.03, 0.12, -0.21, 0.24, -0.36, 0.27], ['c', -0.12, 0.00, -0.15, 0.00, -0.24, -0.06], ['c', -0.18, -0.12, -0.18, -0.21, -0.06, -0.54], ['c', 0.21, -0.57, 0.42, -0.93, 0.78, -1.32], ['c', 0.54, -0.51, 1.20, -0.81, 1.95, -0.87], ['c', 0.81, -0.03, 1.53, 0.30, 1.92, 0.87], ['l', 0.12, 0.18], ['l', 0.09, -0.09], ['c', 0.57, -0.45, 1.41, -0.84, 2.19, -0.96], ['z']],\n      w: 9.41,\n      h: 9.132\n    },\n    's': {\n      d: [['M', 4.47, -8.73], ['c', 0.09, 0.00, 0.36, -0.03, 0.57, -0.03], ['c', 0.75, 0.03, 1.29, 0.24, 1.71, 0.63], ['c', 0.51, 0.54, 0.66, 1.26, 0.36, 1.83], ['c', -0.24, 0.42, -0.63, 0.57, -1.11, 0.42], ['c', -0.33, -0.09, -0.60, -0.36, -0.60, -0.57], ['c', 0.00, -0.03, 0.06, -0.21, 0.15, -0.39], ['c', 0.12, -0.21, 0.15, -0.33, 0.18, -0.48], ['c', 0.00, -0.24, -0.06, -0.48, -0.15, -0.60], ['c', -0.15, -0.21, -0.42, -0.24, -0.75, -0.15], ['c', -0.27, 0.06, -0.48, 0.18, -0.69, 0.36], ['c', -0.39, 0.39, -0.51, 0.96, -0.33, 1.38], ['c', 0.09, 0.21, 0.42, 0.51, 0.78, 0.72], ['c', 1.11, 0.69, 1.59, 1.11, 1.89, 1.68], ['c', 0.21, 0.39, 0.24, 0.78, 0.15, 1.29], ['c', -0.18, 1.20, -1.17, 2.16, -2.52, 2.52], ['c', -1.02, 0.24, -1.95, 0.12, -2.70, -0.42], ['c', -0.72, -0.51, -0.99, -1.47, -0.60, -2.19], ['c', 0.24, -0.48, 0.72, -0.63, 1.17, -0.42], ['c', 0.33, 0.18, 0.54, 0.45, 0.57, 0.81], ['c', 0.00, 0.21, -0.03, 0.30, -0.33, 0.51], ['c', -0.33, 0.24, -0.39, 0.42, -0.27, 0.69], ['c', 0.06, 0.15, 0.21, 0.27, 0.45, 0.33], ['c', 0.30, 0.09, 0.87, 0.09, 1.20, 0.00], ['c', 0.75, -0.21, 1.23, -0.72, 1.29, -1.35], ['c', 0.03, -0.42, -0.15, -0.81, -0.54, -1.20], ['c', -0.24, -0.24, -0.48, -0.42, -1.41, -1.02], ['c', -0.69, -0.42, -1.05, -0.93, -1.05, -1.47], ['c', 0.00, -0.39, 0.12, -0.87, 0.30, -1.23], ['c', 0.27, -0.57, 0.78, -1.05, 1.38, -1.35], ['c', 0.24, -0.12, 0.63, -0.27, 0.90, -0.30], ['z']],\n      w: 6.632,\n      h: 8.758\n    },\n    'z': {\n      d: [['M', 2.64, -7.95], ['c', 0.36, -0.09, 0.81, -0.03, 1.71, 0.27], ['c', 0.78, 0.21, 0.96, 0.27, 1.74, 0.30], ['c', 0.87, 0.06, 1.02, 0.03, 1.38, -0.21], ['c', 0.21, -0.15, 0.33, -0.15, 0.48, -0.06], ['c', 0.15, 0.09, 0.21, 0.30, 0.15, 0.45], ['c', -0.03, 0.06, -1.26, 1.26, -2.76, 2.67], ['l', -2.73, 2.55], ['l', 0.54, 0.03], ['c', 0.54, 0.03, 0.72, 0.03, 2.01, 0.15], ['c', 0.36, 0.03, 0.90, 0.06, 1.20, 0.09], ['c', 0.66, 0.00, 0.81, -0.03, 1.02, -0.24], ['c', 0.30, -0.30, 0.39, -0.72, 0.27, -1.23], ['c', -0.06, -0.27, -0.06, -0.27, -0.03, -0.39], ['c', 0.15, -0.30, 0.54, -0.27, 0.69, 0.03], ['c', 0.15, 0.33, 0.27, 1.02, 0.27, 1.50], ['c', 0.00, 1.47, -1.11, 2.70, -2.52, 2.79], ['c', -0.57, 0.03, -1.02, -0.09, -2.01, -0.51], ['c', -1.02, -0.42, -1.23, -0.48, -2.13, -0.54], ['c', -0.81, -0.06, -0.96, -0.03, -1.26, 0.18], ['c', -0.12, 0.06, -0.24, 0.12, -0.27, 0.12], ['c', -0.27, 0.00, -0.45, -0.30, -0.36, -0.51], ['c', 0.03, -0.06, 1.32, -1.32, 2.91, -2.79], ['l', 2.88, -2.73], ['c', -0.03, 0.00, -0.21, 0.03, -0.42, 0.06], ['c', -0.21, 0.03, -0.78, 0.09, -1.23, 0.12], ['c', -1.11, 0.12, -1.23, 0.15, -1.95, 0.27], ['c', -0.72, 0.15, -1.17, 0.18, -1.29, 0.09], ['c', -0.27, -0.18, -0.21, -0.75, 0.12, -1.26], ['c', 0.39, -0.60, 0.93, -1.02, 1.59, -1.20], ['z']],\n      w: 8.573,\n      h: 8.743\n    },\n    '+': {\n      d: [['M', 3.48, -9.3], ['c', 0.18, -0.09, 0.36, -0.09, 0.54, 0.00], ['c', 0.18, 0.09, 0.24, 0.15, 0.33, 0.30], ['l', 0.06, 0.15], ['l', 0.00, 1.29], ['l', 0.00, 1.29], ['l', 1.29, 0.00], ['c', 1.23, 0.00, 1.29, 0.00, 1.41, 0.06], ['c', 0.06, 0.03, 0.15, 0.09, 0.18, 0.12], ['c', 0.12, 0.09, 0.21, 0.33, 0.21, 0.48], ['c', 0.00, 0.15, -0.09, 0.39, -0.21, 0.48], ['c', -0.03, 0.03, -0.12, 0.09, -0.18, 0.12], ['c', -0.12, 0.06, -0.18, 0.06, -1.41, 0.06], ['l', -1.29, 0.00], ['l', 0.00, 1.29], ['c', 0.00, 1.23, 0.00, 1.29, -0.06, 1.41], ['c', -0.09, 0.18, -0.15, 0.24, -0.30, 0.33], ['c', -0.21, 0.09, -0.39, 0.09, -0.57, 0.00], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['c', -0.06, -0.12, -0.06, -0.18, -0.06, -1.41], ['l', 0.00, -1.29], ['l', -1.29, 0.00], ['c', -1.23, 0.00, -1.29, 0.00, -1.41, -0.06], ['c', -0.18, -0.09, -0.24, -0.15, -0.33, -0.33], ['c', -0.09, -0.18, -0.09, -0.36, 0.00, -0.54], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['l', 0.15, -0.06], ['l', 1.26, 0.00], ['l', 1.29, 0.00], ['l', 0.00, -1.29], ['c', 0.00, -1.23, 0.00, -1.29, 0.06, -1.41], ['c', 0.09, -0.18, 0.15, -0.24, 0.33, -0.33], ['z']],\n      w: 7.507,\n      h: 7.515\n    },\n    ',': {\n      d: [['M', 1.32, -3.36], ['c', 0.57, -0.15, 1.17, 0.03, 1.59, 0.45], ['c', 0.45, 0.45, 0.60, 0.96, 0.51, 1.89], ['c', -0.09, 1.23, -0.42, 2.46, -0.99, 3.93], ['c', -0.30, 0.72, -0.72, 1.62, -0.78, 1.68], ['c', -0.18, 0.21, -0.51, 0.18, -0.66, -0.06], ['c', -0.03, -0.06, -0.06, -0.15, -0.06, -0.18], ['c', 0.00, -0.06, 0.12, -0.33, 0.24, -0.63], ['c', 0.84, -1.80, 1.02, -2.61, 0.69, -3.24], ['c', -0.12, -0.24, -0.27, -0.36, -0.75, -0.60], ['c', -0.36, -0.15, -0.42, -0.21, -0.60, -0.39], ['c', -0.69, -0.69, -0.69, -1.71, 0.00, -2.40], ['c', 0.21, -0.21, 0.51, -0.39, 0.81, -0.45], ['z']],\n      w: 3.452,\n      h: 8.143\n    },\n    '-': {\n      d: [['M', 0.18, -5.34], ['c', 0.09, -0.06, 0.15, -0.06, 2.31, -0.06], ['c', 2.46, 0.00, 2.37, 0.00, 2.46, 0.21], ['c', 0.12, 0.21, 0.03, 0.42, -0.15, 0.54], ['c', -0.09, 0.06, -0.15, 0.06, -2.28, 0.06], ['c', -2.16, 0.00, -2.22, 0.00, -2.31, -0.06], ['c', -0.27, -0.15, -0.27, -0.54, -0.03, -0.69], ['z']],\n      w: 5.001,\n      h: 0.81\n    },\n    '.': {\n      d: [['M', 1.32, -3.36], ['c', 1.05, -0.27, 2.10, 0.57, 2.10, 1.65], ['c', 0.00, 1.08, -1.05, 1.92, -2.10, 1.65], ['c', -0.90, -0.21, -1.50, -1.14, -1.26, -2.04], ['c', 0.12, -0.63, 0.63, -1.11, 1.26, -1.26], ['z']],\n      w: 3.413,\n      h: 3.402\n    },\n    'scripts.wedge': {\n      d: [['M', -3.66, -7.44], ['c', 0.06, -0.09, 0.00, -0.09, 0.81, 0.03], ['c', 1.86, 0.30, 3.84, 0.30, 5.73, 0.00], ['c', 0.78, -0.12, 0.72, -0.12, 0.78, -0.03], ['c', 0.15, 0.15, 0.12, 0.24, -0.24, 0.60], ['c', -0.93, 0.93, -1.98, 2.76, -2.67, 4.62], ['c', -0.30, 0.78, -0.51, 1.71, -0.51, 2.13], ['c', 0.00, 0.15, 0.00, 0.18, -0.06, 0.27], ['c', -0.12, 0.09, -0.24, 0.09, -0.36, 0.00], ['c', -0.06, -0.09, -0.06, -0.12, -0.06, -0.27], ['c', 0.00, -0.42, -0.21, -1.35, -0.51, -2.13], ['c', -0.69, -1.86, -1.74, -3.69, -2.67, -4.62], ['c', -0.36, -0.36, -0.39, -0.45, -0.24, -0.60], ['z']],\n      w: 7.49,\n      h: 7.752\n    },\n    'scripts.thumb': {\n      d: [['M', -0.54, -3.69], ['c', 0.15, -0.03, 0.36, -0.06, 0.51, -0.06], ['c', 1.44, 0.00, 2.58, 1.11, 2.94, 2.85], ['c', 0.09, 0.48, 0.09, 1.32, 0.00, 1.80], ['c', -0.27, 1.41, -1.08, 2.43, -2.16, 2.73], ['l', -0.18, 0.06], ['l', 0.00, 0.12], ['c', 0.03, 0.06, 0.06, 0.45, 0.09, 0.87], ['c', 0.03, 0.57, 0.03, 0.78, 0.00, 0.84], ['c', -0.09, 0.27, -0.39, 0.48, -0.66, 0.48], ['c', -0.27, 0.00, -0.57, -0.21, -0.66, -0.48], ['c', -0.03, -0.06, -0.03, -0.27, 0.00, -0.84], ['c', 0.03, -0.42, 0.06, -0.81, 0.09, -0.87], ['l', 0.00, -0.12], ['l', -0.18, -0.06], ['c', -1.08, -0.30, -1.89, -1.32, -2.16, -2.73], ['c', -0.09, -0.48, -0.09, -1.32, 0.00, -1.80], ['c', 0.15, -0.84, 0.51, -1.53, 1.02, -2.04], ['c', 0.39, -0.39, 0.84, -0.63, 1.35, -0.75], ['z'], ['m', 1.05, 0.90], ['c', -0.15, -0.09, -0.21, -0.09, -0.45, -0.12], ['c', -0.15, 0.00, -0.30, 0.03, -0.39, 0.03], ['c', -0.57, 0.18, -0.90, 0.72, -1.08, 1.74], ['c', -0.06, 0.48, -0.06, 1.80, 0.00, 2.28], ['c', 0.15, 0.90, 0.42, 1.44, 0.90, 1.65], ['c', 0.18, 0.09, 0.21, 0.09, 0.51, 0.09], ['c', 0.30, 0.00, 0.33, 0.00, 0.51, -0.09], ['c', 0.48, -0.21, 0.75, -0.75, 0.90, -1.65], ['c', 0.03, -0.27, 0.03, -0.54, 0.03, -1.14], ['c', 0.00, -0.60, 0.00, -0.87, -0.03, -1.14], ['c', -0.15, -0.90, -0.45, -1.44, -0.90, -1.65], ['z']],\n      w: 5.955,\n      h: 9.75\n    },\n    'scripts.open': {\n      d: [['M', -0.54, -3.69], ['c', 0.15, -0.03, 0.36, -0.06, 0.51, -0.06], ['c', 1.44, 0.00, 2.58, 1.11, 2.94, 2.85], ['c', 0.09, 0.48, 0.09, 1.32, 0.00, 1.80], ['c', -0.33, 1.74, -1.47, 2.85, -2.91, 2.85], ['c', -1.44, 0.00, -2.58, -1.11, -2.91, -2.85], ['c', -0.09, -0.48, -0.09, -1.32, 0.00, -1.80], ['c', 0.15, -0.84, 0.51, -1.53, 1.02, -2.04], ['c', 0.39, -0.39, 0.84, -0.63, 1.35, -0.75], ['z'], ['m', 1.11, 0.90], ['c', -0.21, -0.09, -0.27, -0.09, -0.51, -0.12], ['c', -0.30, 0.00, -0.42, 0.03, -0.66, 0.15], ['c', -0.24, 0.12, -0.51, 0.39, -0.66, 0.63], ['c', -0.54, 0.93, -0.63, 2.64, -0.21, 3.81], ['c', 0.21, 0.54, 0.51, 0.90, 0.93, 1.11], ['c', 0.21, 0.09, 0.24, 0.09, 0.54, 0.09], ['c', 0.30, 0.00, 0.33, 0.00, 0.54, -0.09], ['c', 0.42, -0.21, 0.72, -0.57, 0.93, -1.11], ['c', 0.36, -0.99, 0.36, -2.37, 0.00, -3.36], ['c', -0.21, -0.54, -0.51, -0.90, -0.90, -1.11], ['z']],\n      w: 5.955,\n      h: 7.5\n    },\n    'scripts.longphrase': {\n      d: [['M', 1.47, -15.09], ['c', 0.36, -0.09, 0.66, -0.18, 0.69, -0.18], ['c', 0.06, 0.00, 0.06, 0.54, 0.06, 11.25], ['l', 0.00, 11.25], ['l', -0.63, 0.15], ['c', -0.66, 0.18, -1.44, 0.39, -1.50, 0.39], ['c', -0.03, 0.00, -0.03, -3.39, -0.03, -11.25], ['l', 0.00, -11.25], ['l', 0.36, -0.09], ['c', 0.21, -0.06, 0.66, -0.18, 1.05, -0.27], ['z']],\n      w: 2.16,\n      h: 23.04\n    },\n    'scripts.mediumphrase': {\n      d: [['M', 1.47, -7.59], ['c', 0.36, -0.09, 0.66, -0.18, 0.69, -0.18], ['c', 0.06, 0.00, 0.06, 0.39, 0.06, 7.50], ['l', 0.00, 7.50], ['l', -0.63, 0.15], ['c', -0.66, 0.18, -1.44, 0.39, -1.50, 0.39], ['c', -0.03, 0.00, -0.03, -2.28, -0.03, -7.50], ['l', 0.00, -7.50], ['l', 0.36, -0.09], ['c', 0.21, -0.06, 0.66, -0.18, 1.05, -0.27], ['z']],\n      w: 2.16,\n      h: 15.54\n    },\n    'scripts.shortphrase': {\n      d: [['M', 1.47, -7.59], ['c', 0.36, -0.09, 0.66, -0.18, 0.69, -0.18], ['c', 0.06, 0.00, 0.06, 0.21, 0.06, 3.75], ['l', 0.00, 3.75], ['l', -0.42, 0.09], ['c', -0.57, 0.18, -1.65, 0.45, -1.71, 0.45], ['c', -0.03, 0.00, -0.03, -0.72, -0.03, -3.75], ['l', 0.00, -3.75], ['l', 0.36, -0.09], ['c', 0.21, -0.06, 0.66, -0.18, 1.05, -0.27], ['z']],\n      w: 2.16,\n      h: 8.04\n    },\n    'scripts.snap': {\n      d: [['M', 4.50, -3.39], ['c', 0.36, -0.03, 0.96, -0.03, 1.35, 0.00], ['c', 1.56, 0.15, 3.15, 0.90, 4.20, 2.01], ['c', 0.24, 0.27, 0.33, 0.42, 0.33, 0.60], ['c', 0.00, 0.27, 0.03, 0.24, -2.46, 2.22], ['c', -1.29, 1.02, -2.40, 1.86, -2.49, 1.92], ['c', -0.18, 0.09, -0.30, 0.09, -0.48, 0.00], ['c', -0.09, -0.06, -1.20, -0.90, -2.49, -1.92], ['c', -2.49, -1.98, -2.46, -1.95, -2.46, -2.22], ['c', 0.00, -0.18, 0.09, -0.33, 0.33, -0.60], ['c', 1.05, -1.08, 2.64, -1.86, 4.17, -2.01], ['z'], ['m', 1.29, 1.17], ['c', -1.47, -0.15, -2.97, 0.30, -4.14, 1.20], ['l', -0.18, 0.15], ['l', 0.06, 0.09], ['c', 0.15, 0.12, 3.63, 2.85, 3.66, 2.85], ['c', 0.03, 0.00, 3.51, -2.73, 3.66, -2.85], ['l', 0.06, -0.09], ['l', -0.18, -0.15], ['c', -0.84, -0.66, -1.89, -1.08, -2.94, -1.20], ['z']],\n      w: 10.38,\n      h: 6.84\n    }\n  }; // Custom characters that weren't generated from the font:\n\n  glyphs['noteheads.slash.whole'] = {\n    d: [['M', 5, -5], ['l', 1, 1], ['l', -5, 5], ['l', -1, -1], ['z'], ['m', 4, 6], ['l', -5, -5], ['l', 2, -2], ['l', 5, 5], ['z'], ['m', 0, -2], ['l', 1, 1], ['l', -5, 5], ['l', -1, -1], ['z'], ['m', -4, 6], ['l', -5, -5], ['l', 2, -2], ['l', 5, 5], ['z']],\n    w: 10.81,\n    h: 15.63\n  };\n  glyphs['noteheads.slash.quarter'] = {\n    d: [['M', 9, -6], ['l', 0, 4], ['l', -9, 9], ['l', 0, -4], ['z']],\n    w: 9,\n    h: 9\n  };\n  glyphs['noteheads.harmonic.quarter'] = {\n    d: [['M', 3.63, -4.02], ['c', 0.09, -0.06, 0.18, -0.09, 0.24, -0.03], ['c', 0.03, 0.03, 0.87, 0.93, 1.83, 2.01], ['c', 1.50, 1.65, 1.80, 1.98, 1.80, 2.04], ['c', 0.00, 0.06, -0.30, 0.39, -1.80, 2.04], ['c', -0.96, 1.08, -1.80, 1.98, -1.83, 2.01], ['c', -0.06, 0.06, -0.15, 0.03, -0.24, -0.03], ['c', -0.12, -0.09, -3.54, -3.84, -3.60, -3.93], ['c', -0.03, -0.03, -0.03, -0.09, -0.03, -0.15], ['c', 0.03, -0.06, 3.45, -3.84, 3.63, -3.96], ['z']],\n    w: 7.5,\n    h: 8.165\n  };\n\n  this.printSymbol = function (x, y, symb, paper, klass) {\n    if (!glyphs[symb]) return null;\n    var pathArray = this.pathClone(glyphs[symb].d);\n    pathArray[0][1] += x;\n    pathArray[0][2] += y;\n    var path = \"\";\n\n    for (var i = 0; i < pathArray.length; i++) {\n      path += pathArray[i].join(\" \");\n    }\n\n    return paper.path({\n      path: path,\n      stroke: \"none\",\n      fill: \"#000000\",\n      'class': klass\n    });\n  };\n\n  this.getPathForSymbol = function (x, y, symb, scalex, scaley) {\n    scalex = scalex || 1;\n    scaley = scaley || 1;\n    if (!glyphs[symb]) return null;\n    var pathArray = this.pathClone(glyphs[symb].d);\n    if (scalex !== 1 || scaley !== 1) this.pathScale(pathArray, scalex, scaley);\n    pathArray[0][1] += x;\n    pathArray[0][2] += y;\n    return pathArray;\n  };\n\n  this.getSymbolWidth = function (symbol) {\n    if (glyphs[symbol]) return glyphs[symbol].w;\n    return 0;\n  };\n\n  this.getSymbolHeight = function (symbol) {\n    if (glyphs[symbol]) return glyphs[symbol].h;\n    return 0;\n  };\n\n  this.symbolHeightInPitches = function (symbol) {\n    return this.getSymbolHeight(symbol) / spacing.STEP;\n  };\n\n  this.getSymbolAlign = function (symbol) {\n    if (symbol.substring(0, 7) === \"scripts\" && symbol !== \"scripts.roll\") {\n      return \"center\";\n    }\n\n    return \"left\";\n  };\n\n  this.pathClone = function (pathArray) {\n    var res = [];\n\n    for (var i = 0, ii = pathArray.length; i < ii; i++) {\n      res[i] = [];\n\n      for (var j = 0, jj = pathArray[i].length; j < jj; j++) {\n        res[i][j] = pathArray[i][j];\n      }\n    }\n\n    return res;\n  };\n\n  this.pathScale = function (pathArray, kx, ky) {\n    for (var i = 0, ii = pathArray.length; i < ii; i++) {\n      var p = pathArray[i];\n      var j, jj;\n\n      for (j = 1, jj = p.length; j < jj; j++) {\n        p[j] *= j % 2 ? kx : ky;\n      }\n    }\n  };\n\n  this.getYCorr = function (symbol) {\n    switch (symbol) {\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n      case \"+\":\n        return -2;\n\n      case \"timesig.common\":\n      case \"timesig.cut\":\n        return 0;\n\n      case \"flags.d32nd\":\n        return -1;\n\n      case \"flags.d64th\":\n        return -2;\n\n      case \"flags.u32nd\":\n        return 1;\n\n      case \"flags.u64th\":\n        return 3;\n\n      case \"rests.whole\":\n        return 1;\n\n      case \"rests.half\":\n        return -1;\n\n      case \"rests.8th\":\n        return -1;\n\n      case \"rests.quarter\":\n        return -1;\n\n      case \"rests.16th\":\n        return -1;\n\n      case \"rests.32nd\":\n        return -1;\n\n      case \"rests.64th\":\n        return -1;\n\n      case \"f\":\n      case \"m\":\n      case \"p\":\n      case \"s\":\n      case \"z\":\n        return -4;\n\n      case \"scripts.trill\":\n      case \"scripts.upbow\":\n      case \"scripts.downbow\":\n        return -2;\n\n      case \"scripts.ufermata\":\n      case \"scripts.wedge\":\n      case \"scripts.roll\":\n      case \"scripts.shortphrase\":\n      case \"scripts.longphrase\":\n        return -1;\n\n      case \"scripts.dfermata\":\n        return 1;\n\n      default:\n        return 0;\n    }\n  };\n};\n\nmodule.exports = new Glyphs(); // we need the glyphs for layout information","//    abc_absolute_element.js: Definition of the AbsoluteElement class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar spacing = require('./abc_spacing'); // duration - actual musical duration - different from notehead duration in triplets. refer to abcelem to get the notehead duration\n// minspacing - spacing which must be taken on top of the width defined by the duration\n// type is a meta-type for the element. It is not necessary for drawing, but it is useful to make semantic sense of the element. For instance, it can be used in the element's class name.\n\n\nvar AbsoluteElement = function AbsoluteElement(abcelem, duration, minspacing, type, tuneNumber, options) {\n  //console.log(\"Absolute:\",abcelem, type);\n  if (!options) options = {};\n  this.tuneNumber = tuneNumber;\n  this.abcelem = abcelem;\n  this.duration = duration;\n  this.durationClass = options.durationClassOveride ? options.durationClassOveride : this.duration;\n  this.minspacing = minspacing || 0;\n  this.x = 0;\n  this.children = [];\n  this.heads = [];\n  this.extra = [];\n  this.extraw = 0; //this.decs = [];\n\n  this.w = 0;\n  this.right = [];\n  this.invisible = false;\n  this.bottom = undefined;\n  this.top = undefined;\n  this.type = type; // these are the heights of all of the vertical elements that can't be placed until the end of the line.\n  // the vertical order of elements that are above is: tempo, part, volume/dynamic, ending/chord, lyric\n  // the vertical order of elements that are below is: lyric, chord, volume/dynamic\n\n  this.specialY = {\n    tempoHeightAbove: 0,\n    partHeightAbove: 0,\n    volumeHeightAbove: 0,\n    dynamicHeightAbove: 0,\n    endingHeightAbove: 0,\n    chordHeightAbove: 0,\n    lyricHeightAbove: 0,\n    lyricHeightBelow: 0,\n    chordHeightBelow: 0,\n    volumeHeightBelow: 0,\n    dynamicHeightBelow: 0\n  };\n}; // For each of the relative elements that can't be placed in advance (because their vertical placement depends on everything\n// else on the line), this iterates through them and sets their pitch. By the time this is called, specialYResolved contains a\n// hash with the vertical placement (in pitch units) for each type.\n// TODO-PER: I think this needs to be separated by \"above\" and \"below\". How do we know that for dynamics at the point where they are being defined, though? We need a pass through all the relative elements to set \"above\" and \"below\".\n\n\nAbsoluteElement.prototype.setUpperAndLowerElements = function (specialYResolved) {\n  // specialYResolved contains the actual pitch for each of the classes of elements.\n  for (var i = 0; i < this.children.length; i++) {\n    var child = this.children[i];\n\n    for (var key in this.specialY) {\n      // for each class of element that needs to be placed vertically\n      if (this.specialY.hasOwnProperty(key)) {\n        if (child[key]) {\n          // If this relative element has defined a height for this class of element\n          child.pitch = specialYResolved[key];\n\n          if (child.top === undefined) {\n            // TODO-PER: HACK! Not sure this is the right place to do this.\n            child.setUpperAndLowerElements(specialYResolved);\n            this.pushTop(child.top);\n            this.pushBottom(child.bottom);\n          }\n        }\n      }\n    }\n  }\n};\n\nAbsoluteElement.prototype.getMinWidth = function () {\n  // absolute space taken to the right of the note\n  return this.w;\n};\n\nAbsoluteElement.prototype.getExtraWidth = function () {\n  // space needed to the left of the note\n  return -this.extraw;\n};\n\nAbsoluteElement.prototype.addExtra = function (extra) {\n  if (extra.dx < this.extraw) this.extraw = extra.dx;\n  this.extra[this.extra.length] = extra;\n  this.addChild(extra);\n};\n\nAbsoluteElement.prototype.addHead = function (head) {\n  if (head.dx < this.extraw) this.extraw = head.dx;\n  this.heads[this.heads.length] = head;\n  this.addRight(head);\n};\n\nAbsoluteElement.prototype.addRight = function (right) {\n  if (right.dx + right.w > this.w) this.w = right.dx + right.w;\n  this.right[this.right.length] = right;\n  this.addChild(right);\n};\n\nAbsoluteElement.prototype.addCentered = function (elem) {\n  var half = elem.w / 2;\n  if (-half < this.extraw) this.extraw = -half;\n  this.extra[this.extra.length] = elem;\n  if (elem.dx + half > this.w) this.w = elem.dx + half;\n  this.right[this.right.length] = elem;\n  this.addChild(elem);\n};\n\nAbsoluteElement.prototype.setLimit = function (member, child) {\n  if (!child[member]) return;\n  if (!this.specialY[member]) this.specialY[member] = child[member];else this.specialY[member] = Math.max(this.specialY[member], child[member]);\n};\n\nAbsoluteElement.prototype.addChild = function (child) {\n  //console.log(\"Relative:\",child);\n  child.parent = this;\n  this.children[this.children.length] = child;\n  this.pushTop(child.top);\n  this.pushBottom(child.bottom);\n  this.setLimit('tempoHeightAbove', child);\n  this.setLimit('partHeightAbove', child);\n  this.setLimit('volumeHeightAbove', child);\n  this.setLimit('dynamicHeightAbove', child);\n  this.setLimit('endingHeightAbove', child);\n  this.setLimit('chordHeightAbove', child);\n  this.setLimit('lyricHeightAbove', child);\n  this.setLimit('lyricHeightBelow', child);\n  this.setLimit('chordHeightBelow', child);\n  this.setLimit('volumeHeightBelow', child);\n  this.setLimit('dynamicHeightBelow', child);\n};\n\nAbsoluteElement.prototype.pushTop = function (top) {\n  if (top !== undefined) {\n    if (this.top === undefined) this.top = top;else this.top = Math.max(top, this.top);\n  }\n};\n\nAbsoluteElement.prototype.pushBottom = function (bottom) {\n  if (bottom !== undefined) {\n    if (this.bottom === undefined) this.bottom = bottom;else this.bottom = Math.min(bottom, this.bottom);\n  }\n};\n\nAbsoluteElement.prototype.setX = function (x) {\n  this.x = x;\n\n  for (var i = 0; i < this.children.length; i++) {\n    this.children[i].setX(x);\n  }\n};\n\nAbsoluteElement.prototype.setHint = function () {\n  this.hint = true;\n};\n\nAbsoluteElement.prototype.draw = function (renderer, bartop) {\n  if (this.invisible) return;\n  this.elemset = [];\n  renderer.beginGroup();\n\n  for (var i = 0; i < this.children.length; i++) {\n    if (\n    /*ABCJS.write.debugPlacement*/\n    false) {\n      if (this.children[i].klass === 'ornament') renderer.printShadedBox(this.x, renderer.calcY(this.children[i].top), this.w, renderer.calcY(this.children[i].bottom) - renderer.calcY(this.children[i].top), \"rgb(0,0,200)\", 0.3);\n    }\n\n    var el = this.children[i].draw(renderer, bartop);\n    if (el) this.elemset.push(el);\n  }\n\n  var klass = this.type;\n\n  if (this.type === 'note' || this.type === 'rest') {\n    klass += ' d' + this.durationClass;\n    klass = klass.replace(/\\./g, '-');\n\n    if (this.abcelem.pitches) {\n      for (var j = 0; j < this.abcelem.pitches.length; j++) {\n        klass += ' p' + this.abcelem.pitches[j].pitch;\n      }\n    }\n  }\n\n  var g = renderer.endGroup(klass);\n  if (g) this.elemset.push(g);\n  if (this.klass) this.setClass(\"mark\", \"\", \"#00ff00\");\n  if (this.hint) this.setClass(\"abcjs-hint\", \"\", null);\n  var opacity =\n  /*ABCJS.write.debugPlacement*/\n  false ? 0.3 : 0; // Create transparent box that encompasses the element, and not so transparent to debug it.\n\n  var target = renderer.printShadedBox(this.x, renderer.calcY(this.top), this.w, renderer.calcY(this.bottom) - renderer.calcY(this.top), \"#000000\", opacity);\n  var self = this;\n  var controller = renderer.controller;\n  target.addEventListener('mouseup', function () {\n    var classes = [];\n\n    if (self.elemset) {\n      for (var j = 0; j < self.elemset.length; j++) {\n        var es = self.elemset[j];\n        if (es) classes.push(es.getAttribute(\"class\"));\n      }\n    }\n\n    controller.notifySelect(self, self.tuneNumber, classes);\n  });\n  this.abcelem.abselem = this;\n  var step = spacing.STEP;\n};\n\nAbsoluteElement.prototype.isIE =\n/*@cc_on!@*/\nfalse; //IE detector\n\nAbsoluteElement.prototype.setClass = function (addClass, removeClass, color) {\n  for (var i = 0; i < this.elemset.length; i++) {\n    var el = this.elemset[i];\n    el.setAttribute(\"fill\", color);\n    var kls = el.getAttribute(\"class\");\n    if (!kls) kls = \"\";\n    kls = kls.replace(removeClass, \"\");\n    kls = kls.replace(addClass, \"\");\n\n    if (addClass.length > 0) {\n      if (kls.length > 0 && kls.charAt(kls.length - 1) !== ' ') kls += \" \";\n      kls += addClass;\n    }\n\n    el.setAttribute(\"class\", kls);\n  }\n};\n\nAbsoluteElement.prototype.highlight = function (klass, color) {\n  if (klass === undefined) klass = \"abcjs-note_selected\";\n  if (color === undefined) color = \"#ff0000\";\n  this.setClass(klass, \"\", color);\n};\n\nAbsoluteElement.prototype.unhighlight = function (klass, color) {\n  if (klass === undefined) klass = \"abcjs-note_selected\";\n  if (color === undefined) color = \"#000000\";\n  this.setClass(\"\", klass, color);\n};\n\nmodule.exports = AbsoluteElement;","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n} // About 1.5x faster than the two-arg version of Array#splice()\n\n\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n} // This implementation is based heavily on node's url.parse\n\n\nfunction resolvePathname(to) {\n  var from = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var toParts = to && to.split('/') || [];\n  var fromParts = from && from.split('/') || [];\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n  var hasTrailingSlash = void 0;\n\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) {\n    fromParts.unshift('..');\n  }\n  if (mustEndAbs && fromParts[0] !== '' && (!fromParts[0] || !isAbsolute(fromParts[0]))) fromParts.unshift('');\n  var result = fromParts.join('/');\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n  return result;\n}\n\nexport default resolvePathname;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction valueEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return valueEqual(item, b[index]);\n    });\n  }\n\n  var aType = typeof a === 'undefined' ? 'undefined' : _typeof(a);\n  var bType = typeof b === 'undefined' ? 'undefined' : _typeof(b);\n  if (aType !== bType) return false;\n\n  if (aType === 'object') {\n    var aValue = a.valueOf();\n    var bValue = b.valueOf();\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) return false;\n    return aKeys.every(function (key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;","export var addLeadingSlash = function addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n};\nexport var stripLeadingSlash = function stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n};\nexport var hasBasename = function hasBasename(path, prefix) {\n  return new RegExp('^' + prefix + '(\\\\/|\\\\?|#|$)', 'i').test(path);\n};\nexport var stripBasename = function stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n};\nexport var stripTrailingSlash = function stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n};\nexport var parsePath = function parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n};\nexport var createPath = function createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return path;\n};","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport { parsePath } from './PathUtils';\nexport var createLocation = function createLocation(path, state, key, currentLocation) {\n  var location = void 0;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n};\nexport var locationsAreEqual = function locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n};","import warning from 'warning';\n\nvar createTransitionManager = function createTransitionManager() {\n  var prompt = null;\n\n  var setPrompt = function setPrompt(nextPrompt) {\n    warning(prompt == null, 'A history supports only one prompt at a time');\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  };\n\n  var confirmTransitionTo = function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message');\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  };\n\n  var listeners = [];\n\n  var appendListener = function appendListener(fn) {\n    var isActive = true;\n\n    var listener = function listener() {\n      if (isActive) fn.apply(undefined, arguments);\n    };\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  };\n\n  var notifyListeners = function notifyListeners() {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(undefined, args);\n    });\n  };\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n};\n\nexport default createTransitionManager;","export var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexport var addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\nexport var removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\nexport var getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nexport var supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n};\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nexport var supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nexport var supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nexport var isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport { createLocation } from './LocationUtils';\nimport { addLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './PathUtils';\nimport createTransitionManager from './createTransitionManager';\nimport { canUseDOM, addEventListener, removeEventListener, getConfirmation, supportsHistory, supportsPopStateOnHashChange, isExtraneousPopstateEvent } from './DOMUtils';\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nvar getHistoryState = function getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n};\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nvar createBrowserHistory = function createBrowserHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  invariant(canUseDOM, 'Browser history needs a DOM');\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props$forceRefresh = props.forceRefresh,\n      forceRefresh = _props$forceRefresh === undefined ? false : _props$forceRefresh,\n      _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  var getDOMLocation = function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var handlePopState = function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  };\n\n  var handleHashChange = function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  };\n\n  var forceNextPop = false;\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  var createHref = function createHref(location) {\n    return basename + createPath(location);\n  };\n\n  var push = function push(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history');\n        window.location.href = href;\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history');\n        window.location.replace(href);\n      }\n    });\n  };\n\n  var go = function go(n) {\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      addEventListener(window, PopStateEvent, handlePopState);\n      if (needsHashChangeListener) addEventListener(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      removeEventListener(window, PopStateEvent, handlePopState);\n      if (needsHashChangeListener) removeEventListener(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n};\n\nexport default createBrowserHistory;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport warning from 'warning';\nimport invariant from 'invariant';\nimport { createLocation, locationsAreEqual } from './LocationUtils';\nimport { addLeadingSlash, stripLeadingSlash, stripTrailingSlash, hasBasename, stripBasename, createPath } from './PathUtils';\nimport createTransitionManager from './createTransitionManager';\nimport { canUseDOM, addEventListener, removeEventListener, getConfirmation, supportsGoWithoutReloadUsingHash } from './DOMUtils';\nvar HashChangeEvent = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  invariant(canUseDOM, 'Hash history needs a DOM');\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = props.hashType,\n      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  };\n\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }; // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + createPath(location));\n  };\n\n  var push = function push(path, state) {\n    warning(state === undefined, 'Hash history cannot push state; it is ignored');\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(state === undefined, 'Hash history cannot replace state; it is ignored');\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  };\n\n  var go = function go(n) {\n    warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      addEventListener(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      removeEventListener(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n};\n\nexport default createHashHistory;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport warning from 'warning';\nimport { createPath } from './PathUtils';\nimport { createLocation } from './LocationUtils';\nimport createTransitionManager from './createTransitionManager';\n\nvar clamp = function clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n};\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nvar createMemoryHistory = function createMemoryHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var getUserConfirmation = props.getUserConfirmation,\n      _props$initialEntries = props.initialEntries,\n      initialEntries = _props$initialEntries === undefined ? ['/'] : _props$initialEntries,\n      _props$initialIndex = props.initialIndex,\n      initialIndex = _props$initialIndex === undefined ? 0 : _props$initialIndex,\n      _props$keyLength = props.keyLength,\n      keyLength = _props$keyLength === undefined ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var createKey = function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  };\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  var push = function push(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  };\n\n  var replace = function replace(path, state) {\n    warning(!((typeof path === 'undefined' ? 'undefined' : _typeof(path)) === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored');\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  };\n\n  var go = function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var canGo = function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  };\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return transitionManager.setPrompt(prompt);\n  };\n\n  var listen = function listen(listener) {\n    return transitionManager.appendListener(listener);\n  };\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n};\n\nexport default createMemoryHistory;","import _createBrowserHistory from './createBrowserHistory';\nexport { _createBrowserHistory as createBrowserHistory };\nimport _createHashHistory from './createHashHistory';\nexport { _createHashHistory as createHashHistory };\nimport _createMemoryHistory from './createMemoryHistory';\nexport { _createMemoryHistory as createMemoryHistory };\nexport { createLocation, locationsAreEqual } from './LocationUtils';\nexport { parsePath, createPath } from './PathUtils';","/**\n * sprintf() for JavaScript v.0.4\n *\n Copyright (c) 2007-present, Alexandru Mărășteanu <hello@alexei.ro>\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n notice, this list of conditions and the following disclaimer in the\n documentation and/or other materials provided with the distribution.\n * Neither the name of this software nor the names of its contributors may be\n used to endorse or promote products derived from this software without\n specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n//function str_repeat(i, m) { for (var o = []; m > 0; o[--m] = i); return(o.join('')); }\nvar sprintf = function sprintf() {\n  var i = 0,\n      a,\n      f = arguments[i++],\n      o = [],\n      m,\n      p,\n      c,\n      x;\n\n  while (f) {\n    if (m = /^[^\\x25]+/.exec(f)) o.push(m[0]);else if (m = /^\\x25{2}/.exec(f)) o.push('%');else if (m = /^\\x25(?:(\\d+)\\$)?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(f)) {\n      if ((a = arguments[m[1] || i++]) == null || a == undefined) throw \"Too few arguments.\";\n      if (/[^s]/.test(m[7]) && typeof a != 'number') throw \"Expecting number but found \" + typeof a;\n\n      switch (m[7]) {\n        case 'b':\n          a = a.toString(2);\n          break;\n\n        case 'c':\n          a = String.fromCharCode(a);\n          break;\n\n        case 'd':\n          a = parseInt(a);\n          break;\n\n        case 'e':\n          a = m[6] ? a.toExponential(m[6]) : a.toExponential();\n          break;\n\n        case 'f':\n          a = m[6] ? parseFloat(a).toFixed(m[6]) : parseFloat(a);\n          break;\n\n        case 'o':\n          a = a.toString(8);\n          break;\n\n        case 's':\n          a = (a = String(a)) && m[6] ? a.substring(0, m[6]) : a;\n          break;\n\n        case 'u':\n          a = Math.abs(a);\n          break;\n\n        case 'x':\n          a = a.toString(16);\n          break;\n\n        case 'X':\n          a = a.toString(16).toUpperCase();\n          break;\n      }\n\n      a = /[def]/.test(m[7]) && m[2] && a > 0 ? '+' + a : a;\n      c = m[3] ? m[3] == '0' ? '0' : m[3].charAt(1) : ' ';\n      x = m[5] - String(a).length;\n      p = m[5] ? str_repeat(c, x) : '';\n      o.push(m[4] ? a + p : p + a);\n    } else throw \"Huh ?!\";\n    f = f.substring(m[0].length);\n  }\n\n  return o.join('');\n};\n\nmodule.exports = sprintf;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","module.exports = /[!-#%-\\*,-/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E49\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/;","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n/**\n * new Ruler()\n **/\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []; // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n\n  this.__cache__ = null;\n} ////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n// Find rule index by name\n//\n\n\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n\n  return -1;\n}; // Build rules lookup cache\n//\n\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = ['']; // collect unique names\n\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and enable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\n\n\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  this.__rules__.forEach(function (rule) {\n    rule.enabled = false;\n  });\n\n  this.enable(list, ignoreInvalid);\n};\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and disable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\n\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  } // Chain can be empty, if rules disabled. But we still have to return Array.\n\n\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;","// Token class\n'use strict';\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\n\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type = type;\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n\n  this.tag = tag;\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n\n  this.attrs = null;\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n\n  this.map = null;\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n\n  this.nesting = nesting;\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n\n  this.level = 0;\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n\n  this.children = null;\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n\n  this.content = '';\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n\n  this.markup = '';\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n\n  this.info = '';\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n\n  this.meta = null;\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n\n  this.block = false;\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n\n  this.hidden = false;\n}\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\n\n\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) {\n    return -1;\n  }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\n\n\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [attrData];\n  }\n};\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\n\n\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [name, value];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\n\n\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name),\n      value = null;\n\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n\n  return value;\n};\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\n\n\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([name, value]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\nmodule.exports = Token;","//    abc_tunebook.js: splits a string representing ABC Music Notation into individual tunes.\n//    Copyright (C) 2010-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*global document */\n\n/*global window, ABCJS, console */\nvar parseCommon = require('../parse/abc_common');\n\nvar Parse = require('../parse/abc_parse');\n\nvar tunebook = {};\n\n(function () {\n  \"use strict\";\n\n  tunebook.numberOfTunes = function (abc) {\n    var tunes = abc.split(\"\\nX:\");\n    var num = tunes.length;\n    if (num === 0) num = 1;\n    return num;\n  };\n\n  var TuneBook = tunebook.TuneBook = function (book) {\n    var This = this;\n    var directives = \"\";\n    book = parseCommon.strip(book);\n    var tunes = book.split(\"\\nX:\");\n\n    for (var i = 1; i < tunes.length; i++) {\n      // Put back the X: that we lost when splitting the tunes.\n      tunes[i] = \"X:\" + tunes[i];\n    } // Keep track of the character position each tune starts with.\n\n\n    var pos = 0;\n    This.tunes = [];\n    parseCommon.each(tunes, function (tune) {\n      This.tunes.push({\n        abc: tune,\n        startPos: pos\n      });\n      pos += tune.length + 1; // We also lost a newline when splitting, so count that.\n    });\n\n    if (This.tunes.length > 1 && !parseCommon.startsWith(This.tunes[0].abc, 'X:')) {\n      // If there is only one tune, the X: might be missing, otherwise assume the top of the file is \"intertune\"\n      // There could be file-wide directives in this, if so, we need to insert it into each tune. We can probably get away with\n      // just looking for file-wide directives here (before the first tune) and inserting them at the bottom of each tune, since\n      // the tune is parsed all at once. The directives will be seen before the engraver begins processing.\n      var dir = This.tunes.shift();\n      var arrDir = dir.abc.split('\\n');\n      parseCommon.each(arrDir, function (line) {\n        if (parseCommon.startsWith(line, '%%')) directives += line + '\\n';\n      });\n    }\n\n    This.header = directives; // Now, the tune ends at a blank line, so truncate it if needed. There may be \"intertune\" stuff.\n\n    parseCommon.each(This.tunes, function (tune) {\n      var end = tune.abc.indexOf('\\n\\n');\n      if (end > 0) tune.abc = tune.abc.substring(0, end);\n      tune.pure = tune.abc;\n      tune.abc = directives + tune.abc; // for the user's convenience, parse and store the title separately. The title is between the first T: and the next \\n\n\n      var title = tune.pure.split(\"T:\");\n\n      if (title.length > 1) {\n        title = title[1].split(\"\\n\");\n        tune.title = title[0].replace(/^\\s+|\\s+$/g, '');\n      } else tune.title = \"\"; // for the user's convenience, parse and store the id separately. The id is between the first X: and the next \\n\n\n\n      var id = tune.pure.substring(2, tune.pure.indexOf(\"\\n\"));\n      tune.id = id.replace(/^\\s+|\\s+$/g, '');\n    });\n  };\n\n  TuneBook.prototype.getTuneById = function (id) {\n    for (var i = 0; i < this.tunes.length; i++) {\n      if (this.tunes[i].id === id) return this.tunes[i];\n    }\n\n    return null;\n  };\n\n  TuneBook.prototype.getTuneByTitle = function (title) {\n    for (var i = 0; i < this.tunes.length; i++) {\n      if (this.tunes[i].title === title) return this.tunes[i];\n    }\n\n    return null;\n  };\n\n  tunebook.parseOnly = function (abc, params) {\n    var tunes = [];\n    var numTunes = tunebook.numberOfTunes(abc); // this just needs to be passed in because this tells the engine how many tunes to process.\n\n    var output = [];\n\n    for (var i = 0; i < numTunes; i++) {\n      output.push(1);\n    }\n\n    function callback() {// Don't need to do anything with the parsed tunes.\n    }\n\n    return tunebook.renderEngine(callback, output, abc, params);\n  };\n\n  tunebook.renderEngine = function (callback, output, abc, params) {\n    var ret = [];\n\n    var isArray = function isArray(testObject) {\n      return testObject && !testObject.propertyIsEnumerable('length') && typeof testObject === 'object' && typeof testObject.length === 'number';\n    }; // check and normalize input parameters\n\n\n    if (output === undefined || abc === undefined) return;\n    if (!isArray(output)) output = [output];\n    if (params === undefined) params = {};\n    var currentTune = params.startingTune ? parseInt(params.startingTune, 10) : 0; // parse the abc string\n\n    var book = new TuneBook(abc);\n    var abcParser = new Parse(); // output each tune, if it exists. Otherwise clear the div.\n\n    for (var i = 0; i < output.length; i++) {\n      var div = output[i];\n      if (typeof div === \"string\") div = document.getElementById(div);\n\n      if (div) {\n        if (currentTune >= 0 && currentTune < book.tunes.length) {\n          abcParser.parse(book.tunes[currentTune].abc, params);\n          var tune = abcParser.getTune();\n          var override = callback(div, tune, i, book.tunes[currentTune].abc);\n          ret.push(override ? override : tune);\n        } else {\n          if (div.hasOwnProperty('innerHTML')) div.innerHTML = \"\";\n        }\n      }\n\n      currentTune++;\n    }\n\n    return ret;\n  };\n\n  function flattenTune(tuneObj) {\n    // This removes the line breaks and removes the non-music lines.\n    var staves = [];\n\n    for (var j = 0; j < tuneObj.lines.length; j++) {\n      var line = tuneObj.lines[j];\n\n      if (line.staff) {\n        for (var k = 0; k < line.staff.length; k++) {\n          var staff = line.staff[k];\n          if (!staves[k]) staves[k] = staff;else {\n            for (var i = 0; i < staff.voices.length; i++) {\n              if (staves[k].voices[i]) staves[k].voices[i] = staves[k].voices[i].concat(staff.voices[i]); // TODO-PER: If staves[k].voices[i] doesn't exist, that means a voice appeared in the middle of the tune. That isn't handled yet.\n            }\n          }\n        }\n      }\n    }\n\n    return staves;\n  }\n\n  function measuresParser(staff, tune) {\n    var voices = [];\n    var lastChord = null;\n    var measureStartChord = null;\n    var fragStart = null;\n    var hasNotes = false;\n\n    for (var i = 0; i < staff.voices.length; i++) {\n      var voice = staff.voices[i];\n      voices.push([]);\n\n      for (var j = 0; j < voice.length; j++) {\n        var elem = voice[j];\n\n        if (fragStart === null && elem.startChar >= 0) {\n          fragStart = elem.startChar;\n          if (elem.chord === undefined) measureStartChord = lastChord;else measureStartChord = null;\n        }\n\n        if (elem.chord) lastChord = elem;\n\n        if (elem.el_type === 'bar') {\n          if (hasNotes) {\n            var frag = tune.abc.substring(fragStart, elem.endChar);\n            var measure = {\n              abc: frag\n            };\n            lastChord = measureStartChord && measureStartChord.chord && measureStartChord.chord.length > 0 ? measureStartChord.chord[0].name : null;\n            if (lastChord) measure.lastChord = lastChord;\n            if (elem.startEnding) measure.startEnding = elem.startEnding;\n            if (elem.endEnding) measure.endEnding = elem.endEnding;\n            voices[i].push(measure);\n            fragStart = null;\n            hasNotes = false;\n          }\n        } else if (elem.el_type === 'note') {\n          hasNotes = true;\n        }\n      }\n    }\n\n    return voices;\n  }\n\n  tunebook.extractMeasures = function (abc) {\n    var tunes = [];\n    var book = new TuneBook(abc);\n\n    for (var i = 0; i < book.tunes.length; i++) {\n      var tune = book.tunes[i];\n      var arr = tune.abc.split(\"K:\");\n      var arr2 = arr[1].split(\"\\n\");\n      var header = arr[0] + \"K:\" + arr2[0] + \"\\n\";\n      var lastChord = null;\n      var measureStartChord = null;\n      var fragStart = null;\n      var measures = [];\n      var hasNotes = false;\n      var tuneObj = tunebook.parseOnly(tune.abc)[0];\n      var hasPickup = tuneObj.getPickupLength() > 0; // var staves = flattenTune(tuneObj);\n      // for (var s = 0; s < staves.length; s++) {\n      // \tvar voices = measuresParser(staves[s], tune);\n      // \tif (s === 0)\n      // \t\tmeasures = voices;\n      // \telse {\n      // \t\tfor (var ss = 0; ss < voices.length; ss++) {\n      // \t\t\tvar voice = voices[ss];\n      // \t\t\tif (measures.length <= ss)\n      // \t\t\t\tmeasures.push([]);\n      // \t\t\tvar measureVoice = measures[ss];\n      // \t\t\tfor (var sss = 0; sss < voice.length; sss++) {\n      // \t\t\t\tif (measureVoice.length > sss)\n      // \t\t\t\t\tmeasureVoice[sss].abc += \"\\n\" + voice[sss].abc;\n      // \t\t\t\telse\n      // \t\t\t\t\tmeasures.push(voice[sss]);\n      // \t\t\t}\n      // \t\t}\n      // \t}\n      // \tconsole.log(voices);\n      // }\n      // measures = measures[0];\n\n      for (var j = 0; j < tuneObj.lines.length; j++) {\n        var line = tuneObj.lines[j];\n\n        if (line.staff) {\n          for (var k = 0; k < 1\n          /*line.staff.length*/\n          ; k++) {\n            var staff = line.staff[k];\n\n            for (var kk = 0; kk < 1\n            /*staff.voices.length*/\n            ; kk++) {\n              var voice = staff.voices[kk];\n\n              for (var kkk = 0; kkk < voice.length; kkk++) {\n                var elem = voice[kkk];\n\n                if (fragStart === null && elem.startChar >= 0) {\n                  fragStart = elem.startChar;\n                  if (elem.chord === undefined) measureStartChord = lastChord;else measureStartChord = null;\n                }\n\n                if (elem.chord) lastChord = elem;\n\n                if (elem.el_type === 'bar') {\n                  if (hasNotes) {\n                    var frag = tune.abc.substring(fragStart, elem.endChar);\n                    var measure = {\n                      abc: frag\n                    };\n                    lastChord = measureStartChord && measureStartChord.chord && measureStartChord.chord.length > 0 ? measureStartChord.chord[0].name : null;\n                    if (lastChord) measure.lastChord = lastChord;\n                    if (elem.startEnding) measure.startEnding = elem.startEnding;\n                    if (elem.endEnding) measure.endEnding = elem.endEnding;\n                    measures.push(measure);\n                    fragStart = null;\n                    hasNotes = false;\n                  }\n                } else if (elem.el_type === 'note') {\n                  hasNotes = true;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      tunes.push({\n        header: header,\n        measures: measures,\n        hasPickup: hasPickup\n      });\n    }\n\n    return tunes;\n  };\n})();\n\nmodule.exports = tunebook;","//    abc_parse.js: parses a string representing ABC Music Notation into a usable internal structure.\n//    Copyright (C) 2010-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*global window */\nvar parseCommon = require('./abc_common');\n\nvar parseDirective = require('./abc_parse_directive');\n\nvar ParseHeader = require('./abc_parse_header');\n\nvar parseKeyVoice = require('./abc_parse_key_voice');\n\nvar Tokenizer = require('./abc_tokenizer');\n\nvar transpose = require('./abc_transpose');\n\nvar wrap = require('./wrap_lines');\n\nvar Tune = require('../data/abc_tune');\n\nvar Parse = function Parse() {\n  \"use strict\";\n\n  var tune = new Tune();\n  var tokenizer = new Tokenizer();\n\n  this.getTune = function () {\n    return tune;\n  };\n\n  function addPositioning(el, type, value) {\n    if (!el.positioning) el.positioning = {};\n    el.positioning[type] = value;\n  }\n\n  function addFont(el, type, value) {\n    if (!el.fonts) el.fonts = {};\n    el.fonts[type] = value;\n  }\n\n  var multilineVars = {\n    reset: function reset() {\n      for (var property in this) {\n        if (this.hasOwnProperty(property) && typeof this[property] !== \"function\") {\n          delete this[property];\n        }\n      }\n\n      this.iChar = 0;\n      this.key = {\n        accidentals: [],\n        root: 'none',\n        acc: '',\n        mode: ''\n      };\n      this.meter = null; // if no meter is specified, free meter is assumed\n\n      this.origMeter = null; // this is for new voices that are created after we set the meter.\n\n      this.hasMainTitle = false;\n      this.default_length = 0.125;\n      this.clef = {\n        type: 'treble',\n        verticalPos: 0\n      };\n      this.next_note_duration = 0;\n      this.start_new_line = true;\n      this.is_in_header = true;\n      this.is_in_history = false;\n      this.partForNextLine = {};\n      this.havent_set_length = true;\n      this.voices = {};\n      this.staves = [];\n      this.macros = {};\n      this.currBarNumber = 1;\n      this.barCounter = {};\n      this.inTextBlock = false;\n      this.inPsBlock = false;\n      this.ignoredDecorations = [];\n      this.textBlock = \"\";\n      this.score_is_present = false; // Can't have original V: lines when there is the score directive\n\n      this.inEnding = false;\n      this.inTie = [false];\n      this.inTieChord = {};\n      this.vocalPosition = \"auto\";\n      this.dynamicPosition = \"auto\";\n      this.chordPosition = \"auto\";\n      this.ornamentPosition = \"auto\";\n      this.volumePosition = \"auto\";\n      this.openSlurs = [];\n    },\n    differentFont: function differentFont(type, defaultFonts) {\n      if (this[type].decoration !== defaultFonts[type].decoration) return true;\n      if (this[type].face !== defaultFonts[type].face) return true;\n      if (this[type].size !== defaultFonts[type].size) return true;\n      if (this[type].style !== defaultFonts[type].style) return true;\n      if (this[type].weight !== defaultFonts[type].weight) return true;\n      return false;\n    },\n    addFormattingOptions: function addFormattingOptions(el, defaultFonts, elType) {\n      if (elType === 'note') {\n        if (this.vocalPosition !== 'auto') addPositioning(el, 'vocalPosition', this.vocalPosition);\n        if (this.dynamicPosition !== 'auto') addPositioning(el, 'dynamicPosition', this.dynamicPosition);\n        if (this.chordPosition !== 'auto') addPositioning(el, 'chordPosition', this.chordPosition);\n        if (this.ornamentPosition !== 'auto') addPositioning(el, 'ornamentPosition', this.ornamentPosition);\n        if (this.volumePosition !== 'auto') addPositioning(el, 'volumePosition', this.volumePosition);\n        if (this.differentFont(\"annotationfont\", defaultFonts)) addFont(el, 'annotationfont', this.annotationfont);\n        if (this.differentFont(\"gchordfont\", defaultFonts)) addFont(el, 'gchordfont', this.gchordfont);\n        if (this.differentFont(\"vocalfont\", defaultFonts)) addFont(el, 'vocalfont', this.vocalfont);\n        if (this.differentFont(\"tripletfont\", defaultFonts)) addFont(el, 'tripletfont', this.tripletfont);\n      } else if (elType === 'bar') {\n        if (this.dynamicPosition !== 'auto') addPositioning(el, 'dynamicPosition', this.dynamicPosition);\n        if (this.chordPosition !== 'auto') addPositioning(el, 'chordPosition', this.chordPosition);\n        if (this.ornamentPosition !== 'auto') addPositioning(el, 'ornamentPosition', this.ornamentPosition);\n        if (this.volumePosition !== 'auto') addPositioning(el, 'volumePosition', this.volumePosition);\n        if (this.differentFont(\"measurefont\", defaultFonts)) addFont(el, 'measurefont', this.measurefont);\n        if (this.differentFont(\"repeatfont\", defaultFonts)) addFont(el, 'repeatfont', this.repeatfont);\n      }\n    }\n  };\n\n  var addWarning = function addWarning(str) {\n    if (!multilineVars.warnings) multilineVars.warnings = [];\n    multilineVars.warnings.push(str);\n  };\n\n  var addWarningObject = function addWarningObject(warningObject) {\n    if (!multilineVars.warningObjects) multilineVars.warningObjects = [];\n    multilineVars.warningObjects.push(warningObject);\n  };\n\n  var encode = function encode(str) {\n    var ret = parseCommon.gsub(str, '\\x12', ' ');\n    ret = parseCommon.gsub(ret, '&', '&amp;');\n    ret = parseCommon.gsub(ret, '<', '&lt;');\n    return parseCommon.gsub(ret, '>', '&gt;');\n  };\n\n  var warn = function warn(str, line, col_num) {\n    if (!line) line = \" \";\n    var bad_char = line.charAt(col_num);\n    if (bad_char === ' ') bad_char = \"SPACE\";\n    var clean_line = encode(line.substring(0, col_num)) + '<span style=\"text-decoration:underline;font-size:1.3em;font-weight:bold;\">' + bad_char + '</span>' + encode(line.substring(col_num + 1));\n    addWarning(\"Music Line:\" + tune.getNumLines() + \":\" + (col_num + 1) + ': ' + str + \":  \" + clean_line);\n    addWarningObject({\n      message: str,\n      line: line,\n      startChar: multilineVars.iChar + col_num,\n      column: col_num\n    });\n  };\n\n  var header = new ParseHeader(tokenizer, warn, multilineVars, tune);\n\n  this.getWarnings = function () {\n    return multilineVars.warnings;\n  };\n\n  this.getWarningObjects = function () {\n    return multilineVars.warningObjects;\n  };\n\n  var letter_to_chord = function letter_to_chord(line, i) {\n    if (line.charAt(i) === '\"') {\n      var chord = tokenizer.getBrackettedSubstring(line, i, 5);\n      if (!chord[2]) warn(\"Missing the closing quote while parsing the chord symbol\", line, i); // If it starts with ^, then the chord appears above.\n      // If it starts with _ then the chord appears below.\n      // (note that the 2.0 draft standard defines them as not chords, but annotations and also defines @.)\n\n      if (chord[0] > 0 && chord[1].length > 0 && chord[1].charAt(0) === '^') {\n        chord[1] = chord[1].substring(1);\n        chord[2] = 'above';\n      } else if (chord[0] > 0 && chord[1].length > 0 && chord[1].charAt(0) === '_') {\n        chord[1] = chord[1].substring(1);\n        chord[2] = 'below';\n      } else if (chord[0] > 0 && chord[1].length > 0 && chord[1].charAt(0) === '<') {\n        chord[1] = chord[1].substring(1);\n        chord[2] = 'left';\n      } else if (chord[0] > 0 && chord[1].length > 0 && chord[1].charAt(0) === '>') {\n        chord[1] = chord[1].substring(1);\n        chord[2] = 'right';\n      } else if (chord[0] > 0 && chord[1].length > 0 && chord[1].charAt(0) === '@') {\n        // @-15,5.7\n        chord[1] = chord[1].substring(1);\n        var x = tokenizer.getFloat(chord[1]);\n        if (x.digits === 0) warn(\"Missing first position in absolutely positioned annotation.\", line, i);\n        chord[1] = chord[1].substring(x.digits);\n        if (chord[1][0] !== ',') warn(\"Missing comma absolutely positioned annotation.\", line, i);\n        chord[1] = chord[1].substring(1);\n        var y = tokenizer.getFloat(chord[1]);\n        if (y.digits === 0) warn(\"Missing second position in absolutely positioned annotation.\", line, i);\n        chord[1] = chord[1].substring(y.digits);\n        var ws = tokenizer.skipWhiteSpace(chord[1]);\n        chord[1] = chord[1].substring(ws);\n        chord[2] = null;\n        chord[3] = {\n          x: x.value,\n          y: y.value\n        };\n      } else {\n        chord[1] = chord[1].replace(/([ABCDEFG0-9])b/g, \"$1♭\");\n        chord[1] = chord[1].replace(/([ABCDEFG0-9])#/g, \"$1♯\");\n        chord[2] = 'default';\n        chord[1] = transpose.chordName(multilineVars, chord[1]);\n      }\n\n      return chord;\n    }\n\n    return [0, \"\"];\n  };\n\n  var legalAccents = [\"trill\", \"lowermordent\", \"uppermordent\", \"mordent\", \"pralltriller\", \"accent\", \"fermata\", \"invertedfermata\", \"tenuto\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"+\", \"wedge\", \"open\", \"thumb\", \"snap\", \"turn\", \"roll\", \"breath\", \"shortphrase\", \"mediumphrase\", \"longphrase\", \"segno\", \"coda\", \"D.S.\", \"D.C.\", \"fine\", \"slide\", \"^\", \"marcato\", \"upbow\", \"downbow\", \"/\", \"//\", \"///\", \"////\", \"trem1\", \"trem2\", \"trem3\", \"trem4\", \"turnx\", \"invertedturn\", \"invertedturnx\", \"trill(\", \"trill)\", \"arpeggio\", \"xstem\", \"mark\", \"umarcato\", \"style=normal\", \"style=harmonic\", \"style=rhythm\", \"style=x\"];\n  var volumeDecorations = [\"p\", \"pp\", \"f\", \"ff\", \"mf\", \"mp\", \"ppp\", \"pppp\", \"fff\", \"ffff\", \"sfz\"];\n  var dynamicDecorations = [\"crescendo(\", \"crescendo)\", \"diminuendo(\", \"diminuendo)\"];\n  var accentPseudonyms = [[\"<\", \"accent\"], [\">\", \"accent\"], [\"tr\", \"trill\"], [\"plus\", \"+\"], [\"emphasis\", \"accent\"], [\"^\", \"umarcato\"], [\"marcato\", \"umarcato\"]];\n  var accentDynamicPseudonyms = [[\"<(\", \"crescendo(\"], [\"<)\", \"crescendo)\"], [\">(\", \"diminuendo(\"], [\">)\", \"diminuendo)\"]];\n\n  var letter_to_accent = function letter_to_accent(line, i) {\n    var macro = multilineVars.macros[line.charAt(i)];\n\n    if (macro !== undefined) {\n      if (macro.charAt(0) === '!' || macro.charAt(0) === '+') macro = macro.substring(1);\n      if (macro.charAt(macro.length - 1) === '!' || macro.charAt(macro.length - 1) === '+') macro = macro.substring(0, macro.length - 1);\n      if (parseCommon.detect(legalAccents, function (acc) {\n        return macro === acc;\n      })) return [1, macro];else if (parseCommon.detect(volumeDecorations, function (acc) {\n        return macro === acc;\n      })) {\n        if (multilineVars.volumePosition === 'hidden') macro = \"\";\n        return [1, macro];\n      } else if (parseCommon.detect(dynamicDecorations, function (acc) {\n        if (multilineVars.dynamicPosition === 'hidden') macro = \"\";\n        return macro === acc;\n      })) {\n        return [1, macro];\n      } else {\n        if (!parseCommon.detect(multilineVars.ignoredDecorations, function (dec) {\n          return macro === dec;\n        })) warn(\"Unknown macro: \" + macro, line, i);\n        return [1, ''];\n      }\n    }\n\n    switch (line.charAt(i)) {\n      case '.':\n        return [1, 'staccato'];\n\n      case 'u':\n        return [1, 'upbow'];\n\n      case 'v':\n        return [1, 'downbow'];\n\n      case '~':\n        return [1, 'irishroll'];\n\n      case '!':\n      case '+':\n        var ret = tokenizer.getBrackettedSubstring(line, i, 5); // Be sure that the accent is recognizable.\n\n        if (ret[1].length > 0 && (ret[1].charAt(0) === '^' || ret[1].charAt(0) === '_')) ret[1] = ret[1].substring(1); // TODO-PER: The test files have indicators forcing the ornament to the top or bottom, but that isn't in the standard. We'll just ignore them.\n\n        if (parseCommon.detect(legalAccents, function (acc) {\n          return ret[1] === acc;\n        })) return ret;\n\n        if (parseCommon.detect(volumeDecorations, function (acc) {\n          return ret[1] === acc;\n        })) {\n          if (multilineVars.volumePosition === 'hidden') ret[1] = '';\n          return ret;\n        }\n\n        if (parseCommon.detect(dynamicDecorations, function (acc) {\n          return ret[1] === acc;\n        })) {\n          if (multilineVars.dynamicPosition === 'hidden') ret[1] = '';\n          return ret;\n        }\n\n        if (parseCommon.detect(accentPseudonyms, function (acc) {\n          if (ret[1] === acc[0]) {\n            ret[1] = acc[1];\n            return true;\n          } else return false;\n        })) return ret;\n\n        if (parseCommon.detect(accentDynamicPseudonyms, function (acc) {\n          if (ret[1] === acc[0]) {\n            ret[1] = acc[1];\n            return true;\n          } else return false;\n        })) {\n          if (multilineVars.dynamicPosition === 'hidden') ret[1] = '';\n          return ret;\n        } // We didn't find the accent in the list, so consume the space, but don't return an accent.\n        // Although it is possible that ! was used as a line break, so accept that.\n\n\n        if (line.charAt(i) === '!' && (ret[0] === 1 || line.charAt(i + ret[0] - 1) !== '!')) return [1, null];\n        warn(\"Unknown decoration: \" + ret[1], line, i);\n        ret[1] = \"\";\n        return ret;\n\n      case 'H':\n        return [1, 'fermata'];\n\n      case 'J':\n        return [1, 'slide'];\n\n      case 'L':\n        return [1, 'accent'];\n\n      case 'M':\n        return [1, 'mordent'];\n\n      case 'O':\n        return [1, 'coda'];\n\n      case 'P':\n        return [1, 'pralltriller'];\n\n      case 'R':\n        return [1, 'roll'];\n\n      case 'S':\n        return [1, 'segno'];\n\n      case 'T':\n        return [1, 'trill'];\n    }\n\n    return [0, 0];\n  };\n\n  var letter_to_spacer = function letter_to_spacer(line, i) {\n    var start = i;\n\n    while (tokenizer.isWhiteSpace(line.charAt(i))) {\n      i++;\n    }\n\n    return [i - start];\n  }; // returns the class of the bar line\n  // the number of the repeat\n  // and the number of characters used up\n  // if 0 is returned, then the next element was not a bar line\n\n\n  var letter_to_bar = function letter_to_bar(line, curr_pos) {\n    var ret = tokenizer.getBarLine(line, curr_pos);\n    if (ret.len === 0) return [0, \"\"];\n\n    if (ret.warn) {\n      warn(ret.warn, line, curr_pos);\n      return [ret.len, \"\"];\n    } // Now see if this is a repeated ending\n    // A repeated ending is all of the characters 1,2,3,4,5,6,7,8,9,0,-, and comma\n    // It can also optionally start with '[', which is ignored.\n    // Also, it can have white space before the '['.\n\n\n    for (var ws = 0; ws < line.length; ws++) {\n      if (line.charAt(curr_pos + ret.len + ws) !== ' ') break;\n    }\n\n    var orig_bar_len = ret.len;\n\n    if (line.charAt(curr_pos + ret.len + ws) === '[') {\n      ret.len += ws + 1;\n    } // It can also be a quoted string. It is unclear whether that construct requires '[', but it seems like it would. otherwise it would be confused with a regular chord.\n\n\n    if (line.charAt(curr_pos + ret.len) === '\"' && line.charAt(curr_pos + ret.len - 1) === '[') {\n      var ending = tokenizer.getBrackettedSubstring(line, curr_pos + ret.len, 5);\n      return [ret.len + ending[0], ret.token, ending[1]];\n    }\n\n    var retRep = tokenizer.getTokenOf(line.substring(curr_pos + ret.len), \"1234567890-,\");\n    if (retRep.len === 0 || retRep.token[0] === '-') return [orig_bar_len, ret.token];\n    return [ret.len + retRep.len, ret.token, retRep.token];\n  };\n\n  var tripletQ = {\n    2: 3,\n    3: 2,\n    4: 3,\n    5: 2,\n    // TODO-PER: not handling 6/8 rhythm yet\n    6: 2,\n    7: 2,\n    // TODO-PER: not handling 6/8 rhythm yet\n    8: 3,\n    9: 2 // TODO-PER: not handling 6/8 rhythm yet\n\n  };\n\n  var letter_to_open_slurs_and_triplets = function letter_to_open_slurs_and_triplets(line, i) {\n    // consume spaces, and look for all the open parens. If there is a number after the open paren,\n    // that is a triplet. Otherwise that is a slur. Collect all the slurs and the first triplet.\n    var ret = {};\n    var start = i;\n\n    while (line.charAt(i) === '(' || tokenizer.isWhiteSpace(line.charAt(i))) {\n      if (line.charAt(i) === '(') {\n        if (i + 1 < line.length && line.charAt(i + 1) >= '2' && line.charAt(i + 1) <= '9') {\n          if (ret.triplet !== undefined) warn(\"Can't nest triplets\", line, i);else {\n            ret.triplet = line.charAt(i + 1) - '0';\n            ret.tripletQ = tripletQ[ret.triplet];\n            ret.num_notes = ret.triplet;\n\n            if (i + 2 < line.length && line.charAt(i + 2) === ':') {\n              // We are expecting \"(p:q:r\" or \"(p:q\" or \"(p::r\"\n              // That is: \"put p notes into the time of q for the next r notes\"\n              // if r is missing, then it is equal to p.\n              // if q is missing, it is determined from this table:\n              // (2 notes in the time of 3\n              // (3 notes in the time of 2\n              // (4 notes in the time of 3\n              // (5 notes in the time of n | if time sig is (6/8, 9/8, 12/8), n=3, else n=2\n              // (6 notes in the time of 2\n              // (7 notes in the time of n\n              // (8 notes in the time of 3\n              // (9 notes in the time of n\n              if (i + 3 < line.length && line.charAt(i + 3) === ':') {\n                // The second number, 'q', is not present.\n                if (i + 4 < line.length && line.charAt(i + 4) >= '1' && line.charAt(i + 4) <= '9') {\n                  ret.num_notes = line.charAt(i + 4) - '0';\n                  i += 3;\n                } else warn(\"expected number after the two colons after the triplet to mark the duration\", line, i);\n              } else if (i + 3 < line.length && line.charAt(i + 3) >= '1' && line.charAt(i + 3) <= '9') {\n                ret.tripletQ = line.charAt(i + 3) - '0';\n\n                if (i + 4 < line.length && line.charAt(i + 4) === ':') {\n                  if (i + 5 < line.length && line.charAt(i + 5) >= '1' && line.charAt(i + 5) <= '9') {\n                    ret.num_notes = line.charAt(i + 5) - '0';\n                    i += 4;\n                  }\n                } else {\n                  i += 2;\n                }\n              } else warn(\"expected number after the triplet to mark the duration\", line, i);\n            }\n          }\n          i++;\n        } else {\n          if (ret.startSlur === undefined) ret.startSlur = 1;else ret.startSlur++;\n        }\n      }\n\n      i++;\n    }\n\n    ret.consumed = i - start;\n    return ret;\n  };\n\n  var addWords = function addWords(line, words) {\n    if (!line) {\n      warn(\"Can't add words before the first line of music\", line, 0);\n      return;\n    }\n\n    words = parseCommon.strip(words);\n    if (words.charAt(words.length - 1) !== '-') words = words + ' '; // Just makes it easier to parse below, since every word has a divider after it.\n\n    var word_list = []; // first make a list of words from the string we are passed. A word is divided on either a space or dash.\n\n    var last_divider = 0;\n    var replace = false;\n\n    var addWord = function addWord(i) {\n      var word = parseCommon.strip(words.substring(last_divider, i));\n      last_divider = i + 1;\n\n      if (word.length > 0) {\n        if (replace) word = parseCommon.gsub(word, '~', ' ');\n        var div = words.charAt(i);\n        if (div !== '_' && div !== '-') div = ' ';\n        word_list.push({\n          syllable: tokenizer.translateString(word),\n          divider: div\n        });\n        replace = false;\n        return true;\n      }\n\n      return false;\n    };\n\n    for (var i = 0; i < words.length; i++) {\n      switch (words.charAt(i)) {\n        case ' ':\n        case '\\x12':\n          addWord(i);\n          break;\n\n        case '-':\n          if (!addWord(i) && word_list.length > 0) {\n            parseCommon.last(word_list).divider = '-';\n            word_list.push({\n              skip: true,\n              to: 'next'\n            });\n          }\n\n          break;\n\n        case '_':\n          addWord(i);\n          word_list.push({\n            skip: true,\n            to: 'slur'\n          });\n          break;\n\n        case '*':\n          addWord(i);\n          word_list.push({\n            skip: true,\n            to: 'next'\n          });\n          break;\n\n        case '|':\n          addWord(i);\n          word_list.push({\n            skip: true,\n            to: 'bar'\n          });\n          break;\n\n        case '~':\n          replace = true;\n          break;\n      }\n    }\n\n    var inSlur = false;\n    parseCommon.each(line, function (el) {\n      if (word_list.length !== 0) {\n        if (word_list[0].skip) {\n          switch (word_list[0].to) {\n            case 'next':\n              if (el.el_type === 'note' && el.pitches !== null && !inSlur) word_list.shift();\n              break;\n\n            case 'slur':\n              if (el.el_type === 'note' && el.pitches !== null) word_list.shift();\n              break;\n\n            case 'bar':\n              if (el.el_type === 'bar') word_list.shift();\n              break;\n          }\n\n          if (el.el_type !== 'bar') {\n            if (el.lyric === undefined) el.lyric = [{\n              syllable: \"\",\n              divider: \" \"\n            }];else el.lyric.push({\n              syllable: \"\",\n              divider: \" \"\n            });\n          }\n        } else {\n          if (el.el_type === 'note' && el.rest === undefined && !inSlur) {\n            var lyric = word_list.shift();\n            if (lyric.syllable) lyric.syllable = lyric.syllable.replace(/ +/g, '\\xA0');\n            if (el.lyric === undefined) el.lyric = [lyric];else el.lyric.push(lyric);\n          }\n        }\n      }\n    });\n  };\n\n  var addSymbols = function addSymbols(line, words) {\n    // TODO-PER: Currently copied from w: line. This needs to be read as symbols instead.\n    if (!line) {\n      warn(\"Can't add symbols before the first line of music\", line, 0);\n      return;\n    }\n\n    words = parseCommon.strip(words);\n    if (words.charAt(words.length - 1) !== '-') words = words + ' '; // Just makes it easier to parse below, since every word has a divider after it.\n\n    var word_list = []; // first make a list of words from the string we are passed. A word is divided on either a space or dash.\n\n    var last_divider = 0;\n    var replace = false;\n\n    var addWord = function addWord(i) {\n      var word = parseCommon.strip(words.substring(last_divider, i));\n      last_divider = i + 1;\n\n      if (word.length > 0) {\n        if (replace) word = parseCommon.gsub(word, '~', ' ');\n        var div = words.charAt(i);\n        if (div !== '_' && div !== '-') div = ' ';\n        word_list.push({\n          syllable: tokenizer.translateString(word),\n          divider: div\n        });\n        replace = false;\n        return true;\n      }\n\n      return false;\n    };\n\n    for (var i = 0; i < words.length; i++) {\n      switch (words.charAt(i)) {\n        case ' ':\n        case '\\x12':\n          addWord(i);\n          break;\n\n        case '-':\n          if (!addWord(i) && word_list.length > 0) {\n            parseCommon.last(word_list).divider = '-';\n            word_list.push({\n              skip: true,\n              to: 'next'\n            });\n          }\n\n          break;\n\n        case '_':\n          addWord(i);\n          word_list.push({\n            skip: true,\n            to: 'slur'\n          });\n          break;\n\n        case '*':\n          addWord(i);\n          word_list.push({\n            skip: true,\n            to: 'next'\n          });\n          break;\n\n        case '|':\n          addWord(i);\n          word_list.push({\n            skip: true,\n            to: 'bar'\n          });\n          break;\n\n        case '~':\n          replace = true;\n          break;\n      }\n    }\n\n    var inSlur = false;\n    parseCommon.each(line, function (el) {\n      if (word_list.length !== 0) {\n        if (word_list[0].skip) {\n          switch (word_list[0].to) {\n            case 'next':\n              if (el.el_type === 'note' && el.pitches !== null && !inSlur) word_list.shift();\n              break;\n\n            case 'slur':\n              if (el.el_type === 'note' && el.pitches !== null) word_list.shift();\n              break;\n\n            case 'bar':\n              if (el.el_type === 'bar') word_list.shift();\n              break;\n          }\n        } else {\n          if (el.el_type === 'note' && el.rest === undefined && !inSlur) {\n            var lyric = word_list.shift();\n            if (el.lyric === undefined) el.lyric = [lyric];else el.lyric.push(lyric);\n          }\n        }\n      }\n    });\n  };\n\n  var getBrokenRhythm = function getBrokenRhythm(line, index) {\n    switch (line.charAt(index)) {\n      case '>':\n        if (index < line.length - 1 && line.charAt(index + 1) === '>') // double >>\n          return [2, 1.75, 0.25];else return [1, 1.5, 0.5];\n        break;\n\n      case '<':\n        if (index < line.length - 1 && line.charAt(index + 1) === '<') // double <<\n          return [2, 0.25, 1.75];else return [1, 0.5, 1.5];\n        break;\n    }\n\n    return null;\n  }; // TODO-PER: make this a method in el.\n\n\n  var addEndBeam = function addEndBeam(el) {\n    if (el.duration !== undefined && el.duration < 0.25) el.end_beam = true;\n    return el;\n  };\n\n  var pitches = {\n    A: 5,\n    B: 6,\n    C: 0,\n    D: 1,\n    E: 2,\n    F: 3,\n    G: 4,\n    a: 12,\n    b: 13,\n    c: 7,\n    d: 8,\n    e: 9,\n    f: 10,\n    g: 11\n  };\n  var rests = {\n    x: 'invisible',\n    y: 'spacer',\n    z: 'rest',\n    Z: 'multimeasure'\n  };\n\n  var getCoreNote = function getCoreNote(line, index, el, canHaveBrokenRhythm) {\n    //var el = { startChar: index };\n    var isComplete = function isComplete(state) {\n      return state === 'octave' || state === 'duration' || state === 'Zduration' || state === 'broken_rhythm' || state === 'end_slur';\n    };\n\n    var state = 'startSlur';\n    var durationSetByPreviousNote = false;\n\n    while (1) {\n      switch (line.charAt(index)) {\n        case '(':\n          if (state === 'startSlur') {\n            if (el.startSlur === undefined) el.startSlur = 1;else el.startSlur++;\n          } else if (isComplete(state)) {\n            el.endChar = index;\n            return el;\n          } else return null;\n\n          break;\n\n        case ')':\n          if (isComplete(state)) {\n            if (el.endSlur === undefined) el.endSlur = 1;else el.endSlur++;\n          } else return null;\n\n          break;\n\n        case '^':\n          if (state === 'startSlur') {\n            el.accidental = 'sharp';\n            state = 'sharp2';\n          } else if (state === 'sharp2') {\n            el.accidental = 'dblsharp';\n            state = 'pitch';\n          } else if (isComplete(state)) {\n            el.endChar = index;\n            return el;\n          } else return null;\n\n          break;\n\n        case '_':\n          if (state === 'startSlur') {\n            el.accidental = 'flat';\n            state = 'flat2';\n          } else if (state === 'flat2') {\n            el.accidental = 'dblflat';\n            state = 'pitch';\n          } else if (isComplete(state)) {\n            el.endChar = index;\n            return el;\n          } else return null;\n\n          break;\n\n        case '=':\n          if (state === 'startSlur') {\n            el.accidental = 'natural';\n            state = 'pitch';\n          } else if (isComplete(state)) {\n            el.endChar = index;\n            return el;\n          } else return null;\n\n          break;\n\n        case 'A':\n        case 'B':\n        case 'C':\n        case 'D':\n        case 'E':\n        case 'F':\n        case 'G':\n        case 'a':\n        case 'b':\n        case 'c':\n        case 'd':\n        case 'e':\n        case 'f':\n        case 'g':\n          if (state === 'startSlur' || state === 'sharp2' || state === 'flat2' || state === 'pitch') {\n            el.pitch = pitches[line.charAt(index)];\n            transpose.note(multilineVars, el);\n            state = 'octave'; // At this point we have a valid note. The rest is optional. Set the duration in case we don't get one below\n\n            if (canHaveBrokenRhythm && multilineVars.next_note_duration !== 0) {\n              el.duration = multilineVars.default_length * multilineVars.next_note_duration;\n              multilineVars.next_note_duration = 0;\n              durationSetByPreviousNote = true;\n            } else el.duration = multilineVars.default_length; // If the clef is percussion, there is probably some translation of the pitch to a particular drum kit item.\n\n\n            if (multilineVars.clef && multilineVars.clef.type === \"perc\" || multilineVars.currentVoice && multilineVars.currentVoice.clef === \"perc\") {\n              var key = line.charAt(index);\n\n              if (el.accidental) {\n                var accMap = {\n                  'dblflat': '__',\n                  'flat': '_',\n                  'natural': '=',\n                  'sharp': '^',\n                  'dblsharp': '^^'\n                };\n                key = accMap[el.accidental] + key;\n              }\n\n              if (tune.formatting && tune.formatting.midi && tune.formatting.midi.drummap) el.midipitch = tune.formatting.midi.drummap[key];\n            }\n          } else if (isComplete(state)) {\n            el.endChar = index;\n            return el;\n          } else return null;\n\n          break;\n\n        case ',':\n          if (state === 'octave') {\n            el.pitch -= 7;\n          } else if (isComplete(state)) {\n            el.endChar = index;\n            return el;\n          } else return null;\n\n          break;\n\n        case '\\'':\n          if (state === 'octave') {\n            el.pitch += 7;\n          } else if (isComplete(state)) {\n            el.endChar = index;\n            return el;\n          } else return null;\n\n          break;\n\n        case 'x':\n        case 'y':\n        case 'z':\n        case 'Z':\n          if (state === 'startSlur') {\n            el.rest = {\n              type: rests[line.charAt(index)]\n            }; // There shouldn't be some of the properties that notes have. If some sneak in due to bad syntax in the abc file,\n            // just nix them here.\n\n            delete el.accidental;\n            delete el.startSlur;\n            delete el.startTie;\n            delete el.endSlur;\n            delete el.endTie;\n            delete el.end_beam;\n            delete el.grace_notes; // At this point we have a valid note. The rest is optional. Set the duration in case we don't get one below\n\n            if (el.rest.type === 'multimeasure') {\n              el.duration = 1;\n              state = 'Zduration';\n            } else {\n              if (canHaveBrokenRhythm && multilineVars.next_note_duration !== 0) {\n                el.duration = multilineVars.default_length * multilineVars.next_note_duration;\n                multilineVars.next_note_duration = 0;\n                durationSetByPreviousNote = true;\n              } else el.duration = multilineVars.default_length;\n\n              state = 'duration';\n            }\n          } else if (isComplete(state)) {\n            el.endChar = index;\n            return el;\n          } else return null;\n\n          break;\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n        case '0':\n        case '/':\n          if (state === 'octave' || state === 'duration') {\n            var fraction = tokenizer.getFraction(line, index); //if (!durationSetByPreviousNote)\n\n            el.duration = el.duration * fraction.value; // TODO-PER: We can test the returned duration here and give a warning if it isn't the one expected.\n\n            el.endChar = fraction.index;\n\n            while (fraction.index < line.length && (tokenizer.isWhiteSpace(line.charAt(fraction.index)) || line.charAt(fraction.index) === '-')) {\n              if (line.charAt(fraction.index) === '-') el.startTie = {};else el = addEndBeam(el);\n              fraction.index++;\n            }\n\n            index = fraction.index - 1;\n            state = 'broken_rhythm';\n          } else if (state === 'sharp2') {\n            el.accidental = 'quartersharp';\n            state = 'pitch';\n          } else if (state === 'flat2') {\n            el.accidental = 'quarterflat';\n            state = 'pitch';\n          } else if (state === 'Zduration') {\n            var num = tokenizer.getNumber(line, index);\n            el.duration = num.num;\n            el.endChar = num.index;\n            return el;\n          } else return null;\n\n          break;\n\n        case '-':\n          if (state === 'startSlur') {\n            // This is the first character, so it must have been meant for the previous note. Correct that here.\n            tune.addTieToLastNote();\n            el.endTie = true;\n          } else if (state === 'octave' || state === 'duration' || state === 'end_slur') {\n            el.startTie = {};\n            if (!durationSetByPreviousNote && canHaveBrokenRhythm) state = 'broken_rhythm';else {\n              // Peek ahead to the next character. If it is a space, then we have an end beam.\n              if (tokenizer.isWhiteSpace(line.charAt(index + 1))) addEndBeam(el);\n              el.endChar = index + 1;\n              return el;\n            }\n          } else if (state === 'broken_rhythm') {\n            el.endChar = index;\n            return el;\n          } else return null;\n\n          break;\n\n        case ' ':\n        case '\\t':\n          if (isComplete(state)) {\n            el.end_beam = true; // look ahead to see if there is a tie\n\n            do {\n              if (line.charAt(index) === '-') el.startTie = {};\n              index++;\n            } while (index < line.length && (tokenizer.isWhiteSpace(line.charAt(index)) || line.charAt(index) === '-'));\n\n            el.endChar = index;\n\n            if (!durationSetByPreviousNote && canHaveBrokenRhythm && (line.charAt(index) === '<' || line.charAt(index) === '>')) {\n              // TODO-PER: Don't need the test for < and >, but that makes the endChar work out for the regression test.\n              index--;\n              state = 'broken_rhythm';\n            } else return el;\n          } else return null;\n\n          break;\n\n        case '>':\n        case '<':\n          if (isComplete(state)) {\n            if (canHaveBrokenRhythm) {\n              var br2 = getBrokenRhythm(line, index);\n              index += br2[0] - 1; // index gets incremented below, so we'll let that happen\n\n              multilineVars.next_note_duration = br2[2];\n              el.duration = br2[1] * el.duration;\n              state = 'end_slur';\n            } else {\n              el.endChar = index;\n              return el;\n            }\n          } else return null;\n\n          break;\n\n        default:\n          if (isComplete(state)) {\n            el.endChar = index;\n            return el;\n          }\n\n          return null;\n      }\n\n      index++;\n\n      if (index === line.length) {\n        if (isComplete(state)) {\n          el.endChar = index;\n          return el;\n        } else return null;\n      }\n    }\n\n    return null;\n  };\n\n  function startNewLine() {\n    var params = {\n      startChar: -1,\n      endChar: -1\n    };\n    if (multilineVars.partForNextLine.title) params.part = multilineVars.partForNextLine;\n    params.clef = multilineVars.currentVoice && multilineVars.staves[multilineVars.currentVoice.staffNum].clef !== undefined ? parseCommon.clone(multilineVars.staves[multilineVars.currentVoice.staffNum].clef) : parseCommon.clone(multilineVars.clef);\n    var scoreTranspose = multilineVars.currentVoice ? multilineVars.currentVoice.scoreTranspose : 0;\n    params.key = parseKeyVoice.standardKey(multilineVars.key.root + multilineVars.key.acc + multilineVars.key.mode, multilineVars.key.root, multilineVars.key.acc, scoreTranspose);\n    params.key.mode = multilineVars.key.mode;\n    if (multilineVars.key.impliedNaturals) params.key.impliedNaturals = multilineVars.key.impliedNaturals;\n\n    if (multilineVars.key.explicitAccidentals) {\n      for (var i = 0; i < multilineVars.key.explicitAccidentals.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < params.key.accidentals.length; j++) {\n          if (params.key.accidentals[j].note === multilineVars.key.explicitAccidentals[i].note) {\n            // If the note is already in the list, override it with the new value\n            params.key.accidentals[j].acc = multilineVars.key.explicitAccidentals[i].acc;\n            found = true;\n          }\n        }\n\n        if (!found) params.key.accidentals.push(multilineVars.key.explicitAccidentals[i]);\n      }\n    }\n\n    multilineVars.targetKey = params.key;\n    if (params.key.explicitAccidentals) delete params.key.explicitAccidentals;\n    parseKeyVoice.addPosToKey(params.clef, params.key);\n\n    if (multilineVars.meter !== null) {\n      if (multilineVars.currentVoice) {\n        parseCommon.each(multilineVars.staves, function (st) {\n          st.meter = multilineVars.meter;\n        });\n        params.meter = multilineVars.staves[multilineVars.currentVoice.staffNum].meter;\n        multilineVars.staves[multilineVars.currentVoice.staffNum].meter = null;\n      } else params.meter = multilineVars.meter;\n\n      multilineVars.meter = null;\n    } else if (multilineVars.currentVoice && multilineVars.staves[multilineVars.currentVoice.staffNum].meter) {\n      // Make sure that each voice gets the meter marking.\n      params.meter = multilineVars.staves[multilineVars.currentVoice.staffNum].meter;\n      multilineVars.staves[multilineVars.currentVoice.staffNum].meter = null;\n    }\n\n    if (multilineVars.currentVoice && multilineVars.currentVoice.name) params.name = multilineVars.currentVoice.name;\n    if (multilineVars.vocalfont) params.vocalfont = multilineVars.vocalfont;\n    if (multilineVars.tripletfont) params.tripletfont = multilineVars.tripletfont;\n    if (multilineVars.style) params.style = multilineVars.style;\n\n    if (multilineVars.currentVoice) {\n      var staff = multilineVars.staves[multilineVars.currentVoice.staffNum];\n      if (staff.brace) params.brace = staff.brace;\n      if (staff.bracket) params.bracket = staff.bracket;\n      if (staff.connectBarLines) params.connectBarLines = staff.connectBarLines;\n      if (staff.name) params.name = staff.name[multilineVars.currentVoice.index];\n      if (staff.subname) params.subname = staff.subname[multilineVars.currentVoice.index];\n      if (multilineVars.currentVoice.stem) params.stem = multilineVars.currentVoice.stem;\n      if (multilineVars.currentVoice.stafflines) params.stafflines = multilineVars.currentVoice.stafflines;\n      if (multilineVars.currentVoice.staffscale) params.staffscale = multilineVars.currentVoice.staffscale;\n      if (multilineVars.currentVoice.scale) params.scale = multilineVars.currentVoice.scale;\n      if (multilineVars.currentVoice.style) params.style = multilineVars.currentVoice.style;\n      if (multilineVars.currentVoice.transpose) params.clef.transpose = multilineVars.currentVoice.transpose;\n    }\n\n    var isFirstVoice = multilineVars.currentVoice === undefined || multilineVars.currentVoice.staffNum === 0 && multilineVars.currentVoice.index === 0;\n    if (multilineVars.barNumbers === 0 && isFirstVoice && multilineVars.currBarNumber !== 1) params.barNumber = multilineVars.currBarNumber;\n    tune.startNewLine(params);\n    if (multilineVars.key.impliedNaturals) delete multilineVars.key.impliedNaturals;\n    multilineVars.partForNextLine = {};\n  }\n\n  var letter_to_grace = function letter_to_grace(line, i) {\n    // Grace notes are an array of: startslur, note, endslur, space; where note is accidental, pitch, duration\n    if (line.charAt(i) === '{') {\n      // fetch the gracenotes string and consume that into the array\n      var gra = tokenizer.getBrackettedSubstring(line, i, 1, '}');\n      if (!gra[2]) warn(\"Missing the closing '}' while parsing grace note\", line, i); // If there is a slur after the grace construction, then move it to the last note inside the grace construction\n\n      if (line[i + gra[0]] === ')') {\n        gra[0]++;\n        gra[1] += ')';\n      }\n\n      var gracenotes = [];\n      var ii = 0;\n      var inTie = false;\n\n      while (ii < gra[1].length) {\n        var acciaccatura = false;\n\n        if (gra[1].charAt(ii) === '/') {\n          acciaccatura = true;\n          ii++;\n        }\n\n        var note = getCoreNote(gra[1], ii, {}, false);\n\n        if (note !== null) {\n          // The grace note durations should not be affected by the default length: they should be based on 1/16, so if that isn't the default, then multiply here.\n          note.duration = note.duration / (multilineVars.default_length * 8);\n          if (acciaccatura) note.acciaccatura = true;\n          gracenotes.push(note);\n\n          if (inTie) {\n            note.endTie = true;\n            inTie = false;\n          }\n\n          if (note.startTie) inTie = true;\n          ii = note.endChar;\n          delete note.endChar;\n        } else {\n          // We shouldn't get anything but notes or a space here, so report an error\n          if (gra[1].charAt(ii) === ' ') {\n            if (gracenotes.length > 0) gracenotes[gracenotes.length - 1].end_beam = true;\n          } else warn(\"Unknown character '\" + gra[1].charAt(ii) + \"' while parsing grace note\", line, i);\n\n          ii++;\n        }\n      }\n\n      if (gracenotes.length) return [gra[0], gracenotes];\n    }\n\n    return [0];\n  };\n\n  function letter_to_overlay(line, i) {\n    if (line.charAt(i) === '&') {\n      var start = i;\n\n      while (line.charAt(i) && line.charAt(i) !== ':' && line.charAt(i) !== '|') {\n        i++;\n      }\n\n      return [i - start, line.substring(start + 1, i)];\n    }\n\n    return [0];\n  }\n\n  function durationOfMeasure(multilineVars) {\n    // TODO-PER: This could be more complicated if one of the unusual measures is used.\n    var meter = multilineVars.origMeter;\n    if (!meter || meter.type !== 'specified') return 1;\n    if (!meter.value || meter.value.length === 0) return 1;\n    return parseInt(meter.value[0].num, 10) / parseInt(meter.value[0].den, 10);\n  } //\n  // Parse line of music\n  //\n  // This is a stream of <(bar-marking|header|note-group)...> in any order, with optional spaces between each element\n  // core-note is <open-slur, accidental, pitch:required, octave, duration, close-slur&|tie> with no spaces within that\n  // chord is <open-bracket:required, core-note:required... close-bracket:required duration> with no spaces within that\n  // grace-notes is <open-brace:required, (open-slur|core-note:required|close-slur)..., close-brace:required> spaces are allowed\n  // note-group is <grace-notes, chord symbols&|decorations..., grace-notes, slur&|triplet, chord|core-note, end-slur|tie> spaces are allowed between items\n  // bar-marking is <ampersand> or <chord symbols&|decorations..., bar:required> spaces allowed\n  // header is <open-bracket:required, K|M|L|V:required, colon:required, field:required, close-bracket:required> spaces can occur between the colon, in the field, and before the close bracket\n  // header can also be the only thing on a line. This is true even if it is a continuation line. In this case the brackets are not required.\n  // a space is a back-tick, a space, or a tab. If it is a back-tick, then there is no end-beam.\n  // Line preprocessing: anything after a % is ignored (the double %% should have been taken care of before this)\n  // Then, all leading and trailing spaces are ignored.\n  // If there was a line continuation, the \\n was replaced by a \\r and the \\ was replaced by a space. This allows the construct\n  // of having a header mid-line conceptually, but actually be at the start of the line. This is equivolent to putting the header in [ ].\n  // TODO-PER: How to handle ! for line break?\n  // TODO-PER: dots before bar, dots before slur\n  // TODO-PER: U: redefinable symbols.\n  // Ambiguous symbols:\n  // \"[\" can be the start of a chord, the start of a header element or part of a bar line.\n  // --- if it is immediately followed by \"|\", it is a bar line\n  // --- if it is immediately followed by K: L: M: V: it is a header (note: there are other headers mentioned in the standard, but I'm not sure how they would be used.)\n  // --- otherwise it is the beginning of a chord\n  // \"(\" can be the start of a slur or a triplet\n  // --- if it is followed by a number from 2-9, then it is a triplet\n  // --- otherwise it is a slur\n  // \"]\"\n  // --- if there is a chord open, then this is the close\n  // --- if it is after a [|, then it is an invisible bar line\n  // --- otherwise, it is par of a bar\n  // \".\" can be a bar modifier or a slur modifier, or a decoration\n  // --- if it comes immediately before a bar, it is a bar modifier\n  // --- if it comes immediately before a slur, it is a slur modifier\n  // --- otherwise it is a decoration for the next note.\n  // number:\n  // --- if it is after a bar, with no space, it is an ending marker\n  // --- if it is after a ( with no space, it is a triplet count\n  // --- if it is after a pitch or octave or slash, then it is a duration\n  // Unambiguous symbols (except inside quoted strings):\n  // vertical-bar, colon: part of a bar\n  // ABCDEFGabcdefg: pitch\n  // xyzZ: rest\n  // comma, prime: octave\n  // close-paren: end-slur\n  // hyphen: tie\n  // tilde, v, u, bang, plus, THLMPSO: decoration\n  // carat, underscore, equal: accidental\n  // ampersand: time reset\n  // open-curly, close-curly: grace notes\n  // double-quote: chord symbol\n  // less-than, greater-than, slash: duration\n  // back-tick, space, tab: space\n\n\n  var nonDecorations = \"ABCDEFGabcdefgxyzZ[]|^_{\"; // use this to prescreen so we don't have to look for a decoration at every note.\n\n  var parseRegularMusicLine = function parseRegularMusicLine(line) {\n    header.resolveTempo(); //multilineVars.havent_set_length = false;\t// To late to set this now.\n\n    multilineVars.is_in_header = false; // We should have gotten a key header by now, but just in case, this is definitely out of the header.\n\n    var i = 0;\n    var startOfLine = multilineVars.iChar; // see if there is nothing but a comment on this line. If so, just ignore it. A full line comment is optional white space followed by %\n\n    while (tokenizer.isWhiteSpace(line.charAt(i)) && i < line.length) {\n      i++;\n    }\n\n    if (i === line.length || line.charAt(i) === '%') return; // Start with the standard staff, clef and key symbols on each line\n\n    var delayStartNewLine = multilineVars.start_new_line;\n    if (multilineVars.continueall === undefined) multilineVars.start_new_line = true;else multilineVars.start_new_line = false;\n    var tripletNotesLeft = 0; // See if the line starts with a header field\n\n    var retHeader = header.letter_to_body_header(line, i);\n\n    if (retHeader[0] > 0) {\n      i += retHeader[0];\n      if (retHeader[1] === 'V') delayStartNewLine = true; // fixes bug on this: c[V:2]d\n      // TODO-PER: Handle inline headers\n    }\n\n    var el = {};\n    var overlayLevel = 0;\n\n    while (i < line.length) {\n      var startI = i;\n      if (line.charAt(i) === '%') break;\n      var retInlineHeader = header.letter_to_inline_header(line, i);\n\n      if (retInlineHeader[0] > 0) {\n        i += retInlineHeader[0];\n        if (retInlineHeader[1] === 'V') delayStartNewLine = true; // fixes bug on this: c[V:2]d\n        // TODO-PER: Handle inline headers\n        //multilineVars.start_new_line = false;\n      } else {\n        // Wait until here to actually start the line because we know we're past the inline statements.\n        if (delayStartNewLine) {\n          startNewLine();\n          delayStartNewLine = false;\n        } // We need to decide if the following characters are a bar-marking or a note-group.\n        // Unfortunately, that is ambiguous. Both can contain chord symbols and decorations.\n        // If there is a grace note either before or after the chord symbols and decorations, then it is definitely a note-group.\n        // If there is a bar marker, it is definitely a bar-marking.\n        // If there is either a core-note or chord, it is definitely a note-group.\n        // So, loop while we find grace-notes, chords-symbols, or decorations. [It is an error to have more than one grace-note group in a row; the others can be multiple]\n        // Then, if there is a grace-note, we know where to go.\n        // Else see if we have a chord, core-note, slur, triplet, or bar.\n\n\n        var ret;\n\n        while (1) {\n          ret = tokenizer.eatWhiteSpace(line, i);\n\n          if (ret > 0) {\n            i += ret;\n          }\n\n          if (i > 0 && line.charAt(i - 1) === '\\x12') {\n            // there is one case where a line continuation isn't the same as being on the same line, and that is if the next character after it is a header.\n            ret = header.letter_to_body_header(line, i);\n\n            if (ret[0] > 0) {\n              if (ret[1] === 'V') startNewLine(); // fixes bug on this: c\\\\nV:2]\\\\nd\n              // TODO: insert header here\n\n              i = ret[0];\n              multilineVars.start_new_line = false;\n            }\n          } // gather all the grace notes, chord symbols and decorations\n\n\n          ret = letter_to_spacer(line, i);\n\n          if (ret[0] > 0) {\n            i += ret[0];\n          }\n\n          ret = letter_to_chord(line, i);\n\n          if (ret[0] > 0) {\n            // There could be more than one chord here if they have different positions.\n            // If two chords have the same position, then connect them with newline.\n            if (!el.chord) el.chord = [];\n            var chordName = tokenizer.translateString(ret[1]);\n            chordName = chordName.replace(/;/g, \"\\n\");\n            var addedChord = false;\n\n            for (var ci = 0; ci < el.chord.length; ci++) {\n              if (el.chord[ci].position === ret[2]) {\n                addedChord = true;\n                el.chord[ci].name += \"\\n\" + chordName;\n              }\n            }\n\n            if (addedChord === false) {\n              if (ret[2] === null && ret[3]) el.chord.push({\n                name: chordName,\n                rel_position: ret[3]\n              });else el.chord.push({\n                name: chordName,\n                position: ret[2]\n              });\n            }\n\n            i += ret[0];\n            var ii = tokenizer.skipWhiteSpace(line.substring(i));\n            if (ii > 0) el.force_end_beam_last = true;\n            i += ii;\n          } else {\n            if (nonDecorations.indexOf(line.charAt(i)) === -1) ret = letter_to_accent(line, i);else ret = [0];\n\n            if (ret[0] > 0) {\n              if (ret[1] === null) {\n                if (i + 1 < line.length) startNewLine(); // There was a ! in the middle of the line. Start a new line if there is anything after it.\n              } else if (ret[1].length > 0) {\n                if (ret[1].indexOf(\"style=\") === 0) {\n                  el.style = ret[1].substr(6);\n                } else {\n                  if (el.decoration === undefined) el.decoration = [];\n                  el.decoration.push(ret[1]);\n                }\n              }\n\n              i += ret[0];\n            } else {\n              ret = letter_to_grace(line, i); // TODO-PER: Be sure there aren't already grace notes defined. That is an error.\n\n              if (ret[0] > 0) {\n                el.gracenotes = ret[1];\n                i += ret[0];\n              } else break;\n            }\n          }\n        }\n\n        ret = letter_to_bar(line, i);\n\n        if (ret[0] > 0) {\n          // This is definitely a bar\n          overlayLevel = 0;\n\n          if (el.gracenotes !== undefined) {\n            // Attach the grace note to an invisible note\n            el.rest = {\n              type: 'spacer'\n            };\n            el.duration = 0.125; // TODO-PER: I don't think the duration of this matters much, but figure out if it does.\n\n            multilineVars.addFormattingOptions(el, tune.formatting, 'note');\n            tune.appendElement('note', startOfLine + i, startOfLine + i + ret[0], el);\n            multilineVars.measureNotEmpty = true;\n            el = {};\n          }\n\n          var bar = {\n            type: ret[1]\n          };\n          if (bar.type.length === 0) warn(\"Unknown bar type\", line, i);else {\n            if (multilineVars.inEnding && bar.type !== 'bar_thin') {\n              bar.endEnding = true;\n              multilineVars.inEnding = false;\n            }\n\n            if (ret[2]) {\n              bar.startEnding = ret[2];\n              if (multilineVars.inEnding) bar.endEnding = true;\n              multilineVars.inEnding = true;\n            }\n\n            if (el.decoration !== undefined) bar.decoration = el.decoration;\n            if (el.chord !== undefined) bar.chord = el.chord;\n            if (bar.startEnding && multilineVars.barFirstEndingNum === undefined) multilineVars.barFirstEndingNum = multilineVars.currBarNumber;else if (bar.startEnding && bar.endEnding && multilineVars.barFirstEndingNum) multilineVars.currBarNumber = multilineVars.barFirstEndingNum;else if (bar.endEnding) multilineVars.barFirstEndingNum = undefined;\n\n            if (bar.type !== 'bar_invisible' && multilineVars.measureNotEmpty) {\n              var isFirstVoice = multilineVars.currentVoice === undefined || multilineVars.currentVoice.staffNum === 0 && multilineVars.currentVoice.index === 0;\n\n              if (isFirstVoice) {\n                multilineVars.currBarNumber++;\n                if (multilineVars.barNumbers && multilineVars.currBarNumber % multilineVars.barNumbers === 0) bar.barNumber = multilineVars.currBarNumber;\n              }\n            }\n\n            multilineVars.addFormattingOptions(el, tune.formatting, 'bar');\n            tune.appendElement('bar', startOfLine + i, startOfLine + i + ret[0], bar);\n            multilineVars.measureNotEmpty = false;\n            el = {};\n          }\n          i += ret[0];\n          var cv = multilineVars.currentVoice ? multilineVars.currentVoice.staffNum + '-' + multilineVars.currentVoice.index : 'ONLY'; // if (multilineVars.lineBreaks) {\n          // \tif (!multilineVars.barCounter[cv])\n          // \t\tmultilineVars.barCounter[cv] = 0;\n          // \tvar breakNow = multilineVars.lineBreaks[''+multilineVars.barCounter[cv]];\n          // \tmultilineVars.barCounter[cv]++;\n          // \tif (breakNow)\n          // \t\tstartNewLine();\n          // }\n        } else if (line[i] === '&') {\n          // backtrack to beginning of measure\n          ret = letter_to_overlay(line, i);\n\n          if (ret[0] > 0) {\n            tune.appendElement('overlay', startOfLine, startOfLine + 1, {});\n            i += 1;\n            overlayLevel++;\n          }\n        } else {\n          // This is definitely a note group\n          //\n          // Look for as many open slurs and triplets as there are. (Note: only the first triplet is valid.)\n          ret = letter_to_open_slurs_and_triplets(line, i);\n\n          if (ret.consumed > 0) {\n            if (ret.startSlur !== undefined) el.startSlur = ret.startSlur;\n\n            if (ret.triplet !== undefined) {\n              if (tripletNotesLeft > 0) warn(\"Can't nest triplets\", line, i);else {\n                el.startTriplet = ret.triplet;\n                el.tripletMultiplier = ret.tripletQ / ret.triplet;\n                tripletNotesLeft = ret.num_notes === undefined ? ret.triplet : ret.num_notes;\n              }\n            }\n\n            i += ret.consumed;\n          } // handle chords.\n\n\n          if (line.charAt(i) === '[') {\n            var chordStartChar = i;\n            i++;\n            var chordDuration = null;\n            var rememberEndBeam = false;\n            var done = false;\n\n            while (!done) {\n              var accent = letter_to_accent(line, i);\n\n              if (accent[0] > 0) {\n                i += accent[0];\n              }\n\n              var chordNote = getCoreNote(line, i, {}, false);\n\n              if (chordNote !== null) {\n                if (accent[0] > 0) {\n                  // If we found a decoration above, it modifies the entire chord. \"style\" is handled below.\n                  if (accent[1].indexOf(\"style=\") !== 0) {\n                    if (el.decoration === undefined) el.decoration = [];\n                    el.decoration.push(accent[1]);\n                  }\n                }\n\n                if (chordNote.end_beam) {\n                  el.end_beam = true;\n                  delete chordNote.end_beam;\n                }\n\n                if (el.pitches === undefined) {\n                  el.duration = chordNote.duration;\n                  el.pitches = [chordNote];\n                } else // Just ignore the note lengths of all but the first note. The standard isn't clear here, but this seems less confusing.\n                  el.pitches.push(chordNote);\n\n                delete chordNote.duration;\n\n                if (accent[0] > 0) {\n                  // If we found a style above, it modifies the individual pitch, not the entire chord.\n                  if (accent[1].indexOf(\"style=\") === 0) {\n                    el.pitches[el.pitches.length - 1].style = accent[1].substr(6);\n                  }\n                }\n\n                if (multilineVars.inTieChord[el.pitches.length]) {\n                  chordNote.endTie = true;\n                  multilineVars.inTieChord[el.pitches.length] = undefined;\n                }\n\n                if (chordNote.startTie) multilineVars.inTieChord[el.pitches.length] = true;\n                i = chordNote.endChar;\n                delete chordNote.endChar;\n              } else if (line.charAt(i) === ' ') {\n                // Spaces are not allowed in chords, but we can recover from it by ignoring it.\n                warn(\"Spaces are not allowed in chords\", line, i);\n                i++;\n              } else {\n                if (i < line.length && line.charAt(i) === ']') {\n                  // consume the close bracket\n                  i++;\n\n                  if (multilineVars.next_note_duration !== 0) {\n                    el.duration = el.duration * multilineVars.next_note_duration;\n                    multilineVars.next_note_duration = 0;\n                  }\n\n                  if (multilineVars.inTie[overlayLevel]) {\n                    parseCommon.each(el.pitches, function (pitch) {\n                      pitch.endTie = true;\n                    });\n                    multilineVars.inTie[overlayLevel] = false;\n                  }\n\n                  if (tripletNotesLeft > 0) {\n                    tripletNotesLeft--;\n\n                    if (tripletNotesLeft === 0) {\n                      el.endTriplet = true;\n                    }\n                  }\n\n                  var postChordDone = false;\n\n                  while (i < line.length && !postChordDone) {\n                    switch (line.charAt(i)) {\n                      case ' ':\n                      case '\\t':\n                        addEndBeam(el);\n                        break;\n\n                      case ')':\n                        if (el.endSlur === undefined) el.endSlur = 1;else el.endSlur++;\n                        break;\n\n                      case '-':\n                        parseCommon.each(el.pitches, function (pitch) {\n                          pitch.startTie = {};\n                        });\n                        multilineVars.inTie[overlayLevel] = true;\n                        break;\n\n                      case '>':\n                      case '<':\n                        var br2 = getBrokenRhythm(line, i);\n                        i += br2[0] - 1; // index gets incremented below, so we'll let that happen\n\n                        multilineVars.next_note_duration = br2[2];\n                        if (chordDuration) chordDuration = chordDuration * br2[1];else chordDuration = br2[1];\n                        break;\n\n                      case '1':\n                      case '2':\n                      case '3':\n                      case '4':\n                      case '5':\n                      case '6':\n                      case '7':\n                      case '8':\n                      case '9':\n                      case '/':\n                        var fraction = tokenizer.getFraction(line, i);\n                        chordDuration = fraction.value;\n                        i = fraction.index;\n                        if (line.charAt(i) === ' ') rememberEndBeam = true;\n                        if (line.charAt(i) === '-' || line.charAt(i) === ')' || line.charAt(i) === ' ' || line.charAt(i) === '<' || line.charAt(i) === '>') i--; // Subtracting one because one is automatically added below\n                        else postChordDone = true;\n                        break;\n\n                      default:\n                        postChordDone = true;\n                        break;\n                    }\n\n                    if (!postChordDone) {\n                      i++;\n                    }\n                  }\n                } else warn(\"Expected ']' to end the chords\", line, i);\n\n                if (el.pitches !== undefined) {\n                  if (chordDuration !== null) {\n                    el.duration = el.duration * chordDuration;\n                    if (rememberEndBeam) addEndBeam(el);\n                  }\n\n                  multilineVars.addFormattingOptions(el, tune.formatting, 'note');\n                  tune.appendElement('note', startOfLine + chordStartChar, startOfLine + i, el);\n                  multilineVars.measureNotEmpty = true;\n                  el = {};\n                }\n\n                done = true;\n              }\n            }\n          } else {\n            // Single pitch\n            var el2 = {};\n            var core = getCoreNote(line, i, el2, true);\n            if (el2.endTie !== undefined) multilineVars.inTie[overlayLevel] = true;\n\n            if (core !== null) {\n              if (core.pitch !== undefined) {\n                el.pitches = [{}]; // TODO-PER: straighten this out so there is not so much copying: getCoreNote shouldn't change e'\n\n                if (core.accidental !== undefined) el.pitches[0].accidental = core.accidental;\n                el.pitches[0].pitch = core.pitch;\n                if (core.midipitch) el.pitches[0].midipitch = core.midipitch;\n                if (core.endSlur !== undefined) el.pitches[0].endSlur = core.endSlur;\n                if (core.endTie !== undefined) el.pitches[0].endTie = core.endTie;\n                if (core.startSlur !== undefined) el.pitches[0].startSlur = core.startSlur;\n                if (el.startSlur !== undefined) el.pitches[0].startSlur = el.startSlur;\n                if (core.startTie !== undefined) el.pitches[0].startTie = core.startTie;\n                if (el.startTie !== undefined) el.pitches[0].startTie = el.startTie;\n              } else {\n                el.rest = core.rest;\n                if (core.endSlur !== undefined) el.endSlur = core.endSlur;\n                if (core.endTie !== undefined) el.rest.endTie = core.endTie;\n                if (core.startSlur !== undefined) el.startSlur = core.startSlur;\n                if (core.startTie !== undefined) el.rest.startTie = core.startTie;\n                if (el.startTie !== undefined) el.rest.startTie = el.startTie;\n              }\n\n              if (core.chord !== undefined) el.chord = core.chord;\n              if (core.duration !== undefined) el.duration = core.duration;\n              if (core.decoration !== undefined) el.decoration = core.decoration;\n              if (core.graceNotes !== undefined) el.graceNotes = core.graceNotes;\n              delete el.startSlur;\n\n              if (multilineVars.inTie[overlayLevel]) {\n                if (el.pitches !== undefined) {\n                  el.pitches[0].endTie = true;\n                  multilineVars.inTie[overlayLevel] = false;\n                } else if (el.rest.type !== 'spacer') {\n                  el.rest.endTie = true;\n                  multilineVars.inTie[overlayLevel] = false;\n                }\n              }\n\n              if (core.startTie || el.startTie) multilineVars.inTie[overlayLevel] = true;\n              i = core.endChar;\n\n              if (tripletNotesLeft > 0) {\n                tripletNotesLeft--;\n\n                if (tripletNotesLeft === 0) {\n                  el.endTriplet = true;\n                }\n              }\n\n              if (core.end_beam) addEndBeam(el); // If there is a whole rest, then it should be the duration of the measure, not it's own duration. We need to special case it.\n              // If the time signature length is greater than 4/4, though, then a whole rest has no special treatment.\n\n              if (el.rest && el.rest.type === 'rest' && el.duration === 1 && durationOfMeasure(multilineVars) <= 1) {\n                el.rest.type = 'whole';\n                el.duration = durationOfMeasure(multilineVars);\n              }\n\n              multilineVars.addFormattingOptions(el, tune.formatting, 'note');\n              tune.appendElement('note', startOfLine + startI, startOfLine + i, el);\n              multilineVars.measureNotEmpty = true;\n              el = {};\n            }\n          }\n\n          if (i === startI) {\n            // don't know what this is, so ignore it.\n            if (line.charAt(i) !== ' ' && line.charAt(i) !== '`') warn(\"Unknown character ignored\", line, i);\n            i++;\n          }\n        }\n      }\n    }\n  };\n\n  var parseLine = function parseLine(line) {\n    var ret = header.parseHeader(line);\n    if (ret.regular) parseRegularMusicLine(ret.str);\n    if (ret.newline) startNewLine();\n    if (ret.words) addWords(tune.getCurrentVoice(), line.substring(2));\n    if (ret.symbols) addSymbols(tune.getCurrentVoice(), line.substring(2));\n    if (ret.recurse) parseLine(ret.str);\n  };\n\n  function appendLastMeasure(voice, nextVoice) {\n    voice.push({\n      el_type: 'hint'\n    });\n\n    for (var i = 0; i < nextVoice.length; i++) {\n      var element = nextVoice[i];\n      var hint = parseCommon.clone(element);\n      voice.push(hint);\n      if (element.el_type === 'bar') return;\n    }\n  }\n\n  function addHintMeasure(staff, nextStaff) {\n    for (var i = 0; i < staff.length; i++) {\n      var stave = staff[i];\n      var nextStave = nextStaff[i];\n\n      if (nextStave) {\n        // Be sure there is the same number of staves on the next line.\n        for (var j = 0; j < nextStave.voices.length; j++) {\n          var nextVoice = nextStave.voices[j];\n          var voice = stave.voices[j];\n\n          if (voice) {\n            // Be sure there are the same number of voices on the previous line.\n            appendLastMeasure(voice, nextVoice);\n          }\n        }\n      }\n    }\n  }\n\n  function addHintMeasures() {\n    for (var i = 0; i < tune.lines.length; i++) {\n      var line = tune.lines[i].staff;\n\n      if (line) {\n        var j = i + 1;\n\n        while (j < tune.lines.length && tune.lines[j].staff === undefined) {\n          j++;\n        }\n\n        if (j < tune.lines.length) {\n          var nextLine = tune.lines[j].staff;\n          addHintMeasure(line, nextLine);\n        }\n      }\n    }\n  }\n\n  this.parse = function (strTune, switches) {\n    // the switches are optional and cause a difference in the way the tune is parsed.\n    // switches.header_only : stop parsing when the header is finished\n    // switches.stop_on_warning : stop at the first warning encountered.\n    // switches.print: format for the page instead of the browser.\n    // switches.format: a hash of the desired formatting commands.\n    // switches.hint_measures: put the next measure at the end of the current line.\n    // switches.transpose: change the key signature, chords, and notes by a number of half-steps.\n    if (!switches) switches = {};\n    tune.reset();\n    if (switches.print) tune.media = 'print';\n    multilineVars.reset();\n\n    if (switches.visualTranspose) {\n      multilineVars.globalTranspose = parseInt(switches.visualTranspose);\n      if (multilineVars.globalTranspose === 0) multilineVars.globalTranspose = undefined;\n    } else multilineVars.globalTranspose = undefined;\n\n    if (switches.lineBreaks) {\n      // change the format of the the line breaks for easy testing.\n      // The line break numbers are 0-based and they reflect the last measure of the current line.\n      multilineVars.lineBreaks = {}; //multilineVars.continueall = true;\n\n      for (var i = 0; i < switches.lineBreaks.length; i++) {\n        multilineVars.lineBreaks['' + (switches.lineBreaks[i] + 1)] = true;\n      } // Add 1 so that the line break is the first measure of the next line.\n\n    }\n\n    header.reset(tokenizer, warn, multilineVars, tune); // Take care of whatever line endings come our way\n\n    strTune = parseCommon.gsub(strTune, '\\r\\n', '\\n');\n    strTune = parseCommon.gsub(strTune, '\\r', '\\n');\n    strTune += '\\n'; // Tacked on temporarily to make the last line continuation work\n\n    strTune = strTune.replace(/\\n\\\\.*\\n/g, \"\\n\"); // get rid of latex commands.\n\n    var continuationReplacement = function continuationReplacement(all, backslash, comment) {\n      var spaces = \"                                                                                                                                                                                                     \";\n      var padding = comment ? spaces.substring(0, comment.length) : \"\";\n      return backslash + \" \\x12\" + padding;\n    };\n\n    strTune = strTune.replace(/\\\\([ \\t]*)(%.*)*\\n/g, continuationReplacement); // take care of line continuations right away, but keep the same number of characters\n\n    var lines = strTune.split('\\n');\n    if (parseCommon.last(lines).length === 0) // remove the blank line we added above.\n      lines.pop();\n\n    try {\n      if (switches.format) {\n        parseDirective.globalFormatting(switches.format);\n      }\n\n      parseCommon.each(lines, function (line) {\n        if (switches.header_only && multilineVars.is_in_header === false) throw \"normal_abort\";\n        if (switches.stop_on_warning && multilineVars.warnings) throw \"normal_abort\";\n\n        if (multilineVars.is_in_history) {\n          if (line.charAt(1) === ':') {\n            multilineVars.is_in_history = false;\n            parseLine(line);\n          } else tune.addMetaText(\"history\", tokenizer.translateString(tokenizer.stripComment(line)));\n        } else if (multilineVars.inTextBlock) {\n          if (parseCommon.startsWith(line, \"%%endtext\")) {\n            //tune.addMetaText(\"textBlock\", multilineVars.textBlock);\n            tune.addText(multilineVars.textBlock);\n            multilineVars.inTextBlock = false;\n          } else {\n            if (parseCommon.startsWith(line, \"%%\")) multilineVars.textBlock += ' ' + line.substring(2);else multilineVars.textBlock += ' ' + line;\n          }\n        } else if (multilineVars.inPsBlock) {\n          if (parseCommon.startsWith(line, \"%%endps\")) {\n            // Just ignore postscript\n            multilineVars.inPsBlock = false;\n          } else multilineVars.textBlock += ' ' + line;\n        } else parseLine(line);\n\n        multilineVars.iChar += line.length + 1;\n      });\n      var ph = 11 * 72;\n      var pl = 8.5 * 72;\n\n      switch (multilineVars.papersize) {\n        //case \"letter\": ph = 11*72; pl = 8.5*72; break;\n        case \"legal\":\n          ph = 14 * 72;\n          pl = 8.5 * 72;\n          break;\n\n        case \"A4\":\n          ph = 11.7 * 72;\n          pl = 8.3 * 72;\n          break;\n      }\n\n      if (multilineVars.landscape) {\n        var x = ph;\n        ph = pl;\n        pl = x;\n      }\n\n      multilineVars.openSlurs = tune.cleanUp(pl, ph, multilineVars.barsperstaff, multilineVars.staffnonote, multilineVars.openSlurs);\n    } catch (err) {\n      if (err !== \"normal_abort\") throw err;\n    }\n\n    if (switches.hint_measures) {\n      addHintMeasures();\n    }\n\n    wrap.wrapLines(tune, multilineVars.lineBreaks);\n  };\n};\n\nmodule.exports = Parse;","/*global window */\nvar parseCommon = require('./abc_common');\n\nvar parseDirective = {};\n\n(function () {\n  \"use strict\";\n\n  var tokenizer;\n  var warn;\n  var multilineVars;\n  var tune;\n\n  parseDirective.initialize = function (tokenizer_, warn_, multilineVars_, tune_) {\n    tokenizer = tokenizer_;\n    warn = warn_;\n    multilineVars = multilineVars_;\n    tune = tune_;\n    initializeFonts();\n  };\n\n  function initializeFonts() {\n    multilineVars.annotationfont = {\n      face: \"Helvetica\",\n      size: 12,\n      weight: \"normal\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    multilineVars.gchordfont = {\n      face: \"Helvetica\",\n      size: 12,\n      weight: \"normal\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    multilineVars.historyfont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 16,\n      weight: \"normal\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    multilineVars.infofont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 14,\n      weight: \"normal\",\n      style: \"italic\",\n      decoration: \"none\"\n    };\n    multilineVars.measurefont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 14,\n      weight: \"normal\",\n      style: \"italic\",\n      decoration: \"none\"\n    };\n    multilineVars.partsfont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 15,\n      weight: \"normal\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    multilineVars.repeatfont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 13,\n      weight: \"normal\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    multilineVars.textfont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 16,\n      weight: \"normal\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    multilineVars.tripletfont = {\n      face: \"Times\",\n      size: 11,\n      weight: \"normal\",\n      style: \"italic\",\n      decoration: \"none\"\n    };\n    multilineVars.vocalfont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 13,\n      weight: \"bold\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    multilineVars.wordsfont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 16,\n      weight: \"normal\",\n      style: \"normal\",\n      decoration: \"none\"\n    }; // These fonts are global for the entire tune.\n\n    tune.formatting.composerfont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 14,\n      weight: \"normal\",\n      style: \"italic\",\n      decoration: \"none\"\n    };\n    tune.formatting.subtitlefont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 16,\n      weight: \"normal\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    tune.formatting.tempofont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 15,\n      weight: \"bold\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    tune.formatting.titlefont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 20,\n      weight: \"normal\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    tune.formatting.footerfont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 12,\n      weight: \"normal\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    tune.formatting.headerfont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 12,\n      weight: \"normal\",\n      style: \"normal\",\n      decoration: \"none\"\n    };\n    tune.formatting.voicefont = {\n      face: \"\\\"Times New Roman\\\"\",\n      size: 13,\n      weight: \"bold\",\n      style: \"normal\",\n      decoration: \"none\"\n    }; // these are the default fonts for these element types. In the printer, these fonts might change as the tune progresses.\n\n    tune.formatting.annotationfont = multilineVars.annotationfont;\n    tune.formatting.gchordfont = multilineVars.gchordfont;\n    tune.formatting.historyfont = multilineVars.historyfont;\n    tune.formatting.infofont = multilineVars.infofont;\n    tune.formatting.measurefont = multilineVars.measurefont;\n    tune.formatting.partsfont = multilineVars.partsfont;\n    tune.formatting.repeatfont = multilineVars.repeatfont;\n    tune.formatting.textfont = multilineVars.textfont;\n    tune.formatting.tripletfont = multilineVars.tripletfont;\n    tune.formatting.vocalfont = multilineVars.vocalfont;\n    tune.formatting.wordsfont = multilineVars.wordsfont;\n  }\n\n  var fontTypeCanHaveBox = {\n    gchordfont: true,\n    measurefont: true,\n    partsfont: true\n  };\n\n  var fontTranslation = function fontTranslation(fontFace) {\n    // This translates Postscript fonts for a web alternative.\n    // Note that the postscript fonts contain italic and bold info in them, so what is returned is a hash.\n    switch (fontFace) {\n      case \"Arial-Italic\":\n        return {\n          face: \"Arial\",\n          weight: \"normal\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Arial-Bold\":\n        return {\n          face: \"Arial\",\n          weight: \"bold\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Bookman-Demi\":\n        return {\n          face: \"Bookman,serif\",\n          weight: \"bold\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Bookman-DemiItalic\":\n        return {\n          face: \"Bookman,serif\",\n          weight: \"bold\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Bookman-Light\":\n        return {\n          face: \"Bookman,serif\",\n          weight: \"normal\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Bookman-LightItalic\":\n        return {\n          face: \"Bookman,serif\",\n          weight: \"normal\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Courier\":\n        return {\n          face: \"\\\"Courier New\\\"\",\n          weight: \"normal\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Courier-Oblique\":\n        return {\n          face: \"\\\"Courier New\\\"\",\n          weight: \"normal\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Courier-Bold\":\n        return {\n          face: \"\\\"Courier New\\\"\",\n          weight: \"bold\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Courier-BoldOblique\":\n        return {\n          face: \"\\\"Courier New\\\"\",\n          weight: \"bold\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"AvantGarde-Book\":\n        return {\n          face: \"AvantGarde,Arial\",\n          weight: \"normal\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"AvantGarde-BookOblique\":\n        return {\n          face: \"AvantGarde,Arial\",\n          weight: \"normal\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"AvantGarde-Demi\":\n      case \"Avant-Garde-Demi\":\n        return {\n          face: \"AvantGarde,Arial\",\n          weight: \"bold\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"AvantGarde-DemiOblique\":\n        return {\n          face: \"AvantGarde,Arial\",\n          weight: \"bold\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Helvetica-Oblique\":\n        return {\n          face: \"Helvetica\",\n          weight: \"normal\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Helvetica-Bold\":\n        return {\n          face: \"Helvetica\",\n          weight: \"bold\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Helvetica-BoldOblique\":\n        return {\n          face: \"Helvetica\",\n          weight: \"bold\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Helvetica-Narrow\":\n        return {\n          face: \"\\\"Helvetica Narrow\\\",Helvetica\",\n          weight: \"normal\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Helvetica-Narrow-Oblique\":\n        return {\n          face: \"\\\"Helvetica Narrow\\\",Helvetica\",\n          weight: \"normal\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Helvetica-Narrow-Bold\":\n        return {\n          face: \"\\\"Helvetica Narrow\\\",Helvetica\",\n          weight: \"bold\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Helvetica-Narrow-BoldOblique\":\n        return {\n          face: \"\\\"Helvetica Narrow\\\",Helvetica\",\n          weight: \"bold\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Palatino-Roman\":\n        return {\n          face: \"Palatino\",\n          weight: \"normal\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Palatino-Italic\":\n        return {\n          face: \"Palatino\",\n          weight: \"normal\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Palatino-Bold\":\n        return {\n          face: \"Palatino\",\n          weight: \"bold\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Palatino-BoldItalic\":\n        return {\n          face: \"Palatino\",\n          weight: \"bold\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"NewCenturySchlbk-Roman\":\n        return {\n          face: \"\\\"New Century\\\",serif\",\n          weight: \"normal\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"NewCenturySchlbk-Italic\":\n        return {\n          face: \"\\\"New Century\\\",serif\",\n          weight: \"normal\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"NewCenturySchlbk-Bold\":\n        return {\n          face: \"\\\"New Century\\\",serif\",\n          weight: \"bold\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"NewCenturySchlbk-BoldItalic\":\n        return {\n          face: \"\\\"New Century\\\",serif\",\n          weight: \"bold\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Times\":\n      case \"Times-Roman\":\n      case \"Times-Narrow\":\n      case \"Times-Courier\":\n      case \"Times-New-Roman\":\n        return {\n          face: \"\\\"Times New Roman\\\"\",\n          weight: \"normal\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Times-Italic\":\n      case \"Times-Italics\":\n        return {\n          face: \"\\\"Times New Roman\\\"\",\n          weight: \"normal\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"Times-Bold\":\n        return {\n          face: \"\\\"Times New Roman\\\"\",\n          weight: \"bold\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      case \"Times-BoldItalic\":\n        return {\n          face: \"\\\"Times New Roman\\\"\",\n          weight: \"bold\",\n          style: \"italic\",\n          decoration: \"none\"\n        };\n\n      case \"ZapfChancery-MediumItalic\":\n        return {\n          face: \"\\\"Zapf Chancery\\\",cursive,serif\",\n          weight: \"normal\",\n          style: \"normal\",\n          decoration: \"none\"\n        };\n\n      default:\n        return null;\n    }\n  };\n\n  var getFontParameter = function getFontParameter(tokens, currentSetting, str, position, cmd) {\n    // Every font parameter has the following format:\n    // <face> <utf8> <size> <modifiers> <box>\n    // Where:\n    // face: either a standard web font name, or a postscript font, enumerated in fontTranslation. This could also be an * or be missing if the face shouldn't change.\n    // utf8: This is optional, and specifies utf8. That's all that is supported so the field is just silently ignored.\n    // size: The size, in pixels. This may be omitted if the size is not changing.\n    // modifiers: zero or more of \"bold\", \"italic\", \"underline\"\n    // box: Only applies to the measure numbers, gchords, and the parts. If present, then a box is drawn around the characters.\n    // If face is present, then all the modifiers are cleared. If face is absent, then the modifiers are illegal.\n    // The face can be a single word, a set of words separated by hyphens, or a quoted string.\n    //\n    // So, in practicality, there are three types of font definitions: a number only, an asterisk and a number only, or the full definition (with an optional size).\n    function processNumberOnly() {\n      var size = parseInt(tokens[0].token);\n      tokens.shift();\n\n      if (!currentSetting) {\n        warn(\"Can't set just the size of the font since there is no default value.\", str, position);\n        return {\n          face: \"\\\"Times New Roman\\\"\",\n          weight: \"normal\",\n          style: \"normal\",\n          decoration: \"none\",\n          size: size\n        };\n      }\n\n      if (tokens.length === 0) {\n        return {\n          face: currentSetting.face,\n          weight: currentSetting.weight,\n          style: currentSetting.style,\n          decoration: currentSetting.decoration,\n          size: size\n        };\n      }\n\n      if (tokens.length === 1 && tokens[0].token === \"box\" && fontTypeCanHaveBox[cmd]) return {\n        face: currentSetting.face,\n        weight: currentSetting.weight,\n        style: currentSetting.style,\n        decoration: currentSetting.decoration,\n        size: size,\n        box: true\n      };\n      warn(\"Extra parameters in font definition.\", str, position);\n      return {\n        face: currentSetting.face,\n        weight: currentSetting.weight,\n        style: currentSetting.style,\n        decoration: currentSetting.decoration,\n        size: size\n      };\n    } // format 1: asterisk and number only\n\n\n    if (tokens[0].token === '*') {\n      tokens.shift();\n      if (tokens[0].type === 'number') return processNumberOnly();else {\n        warn(\"Expected font size number after *.\", str, position);\n      }\n    } // format 2: number only\n\n\n    if (tokens[0].type === 'number') {\n      return processNumberOnly();\n    } // format 3: whole definition\n\n\n    var face = [];\n    var size;\n    var weight = \"normal\";\n    var style = \"normal\";\n    var decoration = \"none\";\n    var box = false;\n    var state = 'face';\n    var hyphenLast = false;\n\n    while (tokens.length) {\n      var currToken = tokens.shift();\n      var word = currToken.token.toLowerCase();\n\n      switch (state) {\n        case 'face':\n          if (hyphenLast || word !== 'utf' && currToken.type !== 'number' && word !== \"bold\" && word !== \"italic\" && word !== \"underline\" && word !== \"box\") {\n            if (face.length > 0 && currToken.token === '-') {\n              hyphenLast = true;\n              face[face.length - 1] = face[face.length - 1] + currToken.token;\n            } else {\n              if (hyphenLast) {\n                hyphenLast = false;\n                face[face.length - 1] = face[face.length - 1] + currToken.token;\n              } else face.push(currToken.token);\n            }\n          } else {\n            if (currToken.type === 'number') {\n              if (size) {\n                warn(\"Font size specified twice in font definition.\", str, position);\n              } else {\n                size = currToken.token;\n              }\n\n              state = 'modifier';\n            } else if (word === \"bold\") weight = \"bold\";else if (word === \"italic\") style = \"italic\";else if (word === \"underline\") decoration = \"underline\";else if (word === \"box\") {\n              if (fontTypeCanHaveBox[cmd]) box = true;else warn(\"This font style doesn't support \\\"box\\\"\", str, position);\n              state = \"finished\";\n            } else if (word === \"utf\") {\n              currToken = tokens.shift(); // this gets rid of the \"8\" after \"utf\"\n\n              state = \"size\";\n            } else warn(\"Unknown parameter \" + currToken.token + \" in font definition.\", str, position);\n          }\n\n          break;\n\n        case \"size\":\n          if (currToken.type === 'number') {\n            if (size) {\n              warn(\"Font size specified twice in font definition.\", str, position);\n            } else {\n              size = currToken.token;\n            }\n          } else {\n            warn(\"Expected font size in font definition.\", str, position);\n          }\n\n          state = 'modifier';\n          break;\n\n        case \"modifier\":\n          if (word === \"bold\") weight = \"bold\";else if (word === \"italic\") style = \"italic\";else if (word === \"underline\") decoration = \"underline\";else if (word === \"box\") {\n            if (fontTypeCanHaveBox[cmd]) box = true;else warn(\"This font style doesn't support \\\"box\\\"\", str, position);\n            state = \"finished\";\n          } else warn(\"Unknown parameter \" + currToken.token + \" in font definition.\", str, position);\n          break;\n\n        case \"finished\":\n          warn(\"Extra characters found after \\\"box\\\" in font definition.\", str, position);\n          break;\n      }\n    }\n\n    if (size === undefined) {\n      if (!currentSetting) {\n        warn(\"Must specify the size of the font since there is no default value.\", str, position);\n        size = 12;\n      } else size = currentSetting.size;\n    } else size = parseFloat(size);\n\n    face = face.join(' ');\n    var psFont = fontTranslation(face);\n    var font = {};\n\n    if (psFont) {\n      font.face = psFont.face;\n      font.weight = psFont.weight;\n      font.style = psFont.style;\n      font.decoration = psFont.decoration;\n      font.size = size;\n      if (box) font.box = true;\n      return font;\n    }\n\n    font.face = face;\n    font.weight = weight;\n    font.style = style;\n    font.decoration = decoration;\n    font.size = size;\n    if (box) font.box = true;\n    return font;\n  };\n\n  var getChangingFont = function getChangingFont(cmd, tokens, str) {\n    if (tokens.length === 0) return \"Directive \\\"\" + cmd + \"\\\" requires a font as a parameter.\";\n    multilineVars[cmd] = getFontParameter(tokens, multilineVars[cmd], str, 0, cmd);\n    if (multilineVars.is_in_header) // If the font appears in the header, then it becomes the default font.\n      tune.formatting[cmd] = multilineVars[cmd];\n    return null;\n  };\n\n  var getGlobalFont = function getGlobalFont(cmd, tokens, str) {\n    if (tokens.length === 0) return \"Directive \\\"\" + cmd + \"\\\" requires a font as a parameter.\";\n    tune.formatting[cmd] = getFontParameter(tokens, tune.formatting[cmd], str, 0, cmd);\n    return null;\n  };\n\n  var setScale = function setScale(cmd, tokens) {\n    var scratch = \"\";\n    parseCommon.each(tokens, function (tok) {\n      scratch += tok.token;\n    });\n    var num = parseFloat(scratch);\n    if (isNaN(num) || num === 0) return \"Directive \\\"\" + cmd + \"\\\" requires a number as a parameter.\";\n    tune.formatting.scale = num;\n  };\n\n  var getRequiredMeasurement = function getRequiredMeasurement(cmd, tokens) {\n    var points = tokenizer.getMeasurement(tokens);\n    if (points.used === 0 || tokens.length !== 0) return {\n      error: \"Directive \\\"\" + cmd + \"\\\" requires a measurement as a parameter.\"\n    };\n    return points.value;\n  };\n\n  var oneParameterMeasurement = function oneParameterMeasurement(cmd, tokens) {\n    var points = tokenizer.getMeasurement(tokens);\n    if (points.used === 0 || tokens.length !== 0) return \"Directive \\\"\" + cmd + \"\\\" requires a measurement as a parameter.\";\n    tune.formatting[cmd] = points.value;\n    return null;\n  };\n\n  var addMultilineVar = function addMultilineVar(key, cmd, tokens, min, max) {\n    if (tokens.length !== 1 || tokens[0].type !== 'number') return \"Directive \\\"\" + cmd + \"\\\" requires a number as a parameter.\";\n    var i = tokens[0].intt;\n    if (min !== undefined && i < min) return \"Directive \\\"\" + cmd + \"\\\" requires a number greater than or equal to \" + min + \" as a parameter.\";\n    if (max !== undefined && i > max) return \"Directive \\\"\" + cmd + \"\\\" requires a number less than or equal to \" + max + \" as a parameter.\";\n    multilineVars[key] = i;\n    return null;\n  };\n\n  var addMultilineVarBool = function addMultilineVarBool(key, cmd, tokens) {\n    var str = addMultilineVar(key, cmd, tokens, 0, 1);\n    if (str !== null) return str;\n    multilineVars[key] = multilineVars[key] === 1;\n    return null;\n  };\n\n  var addMultilineVarOneParamChoice = function addMultilineVarOneParamChoice(key, cmd, tokens, choices) {\n    if (tokens.length !== 1) return \"Directive \\\"\" + cmd + \"\\\" requires one of [ \" + choices.join(\", \") + \" ] as a parameter.\";\n    var choice = tokens[0].token;\n    var found = false;\n\n    for (var i = 0; !found && i < choices.length; i++) {\n      if (choices[i] === choice) found = true;\n    }\n\n    if (!found) return \"Directive \\\"\" + cmd + \"\\\" requires one of [ \" + choices.join(\", \") + \" ] as a parameter.\";\n    multilineVars[key] = choice;\n    return null;\n  };\n\n  var midiCmdParam0 = [\"nobarlines\", \"barlines\", \"beataccents\", \"nobeataccents\", \"droneon\", \"droneoff\", \"drumon\", \"drumoff\", \"fermatafixed\", \"fermataproportional\", \"gchordon\", \"gchordoff\", \"controlcombo\", \"temperamentnormal\", \"noportamento\"];\n  var midiCmdParam1String = [\"gchord\", \"ptstress\", \"beatstring\"];\n  var midiCmdParam1Integer = [\"bassvol\", \"chordvol\", \"c\", \"channel\", \"beatmod\", \"deltaloudness\", \"drumbars\", \"gracedivider\", \"makechordchannels\", \"randomchordattack\", \"chordattack\", \"stressmodel\", \"transpose\", \"rtranspose\", \"volinc\"];\n  var midiCmdParam1Integer1OptionalInteger = [\"program\"];\n  var midiCmdParam2Integer = [\"ratio\", \"snt\", \"bendvelocity\", \"pitchbend\", \"control\", \"temperamentlinear\"];\n  var midiCmdParam4Integer = [\"beat\"];\n  var midiCmdParam5Integer = [\"drone\"];\n  var midiCmdParam1IntegerOptionalOctave = [\"bassprog\", \"chordprog\"];\n  var midiCmdParam1String1Integer = [\"portamento\"];\n  var midiCmdParamFraction = [\"expand\", \"grace\", \"trim\"];\n  var midiCmdParam1StringVariableIntegers = [\"drum\", \"chordname\"];\n\n  var parseMidiCommand = function parseMidiCommand(midi, tune, restOfString) {\n    var midi_cmd = midi.shift().token;\n    var midi_params = [];\n\n    if (midiCmdParam0.indexOf(midi_cmd) >= 0) {\n      // NO PARAMETERS\n      if (midi.length !== 0) warn(\"Unexpected parameter in MIDI \" + midi_cmd, restOfString, 0);\n    } else if (midiCmdParam1String.indexOf(midi_cmd) >= 0) {\n      // ONE STRING PARAMETER\n      if (midi.length !== 1) warn(\"Expected one parameter in MIDI \" + midi_cmd, restOfString, 0);else midi_params.push(midi[0].token);\n    } else if (midiCmdParam1Integer.indexOf(midi_cmd) >= 0) {\n      // ONE INT PARAMETER\n      if (midi.length !== 1) warn(\"Expected one parameter in MIDI \" + midi_cmd, restOfString, 0);else if (midi[0].type !== \"number\") warn(\"Expected one integer parameter in MIDI \" + midi_cmd, restOfString, 0);else midi_params.push(midi[0].intt);\n    } else if (midiCmdParam1Integer1OptionalInteger.indexOf(midi_cmd) >= 0) {\n      // ONE INT PARAMETER, ONE OPTIONAL PARAMETER\n      if (midi.length !== 1 && midi.length !== 2) warn(\"Expected one or two parameters in MIDI \" + midi_cmd, restOfString, 0);else if (midi[0].type !== \"number\") warn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);else if (midi.length === 2 && midi[1].type !== \"number\") warn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);else {\n        midi_params.push(midi[0].intt);\n        if (midi.length === 2) midi_params.push(midi[1].intt);\n      }\n    } else if (midiCmdParam2Integer.indexOf(midi_cmd) >= 0) {\n      // TWO INT PARAMETERS\n      if (midi.length !== 2) warn(\"Expected two parameters in MIDI \" + midi_cmd, restOfString, 0);else if (midi[0].type !== \"number\" || midi[1].type !== \"number\") warn(\"Expected two integer parameters in MIDI \" + midi_cmd, restOfString, 0);else {\n        midi_params.push(midi[0].intt);\n        midi_params.push(midi[1].intt);\n      }\n    } else if (midiCmdParam1String1Integer.indexOf(midi_cmd) >= 0) {\n      // ONE STRING PARAMETER, ONE INT PARAMETER\n      if (midi.length !== 2) warn(\"Expected two parameters in MIDI \" + midi_cmd, restOfString, 0);else if (midi[0].type !== \"alpha\" || midi[1].type !== \"number\") warn(\"Expected one string and one integer parameters in MIDI \" + midi_cmd, restOfString, 0);else {\n        midi_params.push(midi[0].token);\n        midi_params.push(midi[1].intt);\n      }\n    } else if (midi_cmd === 'drummap') {\n      // BUILD AN OBJECT OF ABC NOTE => MIDI NOTE\n      if (midi.length === 2 && midi[0].type === 'alpha' && midi[1].type === 'number') {\n        if (!tune.formatting) tune.formatting = {};\n        if (!tune.formatting.midi) tune.formatting.midi = {};\n        if (!tune.formatting.midi.drummap) tune.formatting.midi.drummap = {};\n        tune.formatting.midi.drummap[midi[0].token] = midi[1].intt;\n        midi_params = tune.formatting.midi.drummap;\n      } else if (midi.length === 3 && midi[0].type === 'punct' && midi[1].type === 'alpha' && midi[2].type === 'number') {\n        if (!tune.formatting) tune.formatting = {};\n        if (!tune.formatting.midi) tune.formatting.midi = {};\n        if (!tune.formatting.midi.drummap) tune.formatting.midi.drummap = {};\n        tune.formatting.midi.drummap[midi[0].token + midi[1].token] = midi[2].intt;\n        midi_params = tune.formatting.midi.drummap;\n      } else {\n        warn(\"Expected one note name and one integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n      }\n    } else if (midiCmdParamFraction.indexOf(midi_cmd) >= 0) {\n      // ONE FRACTION PARAMETER\n      if (midi.length !== 3) warn(\"Expected fraction parameter in MIDI \" + midi_cmd, restOfString, 0);else if (midi[0].type !== \"number\" || midi[1].token !== \"/\" || midi[2].type !== \"number\") warn(\"Expected fraction parameter in MIDI \" + midi_cmd, restOfString, 0);else {\n        midi_params.push(midi[0].intt);\n        midi_params.push(midi[2].intt);\n      }\n    } else if (midiCmdParam4Integer.indexOf(midi_cmd) >= 0) {\n      // FOUR INT PARAMETERS\n      if (midi.length !== 4) warn(\"Expected four parameters in MIDI \" + midi_cmd, restOfString, 0);else if (midi[0].type !== \"number\" || midi[1].type !== \"number\" || midi[2].type !== \"number\" || midi[3].type !== \"number\") warn(\"Expected four integer parameters in MIDI \" + midi_cmd, restOfString, 0);else {\n        midi_params.push(midi[0].intt);\n        midi_params.push(midi[1].intt);\n        midi_params.push(midi[2].intt);\n        midi_params.push(midi[3].intt);\n      }\n    } else if (midiCmdParam5Integer.indexOf(midi_cmd) >= 0) {\n      // FIVE INT PARAMETERS\n      if (midi.length !== 5) warn(\"Expected five parameters in MIDI \" + midi_cmd, restOfString, 0);else if (midi[0].type !== \"number\" || midi[1].type !== \"number\" || midi[2].type !== \"number\" || midi[3].type !== \"number\" || midi[4].type !== \"number\") warn(\"Expected five integer parameters in MIDI \" + midi_cmd, restOfString, 0);else {\n        midi_params.push(midi[0].intt);\n        midi_params.push(midi[1].intt);\n        midi_params.push(midi[2].intt);\n        midi_params.push(midi[3].intt);\n        midi_params.push(midi[4].intt);\n      }\n    } else if (midiCmdParam1Integer1OptionalInteger.indexOf(midi_cmd) >= 0) {\n      // ONE INT PARAMETER, ONE OPTIONAL OCTAVE PARAMETER\n      if (midi.length !== 1 || midi.length !== 4) warn(\"Expected one or two parameters in MIDI \" + midi_cmd, restOfString, 0);else if (midi[0].type !== \"number\") warn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);else if (midi.length === 4) {\n        if (midi[1].token !== \"octave\") warn(\"Expected octave parameter in MIDI \" + midi_cmd, restOfString, 0);\n        if (midi[2].token !== \"=\") warn(\"Expected octave parameter in MIDI \" + midi_cmd, restOfString, 0);\n        if (midi[3].type !== \"number\") warn(\"Expected integer parameter for octave in MIDI \" + midi_cmd, restOfString, 0);\n      } else {\n        midi_params.push(midi[0].intt);\n        if (midi.length === 4) midi_params.push(midi[3].intt);\n      }\n    } else if (midiCmdParam1StringVariableIntegers.indexOf(midi_cmd) >= 0) {\n      // ONE STRING, VARIABLE INT PARAMETERS\n      if (midi.length < 2) warn(\"Expected string parameter and at least one integer parameter in MIDI \" + midi_cmd, restOfString, 0);else if (midi[0].type !== \"alpha\") warn(\"Expected string parameter and at least one integer parameter in MIDI \" + midi_cmd, restOfString, 0);else {\n        var p = midi.shift();\n        midi_params.push(p.token);\n\n        while (midi.length > 0) {\n          p = midi.shift();\n          if (p.type !== \"number\") warn(\"Expected integer parameter in MIDI \" + midi_cmd, restOfString, 0);\n          midi_params.push(p.intt);\n        }\n      }\n    }\n\n    if (tune.hasBeginMusic()) tune.appendElement('midi', -1, -1, {\n      cmd: midi_cmd,\n      params: midi_params\n    });else {\n      if (tune.formatting['midi'] === undefined) tune.formatting['midi'] = {};\n      tune.formatting['midi'][midi_cmd] = midi_params;\n    }\n  };\n\n  parseDirective.parseFontChangeLine = function (textstr) {\n    var textParts = textstr.split('$');\n\n    if (textParts.length > 1 && multilineVars.setfont) {\n      var textarr = [{\n        text: textParts[0]\n      }];\n\n      for (var i = 1; i < textParts.length; i++) {\n        if (textParts[i].charAt(0) === '0') textarr.push({\n          text: textParts[i].substring(1)\n        });else if (textParts[i].charAt(0) === '1' && multilineVars.setfont[1]) textarr.push({\n          font: multilineVars.setfont[1],\n          text: textParts[i].substring(1)\n        });else if (textParts[i].charAt(0) === '2' && multilineVars.setfont[2]) textarr.push({\n          font: multilineVars.setfont[2],\n          text: textParts[i].substring(1)\n        });else if (textParts[i].charAt(0) === '3' && multilineVars.setfont[3]) textarr.push({\n          font: multilineVars.setfont[3],\n          text: textParts[i].substring(1)\n        });else if (textParts[i].charAt(0) === '4' && multilineVars.setfont[4]) textarr.push({\n          font: multilineVars.setfont[4],\n          text: textParts[i].substring(1)\n        });else textarr[textarr.length - 1].text += '$' + textParts[i];\n      }\n\n      if (textarr.length > 1) return textarr;\n    }\n\n    return textstr;\n  };\n\n  var positionChoices = ['auto', 'above', 'below', 'hidden'];\n\n  parseDirective.addDirective = function (str) {\n    var tokens = tokenizer.tokenize(str, 0, str.length); // 3 or more % in a row, or just spaces after %% is just a comment\n\n    if (tokens.length === 0 || tokens[0].type !== 'alpha') return null;\n    var restOfString = str.substring(str.indexOf(tokens[0].token) + tokens[0].token.length);\n    restOfString = tokenizer.stripComment(restOfString);\n    var cmd = tokens.shift().token.toLowerCase();\n    var scratch = \"\";\n\n    switch (cmd) {\n      // The following directives were added to abc_parser_lint, but haven't been implemented here.\n      // Most of them are direct translations from the directives that will be parsed in. See abcm2ps's format.txt for info on each of these.\n      //\t\t\t\t\talignbars: { type: \"number\", optional: true },\n      //\t\t\t\t\taligncomposer: { type: \"string\", Enum: [ 'left', 'center','right' ], optional: true },\n      //\t\t\t\t\tbstemdown: { type: \"boolean\", optional: true },\n      //\t\t\t\t\tcontinueall: { type: \"boolean\", optional: true },\n      //\t\t\t\t\tdynalign: { type: \"boolean\", optional: true },\n      //\t\t\t\t\texprabove: { type: \"boolean\", optional: true },\n      //\t\t\t\t\texprbelow: { type: \"boolean\", optional: true },\n      //\t\t\t\t\tgchordbox: { type: \"boolean\", optional: true },\n      //\t\t\t\t\tgraceslurs: { type: \"boolean\", optional: true },\n      //\t\t\t\t\tgracespacebefore: { type: \"number\", optional: true },\n      //\t\t\t\t\tgracespaceinside: { type: \"number\", optional: true },\n      //\t\t\t\t\tgracespaceafter: { type: \"number\", optional: true },\n      //\t\t\t\t\tinfospace: { type: \"number\", optional: true },\n      //\t\t\t\t\tlineskipfac: { type: \"number\", optional: true },\n      //\t\t\t\t\tmaxshrink: { type: \"number\", optional: true },\n      //\t\t\t\t\tmaxstaffsep: { type: \"number\", optional: true },\n      //\t\t\t\t\tmaxsysstaffsep: { type: \"number\", optional: true },\n      //\t\t\t\t\tnotespacingfactor: { type: \"number\", optional: true },\n      //\t\t\t\t\tparskipfac: { type: \"number\", optional: true },\n      //\t\t\t\t\tslurheight: { type: \"number\", optional: true },\n      //\t\t\t\t\tsplittune: { type: \"boolean\", optional: true },\n      //\t\t\t\t\tsquarebreve: { type: \"boolean\", optional: true },\n      //\t\t\t\t\tstemheight: { type: \"number\", optional: true },\n      //\t\t\t\t\tstraightflags: { type: \"boolean\", optional: true },\n      //\t\t\t\t\tstretchstaff: { type: \"boolean\", optional: true },\n      //\t\t\t\t\ttitleformat: { type: \"string\", optional: true },\n      case \"bagpipes\":\n        tune.formatting.bagpipes = true;\n        break;\n\n      case \"flatbeams\":\n        tune.formatting.flatbeams = true;\n        break;\n\n      case \"landscape\":\n        multilineVars.landscape = true;\n        break;\n\n      case \"papersize\":\n        multilineVars.papersize = restOfString;\n        break;\n\n      case \"slurgraces\":\n        tune.formatting.slurgraces = true;\n        break;\n\n      case \"stretchlast\":\n        tune.formatting.stretchlast = true;\n        break;\n\n      case \"titlecaps\":\n        multilineVars.titlecaps = true;\n        break;\n\n      case \"titleleft\":\n        tune.formatting.titleleft = true;\n        break;\n\n      case \"measurebox\":\n        tune.formatting.measurebox = true;\n        break;\n\n      case \"vocal\":\n        return addMultilineVarOneParamChoice(\"vocalPosition\", cmd, tokens, positionChoices);\n\n      case \"dynamic\":\n        return addMultilineVarOneParamChoice(\"dynamicPosition\", cmd, tokens, positionChoices);\n\n      case \"gchord\":\n        return addMultilineVarOneParamChoice(\"chordPosition\", cmd, tokens, positionChoices);\n\n      case \"ornament\":\n        return addMultilineVarOneParamChoice(\"ornamentPosition\", cmd, tokens, positionChoices);\n\n      case \"volume\":\n        return addMultilineVarOneParamChoice(\"volumePosition\", cmd, tokens, positionChoices);\n\n      case \"botmargin\":\n      case \"botspace\":\n      case \"composerspace\":\n      case \"indent\":\n      case \"leftmargin\":\n      case \"linesep\":\n      case \"musicspace\":\n      case \"partsspace\":\n      case \"pageheight\":\n      case \"pagewidth\":\n      case \"rightmargin\":\n      case \"staffsep\":\n      case \"staffwidth\":\n      case \"subtitlespace\":\n      case \"sysstaffsep\":\n      case \"systemsep\":\n      case \"textspace\":\n      case \"titlespace\":\n      case \"topmargin\":\n      case \"topspace\":\n      case \"vocalspace\":\n      case \"wordsspace\":\n        return oneParameterMeasurement(cmd, tokens);\n\n      case \"voicescale\":\n        if (tokens.length !== 1 || tokens[0].type !== 'number') return \"voicescale requires one float as a parameter\";\n        var voiceScale = tokens.shift();\n\n        if (multilineVars.currentVoice) {\n          multilineVars.currentVoice.scale = voiceScale.floatt;\n          tune.changeVoiceScale(multilineVars.currentVoice.scale);\n        }\n\n        return null;\n\n      case \"vskip\":\n        var vskip = getRequiredMeasurement(cmd, tokens);\n        if (vskip.error) return vskip.error;\n        tune.addSpacing(vskip);\n        return null;\n\n      case \"scale\":\n        setScale(cmd, tokens);\n        break;\n\n      case \"sep\":\n        if (tokens.length === 0) tune.addSeparator();else {\n          var points = tokenizer.getMeasurement(tokens);\n          if (points.used === 0) return \"Directive \\\"\" + cmd + \"\\\" requires 3 numbers: space above, space below, length of line\";\n          var spaceAbove = points.value;\n          points = tokenizer.getMeasurement(tokens);\n          if (points.used === 0) return \"Directive \\\"\" + cmd + \"\\\" requires 3 numbers: space above, space below, length of line\";\n          var spaceBelow = points.value;\n          points = tokenizer.getMeasurement(tokens);\n          if (points.used === 0 || tokens.length !== 0) return \"Directive \\\"\" + cmd + \"\\\" requires 3 numbers: space above, space below, length of line\";\n          var lenLine = points.value;\n          tune.addSeparator(spaceAbove, spaceBelow, lenLine);\n        }\n        break;\n\n      case \"barsperstaff\":\n        scratch = addMultilineVar('barsperstaff', cmd, tokens);\n        if (scratch !== null) return scratch;\n        break;\n\n      case \"staffnonote\":\n        // The sense of the boolean is opposite here. \"0\" means true.\n        if (tokens.length !== 1) return \"Directive staffnonote requires one parameter: 0 or 1\";\n        if (tokens[0].token === '0') multilineVars.staffnonote = true;else if (tokens[0].token === '1') multilineVars.staffnonote = false;else return \"Directive staffnonote requires one parameter: 0 or 1 (received \" + tokens[0].token + ')';\n        break;\n\n      case \"printtempo\":\n        scratch = addMultilineVarBool('printTempo', cmd, tokens);\n        if (scratch !== null) return scratch;\n        break;\n\n      case \"partsbox\":\n        scratch = addMultilineVarBool('partsBox', cmd, tokens);\n        if (scratch !== null) return scratch;\n        multilineVars.partsfont.box = multilineVars.partsBox;\n        break;\n\n      case \"measurenb\":\n      case \"barnumbers\":\n        scratch = addMultilineVar('barNumbers', cmd, tokens);\n        if (scratch !== null) return scratch;\n        break;\n\n      case \"begintext\":\n        multilineVars.inTextBlock = true;\n        break;\n\n      case \"continueall\":\n        multilineVars.continueall = true;\n        break;\n\n      case \"beginps\":\n        multilineVars.inPsBlock = true;\n        warn(\"Postscript ignored\", str, 0);\n        break;\n\n      case \"deco\":\n        if (restOfString.length > 0) multilineVars.ignoredDecorations.push(restOfString.substring(0, restOfString.indexOf(' ')));\n        warn(\"Decoration redefinition ignored\", str, 0);\n        break;\n\n      case \"text\":\n        var textstr = tokenizer.translateString(restOfString);\n        tune.addText(parseDirective.parseFontChangeLine(textstr));\n        break;\n\n      case \"center\":\n        var centerstr = tokenizer.translateString(restOfString);\n        tune.addCentered(parseDirective.parseFontChangeLine(centerstr));\n        break;\n\n      case \"font\":\n        // don't need to do anything for this; it is a useless directive\n        break;\n\n      case \"setfont\":\n        var sfTokens = tokenizer.tokenize(restOfString, 0, restOfString.length); //\t\t\t\tvar sfDone = false;\n\n        if (sfTokens.length >= 4) {\n          if (sfTokens[0].token === '-' && sfTokens[1].type === 'number') {\n            var sfNum = parseInt(sfTokens[1].token);\n\n            if (sfNum >= 1 && sfNum <= 4) {\n              if (!multilineVars.setfont) multilineVars.setfont = [];\n              sfTokens.shift();\n              sfTokens.shift();\n              multilineVars.setfont[sfNum] = getFontParameter(sfTokens, multilineVars.setfont[sfNum], str, 0, 'setfont'); //\t\t\t\t\t\t\tvar sfSize = sfTokens.pop();\n              //\t\t\t\t\t\t\tif (sfSize.type === 'number') {\n              //\t\t\t\t\t\t\t\tsfSize = parseInt(sfSize.token);\n              //\t\t\t\t\t\t\t\tvar sfFontName = '';\n              //\t\t\t\t\t\t\t\tfor (var sfi = 2; sfi < sfTokens.length; sfi++)\n              //\t\t\t\t\t\t\t\t\tsfFontName += sfTokens[sfi].token;\n              //\t\t\t\t\t\t\t\tmultilineVars.setfont[sfNum] = { face: sfFontName, size: sfSize };\n              //\t\t\t\t\t\t\t\tsfDone = true;\n              //\t\t\t\t\t\t\t}\n            }\n          }\n        } //\t\t\t\tif (!sfDone)\n        //\t\t\t\t\treturn \"Bad parameters: \" + cmd;\n\n\n        break;\n\n      case \"gchordfont\":\n      case \"partsfont\":\n      case \"tripletfont\":\n      case \"vocalfont\":\n      case \"textfont\":\n      case \"annotationfont\":\n      case \"historyfont\":\n      case \"infofont\":\n      case \"measurefont\":\n      case \"repeatfont\":\n      case \"wordsfont\":\n        return getChangingFont(cmd, tokens, str);\n\n      case \"composerfont\":\n      case \"subtitlefont\":\n      case \"tempofont\":\n      case \"titlefont\":\n      case \"voicefont\":\n      case \"footerfont\":\n      case \"headerfont\":\n        return getGlobalFont(cmd, tokens, str);\n\n      case \"barlabelfont\":\n      case \"barnumberfont\":\n      case \"barnumfont\":\n        return getChangingFont(\"measurefont\", tokens, str);\n\n      case \"staves\":\n      case \"score\":\n        multilineVars.score_is_present = true;\n\n        var addVoice = function addVoice(id, newStaff, bracket, brace, continueBar) {\n          if (newStaff || multilineVars.staves.length === 0) {\n            multilineVars.staves.push({\n              index: multilineVars.staves.length,\n              numVoices: 0\n            });\n          }\n\n          var staff = parseCommon.last(multilineVars.staves);\n          if (bracket !== undefined) staff.bracket = bracket;\n          if (brace !== undefined) staff.brace = brace;\n          if (continueBar) staff.connectBarLines = 'end';\n\n          if (multilineVars.voices[id] === undefined) {\n            multilineVars.voices[id] = {\n              staffNum: staff.index,\n              index: staff.numVoices\n            };\n            staff.numVoices++;\n          }\n        };\n\n        var openParen = false;\n        var openBracket = false;\n        var openBrace = false;\n        var justOpenParen = false;\n        var justOpenBracket = false;\n        var justOpenBrace = false;\n        var continueBar = false;\n        var lastVoice;\n\n        var addContinueBar = function addContinueBar() {\n          continueBar = true;\n\n          if (lastVoice) {\n            var ty = 'start';\n\n            if (lastVoice.staffNum > 0) {\n              if (multilineVars.staves[lastVoice.staffNum - 1].connectBarLines === 'start' || multilineVars.staves[lastVoice.staffNum - 1].connectBarLines === 'continue') ty = 'continue';\n            }\n\n            multilineVars.staves[lastVoice.staffNum].connectBarLines = ty;\n          }\n        };\n\n        while (tokens.length) {\n          var t = tokens.shift();\n\n          switch (t.token) {\n            case '(':\n              if (openParen) warn(\"Can't nest parenthesis in %%score\", str, t.start);else {\n                openParen = true;\n                justOpenParen = true;\n              }\n              break;\n\n            case ')':\n              if (!openParen || justOpenParen) warn(\"Unexpected close parenthesis in %%score\", str, t.start);else openParen = false;\n              break;\n\n            case '[':\n              if (openBracket) warn(\"Can't nest brackets in %%score\", str, t.start);else {\n                openBracket = true;\n                justOpenBracket = true;\n              }\n              break;\n\n            case ']':\n              if (!openBracket || justOpenBracket) warn(\"Unexpected close bracket in %%score\", str, t.start);else {\n                openBracket = false;\n                multilineVars.staves[lastVoice.staffNum].bracket = 'end';\n              }\n              break;\n\n            case '{':\n              if (openBrace) warn(\"Can't nest braces in %%score\", str, t.start);else {\n                openBrace = true;\n                justOpenBrace = true;\n              }\n              break;\n\n            case '}':\n              if (!openBrace || justOpenBrace) warn(\"Unexpected close brace in %%score\", str, t.start);else {\n                openBrace = false;\n                multilineVars.staves[lastVoice.staffNum].brace = 'end';\n              }\n              break;\n\n            case '|':\n              addContinueBar();\n              break;\n\n            default:\n              var vc = \"\";\n\n              while (t.type === 'alpha' || t.type === 'number') {\n                vc += t.token;\n                if (t.continueId) t = tokens.shift();else break;\n              }\n\n              var newStaff = !openParen || justOpenParen;\n              var bracket = justOpenBracket ? 'start' : openBracket ? 'continue' : undefined;\n              var brace = justOpenBrace ? 'start' : openBrace ? 'continue' : undefined;\n              addVoice(vc, newStaff, bracket, brace, continueBar);\n              justOpenParen = false;\n              justOpenBracket = false;\n              justOpenBrace = false;\n              continueBar = false;\n              lastVoice = multilineVars.voices[vc];\n              if (cmd === 'staves') addContinueBar();\n              break;\n          }\n        }\n\n        break;\n\n      case \"newpage\":\n        var pgNum = tokenizer.getInt(restOfString);\n        tune.addNewPage(pgNum.digits === 0 ? -1 : pgNum.value);\n        break;\n\n      case \"abc\":\n        var arr = restOfString.split(' ');\n\n        switch (arr[0]) {\n          case \"-copyright\":\n          case \"-creator\":\n          case \"-edited-by\":\n          case \"-version\":\n          case \"-charset\":\n            var subCmd = arr.shift();\n            tune.addMetaText(cmd + subCmd, arr.join(' '));\n            break;\n\n          default:\n            return \"Unknown directive: \" + cmd + arr[0];\n        }\n\n        break;\n\n      case \"header\":\n      case \"footer\":\n        var footerStr = tokenizer.getMeat(restOfString, 0, restOfString.length);\n        footerStr = restOfString.substring(footerStr.start, footerStr.end);\n        if (footerStr.charAt(0) === '\"' && footerStr.charAt(footerStr.length - 1) === '\"') footerStr = footerStr.substring(1, footerStr.length - 1);\n        var footerArr = footerStr.split('\\t');\n        var footer = {};\n        if (footerArr.length === 1) footer = {\n          left: \"\",\n          center: footerArr[0],\n          right: \"\"\n        };else if (footerArr.length === 2) footer = {\n          left: footerArr[0],\n          center: footerArr[1],\n          right: \"\"\n        };else footer = {\n          left: footerArr[0],\n          center: footerArr[1],\n          right: footerArr[2]\n        };\n        if (footerArr.length > 3) warn(\"Too many tabs in \" + cmd + \": \" + footerArr.length + \" found.\", restOfString, 0);\n        tune.addMetaTextObj(cmd, footer);\n        break;\n\n      case \"midi\":\n        var midi = tokenizer.tokenize(restOfString, 0, restOfString.length, true);\n        if (midi.length > 0 && midi[0].token === '=') midi.shift();\n        if (midi.length === 0) warn(\"Expected midi command\", restOfString, 0);else parseMidiCommand(midi, tune, restOfString);\n        break;\n\n      case \"map\":\n      case \"percmap\":\n      case \"playtempo\":\n      case \"auquality\":\n      case \"continuous\":\n      case \"nobarcheck\":\n        // TODO-PER: Actually handle the parameters of these\n        tune.formatting[cmd] = restOfString;\n        break;\n\n      default:\n        return \"Unknown directive: \" + cmd;\n    }\n\n    return null;\n  };\n\n  parseDirective.globalFormatting = function (formatHash) {\n    for (var cmd in formatHash) {\n      if (formatHash.hasOwnProperty(cmd)) {\n        var value = '' + formatHash[cmd];\n        var tokens = tokenizer.tokenize(value, 0, value.length);\n        var scratch;\n\n        switch (cmd) {\n          case \"titlefont\":\n          case \"gchordfont\":\n          case \"composerfont\":\n          case \"footerfont\":\n          case \"headerfont\":\n          case \"historyfont\":\n          case \"infofont\":\n          case \"measurefont\":\n          case \"partsfont\":\n          case \"repeatfont\":\n          case \"subtitlefont\":\n          case \"tempofont\":\n          case \"textfont\":\n          case \"voicefont\":\n          case \"tripletfont\":\n          case \"vocalfont\":\n          case \"wordsfont\":\n          case \"annotationfont\":\n            getChangingFont(cmd, tokens, value);\n            break;\n\n          case \"scale\":\n            setScale(cmd, tokens);\n            break;\n\n          case \"partsbox\":\n            scratch = addMultilineVarBool('partsBox', cmd, tokens);\n            if (scratch !== null) warn(scratch);\n            multilineVars.partsfont.box = multilineVars.partsBox;\n            break;\n\n          default:\n            warn(\"Formatting directive unrecognized: \", cmd, 0);\n        }\n      }\n    }\n  };\n})();\n\nmodule.exports = parseDirective;","/*global window */\nvar parseCommon = require('./abc_common');\n\nvar parseDirective = require('./abc_parse_directive');\n\nvar transpose = require('./abc_transpose');\n\nvar parseKeyVoice = {};\n\n(function () {\n  var tokenizer;\n  var warn;\n  var multilineVars;\n  var tune;\n\n  parseKeyVoice.initialize = function (tokenizer_, warn_, multilineVars_, tune_) {\n    tokenizer = tokenizer_;\n    warn = warn_;\n    multilineVars = multilineVars_;\n    tune = tune_;\n  };\n\n  parseKeyVoice.standardKey = function (keyName, root, acc, localTranspose) {\n    var key1sharp = {\n      acc: 'sharp',\n      note: 'f'\n    };\n    var key2sharp = {\n      acc: 'sharp',\n      note: 'c'\n    };\n    var key3sharp = {\n      acc: 'sharp',\n      note: 'g'\n    };\n    var key4sharp = {\n      acc: 'sharp',\n      note: 'd'\n    };\n    var key5sharp = {\n      acc: 'sharp',\n      note: 'A'\n    };\n    var key6sharp = {\n      acc: 'sharp',\n      note: 'e'\n    };\n    var key7sharp = {\n      acc: 'sharp',\n      note: 'B'\n    };\n    var key1flat = {\n      acc: 'flat',\n      note: 'B'\n    };\n    var key2flat = {\n      acc: 'flat',\n      note: 'e'\n    };\n    var key3flat = {\n      acc: 'flat',\n      note: 'A'\n    };\n    var key4flat = {\n      acc: 'flat',\n      note: 'd'\n    };\n    var key5flat = {\n      acc: 'flat',\n      note: 'G'\n    };\n    var key6flat = {\n      acc: 'flat',\n      note: 'c'\n    };\n    var key7flat = {\n      acc: 'flat',\n      note: 'F'\n    };\n    var keys = {\n      'C#': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp, key7sharp],\n      'A#m': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp, key7sharp],\n      'G#Mix': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp, key7sharp],\n      'D#Dor': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp, key7sharp],\n      'E#Phr': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp, key7sharp],\n      'F#Lyd': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp, key7sharp],\n      'B#Loc': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp, key7sharp],\n      'F#': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp],\n      'D#m': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp],\n      'C#Mix': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp],\n      'G#Dor': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp],\n      'A#Phr': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp],\n      'BLyd': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp],\n      'E#Loc': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp],\n      'B': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp],\n      'G#m': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp],\n      'F#Mix': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp],\n      'C#Dor': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp],\n      'D#Phr': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp],\n      'ELyd': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp],\n      'A#Loc': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp],\n      'E': [key1sharp, key2sharp, key3sharp, key4sharp],\n      'C#m': [key1sharp, key2sharp, key3sharp, key4sharp],\n      'BMix': [key1sharp, key2sharp, key3sharp, key4sharp],\n      'F#Dor': [key1sharp, key2sharp, key3sharp, key4sharp],\n      'G#Phr': [key1sharp, key2sharp, key3sharp, key4sharp],\n      'ALyd': [key1sharp, key2sharp, key3sharp, key4sharp],\n      'D#Loc': [key1sharp, key2sharp, key3sharp, key4sharp],\n      'A': [key1sharp, key2sharp, key3sharp],\n      'F#m': [key1sharp, key2sharp, key3sharp],\n      'EMix': [key1sharp, key2sharp, key3sharp],\n      'BDor': [key1sharp, key2sharp, key3sharp],\n      'C#Phr': [key1sharp, key2sharp, key3sharp],\n      'DLyd': [key1sharp, key2sharp, key3sharp],\n      'G#Loc': [key1sharp, key2sharp, key3sharp],\n      'D': [key1sharp, key2sharp],\n      'Bm': [key1sharp, key2sharp],\n      'AMix': [key1sharp, key2sharp],\n      'EDor': [key1sharp, key2sharp],\n      'F#Phr': [key1sharp, key2sharp],\n      'GLyd': [key1sharp, key2sharp],\n      'C#Loc': [key1sharp, key2sharp],\n      'G': [key1sharp],\n      'Em': [key1sharp],\n      'DMix': [key1sharp],\n      'ADor': [key1sharp],\n      'BPhr': [key1sharp],\n      'CLyd': [key1sharp],\n      'F#Loc': [key1sharp],\n      'C': [],\n      'Am': [],\n      'GMix': [],\n      'DDor': [],\n      'EPhr': [],\n      'FLyd': [],\n      'BLoc': [],\n      'F': [key1flat],\n      'Dm': [key1flat],\n      'CMix': [key1flat],\n      'GDor': [key1flat],\n      'APhr': [key1flat],\n      'BbLyd': [key1flat],\n      'ELoc': [key1flat],\n      'Bb': [key1flat, key2flat],\n      'Gm': [key1flat, key2flat],\n      'FMix': [key1flat, key2flat],\n      'CDor': [key1flat, key2flat],\n      'DPhr': [key1flat, key2flat],\n      'EbLyd': [key1flat, key2flat],\n      'ALoc': [key1flat, key2flat],\n      'Eb': [key1flat, key2flat, key3flat],\n      'Cm': [key1flat, key2flat, key3flat],\n      'BbMix': [key1flat, key2flat, key3flat],\n      'FDor': [key1flat, key2flat, key3flat],\n      'GPhr': [key1flat, key2flat, key3flat],\n      'AbLyd': [key1flat, key2flat, key3flat],\n      'DLoc': [key1flat, key2flat, key3flat],\n      'Ab': [key1flat, key2flat, key3flat, key4flat],\n      'Fm': [key1flat, key2flat, key3flat, key4flat],\n      'EbMix': [key1flat, key2flat, key3flat, key4flat],\n      'BbDor': [key1flat, key2flat, key3flat, key4flat],\n      'CPhr': [key1flat, key2flat, key3flat, key4flat],\n      'DbLyd': [key1flat, key2flat, key3flat, key4flat],\n      'GLoc': [key1flat, key2flat, key3flat, key4flat],\n      'Db': [key1flat, key2flat, key3flat, key4flat, key5flat],\n      'Bbm': [key1flat, key2flat, key3flat, key4flat, key5flat],\n      'AbMix': [key1flat, key2flat, key3flat, key4flat, key5flat],\n      'EbDor': [key1flat, key2flat, key3flat, key4flat, key5flat],\n      'FPhr': [key1flat, key2flat, key3flat, key4flat, key5flat],\n      'GbLyd': [key1flat, key2flat, key3flat, key4flat, key5flat],\n      'CLoc': [key1flat, key2flat, key3flat, key4flat, key5flat],\n      'Gb': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat],\n      'Ebm': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat],\n      'DbMix': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat],\n      'AbDor': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat],\n      'BbPhr': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat],\n      'CbLyd': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat],\n      'FLoc': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat],\n      'Cb': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat, key7flat],\n      'Abm': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat, key7flat],\n      'GbMix': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat, key7flat],\n      'DbDor': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat, key7flat],\n      'EbPhr': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat, key7flat],\n      'FbLyd': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat, key7flat],\n      'BbLoc': [key1flat, key2flat, key3flat, key4flat, key5flat, key6flat, key7flat],\n      // The following are not in the 2.0 spec, but seem normal enough.\n      // TODO-PER: These SOUND the same as what's written, but they aren't right\n      'A#': [key1flat, key2flat],\n      'B#': [],\n      'D#': [key1flat, key2flat, key3flat],\n      'E#': [key1flat],\n      'G#': [key1flat, key2flat, key3flat, key4flat],\n      'Gbm': [key1sharp, key2sharp, key3sharp, key4sharp, key5sharp, key6sharp, key7sharp]\n    };\n    return transpose.keySignature(multilineVars, keys, keyName, root, acc, localTranspose);\n  };\n\n  var clefLines = {\n    'treble': {\n      clef: 'treble',\n      pitch: 4,\n      mid: 0\n    },\n    'treble+8': {\n      clef: 'treble+8',\n      pitch: 4,\n      mid: 0\n    },\n    'treble-8': {\n      clef: 'treble-8',\n      pitch: 4,\n      mid: 0\n    },\n    'treble^8': {\n      clef: 'treble+8',\n      pitch: 4,\n      mid: 0\n    },\n    'treble_8': {\n      clef: 'treble-8',\n      pitch: 4,\n      mid: 0\n    },\n    'treble1': {\n      clef: 'treble',\n      pitch: 2,\n      mid: 2\n    },\n    'treble2': {\n      clef: 'treble',\n      pitch: 4,\n      mid: 0\n    },\n    'treble3': {\n      clef: 'treble',\n      pitch: 6,\n      mid: -2\n    },\n    'treble4': {\n      clef: 'treble',\n      pitch: 8,\n      mid: -4\n    },\n    'treble5': {\n      clef: 'treble',\n      pitch: 10,\n      mid: -6\n    },\n    'perc': {\n      clef: 'perc',\n      pitch: 6,\n      mid: 0\n    },\n    'none': {\n      clef: 'none',\n      mid: 0\n    },\n    'bass': {\n      clef: 'bass',\n      pitch: 8,\n      mid: -12\n    },\n    'bass+8': {\n      clef: 'bass+8',\n      pitch: 8,\n      mid: -12\n    },\n    'bass-8': {\n      clef: 'bass-8',\n      pitch: 8,\n      mid: -12\n    },\n    'bass^8': {\n      clef: 'bass+8',\n      pitch: 8,\n      mid: -12\n    },\n    'bass_8': {\n      clef: 'bass-8',\n      pitch: 8,\n      mid: -12\n    },\n    'bass+16': {\n      clef: 'bass',\n      pitch: 8,\n      mid: -12\n    },\n    'bass-16': {\n      clef: 'bass',\n      pitch: 8,\n      mid: -12\n    },\n    'bass^16': {\n      clef: 'bass',\n      pitch: 8,\n      mid: -12\n    },\n    'bass_16': {\n      clef: 'bass',\n      pitch: 8,\n      mid: -12\n    },\n    'bass1': {\n      clef: 'bass',\n      pitch: 2,\n      mid: -6\n    },\n    'bass2': {\n      clef: 'bass',\n      pitch: 4,\n      mid: -8\n    },\n    'bass3': {\n      clef: 'bass',\n      pitch: 6,\n      mid: -10\n    },\n    'bass4': {\n      clef: 'bass',\n      pitch: 8,\n      mid: -12\n    },\n    'bass5': {\n      clef: 'bass',\n      pitch: 10,\n      mid: -14\n    },\n    'tenor': {\n      clef: 'alto',\n      pitch: 8,\n      mid: -8\n    },\n    'tenor1': {\n      clef: 'alto',\n      pitch: 2,\n      mid: -2\n    },\n    'tenor2': {\n      clef: 'alto',\n      pitch: 4,\n      mid: -4\n    },\n    'tenor3': {\n      clef: 'alto',\n      pitch: 6,\n      mid: -6\n    },\n    'tenor4': {\n      clef: 'alto',\n      pitch: 8,\n      mid: -8\n    },\n    'tenor5': {\n      clef: 'alto',\n      pitch: 10,\n      mid: -10\n    },\n    'alto': {\n      clef: 'alto',\n      pitch: 6,\n      mid: -6\n    },\n    'alto1': {\n      clef: 'alto',\n      pitch: 2,\n      mid: -2\n    },\n    'alto2': {\n      clef: 'alto',\n      pitch: 4,\n      mid: -4\n    },\n    'alto3': {\n      clef: 'alto',\n      pitch: 6,\n      mid: -6\n    },\n    'alto4': {\n      clef: 'alto',\n      pitch: 8,\n      mid: -8\n    },\n    'alto5': {\n      clef: 'alto',\n      pitch: 10,\n      mid: -10\n    },\n    'alto+8': {\n      clef: 'alto+8',\n      pitch: 6,\n      mid: -6\n    },\n    'alto-8': {\n      clef: 'alto-8',\n      pitch: 6,\n      mid: -6\n    },\n    'alto^8': {\n      clef: 'alto+8',\n      pitch: 6,\n      mid: -6\n    },\n    'alto_8': {\n      clef: 'alto-8',\n      pitch: 6,\n      mid: -6\n    }\n  };\n\n  var calcMiddle = function calcMiddle(clef, oct) {\n    var value = clefLines[clef];\n    var mid = value ? value.mid : 0;\n    return mid + oct;\n  };\n\n  parseKeyVoice.fixClef = function (clef) {\n    var value = clefLines[clef.type];\n\n    if (value) {\n      clef.clefPos = value.pitch;\n      clef.type = value.clef;\n    }\n  };\n\n  parseKeyVoice.deepCopyKey = function (key) {\n    var ret = {\n      accidentals: [],\n      root: key.root,\n      acc: key.acc,\n      mode: key.mode\n    };\n    parseCommon.each(key.accidentals, function (k) {\n      ret.accidentals.push(parseCommon.clone(k));\n    });\n    return ret;\n  };\n\n  var pitches = {\n    A: 5,\n    B: 6,\n    C: 0,\n    D: 1,\n    E: 2,\n    F: 3,\n    G: 4,\n    a: 12,\n    b: 13,\n    c: 7,\n    d: 8,\n    e: 9,\n    f: 10,\n    g: 11\n  };\n\n  parseKeyVoice.addPosToKey = function (clef, key) {\n    // Shift the key signature from the treble positions to whatever position is needed for the clef.\n    // This may put the key signature unnaturally high or low, so if it does, then shift it.\n    var mid = clef.verticalPos;\n    parseCommon.each(key.accidentals, function (acc) {\n      var pitch = pitches[acc.note];\n      pitch = pitch - mid;\n      acc.verticalPos = pitch;\n    });\n    if (key.impliedNaturals) parseCommon.each(key.impliedNaturals, function (acc) {\n      var pitch = pitches[acc.note];\n      pitch = pitch - mid;\n      acc.verticalPos = pitch;\n    });\n\n    if (mid < -10) {\n      parseCommon.each(key.accidentals, function (acc) {\n        acc.verticalPos -= 7;\n        if (acc.verticalPos >= 11 || acc.verticalPos === 10 && acc.acc === 'flat') acc.verticalPos -= 7;\n        if (acc.note === 'A' && acc.acc === 'sharp') acc.verticalPos -= 7;\n        if ((acc.note === 'G' || acc.note === 'F') && acc.acc === 'flat') acc.verticalPos -= 7;\n      });\n      if (key.impliedNaturals) parseCommon.each(key.impliedNaturals, function (acc) {\n        acc.verticalPos -= 7;\n        if (acc.verticalPos >= 11 || acc.verticalPos === 10 && acc.acc === 'flat') acc.verticalPos -= 7;\n        if (acc.note === 'A' && acc.acc === 'sharp') acc.verticalPos -= 7;\n        if ((acc.note === 'G' || acc.note === 'F') && acc.acc === 'flat') acc.verticalPos -= 7;\n      });\n    } else if (mid < -4) {\n      parseCommon.each(key.accidentals, function (acc) {\n        acc.verticalPos -= 7;\n        if (mid === -8 && (acc.note === 'f' || acc.note === 'g') && acc.acc === 'sharp') acc.verticalPos -= 7;\n      });\n      if (key.impliedNaturals) parseCommon.each(key.impliedNaturals, function (acc) {\n        acc.verticalPos -= 7;\n        if (mid === -8 && (acc.note === 'f' || acc.note === 'g') && acc.acc === 'sharp') acc.verticalPos -= 7;\n      });\n    } else if (mid >= 7) {\n      parseCommon.each(key.accidentals, function (acc) {\n        acc.verticalPos += 7;\n      });\n      if (key.impliedNaturals) parseCommon.each(key.impliedNaturals, function (acc) {\n        acc.verticalPos += 7;\n      });\n    }\n  };\n\n  parseKeyVoice.fixKey = function (clef, key) {\n    var fixedKey = parseCommon.clone(key);\n    parseKeyVoice.addPosToKey(clef, fixedKey);\n    return fixedKey;\n  };\n\n  var parseMiddle = function parseMiddle(str) {\n    var i = 0;\n    var p = str.charAt(i++);\n    if (p === '^' || p === '_') p = str.charAt(i++);\n    var mid = pitches[p];\n    if (mid === undefined) mid = 6; // If a legal middle note wasn't received, just ignore it.\n\n    for (; i < str.length; i++) {\n      if (str.charAt(i) === ',') mid -= 7;else if (str.charAt(i) === \"'\") mid += 7;else break;\n    }\n\n    return {\n      mid: mid - 6,\n      str: str.substring(i)\n    }; // We get the note in the middle of the staff. We want the note that appears as the first ledger line below the staff.\n  };\n\n  var normalizeAccidentals = function normalizeAccidentals(accs) {\n    for (var i = 0; i < accs.length; i++) {\n      if (accs[i].note === 'b') accs[i].note = 'B';else if (accs[i].note === 'a') accs[i].note = 'A';else if (accs[i].note === 'F') accs[i].note = 'f';else if (accs[i].note === 'E') accs[i].note = 'e';else if (accs[i].note === 'D') accs[i].note = 'd';else if (accs[i].note === 'C') accs[i].note = 'c';else if (accs[i].note === 'G' && accs[i].acc === 'sharp') accs[i].note = 'g';else if (accs[i].note === 'g' && accs[i].acc === 'flat') accs[i].note = 'G';\n    }\n  };\n\n  parseKeyVoice.parseKey = function (str) // (and clef)\n  {\n    // returns:\n    //\t\t{ foundClef: true, foundKey: true }\n    // Side effects:\n    //\t\tcalls warn() when there is a syntax error\n    //\t\tsets these members of multilineVars:\n    //\t\t\tclef\n    //\t\t\tkey\n    //\t\t\tstyle\n    //\n    // The format is:\n    // K: [⟨key⟩] [⟨modifiers⟩*]\n    // modifiers are any of the following in any order:\n    //  [⟨clef⟩] [middle=⟨pitch⟩] [transpose=[-]⟨number⟩] [stafflines=⟨number⟩] [staffscale=⟨number⟩][style=⟨style⟩]\n    // key is none|HP|Hp|⟨specified_key⟩\n    // clef is [clef=] [⟨clef type⟩] [⟨line number⟩] [+8|-8]\n    // specified_key is ⟨pitch⟩[#|b][mode(first three chars are significant)][accidentals*]\n    if (str.length === 0) {\n      // an empty K: field is the same as K:none\n      str = 'none';\n    }\n\n    var tokens = tokenizer.tokenize(str, 0, str.length);\n    var ret = {}; // first the key\n\n    switch (tokens[0].token) {\n      case 'HP':\n        parseDirective.addDirective(\"bagpipes\");\n        multilineVars.key = {\n          root: \"HP\",\n          accidentals: [],\n          acc: \"\",\n          mode: \"\"\n        };\n        ret.foundKey = true;\n        tokens.shift();\n        break;\n\n      case 'Hp':\n        parseDirective.addDirective(\"bagpipes\");\n        multilineVars.key = {\n          root: \"Hp\",\n          accidentals: [{\n            acc: 'natural',\n            note: 'g'\n          }, {\n            acc: 'sharp',\n            note: 'f'\n          }, {\n            acc: 'sharp',\n            note: 'c'\n          }],\n          acc: \"\",\n          mode: \"\"\n        };\n        ret.foundKey = true;\n        tokens.shift();\n        break;\n\n      case 'none':\n        // we got the none key - that's the same as C to us\n        multilineVars.key = {\n          root: \"none\",\n          accidentals: [],\n          acc: \"\",\n          mode: \"\"\n        };\n        ret.foundKey = true;\n        tokens.shift();\n        break;\n\n      default:\n        var retPitch = tokenizer.getKeyPitch(tokens[0].token);\n\n        if (retPitch.len > 0) {\n          ret.foundKey = true;\n          var acc = \"\";\n          var mode = \"\"; // The accidental and mode might be attached to the pitch, so we might want to just remove the first character.\n\n          if (tokens[0].token.length > 1) tokens[0].token = tokens[0].token.substring(1);else tokens.shift();\n          var key = retPitch.token; // We got a pitch to start with, so we might also have an accidental and a mode\n\n          if (tokens.length > 0) {\n            var retAcc = tokenizer.getSharpFlat(tokens[0].token);\n\n            if (retAcc.len > 0) {\n              if (tokens[0].token.length > 1) tokens[0].token = tokens[0].token.substring(1);else tokens.shift();\n              key += retAcc.token;\n              acc = retAcc.token;\n            }\n\n            if (tokens.length > 0) {\n              var retMode = tokenizer.getMode(tokens[0].token);\n\n              if (retMode.len > 0) {\n                tokens.shift();\n                key += retMode.token;\n                mode = retMode.token;\n              }\n            } // Be sure that the key specified is in the list: not all keys are physically possible, like Cbmin.\n\n\n            if (parseKeyVoice.standardKey(key, retPitch.token, acc, 0) === undefined) {\n              warn(\"Unsupported key signature: \" + key, str, 0);\n              return ret;\n            }\n          } // We need to do a deep copy because we are going to modify it\n\n\n          var oldKey = parseKeyVoice.deepCopyKey(multilineVars.key); //TODO-PER: HACK! To get the local transpose to work, the transposition is done for each line. This caused the global transposition variable to be factored in twice, so, instead of rewriting that right now, I'm just subtracting one of them here.\n\n          var keyCompensate = multilineVars.globalTranspose ? -multilineVars.globalTranspose : 0;\n          multilineVars.key = parseKeyVoice.deepCopyKey(parseKeyVoice.standardKey(key, retPitch.token, acc, keyCompensate));\n          multilineVars.key.mode = mode;\n\n          if (oldKey) {\n            // Add natural in all places that the old key had an accidental.\n            var kk;\n\n            for (var k = 0; k < multilineVars.key.accidentals.length; k++) {\n              for (kk = 0; kk < oldKey.accidentals.length; kk++) {\n                if (oldKey.accidentals[kk].note && multilineVars.key.accidentals[k].note.toLowerCase() === oldKey.accidentals[kk].note.toLowerCase()) oldKey.accidentals[kk].note = null;\n              }\n            }\n\n            for (kk = 0; kk < oldKey.accidentals.length; kk++) {\n              if (oldKey.accidentals[kk].note) {\n                if (!multilineVars.key.impliedNaturals) multilineVars.key.impliedNaturals = [];\n                multilineVars.key.impliedNaturals.push({\n                  acc: 'natural',\n                  note: oldKey.accidentals[kk].note\n                });\n              }\n            }\n          }\n        }\n\n        break;\n    } // There are two special cases of deprecated syntax. Ignore them if they occur\n\n\n    if (tokens.length === 0) return ret;\n    if (tokens[0].token === 'exp') tokens.shift();\n    if (tokens.length === 0) return ret;\n    if (tokens[0].token === 'oct') tokens.shift(); // now see if there are extra accidentals\n\n    if (tokens.length === 0) return ret;\n    var accs = tokenizer.getKeyAccidentals2(tokens);\n    if (accs.warn) warn(accs.warn, str, 0); // If we have extra accidentals, first replace ones that are of the same pitch before adding them to the end.\n\n    if (accs.accs) {\n      if (!ret.foundKey) {\n        // if there are only extra accidentals, make sure this is set.\n        ret.foundKey = true;\n        multilineVars.key = {\n          root: \"none\",\n          acc: \"\",\n          mode: \"\",\n          accidentals: []\n        };\n      }\n\n      normalizeAccidentals(accs.accs);\n\n      for (var i = 0; i < accs.accs.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < multilineVars.key.accidentals.length && !found; j++) {\n          if (multilineVars.key.accidentals[j].note === accs.accs[i].note) {\n            found = true;\n\n            if (multilineVars.key.accidentals[j].acc !== accs.accs[i].acc) {\n              // If the accidental is different, then replace it. If it is the same, then the declaration was redundant, so just ignore it.\n              multilineVars.key.accidentals[j].acc = accs.accs[i].acc;\n              if (!multilineVars.key.explicitAccidentals) multilineVars.key.explicitAccidentals = [];\n              multilineVars.key.explicitAccidentals.push(accs.accs[i]);\n            }\n          }\n        }\n\n        if (!found) {\n          if (!multilineVars.key.explicitAccidentals) multilineVars.key.explicitAccidentals = [];\n          multilineVars.key.explicitAccidentals.push(accs.accs[i]);\n          multilineVars.key.accidentals.push(accs.accs[i]);\n\n          if (multilineVars.key.impliedNaturals) {\n            for (var kkk = 0; kkk < multilineVars.key.impliedNaturals.length; kkk++) {\n              if (multilineVars.key.impliedNaturals[kkk].note === accs.accs[i].note) multilineVars.key.impliedNaturals.splice(kkk, 1);\n            }\n          }\n        }\n      }\n    } // Now see if any optional parameters are present. They have the form \"key=value\", except that \"clef=\" is optional\n\n\n    var token;\n\n    while (tokens.length > 0) {\n      switch (tokens[0].token) {\n        case \"m\":\n        case \"middle\":\n          tokens.shift();\n\n          if (tokens.length === 0) {\n            warn(\"Expected = after middle\", str, 0);\n            return ret;\n          }\n\n          token = tokens.shift();\n\n          if (token.token !== \"=\") {\n            warn(\"Expected = after middle\", str, token.start);\n            break;\n          }\n\n          if (tokens.length === 0) {\n            warn(\"Expected parameter after middle=\", str, 0);\n            return ret;\n          }\n\n          var pitch = tokenizer.getPitchFromTokens(tokens);\n          if (pitch.warn) warn(pitch.warn, str, 0);\n          if (pitch.position) multilineVars.clef.verticalPos = pitch.position - 6; // we get the position from the middle line, but want to offset it to the first ledger line.\n\n          break;\n\n        case \"transpose\":\n          tokens.shift();\n\n          if (tokens.length === 0) {\n            warn(\"Expected = after transpose\", str, 0);\n            return ret;\n          }\n\n          token = tokens.shift();\n\n          if (token.token !== \"=\") {\n            warn(\"Expected = after transpose\", str, token.start);\n            break;\n          }\n\n          if (tokens.length === 0) {\n            warn(\"Expected parameter after transpose=\", str, 0);\n            return ret;\n          }\n\n          if (tokens[0].type !== 'number') {\n            warn(\"Expected number after transpose\", str, tokens[0].start);\n            break;\n          }\n\n          multilineVars.clef.transpose = tokens[0].intt;\n          tokens.shift();\n          break;\n\n        case \"stafflines\":\n          tokens.shift();\n\n          if (tokens.length === 0) {\n            warn(\"Expected = after stafflines\", str, 0);\n            return ret;\n          }\n\n          token = tokens.shift();\n\n          if (token.token !== \"=\") {\n            warn(\"Expected = after stafflines\", str, token.start);\n            break;\n          }\n\n          if (tokens.length === 0) {\n            warn(\"Expected parameter after stafflines=\", str, 0);\n            return ret;\n          }\n\n          if (tokens[0].type !== 'number') {\n            warn(\"Expected number after stafflines\", str, tokens[0].start);\n            break;\n          }\n\n          multilineVars.clef.stafflines = tokens[0].intt;\n          tokens.shift();\n          break;\n\n        case \"staffscale\":\n          tokens.shift();\n\n          if (tokens.length === 0) {\n            warn(\"Expected = after staffscale\", str, 0);\n            return ret;\n          }\n\n          token = tokens.shift();\n\n          if (token.token !== \"=\") {\n            warn(\"Expected = after staffscale\", str, token.start);\n            break;\n          }\n\n          if (tokens.length === 0) {\n            warn(\"Expected parameter after staffscale=\", str, 0);\n            return ret;\n          }\n\n          if (tokens[0].type !== 'number') {\n            warn(\"Expected number after staffscale\", str, tokens[0].start);\n            break;\n          }\n\n          multilineVars.clef.staffscale = tokens[0].floatt;\n          tokens.shift();\n          break;\n\n        case \"style\":\n          tokens.shift();\n\n          if (tokens.length === 0) {\n            warn(\"Expected = after style\", str, 0);\n            return ret;\n          }\n\n          token = tokens.shift();\n\n          if (token.token !== \"=\") {\n            warn(\"Expected = after style\", str, token.start);\n            break;\n          }\n\n          if (tokens.length === 0) {\n            warn(\"Expected parameter after style=\", str, 0);\n            return ret;\n          }\n\n          switch (tokens[0].token) {\n            case \"normal\":\n            case \"harmonic\":\n            case \"rhythm\":\n            case \"x\":\n              multilineVars.style = tokens[0].token;\n              tokens.shift();\n              break;\n\n            default:\n              warn(\"error parsing style element: \" + tokens[0].token, str, tokens[0].start);\n              break;\n          }\n\n          break;\n\n        case \"clef\":\n          tokens.shift();\n\n          if (tokens.length === 0) {\n            warn(\"Expected = after clef\", str, 0);\n            return ret;\n          }\n\n          token = tokens.shift();\n\n          if (token.token !== \"=\") {\n            warn(\"Expected = after clef\", str, token.start);\n            break;\n          }\n\n          if (tokens.length === 0) {\n            warn(\"Expected parameter after clef=\", str, 0);\n            return ret;\n          }\n\n        //break; yes, we want to fall through. That allows \"clef=\" to be optional.\n\n        case \"treble\":\n        case \"bass\":\n        case \"alto\":\n        case \"tenor\":\n        case \"perc\":\n          // clef is [clef=] [⟨clef type⟩] [⟨line number⟩] [+8|-8]\n          var clef = tokens.shift();\n\n          switch (clef.token) {\n            case 'treble':\n            case 'tenor':\n            case 'alto':\n            case 'bass':\n            case 'perc':\n            case 'none':\n              break;\n\n            case 'C':\n              clef.token = 'alto';\n              break;\n\n            case 'F':\n              clef.token = 'bass';\n              break;\n\n            case 'G':\n              clef.token = 'treble';\n              break;\n\n            case 'c':\n              clef.token = 'alto';\n              break;\n\n            case 'f':\n              clef.token = 'bass';\n              break;\n\n            case 'g':\n              clef.token = 'treble';\n              break;\n\n            default:\n              warn(\"Expected clef name. Found \" + clef.token, str, clef.start);\n              break;\n          }\n\n          if (tokens.length > 0 && tokens[0].type === 'number') {\n            clef.token += tokens[0].token;\n            tokens.shift();\n          }\n\n          if (tokens.length > 1 && (tokens[0].token === '-' || tokens[0].token === '+' || tokens[0].token === '^' || tokens[0].token === '_') && tokens[1].token === '8') {\n            clef.token += tokens[0].token + tokens[1].token;\n            tokens.shift();\n            tokens.shift();\n          }\n\n          multilineVars.clef = {\n            type: clef.token,\n            verticalPos: calcMiddle(clef.token, 0)\n          };\n          if (multilineVars.currentVoice && multilineVars.currentVoice.transpose !== undefined) multilineVars.clef.transpose = multilineVars.currentVoice.transpose;\n          ret.foundClef = true;\n          break;\n\n        default:\n          warn(\"Unknown parameter: \" + tokens[0].token, str, tokens[0].start);\n          tokens.shift();\n      }\n    }\n\n    return ret;\n  };\n\n  var setCurrentVoice = function setCurrentVoice(id) {\n    multilineVars.currentVoice = multilineVars.voices[id];\n    tune.setCurrentVoice(multilineVars.currentVoice.staffNum, multilineVars.currentVoice.index);\n  };\n\n  parseKeyVoice.parseVoice = function (line, i, e) {\n    //First truncate the string to the first non-space character after V: through either the\n    //end of the line or a % character. Then remove trailing spaces, too.\n    var ret = tokenizer.getMeat(line, i, e);\n    var start = ret.start;\n    var end = ret.end; //The first thing on the line is the ID. It can be any non-space string and terminates at the\n    //first space.\n\n    var id = tokenizer.getToken(line, start, end);\n\n    if (id.length === 0) {\n      warn(\"Expected a voice id\", line, start);\n      return;\n    }\n\n    var isNew = false;\n\n    if (multilineVars.voices[id] === undefined) {\n      multilineVars.voices[id] = {};\n      isNew = true;\n      if (multilineVars.score_is_present) warn(\"Can't have an unknown V: id when the %score directive is present\", line, start);\n    }\n\n    start += id.length;\n    start += tokenizer.eatWhiteSpace(line, start);\n    var staffInfo = {\n      startStaff: isNew\n    };\n\n    var addNextTokenToStaffInfo = function addNextTokenToStaffInfo(name) {\n      var attr = tokenizer.getVoiceToken(line, start, end);\n      if (attr.warn !== undefined) warn(\"Expected value for \" + name + \" in voice: \" + attr.warn, line, start);else if (attr.token.length === 0 && line.charAt(start) !== '\"') warn(\"Expected value for \" + name + \" in voice\", line, start);else staffInfo[name] = attr.token;\n      start += attr.len;\n    };\n\n    var addNextTokenToVoiceInfo = function addNextTokenToVoiceInfo(id, name, type) {\n      var attr = tokenizer.getVoiceToken(line, start, end);\n      if (attr.warn !== undefined) warn(\"Expected value for \" + name + \" in voice: \" + attr.warn, line, start);else if (attr.token.length === 0 && line.charAt(start) !== '\"') warn(\"Expected value for \" + name + \" in voice\", line, start);else {\n        if (type === 'number') attr.token = parseFloat(attr.token);\n        multilineVars.voices[id][name] = attr.token;\n      }\n      start += attr.len;\n    };\n\n    var getNextToken = function getNextToken(name, type) {\n      var attr = tokenizer.getVoiceToken(line, start, end);\n      if (attr.warn !== undefined) warn(\"Expected value for \" + name + \" in voice: \" + attr.warn, line, start);else if (attr.token.length === 0 && line.charAt(start) !== '\"') warn(\"Expected value for \" + name + \" in voice\", line, start);else {\n        if (type === 'number') attr.token = parseFloat(attr.token);\n        return attr.token;\n      }\n      start += attr.len;\n    };\n\n    var addNextNoteTokenToVoiceInfo = function addNextNoteTokenToVoiceInfo(id, name) {\n      var noteToTransposition = {\n        \"_B\": 2,\n        \"_E\": 9,\n        \"_b\": -10,\n        \"_e\": -3\n      };\n      var attr = tokenizer.getVoiceToken(line, start, end);\n      if (attr.warn !== undefined) warn(\"Expected one of (_B, _E, _b, _e) for \" + name + \" in voice: \" + attr.warn, line, start);else if (attr.token.length === 0 && line.charAt(start) !== '\"') warn(\"Expected one of (_B, _E, _b, _e) for \" + name + \" in voice\", line, start);else {\n        var t = noteToTransposition[attr.token];\n        if (!t) warn(\"Expected one of (_B, _E, _b, _e) for \" + name + \" in voice\", line, start);else multilineVars.voices[id][name] = t;\n      }\n      start += attr.len;\n    }; //Then the following items can occur in any order:\n\n\n    while (start < end) {\n      var token = tokenizer.getVoiceToken(line, start, end);\n      start += token.len;\n\n      if (token.warn) {\n        warn(\"Error parsing voice: \" + token.warn, line, start);\n      } else {\n        var attr = null;\n\n        switch (token.token) {\n          case 'clef':\n          case 'cl':\n            addNextTokenToStaffInfo('clef'); // TODO-PER: check for a legal clef; do octavizing\n\n            var oct = 0; //\t\t\t\t\t\t\tfor (var ii = 0; ii < staffInfo.clef.length; ii++) {\n            //\t\t\t\t\t\t\t\tif (staffInfo.clef[ii] === ',') oct -= 7;\n            //\t\t\t\t\t\t\t\telse if (staffInfo.clef[ii] === \"'\") oct += 7;\n            //\t\t\t\t\t\t\t}\n\n            if (staffInfo.clef !== undefined) {\n              staffInfo.clef = staffInfo.clef.replace(/[',]/g, \"\"); //'//comment for emacs formatting of regexp\n\n              if (staffInfo.clef.indexOf('+16') !== -1) {\n                oct += 14;\n                staffInfo.clef = staffInfo.clef.replace('+16', '');\n              }\n\n              staffInfo.verticalPos = calcMiddle(staffInfo.clef, oct);\n            }\n\n            break;\n\n          case 'treble':\n          case 'bass':\n          case 'tenor':\n          case 'alto':\n          case 'perc':\n          case 'none':\n          case 'treble\\'':\n          case 'bass\\'':\n          case 'tenor\\'':\n          case 'alto\\'':\n          case 'none\\'':\n          case 'treble\\'\\'':\n          case 'bass\\'\\'':\n          case 'tenor\\'\\'':\n          case 'alto\\'\\'':\n          case 'none\\'\\'':\n          case 'treble,':\n          case 'bass,':\n          case 'tenor,':\n          case 'alto,':\n          case 'none,':\n          case 'treble,,':\n          case 'bass,,':\n          case 'tenor,,':\n          case 'alto,,':\n          case 'none,,':\n            // TODO-PER: handle the octave indicators on the clef by changing the middle property\n            var oct2 = 0; //\t\t\t\t\t\t\tfor (var iii = 0; iii < token.token.length; iii++) {\n            //\t\t\t\t\t\t\t\tif (token.token[iii] === ',') oct2 -= 7;\n            //\t\t\t\t\t\t\t\telse if (token.token[iii] === \"'\") oct2 += 7;\n            //\t\t\t\t\t\t\t}\n\n            staffInfo.clef = token.token.replace(/[',]/g, \"\"); //'//comment for emacs formatting of regexp\n\n            staffInfo.verticalPos = calcMiddle(staffInfo.clef, oct2);\n            multilineVars.voices[id].clef = token.token;\n            break;\n\n          case 'staves':\n          case 'stave':\n          case 'stv':\n            addNextTokenToStaffInfo('staves');\n            break;\n\n          case 'brace':\n          case 'brc':\n            addNextTokenToStaffInfo('brace');\n            break;\n\n          case 'bracket':\n          case 'brk':\n            addNextTokenToStaffInfo('bracket');\n            break;\n\n          case 'name':\n          case 'nm':\n            addNextTokenToStaffInfo('name');\n            break;\n\n          case 'subname':\n          case 'sname':\n          case 'snm':\n            addNextTokenToStaffInfo('subname');\n            break;\n\n          case 'merge':\n            staffInfo.startStaff = false;\n            break;\n\n          case 'stem':\n          case 'stems':\n            attr = tokenizer.getVoiceToken(line, start, end);\n            if (attr.warn !== undefined) warn(\"Expected value for stems in voice: \" + attr.warn, line, start);else if (attr.token === 'up' || attr.token === 'down') multilineVars.voices[id].stem = attr.token;else warn(\"Expected up or down for voice stem\", line, start);\n            start += attr.len;\n            break;\n\n          case 'up':\n          case 'down':\n            multilineVars.voices[id].stem = token.token;\n            break;\n\n          case 'middle':\n          case 'm':\n            addNextTokenToStaffInfo('verticalPos');\n            staffInfo.verticalPos = parseMiddle(staffInfo.verticalPos).mid;\n            break;\n\n          case 'gchords':\n          case 'gch':\n            multilineVars.voices[id].suppressChords = true; // gchords can stand on its own, or it could be gchords=0.\n\n            attr = tokenizer.getVoiceToken(line, start, end);\n            if (attr.token === \"0\") start = start + attr.len;\n            break;\n\n          case 'space':\n          case 'spc':\n            addNextTokenToStaffInfo('spacing');\n            break;\n\n          case 'scale':\n            addNextTokenToVoiceInfo(id, 'scale', 'number');\n            break;\n\n          case 'score':\n            addNextNoteTokenToVoiceInfo(id, 'scoreTranspose');\n            break;\n\n          case 'transpose':\n            addNextTokenToVoiceInfo(id, 'transpose', 'number');\n            break;\n\n          case 'stafflines':\n            addNextTokenToVoiceInfo(id, 'stafflines', 'number');\n            break;\n\n          case 'staffscale':\n            // TODO-PER: This is passed to the engraver, but the engraver ignores it.\n            addNextTokenToVoiceInfo(id, 'staffscale', 'number');\n            break;\n\n          case 'octave':\n            // TODO-PER: This is accepted, but not implemented, yet.\n            addNextTokenToVoiceInfo(id, 'octave', 'number');\n            break;\n\n          case 'volume':\n            // TODO-PER: This is accepted, but not implemented, yet.\n            addNextTokenToVoiceInfo(id, 'volume', 'number');\n            break;\n\n          case 'cue':\n            // TODO-PER: This is accepted, but not implemented, yet.\n            var cue = getNextToken('cue', 'string');\n            if (cue === 'on') multilineVars.voices[id].scale = 0.6;else multilineVars.voices[id].scale = 1;\n            break;\n\n          case \"style\":\n            attr = tokenizer.getVoiceToken(line, start, end);\n            if (attr.warn !== undefined) warn(\"Expected value for style in voice: \" + attr.warn, line, start);else if (attr.token === 'normal' || attr.token === 'harmonic' || attr.token === 'rhythm' || attr.token === 'x') multilineVars.voices[id].style = attr.token;else warn(\"Expected one of [normal, harmonic, rhythm, x] for voice style\", line, start);\n            start += attr.len;\n            break;\n          // default:\n          // Use this to find V: usages that aren't handled.\n          // \tconsole.log(\"parse voice\", token, tune.metaText.title);\n        }\n      }\n\n      start += tokenizer.eatWhiteSpace(line, start);\n    } // now we've filled up staffInfo, figure out what to do with this voice\n    // TODO-PER: It is unclear from the standard and the examples what to do with brace, bracket, and staves, so they are ignored for now.\n\n\n    if (staffInfo.startStaff || multilineVars.staves.length === 0) {\n      multilineVars.staves.push({\n        index: multilineVars.staves.length,\n        meter: multilineVars.origMeter\n      });\n      if (!multilineVars.score_is_present) multilineVars.staves[multilineVars.staves.length - 1].numVoices = 0;\n    }\n\n    if (multilineVars.voices[id].staffNum === undefined) {\n      // store where to write this for quick access later.\n      multilineVars.voices[id].staffNum = multilineVars.staves.length - 1;\n      var vi = 0;\n\n      for (var v in multilineVars.voices) {\n        if (multilineVars.voices.hasOwnProperty(v)) {\n          if (multilineVars.voices[v].staffNum === multilineVars.voices[id].staffNum) vi++;\n        }\n      }\n\n      multilineVars.voices[id].index = vi - 1;\n    }\n\n    var s = multilineVars.staves[multilineVars.voices[id].staffNum];\n    if (!multilineVars.score_is_present) s.numVoices++;\n    if (staffInfo.clef) s.clef = {\n      type: staffInfo.clef,\n      verticalPos: staffInfo.verticalPos\n    };\n    if (staffInfo.spacing) s.spacing_below_offset = staffInfo.spacing;\n    if (staffInfo.verticalPos) s.verticalPos = staffInfo.verticalPos;\n\n    if (staffInfo.name) {\n      if (s.name) s.name.push(staffInfo.name);else s.name = [staffInfo.name];\n    }\n\n    if (staffInfo.subname) {\n      if (s.subname) s.subname.push(staffInfo.subname);else s.subname = [staffInfo.subname];\n    }\n\n    setCurrentVoice(id);\n  };\n})();\n\nmodule.exports = parseKeyVoice;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","'use strict';\n\nvar _slicedToArray = require(\"/home/travis/build/music-markdown/music-markdown/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar strictUriEncode = require('strict-uri-encode');\n\nvar decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key, value, index) {\n        return value === null ? [encode(key, options), '[', index, ']'].join('') : [encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('');\n      };\n\n    case 'bracket':\n      return function (key, value) {\n        return value === null ? [encode(key, options), '[]'].join('') : [encode(key, options), '[]=', encode(value, options)].join('');\n      };\n\n    default:\n      return function (key, value) {\n        return value === null ? encode(key, options) : [encode(key, options), '=', encode(value, options)].join('');\n      };\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  var result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key, value, accumulator) {\n        result = /\\[(\\d*)\\]$/.exec(key);\n        key = key.replace(/\\[\\d*\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = {};\n        }\n\n        accumulator[key][result[1]] = value;\n      };\n\n    case 'bracket':\n      return function (key, value, accumulator) {\n        result = /(\\[\\])$/.exec(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    default:\n      return function (key, value, accumulator) {\n        if (accumulator[key] === undefined) {\n          accumulator[key] = value;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }).map(function (key) {\n      return input[key];\n    });\n  }\n\n  return input;\n}\n\nfunction extract(input) {\n  var queryStart = input.indexOf('?');\n\n  if (queryStart === -1) {\n    return '';\n  }\n\n  return input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n  options = Object.assign({\n    decode: true,\n    arrayFormat: 'none'\n  }, options);\n  var formatter = parserForArrayFormat(options); // Create an object with no prototype\n\n  var ret = Object.create(null);\n\n  if (typeof input !== 'string') {\n    return ret;\n  }\n\n  input = input.trim().replace(/^[?#&]/, '');\n\n  if (!input) {\n    return ret;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = input.split('&')[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var param = _step.value;\n\n      var _param$replace$split = param.replace(/\\+/g, ' ').split('='),\n          _param$replace$split2 = _slicedToArray(_param$replace$split, 2),\n          key = _param$replace$split2[0],\n          value = _param$replace$split2[1]; // Missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n\n      value = value === undefined ? null : decode(value, options);\n      formatter(decode(key, options), value, ret);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return Object.keys(ret).sort().reduce(function (result, key) {\n    var value = ret[key];\n\n    if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n      // Sort object keys, not values\n      result[key] = keysSorter(value);\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (obj, options) {\n  if (!obj) {\n    return '';\n  }\n\n  options = Object.assign({\n    encode: true,\n    strict: true,\n    arrayFormat: 'none'\n  }, options);\n  var formatter = encoderForArrayFormat(options);\n  var keys = Object.keys(obj);\n\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n\n  return keys.map(function (key) {\n    var value = obj[key];\n\n    if (value === undefined) {\n      return '';\n    }\n\n    if (value === null) {\n      return encode(key, options);\n    }\n\n    if (Array.isArray(value)) {\n      var result = [];\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = value.slice()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var value2 = _step2.value;\n\n          if (value2 === undefined) {\n            continue;\n          }\n\n          result.push(formatter(key, value2, result.length));\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return result.join('&');\n    }\n\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&');\n};\n\nexports.parseUrl = function (input, options) {\n  var hashStart = input.indexOf('#');\n\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n\n  return {\n    url: input.split('?')[0] || '',\n    query: parse(extract(input), options)\n  };\n};","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n/*eslint quotes:0*/\n\nmodule.exports = require('entities/maps/entities.json');","'use strict';\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse = require('./parse');","module.exports = /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;","module.exports = /[\\0-\\x1F\\x7F-\\x9F]/;","module.exports = /[ \\xA0\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;","// Regexps to match html elements\n'use strict';\n\nvar attr_name = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar unquoted = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\nvar attr_value = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\nvar attribute = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\nvar open_tag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\nvar close_tag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;","// ~~strike through~~\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i,\n      scanned,\n      token,\n      len,\n      ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) {\n    return false;\n  }\n\n  if (len % 2) {\n    token = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token = state.push('text', '', 0);\n    token.content = ch + ch;\n    state.delimiters.push({\n      marker: marker,\n      jump: i,\n      token: state.tokens.length - 1,\n      level: state.level,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n}; // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function strikethrough(state) {\n  var i,\n      j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E\n    /* ~ */\n    ) {\n        continue;\n      }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n    token = state.tokens[startDelim.token];\n    token.type = 's_open';\n    token.tag = 's';\n    token.nesting = 1;\n    token.markup = '~~';\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = 's_close';\n    token.tag = 's';\n    token.nesting = -1;\n    token.markup = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' && state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1);\n    }\n  } // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n\n\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n};","// Process *this* and _that_\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i,\n      scanned,\n      token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x5F\n  /* _ */\n  && marker !== 0x2A\n  /* * */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump: i,\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n      // Token level.\n      //\n      level: state.level,\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n}; // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function emphasis(state) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F\n    /* _ */\n    && startDelim.marker !== 0x2A\n    /* * */\n    ) {\n        continue;\n      } // Process only opening markers\n\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end]; // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n\n    isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 && delimiters[i - 1].token === startDelim.token - 1 && delimiters[startDelim.end + 1].token === endDelim.token + 1 && delimiters[i - 1].marker === startDelim.marker;\n    ch = String.fromCharCode(startDelim.marker);\n    token = state.tokens[startDelim.token];\n    token.type = isStrong ? 'strong_open' : 'em_open';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = isStrong ? 'strong_close' : 'em_close';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n};","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var TimingCallbacks = function TimingCallbacks(target, params) {\n  var self = this;\n  if (!params) params = {};\n  self.qpm = params.qpm;\n\n  if (!self.qpm) {\n    var tempo = target.metaText ? target.metaText.tempo : null;\n    self.qpm = target.getBpm(tempo);\n  }\n\n  self.extraMeasuresAtBeginning = params.extraMeasuresAtBeginning ? params.extraMeasuresAtBeginning : 0;\n  self.beatCallback = params.beatCallback; // This is called for each beat.\n\n  self.eventCallback = params.eventCallback; // This is called for each note or rest encountered.\n\n  self.lineEndCallback = params.lineEndCallback; // This is called when the end of a line is approaching.\n\n  self.lineEndAnticipation = params.lineEndAnticipation ? params.lineEndAnticipation : 0; // How many milliseconds before the end should the call happen.\n\n  self.replaceTarget = function (newTarget) {\n    newTarget.setTiming(self.qpm, self.extraMeasuresAtBeginning);\n    if (newTarget.noteTimings.length === 0) return;\n\n    if (self.lineEndCallback) {\n      self.lineEndTimings = getLineEndTimings(newTarget.noteTimings, self.lineEndAnticipation);\n    }\n\n    self.noteTimings = newTarget.noteTimings;\n  };\n\n  self.replaceTarget(target);\n  if (self.noteTimings.length === 0) return; // noteTimings contains an array of events sorted by time. Events that happen at the same time are in the same element of the array.\n\n  self.noteTimings = target.noteTimings;\n  self.millisecondsPerBeat = 1000 / (self.qpm / 60);\n  self.lastMoment = self.noteTimings[self.noteTimings.length - 1].milliseconds;\n  self.startTime = null;\n  self.currentBeat = 0;\n  self.currentEvent = 0;\n  self.isPaused = false;\n  self.pausedTime = null;\n  self.justUnpaused = false;\n\n  self.doTiming = function (timestamp) {\n    if (!self.startTime) {\n      self.startTime = timestamp;\n    } else if (self.justUnpaused) {\n      // Add the amount we paused to the start time to get the right place.\n      var timePaused = timestamp - self.pausedTime;\n      self.startTime += timePaused;\n    }\n\n    self.justUnpaused = false;\n\n    if (self.isPaused) {\n      self.pausedTime = timestamp;\n    } else {\n      var currentTime = timestamp - self.startTime;\n      currentTime += 50; // Add a little slop because this function isn't called exactly.\n\n      if (currentTime < self.lastMoment) requestAnimationFrame(self.doTiming);\n\n      if (self.currentBeat * self.millisecondsPerBeat < currentTime) {\n        if (self.beatCallback) self.beatCallback(self.currentBeat);\n        self.currentBeat++;\n      }\n\n      while (self.noteTimings.length > self.currentEvent && self.noteTimings[self.currentEvent].milliseconds < currentTime) {\n        if (self.eventCallback && self.noteTimings[self.currentEvent].type === 'event') self.eventCallback(self.noteTimings[self.currentEvent]);\n        self.currentEvent++;\n      }\n\n      if (self.lineEndCallback && self.lineEndTimings.length && self.lineEndTimings[0].milliseconds <= currentTime) {\n        self.lineEndCallback(self.lineEndTimings[0]);\n        self.lineEndTimings.shift();\n      }\n\n      if (currentTime >= self.lastMoment && self.eventCallback) self.eventCallback(null);\n    }\n  };\n\n  self.start = function () {\n    if (self.isPaused) {\n      self.isPaused = false;\n      self.justUnpaused = true;\n    }\n\n    requestAnimationFrame(self.doTiming);\n  };\n\n  self.pause = function () {\n    self.isPaused = true;\n  };\n\n  self.reset = function () {\n    self.currentBeat = 0;\n    self.currentEvent = 0;\n    self.startTime = null;\n    self.pausedTime = null;\n\n    if (self.lineEndCallback) {\n      self.lineEndTimings = getLineEndTimings(self.noteTimings, self.lineEndAnticipation);\n    }\n  };\n\n  self.stop = function () {\n    self.pause();\n    self.reset();\n  };\n};\n\nfunction getLineEndTimings(timings, anticipation) {\n  // Returns an array of milliseconds to call the lineEndCallback.\n  // This figures out the timing of the beginning of each line and subtracts the anticipation from it.\n  var callbackTimes = [];\n  var lastTop = null;\n\n  for (var i = 0; i < timings.length; i++) {\n    var timing = timings[i];\n\n    if (timing.top !== lastTop) {\n      callbackTimes.push({\n        milliseconds: timing.milliseconds - anticipation,\n        top: timing.top,\n        bottom: timing.top + timing.height\n      });\n      lastTop = timing.top;\n    }\n  }\n\n  return callbackTimes;\n}\n\nmodule.exports = TimingCallbacks;","//    abc_transpose.js: Handles the automatic transposition of key signatures, chord symbols, and notes.\n//    Copyright (C) 2010-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar transpose = {};\nvar keyIndex = {\n  'C': 0,\n  'C#': 1,\n  'Db': 1,\n  'D': 2,\n  'D#': 3,\n  'Eb': 3,\n  'E': 4,\n  'F': 5,\n  'F#': 6,\n  'Gb': 6,\n  'G': 7,\n  'G#': 8,\n  'Ab': 8,\n  'A': 9,\n  'A#': 10,\n  'Bb': 10,\n  'B': 11\n};\nvar newKey = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'];\nvar newKeyMinor = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'Bb', 'B'];\n\ntranspose.keySignature = function (multilineVars, keys, keyName, root, acc, localTranspose) {\n  if (!localTranspose) localTranspose = 0;\n  multilineVars.localTransposeVerticalMovement = 0;\n  multilineVars.localTransposePreferFlats = false;\n  var k = keys[keyName];\n  if (!k) return multilineVars.key; // If the key isn't in the list, it is non-standard. We won't attempt to transpose it.\n\n  multilineVars.localTranspose = (multilineVars.globalTranspose ? multilineVars.globalTranspose : 0) + localTranspose;\n  if (!multilineVars.localTranspose) return {\n    accidentals: k,\n    root: root,\n    acc: acc\n  };\n  multilineVars.globalTransposeOrigKeySig = k;\n\n  if (multilineVars.localTranspose % 12 === 0) {\n    multilineVars.localTransposeVerticalMovement = multilineVars.localTranspose / 12 * 7;\n    return {\n      accidentals: k,\n      root: root,\n      acc: acc\n    };\n  }\n\n  var baseKey = keyName[0];\n\n  if (keyName[1] === 'b' || keyName[1] === '#') {\n    baseKey += keyName[1];\n    keyName = keyName.substr(2);\n  } else keyName = keyName.substr(1);\n\n  var index = keyIndex[baseKey] + multilineVars.localTranspose;\n\n  while (index < 0) {\n    index += 12;\n  }\n\n  if (index > 11) index = index % 12;\n  var newKeyName = keyName[0] === 'm' ? newKeyMinor[index] : newKey[index];\n  var transposedKey = newKeyName + keyName;\n  var newKeySig = keys[transposedKey];\n  if (newKeySig.length > 0 && newKeySig[0].acc === 'flat') multilineVars.localTransposePreferFlats = true;\n  var distance = transposedKey.charCodeAt(0) - baseKey.charCodeAt(0);\n\n  if (multilineVars.localTranspose > 0) {\n    if (distance < 0) distance += 7;else if (distance === 0) {\n      // There's a funny thing that happens when the key changes only an accidental's distance, for instance, from Ab to A.\n      // If the distance is positive (we are raising pitch), and the change is higher (that is, Ab -> A), then raise an octave.\n      // This test is easier because we know the keys are not equal (or we wouldn't get this far), so if the base key is a flat key, then\n      // the transposed key must be higher. Likewise, if the transposed key is sharp, then the base key must be lower. And one\n      // of those two things must be true because they are not both natural.\n      if (baseKey[1] === '#' || transposedKey[1] === 'b') distance += 7;\n    }\n  } else if (multilineVars.localTranspose < 0) {\n    if (distance > 0) distance -= 7;else if (distance === 0) {\n      // There's a funny thing that happens when the key changes only an accidental's distance, for instance, from Ab to A.\n      // If the distance is negative (we are dropping pitch), and the change is lower (that is, A -> Ab), then drop an octave.\n      if (baseKey[1] === 'b' || transposedKey[1] === '#') distance -= 7;\n    }\n  }\n\n  if (multilineVars.localTranspose > 0) multilineVars.localTransposeVerticalMovement = distance + Math.floor(multilineVars.localTranspose / 12) * 7;else multilineVars.localTransposeVerticalMovement = distance + Math.ceil(multilineVars.localTranspose / 12) * 7;\n  return {\n    accidentals: newKeySig,\n    root: newKeyName[0],\n    acc: newKeyName.length > 1 ? newKeyName[1] : \"\"\n  };\n};\n\nvar sharpChords = ['C', 'C♯', 'D', \"D♯\", 'E', 'F', \"F♯\", 'G', 'G♯', 'A', 'A♯', 'B'];\nvar flatChords = ['C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭', 'G', 'A♭', 'A', 'B♭', 'B'];\n\ntranspose.chordName = function (multilineVars, chord) {\n  if (multilineVars.localTranspose && multilineVars.localTranspose % 12 !== 0) {\n    // The chords are the same if it is an exact octave change.\n    var transposeFactor = multilineVars.localTranspose;\n\n    while (transposeFactor < 0) {\n      transposeFactor += 12;\n    }\n\n    if (transposeFactor > 11) transposeFactor = transposeFactor % 12;\n    chord = chord.replace(/C♭/g, \"`~11`\");\n    chord = chord.replace(/D♭/g, \"`~1`\");\n    chord = chord.replace(/E♭/g, \"`~3`\");\n    chord = chord.replace(/F♭/g, \"`~4`\");\n    chord = chord.replace(/G♭/g, \"`~6`\");\n    chord = chord.replace(/A♭/g, \"`~8`\");\n    chord = chord.replace(/B♭/g, \"`~10`\");\n    chord = chord.replace(/C♯/g, \"`~1`\");\n    chord = chord.replace(/D♯/g, \"`~3`\");\n    chord = chord.replace(/E♯/g, \"`~5`\");\n    chord = chord.replace(/F♯/g, \"`~6`\");\n    chord = chord.replace(/G♯/g, \"`~8`\");\n    chord = chord.replace(/A♯/g, \"`~10`\");\n    chord = chord.replace(/B♯/g, \"`~0`\");\n    chord = chord.replace(/C/g, \"`~0`\");\n    chord = chord.replace(/D/g, \"`~2`\");\n    chord = chord.replace(/E/g, \"`~4`\");\n    chord = chord.replace(/F/g, \"`~5`\");\n    chord = chord.replace(/G/g, \"`~7`\");\n    chord = chord.replace(/A/g, \"`~9`\");\n    chord = chord.replace(/B/g, \"`~11`\");\n    var arr = chord.split(\"`\");\n\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i][0] === '~') {\n        var chordNum = parseInt(arr[i].substr(1), 10);\n        chordNum += transposeFactor;\n        if (chordNum > 11) chordNum -= 12;\n        arr[i] = multilineVars.localTransposePreferFlats ? flatChords[chordNum] : sharpChords[chordNum];\n      }\n    }\n\n    chord = arr.join(\"\");\n  }\n\n  return chord;\n};\n\nvar pitchToLetter = ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n\nfunction accidentalChange(origPitch, newPitch, accidental, origKeySig, newKeySig) {\n  var origPitchLetter = pitchToLetter[(origPitch + 49) % 7]; // Make sure it is a positive pitch before normalizing.\n\n  var origAccidental = 0;\n\n  for (var i = 0; i < origKeySig.length; i++) {\n    if (origKeySig[i].note.toLowerCase() === origPitchLetter) origAccidental = accidentals[origKeySig[i].acc];\n  }\n\n  var currentAccidental = accidentals[accidental];\n  var delta = currentAccidental - origAccidental;\n  var newPitchLetter = pitchToLetter[(newPitch + 49) % 7]; // Make sure it is a positive pitch before normalizing.\n\n  var newAccidental = 0;\n\n  for (var j = 0; j < newKeySig.accidentals.length; j++) {\n    if (newKeySig.accidentals[j].note.toLowerCase() === newPitchLetter) newAccidental = accidentals[newKeySig.accidentals[j].acc];\n  }\n\n  var calcAccidental = delta + newAccidental;\n\n  if (calcAccidental < -2) {\n    newPitch--;\n    calcAccidental += newPitchLetter === 'c' || newPitchLetter === 'f' ? 1 : 2;\n  }\n\n  if (calcAccidental > 2) {\n    newPitch++;\n    calcAccidental -= newPitchLetter === 'b' || newPitchLetter === 'e' ? 1 : 2;\n  }\n\n  return [newPitch, calcAccidental];\n}\n\nvar accidentals = {\n  dblflat: -2,\n  flat: -1,\n  natural: 0,\n  sharp: 1,\n  dblsharp: 2\n};\nvar accidentals2 = {\n  \"-2\": \"dblflat\",\n  \"-1\": \"flat\",\n  \"0\": \"natural\",\n  \"1\": \"sharp\",\n  \"2\": \"dblsharp\"\n};\n\ntranspose.note = function (multilineVars, el) {\n  // the \"el\" that is passed in has el.accidental, and el.pitch. \"pitch\" is the vertical position (0=middle C)\n  // localTranspose is the number of half steps\n  // localTransposeVerticalMovement is the vertical distance to move.\n  if (!multilineVars.localTranspose) return;\n  var origPitch = el.pitch;\n  el.pitch = el.pitch + multilineVars.localTransposeVerticalMovement;\n\n  if (el.accidental) {\n    var ret = accidentalChange(origPitch, el.pitch, el.accidental, multilineVars.globalTransposeOrigKeySig, multilineVars.targetKey);\n    el.pitch = ret[0];\n    el.accidental = accidentals2[ret[1]];\n  }\n};\n\nmodule.exports = transpose;","//    wrap_lines.js: does line wrap on an already parsed tune.\n//    Copyright (C) 2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nfunction wrapLines(tune, lineBreaks) {\n  if (!lineBreaks || tune.lines.length === 0) return; // tune.lines contains nested arrays: there is an array of lines (that's the part this function rewrites),\n  // there is an array of staffs per line (for instance, piano will have 2, orchestra will have many)\n  // there is an array of voices per staff (for instance, 4-part harmony might have bass and tenor on a single staff)\n  // The measure numbers start at zero for each staff, but on the succeeding lines, the measure numbers are reset to the beginning of the line.\n\n  var newLines = []; // keep track of our counters for each staff and voice\n\n  var startNewLine = [];\n  var currentLine = [];\n  var measureNumber = [];\n  var measureMarker = [];\n  var lastMeter = '';\n\n  for (var i = 0; i < tune.lines.length; i++) {\n    var line = tune.lines[i];\n\n    if (line.staff) {\n      var staffs = line.staff;\n\n      for (var j = 0; j < staffs.length; j++) {\n        if (startNewLine[j] === undefined) {\n          startNewLine[j] = [];\n          currentLine[j] = [];\n          measureNumber[j] = [];\n          measureMarker[j] = [];\n        }\n\n        var staff = staffs[j];\n        var voices = staff.voices;\n\n        for (var k = 0; k < voices.length; k++) {\n          if (startNewLine[j][k] === undefined) {\n            startNewLine[j][k] = true;\n            currentLine[j][k] = 0;\n            measureNumber[j][k] = 0;\n            measureMarker[j][k] = 0;\n          }\n\n          var voice = voices[k];\n\n          for (var e = 0; e < voice.length; e++) {\n            if (startNewLine[j][k]) {\n              if (!newLines[currentLine[j][k]]) newLines[currentLine[j][k]] = {\n                staff: []\n              };\n\n              if (!newLines[currentLine[j][k]].staff[j]) {\n                newLines[currentLine[j][k]].staff[j] = {\n                  voices: []\n                };\n\n                for (var key in staff) {\n                  if (staff.hasOwnProperty(key)) {\n                    if (key === 'meter') {\n                      if (newLines.length === 1 || lastMeter !== JSON.stringify(staff[key])) {\n                        lastMeter = JSON.stringify(staff[key]);\n                        newLines[currentLine[j][k]].staff[j][key] = staff[key];\n                      }\n                    } else if (key !== 'voices') {\n                      newLines[currentLine[j][k]].staff[j][key] = staff[key];\n                    }\n                  }\n                }\n              }\n\n              if (measureMarker[j][k]) newLines[currentLine[j][k]].staff[j].barNumber = measureMarker[j][k];\n              startNewLine[j][k] = false;\n            }\n\n            var element = voice[e];\n            if (!newLines[currentLine[j][k]].staff[j].voices[k]) newLines[currentLine[j][k]].staff[j].voices[k] = [];\n            newLines[currentLine[j][k]].staff[j].voices[k].push(element);\n\n            if (element.el_type === 'bar') {\n              measureNumber[j][k]++;\n\n              if (lineBreaks[measureNumber[j][k]]) {\n                startNewLine[j][k] = true;\n                currentLine[j][k]++;\n                measureMarker[j][k] = element.barNumber;\n                delete element.barNumber;\n              }\n            }\n          }\n        }\n      }\n    } else {\n      newLines.push(line);\n      currentLine++;\n    }\n  }\n\n  tune.lines = newLines;\n}\n\nfunction freeFormLineBreaks(widths, lineBreakPoint) {\n  var lineBreaks = [];\n  var totals = [];\n  var totalThisLine = 0; // run through each measure and see if the accumulation is less than the ideal.\n  // if it passes the ideal, then see whether the last or this one is closer to the ideal.\n\n  for (var i = 0; i < widths.length; i++) {\n    var width = widths[i];\n    var attemptedWidth = totalThisLine + width;\n    if (attemptedWidth < lineBreakPoint) totalThisLine = attemptedWidth;else {\n      // This just passed the ideal, so see whether the previous or the current number of measures is closer.\n      var oldDistance = lineBreakPoint - totalThisLine;\n      var newDistance = attemptedWidth - lineBreakPoint;\n\n      if (oldDistance < newDistance && totalThisLine > 0) {\n        lineBreaks.push(i - 1);\n        totals.push(Math.round(totalThisLine - width));\n        totalThisLine = width;\n      } else {\n        if (i < widths.length - 1) {\n          lineBreaks.push(i);\n          totals.push(Math.round(totalThisLine));\n          totalThisLine = 0;\n        }\n      }\n    }\n  }\n\n  totals.push(Math.round(totalThisLine));\n  return {\n    lineBreaks: lineBreaks,\n    totals: totals\n  };\n} // function createLineTestArray(numLines, numMeasures, maxMeasuresPerLine, minMeasuresPerLine) {\n// \tvar tries = [];\n// \t// To get all the iterations, it is every digit in a particular base-numbering system.\n// \t// That is, we want to generate every number that is (numLines-1) digits, in base (max-min+1)\n// \t// For instance, for 5 lines where the min is 6 and max is 8, we want ever combination of 4 digits in base 3.\n// \tvar base = maxMeasuresPerLine - minMeasuresPerLine + 1;\n// \tvar digits = numLines - 1; // The last digit is fixed: it is what ever is needed to sum up to the total number of measures.\n// \tvar done = false;\n// \tvar iter = 0;\n// \twhile (!done) {\n// \t\tvar attempt = [];\n// \t\tvar num = iter;\n// \t\tvar total = 0;\n// \t\tfor (var d = digits - 1; d >= 0; d--) {\n// \t\t\tattempt[d] = (num % base) + minMeasuresPerLine;\n// \t\t\tnum = Math.floor(num / base);\n// \t\t\ttotal += attempt[d];\n// \t\t}\n// \t\tif (num > 0)\n// \t\t\tdone = true; // continue until we exceed the greatest number. We know because there is a remainer.\n// \t\telse {\n// \t\t\tvar lastLine = numMeasures - total;\n// \t\t\tif (lastLine >= minMeasuresPerLine && lastLine <= maxMeasuresPerLine) {\n// \t\t\t\tattempt[digits] = lastLine;\n// \t\t\t\ttries.push(attempt);\n// \t\t\t}\n// \t\t\titer++;\n// \t\t}\n// \t}\n// \treturn tries;\n// }\n// function getVariance(attempt, idealLineBreak, widths, allowableOverage) {\n// \tvar measureNumber = 0;\n// \tvar thisWorstVariance = 0;\n// \tfor (var j = 0; j < attempt.length; j++) {\n// \t\tvar lineWidth = 0;\n// \t\tvar measuresThisLine = attempt[j];\n// \t\tfor (var k = 0; k < measuresThisLine; k++) {\n// \t\t\tlineWidth += widths[measureNumber++];\n// \t\t}\n// \t\tif (lineWidth > allowableOverage)\n// \t\t\treturn null;\n// \t\tvar variance = Math.abs(lineWidth - idealLineBreak);\n// \t\tif (variance > thisWorstVariance)\n// \t\t\tthisWorstVariance = variance;\n// \t}\n// \treturn thisWorstVariance;\n// }\n// function getMaxVariance(widths, lineBreakPoint, lineBreaks) {\n// \tvar maxVariance = 0;\n// \tvar numLines = lineBreaks.length + 1; // the last line doesn't have an explicit break\n// \tvar measureNumber = 0;\n// \tvar totals = [];\n// \tfor (var i = 0; i <= lineBreaks.length; i++) {\n// \t\tvar breakMeasure = (i === lineBreaks.length) ? widths.length : lineBreaks[i];\n// \t\tvar thisTotal = 0;\n// \t\tfor (var j = measureNumber; j < breakMeasure; j++) {\n// \t\t\tthisTotal += widths[j];\n// \t\t}\n// \t\tmeasureNumber = breakMeasure;\n// \t\tvar thisVariance = thisTotal <= lineBreakPoint ? lineBreakPoint - thisTotal : 1000000;\n// \t\ttotals.push({total: thisTotal, variance: thisVariance})\n// \t\tmaxVariance = Math.max(maxVariance, thisVariance);\n// \t}\n//\n// \tconsole.log(lineBreakPoint, totals)\n// \treturn maxVariance;\n// }\n\n\nfunction getVariance(widths, lineBreaks) {\n  var numLines = lineBreaks.length + 1; // the last line doesn't have an explicit break\n\n  var avg = widths.total / numLines;\n  var largestVariance = 0;\n  var measureNumber = 0;\n\n  for (var i = 0; i <= lineBreaks.length; i++) {\n    var breakMeasure = i === lineBreaks.length ? widths.measureWidths.length - 1 : lineBreaks[i];\n    var thisVariance = lineVariance(widths.measureWidths, measureNumber, breakMeasure, avg);\n    measureNumber = breakMeasure + 1;\n    largestVariance = Math.max(largestVariance, thisVariance);\n  }\n\n  return largestVariance;\n} // function getAvgVariance(widths, lineBreakPoint, lineBreaks) {\n// \tvar totalVariance = 0;\n// \tvar numLines = lineBreaks.length + 1; // the last line doesn't have an explicit break\n// \tvar measureNumber = 0;\n// \tfor (var i = 0; i <= lineBreaks.length; i++) {\n// \t\tvar breakMeasure = (i === lineBreaks.length) ? widths.length : lineBreaks[i];\n// \t\tvar thisTotal = 0;\n// \t\tfor (var j = measureNumber; j < breakMeasure; j++) {\n// \t\t\tthisTotal += widths[j];\n// \t\t}\n// \t\tmeasureNumber = breakMeasure;\n// \t\tvar thisVariance = Math.abs(lineBreakPoint - thisTotal);\n// \t\ttotalVariance += thisVariance;\n// \t}\n//\n// \treturn totalVariance / numLines;\n// }\n\n\nfunction lineVariance(widths, start, end, avg) {\n  var thisTotal = lineWidth(widths, start, end);\n  var thisVariance = Math.abs(avg - thisTotal);\n  return thisVariance;\n}\n\nfunction lineWidth(widths, start, end) {\n  var thisTotal = 0;\n\n  for (var j = start; j <= end; j++) {\n    thisTotal += widths[j];\n  }\n\n  return thisTotal;\n} // TODO-PER: For long pieces of music, this can get long, so stop finding the combinations at an arbitrary place.\n\n\nfunction getAttempts(widths, start, linesLeft, min, max, lastLines) {\n  var MAX_COMBINATIONS = 1200;\n  var acc = 0;\n  var attempts = [];\n\n  for (var i = start; i < widths.length && acc < max; i++) {\n    acc += widths[i];\n    if (acc > max) break;\n\n    if (acc > min) {\n      if (linesLeft > 0 && attempts.length < MAX_COMBINATIONS) {\n        var nextLines = getAttempts(widths, i + 1, linesLeft - 1, min, max, lastLines);\n\n        for (var j = 0; j < nextLines.length; j++) {\n          attempts.push([i].concat(nextLines[j]));\n        }\n      }\n\n      if (linesLeft === 1 && lastLines.indexOf(i) >= 0) attempts.push([i]);\n    }\n  }\n\n  return attempts;\n}\n\nfunction lastLinePossibilities(widths, start, min, max) {\n  var acc = 0;\n  var possibilities = [];\n\n  for (var i = widths.length - 1; i >= 0; i--) {\n    acc += widths[i];\n    if (acc > max) break;\n\n    if (acc > min && i < start) {\n      possibilities.push(i - 1);\n    }\n  }\n\n  return possibilities;\n}\n\nfunction optimizeLineWidths(widths, lineBreakPoint, lineBreaks, explanation) {\n  // Instead of having to try all the different combinations to find the best, we start with an important piece of knowledge about the lineBreaks we are given:\n  // If there is a line too short, it is the last one.\n  // So, let's just do a couple of tweaks to see how it works to add one or two measures to the last line.\n  var avg = widths.total / (lineBreaks.length + 1);\n  var variance = getVariance(widths, lineBreaks);\n  var variancePct = variance / lineBreakPoint * 100;\n  if (lineBreaks.length === 0) return {\n    failed: true,\n    reason: \"Only one line.\"\n  };\n  var lastLineStart = lineBreaks[lineBreaks.length - 1] + 1;\n  var lastLineVariance = lineVariance(widths.measureWidths, lastLineStart, widths.measureWidths.length, avg);\n  if (variance > lastLineVariance) return {\n    failed: true,\n    reason: \"Last line is not too short.\"\n  }; // Let's get a list of all combinations that have a possibility of working. That is, all combinations where no line has a variance larger than \"variance\".\n\n  var lastLines = lastLinePossibilities(widths.measureWidths, lastLineStart, avg - variance, avg + variance);\n  var attempts = getAttempts(widths.measureWidths, 0, lineBreaks.length, avg - variance, avg + variance, lastLines); //console.log(attempts, avg - variance, avg + variance);\n\n  var failed = true;\n\n  for (var i = 0; i < attempts.length; i++) {\n    var newVariance = getVariance(widths, attempts[i]);\n\n    if (newVariance < variance) {\n      explanation.attempts.push({\n        type: \"Optimize try\",\n        lineBreaks: attempts[i],\n        variance: Math.round(variance),\n        newVariance: Math.round(newVariance),\n        totalAttempts: attempts.length\n      });\n      variance = newVariance;\n      lineBreaks = attempts[i];\n      failed = false;\n    }\n  }\n\n  if (failed) {\n    explanation.attempts.push({\n      type: \"Optimize try\",\n      lineBreaks: lineBreaks,\n      variance: variance,\n      reason: \"None of the \" + attempts.length + \" attempts were better.\"\n    }); // TODO-PER: This shouldn't be necessary, but just try to move one measure down and see if it helps.\n\n    if (lineBreaks.length > 0) {\n      var attempt = [].concat(lineBreaks);\n      attempt[attempt.length - 1]--;\n      newVariance = getVariance(widths, attempt);\n      explanation.attempts.push({\n        type: \"Optimize last try\",\n        lineBreaks: attempts[i],\n        variance: Math.round(variance),\n        newVariance: Math.round(newVariance),\n        totalAttempts: attempts.length\n      });\n\n      if (newVariance < variance) {\n        variance = newVariance;\n        lineBreaks = attempt;\n        failed = false;\n      }\n    }\n  } // Let's squeeze the line successively until it spills onto an extra line, then take the option with the lowest variance\n  // var targetNumLines = lineBreaks.length;\n  // var newNumLines = targetNumLines;\n  // var TRY_INCREMENT = 1;\n  // var tryBreakPoint = lineBreakPoint - TRY_INCREMENT;\n  // var failed = true;\n  // while (targetNumLines === newNumLines && tryBreakPoint > 50) {\n  // \tvar ff = freeFormLineBreaks(widths.measureWidths, tryBreakPoint);\n  // \tnewNumLines = ff.lineBreaks.length;\n  // \tif (newNumLines === targetNumLines) {\n  // \t\tvar newVariance = getVariance(widths, ff.lineBreaks);\n  // \t\tvar newVariancePct = newVariance/tryBreakPoint*100;\n  // \t\texplanation.attempts.push({type: \"Optimize try\", tryBreakPoint: Math.round(tryBreakPoint), lineBreaks: ff.lineBreaks, totals: ff.totals,\n  // \t\t\tvariance: Math.round(variance), newVariance: Math.round(newVariance), variancePct: Math.round(variancePct), newVariancePct: Math.round(newVariancePct)\n  // \t\t});\n  // \t\tif (newVariancePct < variancePct) {\n  // \t\t\tvariancePct = newVariancePct;\n  // \t\t\tlineBreaks = ff.lineBreaks;\n  // \t\t\tfailed = false;\n  // \t\t}\n  // \t} else {\n  // \t\texplanation.attempts.push({type: \"Optimize try\", explanation: \"Exceeded number of lines.\" , tryBreakPoint: Math.round(tryBreakPoint), lineBreaks: ff.lineBreaks, totals: ff.totals, variance: variance, avg: avg, variancePct: variancePct});\n  // \t}\n  // \ttryBreakPoint -= TRY_INCREMENT;\n  // }\n\n\n  return {\n    failed: failed,\n    lineBreaks: lineBreaks,\n    variance: variance\n  };\n} // function fixedNumLinesBreaks(widths, numLines, allowOver, allowableVariance) {\n// \tvar idealLineBreak = widths.total / numLines;\n// \t// If all the measures had the same amount of stuff, then the ave would be correct.\n// \t// We will test all the combinations from one less to one more than the average.\n// \tvar averageMeasuresPerLine = Math.round(widths.measureWidths.length / numLines);\n// \tvar minMeasuresPerLine = Math.max(averageMeasuresPerLine - 1, 1);\n// \tvar maxMeasuresPerLine = averageMeasuresPerLine + 1;\n// \tvar tries = createLineTestArray(numLines, widths.measureWidths.length, maxMeasuresPerLine, minMeasuresPerLine);\n// \tconsole.log(\"fixedNumLinesBreaks tests (\"+minMeasuresPerLine+'-'+maxMeasuresPerLine+\")\", numLines, tries.length)\n//\n// \t// For each possible number of measures per line, see which has the closest spacing to the ideal.\n// \tvar bestCase = -1;\n// \tvar bestCaseVariance = 1000000;\n// \tfor (var i = 0 ; i < tries.length; i++) {\n// \t\tvar attempt = tries[i];\n// \t\tvar variance = getVariance(attempt, idealLineBreak, widths.measureWidths, allowOver ? allowableVariance : 0);\n// \t\tif (variance !== null) {\n// \t\t\tif (variance < bestCaseVariance) {\n// \t\t\t\tbestCaseVariance = variance;\n// \t\t\t\tbestCase = i;\n// \t\t\t}\n// \t\t}\n// \t}\n// \tvar failed = true;\n// \t// For debugging, recreate the line widths\n// \tvar totals = [];\n// \tif (bestCase >= 0) {\n// \t\tfailed = false;\n// \t\tvar index = 0;\n// \t\tfor (i = 0; i < tries[bestCase].length; i++) {\n// \t\t\tvar total = 0;\n// \t\t\tfor (var j = 0; j < tries[bestCase][i]; j++) {\n// \t\t\t\ttotal += widths.measureWidths[index++];\n// \t\t\t}\n// \t\t\ttotals.push(Math.round(total));\n// \t\t}\n// \t\t// We now have an array that contains the number of measures per line, but we want to return the absolute measure number to break on.\n// \t\tif (tries[bestCase].length > 0) {\n// \t\t\ttries[bestCase][0]--; // The results should contain the last measure number on the line, zero-based.\n// \t\t\tfor (i = 1; i < tries[bestCase].length; i++)\n// \t\t\t\ttries[bestCase][i] += tries[bestCase][i - 1]; // This sets the zero-based measure number\n// \t\t\t// The last line is implied and we don't need to return it\n// \t\t\ttries[bestCase].pop();\n// \t\t}\n// \t}\n// \treturn { failed: failed, lineBreaks: tries[bestCase], bestCaseVariance: Math.round(bestCaseVariance), totals: totals };\n// }\n\n\nfunction fixedMeasureLineBreaks(widths, lineBreakPoint, preferredMeasuresPerLine) {\n  var lineBreaks = [];\n  var totals = [];\n  var thisWidth = 0;\n  var failed = false;\n\n  for (var i = 0; i < widths.length; i++) {\n    thisWidth += widths[i];\n\n    if (i % preferredMeasuresPerLine === preferredMeasuresPerLine - 1) {\n      if (thisWidth > lineBreakPoint) {\n        failed = true;\n      }\n\n      if (i !== widths.length - 1) // Don't bother putting a line break for the last line - it's already a break.\n        lineBreaks.push(i);\n      totals.push(Math.round(thisWidth));\n      thisWidth = 0;\n    }\n  }\n\n  return {\n    failed: failed,\n    totals: totals,\n    lineBreaks: lineBreaks\n  };\n}\n\nfunction getRevisedTune(lineBreaks, staffWidth, abcString, params, Parse) {\n  var abcParser = new Parse();\n  var revisedParams = {\n    lineBreaks: lineBreaks,\n    staffwidth: staffWidth\n  };\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key) && key !== 'wrap' && key !== 'staffwidth') {\n      revisedParams[key] = params[key];\n    }\n  }\n\n  abcParser.parse(abcString, revisedParams);\n  return {\n    tune: abcParser.getTune(),\n    revisedParams: revisedParams\n  };\n}\n\nfunction calcLineWraps(tune, widths, abcString, params, Parse, engraver_controller) {\n  // For calculating how much can go on the line, it depends on the width of the line. It is a convenience to just divide it here\n  // by the minimum spacing instead of multiplying the min spacing later.\n  // The scaling works differently: this is done by changing the scaling of the outer SVG, so the scaling needs to be compensated\n  // for here, because the actual width will be different from the calculated numbers.\n  var scale = params.scale ? Math.max(params.scale, 0.1) : 1;\n  var minSpacing = params.wrap.minSpacing ? Math.max(parseFloat(params.wrap.minSpacing), 1) : 1;\n  var minSpacingLimit = params.wrap.minSpacingLimit ? Math.max(parseFloat(params.wrap.minSpacingLimit), 1) : minSpacing - 0.1;\n  var maxSpacing = params.wrap.maxSpacing ? Math.max(parseFloat(params.wrap.maxSpacing), 1) : undefined;\n  if (params.wrap.lastLineLimit && !maxSpacing) maxSpacing = Math.max(parseFloat(params.wrap.lastLineLimit), 1);\n  var targetHeight = params.wrap.targetHeight ? Math.max(parseInt(params.wrap.targetHeight, 10), 100) : undefined;\n  var preferredMeasuresPerLine = params.wrap.preferredMeasuresPerLine ? Math.max(parseInt(params.wrap.preferredMeasuresPerLine, 10), 1) : undefined;\n  var lineBreakPoint = (params.staffwidth - widths.left) / minSpacing / scale;\n  var minLineSize = (params.staffwidth - widths.left) / maxSpacing / scale;\n  var allowableVariance = (params.staffwidth - widths.left) / minSpacingLimit / scale;\n  var explanation = {\n    widths: widths,\n    lineBreakPoint: lineBreakPoint,\n    minLineSize: minLineSize,\n    attempts: [],\n    staffWidth: params.staffwidth,\n    minWidth: Math.round(allowableVariance)\n  }; // If there is a preferred number of measures per line, test that first. If none of the lines is too long, then we're finished.\n\n  var lineBreaks = null;\n\n  if (preferredMeasuresPerLine) {\n    var f = fixedMeasureLineBreaks(widths.measureWidths, lineBreakPoint, preferredMeasuresPerLine);\n    explanation.attempts.push({\n      type: \"Fixed Measures Per Line\",\n      preferredMeasuresPerLine: preferredMeasuresPerLine,\n      lineBreaks: f.lineBreaks,\n      failed: f.failed,\n      totals: f.totals\n    });\n    if (!f.failed) lineBreaks = f.lineBreaks;\n  } // If we don't have lineBreaks yet, use the free form method of line breaks.\n  // This will be called either if Preferred Measures is not used, or if the music is just weird - like a single measure is way too crowded.\n\n\n  if (!lineBreaks) {\n    var ff = freeFormLineBreaks(widths.measureWidths, lineBreakPoint);\n    explanation.attempts.push({\n      type: \"Free Form\",\n      lineBreaks: ff.lineBreaks,\n      totals: ff.totals\n    });\n    lineBreaks = ff.lineBreaks; // We now have an acceptable number of lines, but the measures may not be optimally distributed. See if there is a better distribution.\n\n    ff = optimizeLineWidths(widths, lineBreakPoint, lineBreaks, explanation);\n    explanation.attempts.push({\n      type: \"Optimize\",\n      failed: ff.failed,\n      reason: ff.reason,\n      lineBreaks: ff.lineBreaks,\n      totals: ff.totals\n    });\n    if (!ff.failed) lineBreaks = ff.lineBreaks;\n  } // If the vertical space exceeds targetHeight, remove a line and try again. If that is too crowded, then don't use it.\n\n\n  var staffWidth = params.staffwidth;\n  var ret = getRevisedTune(lineBreaks, staffWidth, abcString, params, Parse);\n  var newWidths = engraver_controller.getMeasureWidths(ret.tune);\n  var gotTune = true; // If we adjust the num lines, set this to false\n\n  explanation.attempts.push({\n    type: \"heightCheck\",\n    height: newWidths.height\n  }); // \tif all of the lines are too sparse, make the width narrower.\n  // TODO-PER: implement this case.\n  // If one line and the spacing is > maxSpacing, make the width narrower.\n\n  if (lineBreaks.length === 0 && minLineSize > widths.total) {\n    staffWidth = widths.total * maxSpacing * scale + widths.left;\n    explanation.attempts.push({\n      type: \"too sparse\",\n      newWidth: Math.round(staffWidth)\n    });\n    gotTune = false;\n  } // if (ret.lineBreaks.length === 0) {\n  // \t// Everything fits on one line, so see if there is TOO much space and the staff width needs to be shortened.\n  // \tif (minLineSize > 0 && ret.totalThisLine > 0 && ret.totalThisLine < minLineSize)\n  // \t\tstaffWidth = staffWidth / (minLineSize / ret.totalThisLine);\n  // } else if (ret.totalThisLine < minLineSize) {\n  // \t// the last line is too short, so attempt to redistribute by changing the min.\n  // \t// We will try more and less space alternatively. The space can't be less than 1.0, and we'll try in 0.1 increments.\n  // \tvar minTrys = [];\n  // \tif (minSpacing > 1.1)\n  // \t\tminTrys.push(minSpacing - 0.1);\n  // \tminTrys.push(minSpacing + 0.1);\n  // \tif (minSpacing > 1.2)\n  // \t\tminTrys.push(minSpacing - 0.2);\n  // \tminTrys.push(minSpacing + 0.2);\n  // \tif (minSpacing > 1.3)\n  // \t\tminTrys.push(minSpacing - 0.3);\n  // \tminTrys.push(minSpacing + 0.3);\n  // \tfor (var i = 0; i < minTrys.length && ret.totalThisLine < minLineSize; i++) {\n  // \t\tlineBreakPoint = (params.staffwidth - widths.left) / minTrys[i] / scale;\n  // \t\tret = calcLineBreaks(widths.measureWidths, lineBreakPoint);\n  // \t}\n  // }\n\n\n  if (!gotTune) ret = getRevisedTune(lineBreaks, staffWidth, abcString, params, Parse);\n  ret.explanation = explanation;\n  return ret;\n}\n\nmodule.exports = {\n  wrapLines: wrapLines,\n  calcLineWraps: calcLineWraps\n};","//    abc_engraver_controller.js: Controls the engraving process of an ABCJS abstract syntax tree as produced by ABCJS/parse\n//    Copyright (C) 2014-2018 Gregory Dyke (gregdyke at gmail dot com)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*global Math */\nvar spacing = require('./abc_spacing');\n\nvar AbstractEngraver = require('./abc_abstract_engraver');\n\nvar Renderer = require('./abc_renderer');\n/**\n * @class\n * Controls the engraving process, from ABCJS Abstract Syntax Tree (ABCJS AST) to rendered score sheet\n *\n * Call engraveABC to run the process. This creates a graphelems ABCJS Abstract Engraving Structure (ABCJS AES) that can be accessed through this.staffgroups\n * this data structure is first laid out (giving the graphelems x and y coordinates) and then drawn onto the renderer\n * each ABCJS AES represents a single staffgroup - all elements that are not in a staffgroup are rendered directly by the controller\n *\n * elements in ABCJS AES know their \"source data\" in the ABCJS AST, and their \"target shape\" \n * in the renderer for highlighting purposes\n *\n * @param {Object} paper div element that will wrap the SVG\n * @param {Object} params all the params -- documented on github //TODO-GD move some of that documentation here\n */\n\n\nvar EngraverController = function EngraverController(paper, params) {\n  params = params || {};\n  this.responsive = params.responsive;\n  this.space = 3 * spacing.SPACE;\n  this.scale = params.scale ? parseFloat(params.scale) : 0;\n  if (!(this.scale > 0.1)) this.scale = undefined;\n\n  if (params.staffwidth) {\n    // Note: Normally all measurements to the engraver are in POINTS. However, if a person is formatting for the\n    // screen and directly inputting the width, then it is more logical to have the measurement in pixels.\n    this.staffwidthScreen = params.staffwidth;\n    this.staffwidthPrint = params.staffwidth;\n  } else {\n    this.staffwidthScreen = 740; // TODO-PER: Not sure where this number comes from, but this is how it's always been.\n\n    this.staffwidthPrint = 680; // The number of pixels in 8.5\", after 1cm of margin has been removed.\n  }\n\n  this.editable = params.editable || false;\n  this.listeners = [];\n  if (params.clickListener) this.addSelectListener(params.clickListener);\n  this.renderer = new Renderer(paper, params.regression, params.add_classes);\n  this.renderer.setPaddingOverride(params);\n  this.renderer.controller = this; // TODO-GD needed for highlighting\n\n  this.reset();\n};\n\nEngraverController.prototype.reset = function () {\n  this.selected = [];\n  this.ingroup = false;\n  this.staffgroups = [];\n  this.lastStaffGroupIndex = -1;\n  if (this.engraver) this.engraver.reset();\n  this.engraver = null;\n  this.renderer.reset();\n};\n/**\n * run the engraving process\n * @param {ABCJS.Tune|ABCJS.Tune[]} abctunes \n */\n\n\nEngraverController.prototype.engraveABC = function (abctunes, tuneNumber) {\n  if (abctunes[0] === undefined) {\n    abctunes = [abctunes];\n  }\n\n  this.reset();\n\n  for (var i = 0; i < abctunes.length; i++) {\n    if (tuneNumber === undefined) tuneNumber = i;\n    this.engraveTune(abctunes[i], tuneNumber);\n  }\n\n  if (this.renderer.doRegression) return this.renderer.regressionLines.join(\"\\n\");\n};\n/**\n * Some of the items on the page are not scaled, so adjust them in the opposite direction of scaling to cancel out the scaling.\n * @param {float} scale\n */\n\n\nEngraverController.prototype.adjustNonScaledItems = function (scale) {\n  this.width /= scale;\n  this.renderer.adjustNonScaledItems(scale);\n};\n\nEngraverController.prototype.getMeasureWidths = function (abcTune) {\n  this.reset();\n  this.renderer.lineNumber = null;\n  this.renderer.newTune(abcTune);\n  this.engraver = new AbstractEngraver(this.renderer, 0, {\n    bagpipes: abcTune.formatting.bagpipes,\n    flatbeams: abcTune.formatting.flatbeams\n  });\n  this.engraver.setStemHeight(this.renderer.spacing.stemHeight);\n\n  if (abcTune.formatting.staffwidth) {\n    this.width = abcTune.formatting.staffwidth * 1.33; // The width is expressed in pt; convert to px.\n  } else {\n    this.width = this.renderer.isPrint ? this.staffwidthPrint : this.staffwidthScreen;\n  }\n\n  var scale = abcTune.formatting.scale ? abcTune.formatting.scale : this.scale;\n  if (this.responsive === \"resize\") // The resizing will mess with the scaling, so just don't do it explicitly.\n    scale = undefined;\n  if (scale === undefined) scale = this.renderer.isPrint ? 0.75 : 1;\n  this.adjustNonScaledItems(scale);\n  var ret = {\n    left: 0,\n    measureWidths: [],\n    height: 0,\n    total: 0\n  }; // TODO-PER: need to add the height of the title block, too.\n\n  ret.height = this.renderer.padding.top + this.renderer.spacing.music + this.renderer.padding.bottom + 24; // the 24 is the empirical value added to the bottom of all tunes.\n\n  var debug = false;\n  var hasPrintedTempo = false;\n\n  for (var i = 0; i < abcTune.lines.length; i++) {\n    var abcLine = abcTune.lines[i];\n\n    if (abcLine.staff) {\n      abcLine.staffGroup = this.engraver.createABCLine(abcLine.staff, !hasPrintedTempo ? abcTune.metaText.tempo : null);\n      abcLine.staffGroup.layout(0, this.renderer, debug); // At this point, the voices are laid out so that the bar lines are even with each other. So we just need to get the placement of the first voice.\n\n      if (abcLine.staffGroup.voices.length > 0) {\n        var voice = abcLine.staffGroup.voices[0];\n        var foundNotStaffExtra = false;\n        var lastXPosition = 0;\n\n        for (var k = 0; k < voice.children.length; k++) {\n          var child = voice.children[k];\n\n          if (!foundNotStaffExtra && !child.isClef && !child.isKeySig) {\n            foundNotStaffExtra = true;\n            ret.left = child.x;\n            lastXPosition = child.x;\n          }\n\n          if (child.type === 'bar') {\n            ret.measureWidths.push(child.x - lastXPosition);\n            ret.total += child.x - lastXPosition;\n            lastXPosition = child.x;\n          }\n        }\n      }\n\n      hasPrintedTempo = true;\n      ret.height += abcLine.staffGroup.calcHeight() * spacing.STEP;\n    }\n  }\n\n  return ret;\n};\n/**\n * Run the engraving process on a single tune\n * @param {ABCJS.Tune} abctune\n */\n\n\nEngraverController.prototype.engraveTune = function (abctune, tuneNumber) {\n  this.renderer.lineNumber = null;\n  this.renderer.newTune(abctune);\n  this.engraver = new AbstractEngraver(this.renderer, tuneNumber, {\n    bagpipes: abctune.formatting.bagpipes,\n    flatbeams: abctune.formatting.flatbeams\n  });\n  this.engraver.setStemHeight(this.renderer.spacing.stemHeight);\n\n  if (abctune.formatting.staffwidth) {\n    this.width = abctune.formatting.staffwidth * 1.33; // The width is expressed in pt; convert to px.\n  } else {\n    this.width = this.renderer.isPrint ? this.staffwidthPrint : this.staffwidthScreen;\n  }\n\n  var scale = abctune.formatting.scale ? abctune.formatting.scale : this.scale;\n  if (this.responsive === \"resize\") // The resizing will mess with the scaling, so just don't do it explicitly.\n    scale = undefined;\n  if (scale === undefined) scale = this.renderer.isPrint ? 0.75 : 1;\n  this.adjustNonScaledItems(scale); // Generate the raw staff line data\n\n  var i;\n  var abcLine;\n  var hasPrintedTempo = false;\n\n  for (i = 0; i < abctune.lines.length; i++) {\n    abcLine = abctune.lines[i];\n\n    if (abcLine.staff) {\n      abcLine.staffGroup = this.engraver.createABCLine(abcLine.staff, !hasPrintedTempo ? abctune.metaText.tempo : null);\n      hasPrintedTempo = true;\n    }\n  } // Adjust the x-coordinates to their absolute positions\n\n\n  var maxWidth = this.width;\n\n  for (i = 0; i < abctune.lines.length; i++) {\n    abcLine = abctune.lines[i];\n\n    if (abcLine.staff) {\n      this.setXSpacing(abcLine.staffGroup, abctune.formatting, i === abctune.lines.length - 1, false);\n      if (abcLine.staffGroup.w > maxWidth) maxWidth = abcLine.staffGroup.w;\n    }\n  } // Layout the beams and add the stems to the beamed notes.\n\n\n  for (i = 0; i < abctune.lines.length; i++) {\n    abcLine = abctune.lines[i];\n\n    if (abcLine.staffGroup && abcLine.staffGroup.voices) {\n      for (var j = 0; j < abcLine.staffGroup.voices.length; j++) {\n        abcLine.staffGroup.voices[j].layoutBeams();\n      }\n\n      abcLine.staffGroup.setUpperAndLowerElements(this.renderer);\n    }\n  } // Set the staff spacing\n  // TODO-PER: we should have been able to do this by the time we called setUpperAndLowerElements, but for some reason the \"bottom\" element seems to be set as a side effect of setting the X spacing.\n\n\n  for (i = 0; i < abctune.lines.length; i++) {\n    abcLine = abctune.lines[i];\n\n    if (abcLine.staffGroup) {\n      abcLine.staffGroup.height = abcLine.staffGroup.calcHeight();\n    }\n  } // Do all the writing to output\n\n\n  this.renderer.topMargin(abctune); //this.renderer.printHorizontalLine(this.width + this.renderer.padding.left + this.renderer.padding.right);\n\n  this.renderer.engraveTopText(this.width, abctune);\n  this.renderer.addMusicPadding();\n  this.staffgroups = [];\n  this.lastStaffGroupIndex = -1;\n\n  for (var line = 0; line < abctune.lines.length; line++) {\n    this.renderer.lineNumber = line;\n    abcLine = abctune.lines[line];\n\n    if (abcLine.staff) {\n      this.engraveStaffLine(abcLine.staffGroup);\n    } else if (abcLine.subtitle && line !== 0) {\n      this.renderer.outputSubtitle(this.width, abcLine.subtitle);\n    } else if (abcLine.text !== undefined) {\n      this.renderer.outputFreeText(abcLine.text, abcLine.vskip);\n    } else if (abcLine.separator !== undefined) {\n      this.renderer.outputSeparator(abcLine.separator);\n    }\n  }\n\n  this.renderer.moveY(24); // TODO-PER: Empirically discovered. What variable should this be?\n\n  this.renderer.engraveExtraText(this.width, abctune);\n  this.renderer.setPaperSize(maxWidth, scale, this.responsive);\n};\n\nfunction calcHorizontalSpacing(isLastLine, stretchLast, targetWidth, lineWidth, spacing, spacingUnits, minSpace) {\n  // TODO-PER: This used to stretch the first line when it is the only line, but I'm not sure why. abcm2ps doesn't do that\n  if (isLastLine && lineWidth / targetWidth < 0.66 && !stretchLast) return null; // don't stretch last line too much\n\n  if (Math.abs(targetWidth - lineWidth) < 2) return null; // if we are already near the target width, we're done.\n\n  var relSpace = spacingUnits * spacing;\n  var constSpace = lineWidth - relSpace;\n\n  if (spacingUnits > 0) {\n    spacing = (targetWidth - constSpace) / spacingUnits;\n\n    if (spacing * minSpace > 50) {\n      spacing = 50 / minSpace;\n    }\n\n    return spacing;\n  }\n\n  return null;\n}\n/**\n * Do the x-axis positioning for a single line (a group of related staffs)\n * @param {ABCJS.Tune} abctune an ABCJS AST\n * @param {Object} staffGroup an staffGroup\n * @param {Object} formatting an formatting\n * @param {boolean} isLastLine is this the last line to be printed?\n * @private\n */\n\n\nEngraverController.prototype.setXSpacing = function (staffGroup, formatting, isLastLine, debug) {\n  var newspace = this.space;\n\n  for (var it = 0; it < 8; it++) {\n    // TODO-PER: shouldn't need multiple passes, but each pass gets it closer to the right spacing. (Only affects long lines: normal lines break out of this loop quickly.)\n    var ret = staffGroup.layout(newspace, this.renderer, debug);\n    var stretchLast = formatting.stretchlast ? formatting.stretchlast : false;\n    newspace = calcHorizontalSpacing(isLastLine, stretchLast, this.width + this.renderer.padding.left, staffGroup.w, newspace, ret.spacingUnits, ret.minSpace);\n    if (debug) console.log(\"setXSpace\", it, staffGroup.w, newspace, staffGroup.minspace);\n    if (newspace === null) break;\n  }\n\n  centerWholeRests(staffGroup.voices); //this.renderer.printHorizontalLine(this.width);\n};\n/**\n * Engrave a single line (a group of related staffs)\n * @param {ABCJS.Tune} abctune an ABCJS AST\n * @param {Object} staffGroup an staffGroup\n * @private\n */\n\n\nEngraverController.prototype.engraveStaffLine = function (staffGroup) {\n  if (this.lastStaffGroupIndex > -1) this.renderer.addStaffPadding(this.staffgroups[this.lastStaffGroupIndex], staffGroup);\n  this.renderer.voiceNumber = null;\n  staffGroup.draw(this.renderer);\n  var height = staffGroup.height * spacing.STEP; //this.renderer.printVerticalLine(this.width+this.renderer.padding.left, this.renderer.y, this.renderer.y+height);\n\n  this.staffgroups[this.staffgroups.length] = staffGroup;\n  this.lastStaffGroupIndex = this.staffgroups.length - 1;\n  this.renderer.y += height;\n};\n/**\n * Called by the Abstract Engraving Structure or any other (e.g. midi playback) to say it was selected (notehead clicked on)\n * @protected\n */\n\n\nEngraverController.prototype.notifySelect = function (abselem, tuneNumber, classes) {\n  this.clearSelection();\n\n  if (abselem.highlight) {\n    this.selected = [abselem];\n    abselem.highlight();\n  }\n\n  var abcelem = abselem.abcelem || {};\n\n  for (var i = 0; i < this.listeners.length; i++) {\n    this.listeners[i](abcelem, tuneNumber, classes);\n  }\n};\n/**\n * Called by the Abstract Engraving Structure to say it was modified (e.g. notehead dragged)\n * @protected\n */\n// EngraverController.prototype.notifyChange = function (/*abselem*/) {\n//   for (var i=0; i<this.listeners.length;i++) {\n//     if (this.listeners[i].modelChanged)\n//       this.listeners[i].modelChanged();\n//   }\n// };\n\n/**\n *\n * @private\n */\n\n\nEngraverController.prototype.clearSelection = function () {\n  for (var i = 0; i < this.selected.length; i++) {\n    this.selected[i].unhighlight();\n  }\n\n  this.selected = [];\n};\n/**\n * @param {Object} listener\n * @param {Function} listener.modelChanged the model the listener passed to this controller has changed\n * @param {Function} listener.highlight the abcelem of the model the listener passed to this controller should be highlighted\n */\n\n\nEngraverController.prototype.addSelectListener = function (clickListener) {\n  this.listeners[this.listeners.length] = clickListener;\n};\n/**\n * Tell the controller to highlight some noteheads of its engraved score\n * @param {number} start the character in the source abc where highlighting should start\n * @param {number} end the character in the source abc where highlighting should end\n */\n\n\nEngraverController.prototype.rangeHighlight = function (start, end) {\n  this.clearSelection();\n\n  for (var line = 0; line < this.staffgroups.length; line++) {\n    var voices = this.staffgroups[line].voices;\n\n    for (var voice = 0; voice < voices.length; voice++) {\n      var elems = voices[voice].children;\n\n      for (var elem = 0; elem < elems.length; elem++) {\n        // Since the user can highlight more than an element, or part of an element, a hit is if any of the endpoints\n        // is inside the other range.\n        var elStart = elems[elem].abcelem.startChar;\n        var elEnd = elems[elem].abcelem.endChar;\n\n        if (end > elStart && start < elEnd || end === start && end === elEnd) {\n          //\t\tif (elems[elem].abcelem.startChar>=start && elems[elem].abcelem.endChar<=end) {\n          this.selected[this.selected.length] = elems[elem];\n          elems[elem].highlight();\n        }\n      }\n    }\n  }\n};\n\nfunction centerWholeRests(voices) {\n  // whole rests are a special case: if they are by themselves in a measure, then they should be centered.\n  // (If they are not by themselves, that is probably a user error, but we'll just center it between the two items to either side of it.)\n  for (var i = 0; i < voices.length; i++) {\n    var voice = voices[i]; // Look through all of the elements except for the first and last. If the whole note appears there then there isn't anything to center it between anyway.\n\n    for (var j = 1; j < voice.children.length - 1; j++) {\n      var absElem = voice.children[j];\n\n      if (absElem.abcelem.rest && (absElem.abcelem.rest.type === 'whole' || absElem.abcelem.rest.type === 'multimeasure')) {\n        var before = voice.children[j - 1];\n        var after = voice.children[j + 1];\n        var midpoint = (after.x - before.x) / 2 + before.x;\n        absElem.x = midpoint - absElem.w / 2;\n\n        for (var k = 0; k < absElem.children.length; k++) {\n          absElem.children[k].x = absElem.x;\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = EngraverController;","//    abc_tie_element.js: Definition of the TieElement class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar TieElem = function TieElem(anchor1, anchor2, above, forceandshift, isTie) {\n  this.anchor1 = anchor1; // must have a .x and a .pitch, and a .parent property or be null (means starts at the \"beginning\" of the line - after keysig)\n\n  this.anchor2 = anchor2; // must have a .x and a .pitch property or be null (means ends at the end of the line)\n\n  this.above = above; // true if the arc curves above\n\n  this.force = forceandshift; // force the arc curve, regardless of beaming if true\n\n  this.isTie = isTie;\n};\n\nTieElem.prototype.setEndAnchor = function (anchor2) {\n  this.anchor2 = anchor2; // must have a .x and a .pitch property or be null (means ends at the end of the line)\n\n  if (this.isTie) {\n    if (this.anchor1) // this can happen if the tie comes from the previous line.\n      this.anchor1.isTie = true;\n    if (this.anchor2) // this can happen if the tie goes to the next line.\n      this.anchor2.isTie = true;\n  }\n}; // If we encounter a repeat sign, then we don't want to extend either a tie or a slur past it, so these are called to be a limit.\n\n\nTieElem.prototype.setStartX = function (startLimitElem) {\n  this.startLimitX = startLimitElem;\n};\n\nTieElem.prototype.setEndX = function (endLimitElem) {\n  this.endLimitX = endLimitElem;\n};\n\nTieElem.prototype.setHint = function () {\n  this.hint = true;\n};\n\nTieElem.prototype.setUpperAndLowerElements = function (positionY) {// Doesn't depend on the highest and lowest, so there's nothing to do here.\n};\n\nTieElem.prototype.layout = function (lineStartX, lineEndX) {\n  function getPitch(anchor, isAbove, isTie) {\n    if (isTie) {\n      // Always go to the note\n      return anchor.pitch;\n    }\n\n    if (isAbove && anchor.highestVert !== undefined) return anchor.highestVert;\n    return anchor.pitch;\n  } // We now have all of the input variables set, so we can figure out the start and ending x,y coordinates, and finalize the direction of the arc.\n  // PER: We might have to override the natural slur direction if the first and last notes are not in the\n  // same direction. We always put the slur up in this case. The one case that works out wrong is that we always\n  // want the slur to be up when the last note is stem down. We can tell the stem direction if the top is\n  // equal to the pitch: if so, there is no stem above it.\n\n\n  if (!this.force && this.anchor2 && this.anchor2.pitch === this.anchor2.highestVert) // TODO-PER: this is a fragile way to detect that there is no stem going up on this note.\n    this.above = true; // There is an exception in the slur direction if there is also a tie on the starting or ending note.\n\n  if (this.isTie) {\n    if (this.anchor1) // this can happen if the tie comes from the previous line.\n      this.anchor1.tieAbove = this.above;\n    if (this.anchor2) // this can happen if the tie goes to the next line.\n      this.anchor2.tieAbove = this.above;\n  } else {\n    if (this.anchor2 && this.anchor2.isTie) this.above = this.anchor2.tieAbove;else if (this.anchor1 && this.anchor1.isTie) this.above = this.anchor1.tieAbove;\n  }\n\n  if (this.anchor1) {\n    this.startX = this.anchor1.x; // The normal case where there is a starting element to attach to.\n\n    if (this.anchor1.scalex < 1) // this is a grace note - don't offset the tie as much.\n      this.startX -= 3;\n  } else if (this.startLimitX) this.startX = this.startLimitX.x + this.startLimitX.w; // if there is no start element, but there is a repeat mark before the start of the line.\n  else this.startX = lineStartX; // There is no element and no repeat mark: extend to the beginning of the line.\n\n\n  if (this.anchor2) this.endX = this.anchor2.x; // The normal case where there is a starting element to attach to.\n  else if (this.endLimitX) this.endX = this.endLimitX.x; // if there is no start element, but there is a repeat mark before the start of the line.\n    else this.endX = lineEndX; // There is no element and no repeat mark: extend to the beginning of the line.\n  // For the pitches, if one of the anchors is present, both of the pitches are that anchor. If both are present, then we use both. If neither is present, we use the top of the staff.\n\n  if (this.anchor1 && this.anchor2) {\n    this.startY = getPitch(this.anchor1, this.above, this.isTie);\n    this.endY = getPitch(this.anchor2, this.above, this.isTie);\n  } else if (this.anchor1) {\n    this.startY = getPitch(this.anchor1, this.above, this.isTie);\n    this.endY = getPitch(this.anchor1, this.above, this.isTie);\n  } else if (this.anchor2) {\n    this.startY = getPitch(this.anchor2, this.above, this.isTie);\n    this.endY = getPitch(this.anchor2, this.above, this.isTie);\n  } else {\n    // This is the case where the slur covers the entire line.\n    // TODO-PER: figure out where the real top and bottom of the line are.\n    this.startY = this.above ? 14 : 0;\n    this.endY = this.above ? 14 : 0;\n  }\n};\n\nTieElem.prototype.draw = function (renderer, linestartx, lineendx) {\n  this.layout(linestartx, lineendx);\n  var klass;\n  if (this.hint) klass = \"abcjs-hint\";\n  renderer.drawArc(this.startX, this.endX, this.startY, this.endY, this.above, klass, this.isTie);\n};\n\nmodule.exports = TieElem;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nmodule.exports = _inheritsLoose;","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}","'use strict';\n\nmodule.exports = require('./lib/');","'use strict';\n\nvar abc = require('./renderers/abc_renderer.js');\n\nvar chords = require('./renderers/chords_renderer.js');\n\nfunction MarkdownMusic(md, musicOpts) {\n  md.highlightRegistry = {};\n  md.musicOpts = musicOpts;\n  md.set({\n    highlight: function highlight(str, lang) {\n      if (md.highlightRegistry.hasOwnProperty(lang)) {\n        return md.highlightRegistry[lang](str, md.musicOpts);\n      }\n    }\n  }); // Renderer registry\n\n  md.highlightRegistry[abc.lang] = abc.callback;\n  md.highlightRegistry[chords.lang] = chords.callback; // Renderer configuration functions\n\n  md.setTranspose = function (transpose) {\n    md.musicOpts.transpose = transpose;\n  };\n}\n\n;\nmodule.exports = MarkdownMusic;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ThemeProvider = require(\"./ThemeProvider\");\n\nvar Container =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Container, _React$Component);\n\n  function Container() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Container.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        bsPrefix = _this$props.bsPrefix,\n        fluid = _this$props.fluid,\n        Component = _this$props.as,\n        className = _this$props.className,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n    return _react.default.createElement(Component, (0, _extends2.default)({}, props, {\n      className: (0, _classnames.default)(className, fluid ? bsPrefix + \"-fluid\" : bsPrefix)\n    }));\n  };\n\n  return Container;\n}(_react.default.Component);\n\nContainer.defaultProps = {\n  as: 'div',\n  fluid: false\n};\n\nvar _default = (0, _ThemeProvider.createBootstrapComponent)(Container, 'container');\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","var isarray = require('isarray');\n/**\n * Expose `pathToRegexp`.\n */\n\n\nmodule.exports = pathToRegexp;\nmodule.exports.parse = parse;\nmodule.exports.compile = compile;\nmodule.exports.tokensToFunction = tokensToFunction;\nmodule.exports.tokensToRegExp = tokensToRegExp;\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\n\nvar PATH_REGEXP = new RegExp([// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)', // Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n// \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n// \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n'([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'].join('|'), 'g');\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\n\nfunction parse(str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length; // Ignore already escaped sequences.\n\n    if (escaped) {\n      path += escaped[1];\n      continue;\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7]; // Push the current path onto the tokens.\n\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'\n    });\n  } // Match any characters still remaining.\n\n\n  if (index < str.length) {\n    path += str.substr(index);\n  } // If the path exists, push it onto the end.\n\n\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens;\n}\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\n\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options));\n}\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeURIComponentPretty(str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeAsterisk(str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\n\nfunction tokensToFunction(tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length); // Compile all the patterns before compilation.\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue;\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined');\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`');\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue;\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`');\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"');\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path;\n  };\n}\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\n\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1');\n}\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\n\n\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1');\n}\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\n\n\nfunction attachKeys(re, keys) {\n  re.keys = keys;\n  return re;\n}\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\n\n\nfunction flags(options) {\n  return options.sensitive ? '' : 'i';\n}\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys);\n}\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction arrayToRegexp(path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n  return attachKeys(regexp, keys);\n}\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\n\n\nfunction tokensToRegExp(tokens, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = ''; // Iterate over the tokens and create our regexp string.\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter; // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys);\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\n\n\nfunction pathToRegexp(path, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path,\n    /** @type {!Array} */\n    keys);\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(\n    /** @type {!Array} */\n    path,\n    /** @type {!Array} */\n    keys, options);\n  }\n\n  return stringToRegexp(\n  /** @type {string} */\n  path,\n  /** @type {!Array} */\n  keys, options);\n}","/** @license React v16.8.1\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar k = require(\"object-assign\"),\n    n = \"function\" === typeof Symbol && Symbol.for,\n    p = n ? Symbol.for(\"react.element\") : 60103,\n    q = n ? Symbol.for(\"react.portal\") : 60106,\n    r = n ? Symbol.for(\"react.fragment\") : 60107,\n    t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n    u = n ? Symbol.for(\"react.profiler\") : 60114,\n    v = n ? Symbol.for(\"react.provider\") : 60109,\n    w = n ? Symbol.for(\"react.context\") : 60110,\n    x = n ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    y = n ? Symbol.for(\"react.forward_ref\") : 60112,\n    z = n ? Symbol.for(\"react.suspense\") : 60113,\n    aa = n ? Symbol.for(\"react.memo\") : 60115,\n    ba = n ? Symbol.for(\"react.lazy\") : 60116,\n    A = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction ca(a, b, d, c, e, g, h, f) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [d, c, e, g, h, f],\n          m = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[m++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction B(a) {\n  for (var b = arguments.length - 1, d = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 0; c < b; c++) {\n    d += \"&args[]=\" + encodeURIComponent(arguments[c + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", d);\n}\n\nvar C = {\n  isMounted: function isMounted() {\n    return !1;\n  },\n  enqueueForceUpdate: function enqueueForceUpdate() {},\n  enqueueReplaceState: function enqueueReplaceState() {},\n  enqueueSetState: function enqueueSetState() {}\n},\n    D = {};\n\nfunction E(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nE.prototype.isReactComponent = {};\n\nE.prototype.setState = function (a, b) {\n  \"object\" !== typeof a && \"function\" !== typeof a && null != a ? B(\"85\") : void 0;\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\n\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\n\nfunction F() {}\n\nF.prototype = E.prototype;\n\nfunction G(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nvar H = G.prototype = new F();\nH.constructor = G;\nk(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = {\n  current: null\n},\n    J = {\n  current: null\n},\n    K = Object.prototype.hasOwnProperty,\n    L = {\n  key: !0,\n  ref: !0,\n  __self: !0,\n  __source: !0\n};\n\nfunction M(a, b, d) {\n  var c = void 0,\n      e = {},\n      g = null,\n      h = null;\n  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\n    K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) e.children = d;else if (1 < f) {\n    for (var l = Array(f), m = 0; m < f; m++) {\n      l[m] = arguments[m + 2];\n    }\n\n    e.children = l;\n  }\n  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\n    void 0 === e[c] && (e[c] = f[c]);\n  }\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: h,\n    props: e,\n    _owner: J.current\n  };\n}\n\nfunction da(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\n\nfunction N(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\n\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\n\nvar O = /\\/+/g,\n    P = [];\n\nfunction Q(a, b, d, c) {\n  if (P.length) {\n    var e = P.pop();\n    e.result = a;\n    e.keyPrefix = b;\n    e.func = d;\n    e.context = c;\n    e.count = 0;\n    return e;\n  }\n\n  return {\n    result: a,\n    keyPrefix: b,\n    func: d,\n    context: c,\n    count: 0\n  };\n}\n\nfunction R(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > P.length && P.push(a);\n}\n\nfunction S(a, b, d, c) {\n  var e = typeof a;\n  if (\"undefined\" === e || \"boolean\" === e) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (e) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n\n  }\n  if (g) return d(c, a, \"\" === b ? \".\" + T(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {\n    e = a[h];\n    var f = b + T(e, h);\n    g += S(e, f, d, c);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = A && a[A] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {\n    e = e.value, f = b + T(e, h++), g += S(e, f, d, c);\n  } else \"object\" === e && (d = \"\" + a, B(\"31\", \"[object Object]\" === d ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : d, \"\"));\n  return g;\n}\n\nfunction U(a, b, d) {\n  return null == a ? 0 : S(a, \"\", b, d);\n}\n\nfunction T(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\n\nfunction ea(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\n\nfunction fa(a, b, d) {\n  var c = a.result,\n      e = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? V(a, c, d, function (a) {\n    return a;\n  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(O, \"$&/\") + \"/\") + d)), c.push(a));\n}\n\nfunction V(a, b, d, c, e) {\n  var g = \"\";\n  null != d && (g = (\"\" + d).replace(O, \"$&/\") + \"/\");\n  b = Q(b, g, c, e);\n  U(a, fa, b);\n  R(b);\n}\n\nfunction W() {\n  var a = I.current;\n  null === a ? B(\"307\") : void 0;\n  return a;\n}\n\nvar X = {\n  Children: {\n    map: function map(a, b, d) {\n      if (null == a) return a;\n      var c = [];\n      V(a, c, null, b, d);\n      return c;\n    },\n    forEach: function forEach(a, b, d) {\n      if (null == a) return a;\n      b = Q(null, null, b, d);\n      U(a, ea, b);\n      R(b);\n    },\n    count: function count(a) {\n      return U(a, function () {\n        return null;\n      }, null);\n    },\n    toArray: function toArray(a) {\n      var b = [];\n      V(a, b, null, function (a) {\n        return a;\n      });\n      return b;\n    },\n    only: function only(a) {\n      N(a) ? void 0 : B(\"143\");\n      return a;\n    }\n  },\n  createRef: function createRef() {\n    return {\n      current: null\n    };\n  },\n  Component: E,\n  PureComponent: G,\n  createContext: function createContext(a, b) {\n    void 0 === b && (b = null);\n    a = {\n      $$typeof: w,\n      _calculateChangedBits: b,\n      _currentValue: a,\n      _currentValue2: a,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    a.Provider = {\n      $$typeof: v,\n      _context: a\n    };\n    return a.Consumer = a;\n  },\n  forwardRef: function forwardRef(a) {\n    return {\n      $$typeof: y,\n      render: a\n    };\n  },\n  lazy: function lazy(a) {\n    return {\n      $$typeof: ba,\n      _ctor: a,\n      _status: -1,\n      _result: null\n    };\n  },\n  memo: function memo(a, b) {\n    return {\n      $$typeof: aa,\n      type: a,\n      compare: void 0 === b ? null : b\n    };\n  },\n  useCallback: function useCallback(a, b) {\n    return W().useCallback(a, b);\n  },\n  useContext: function useContext(a, b) {\n    return W().useContext(a, b);\n  },\n  useEffect: function useEffect(a, b) {\n    return W().useEffect(a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, d) {\n    return W().useImperativeHandle(a, b, d);\n  },\n  useDebugValue: function useDebugValue() {},\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return W().useLayoutEffect(a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    return W().useMemo(a, b);\n  },\n  useReducer: function useReducer(a, b, d) {\n    return W().useReducer(a, b, d);\n  },\n  useRef: function useRef(a) {\n    return W().useRef(a);\n  },\n  useState: function useState(a) {\n    return W().useState(a);\n  },\n  Fragment: r,\n  StrictMode: t,\n  Suspense: z,\n  createElement: M,\n  cloneElement: function cloneElement(a, b, d) {\n    null === a || void 0 === a ? B(\"267\", a) : void 0;\n    var c = void 0,\n        e = k({}, a.props),\n        g = a.key,\n        h = a.ref,\n        f = a._owner;\n\n    if (null != b) {\n      void 0 !== b.ref && (h = b.ref, f = J.current);\n      void 0 !== b.key && (g = \"\" + b.key);\n      var l = void 0;\n      a.type && a.type.defaultProps && (l = a.type.defaultProps);\n\n      for (c in b) {\n        K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);\n      }\n    }\n\n    c = arguments.length - 2;\n    if (1 === c) e.children = d;else if (1 < c) {\n      l = Array(c);\n\n      for (var m = 0; m < c; m++) {\n        l[m] = arguments[m + 2];\n      }\n\n      e.children = l;\n    }\n    return {\n      $$typeof: p,\n      type: a.type,\n      key: g,\n      ref: h,\n      props: e,\n      _owner: f\n    };\n  },\n  createFactory: function createFactory(a) {\n    var b = M.bind(null, a);\n    b.type = a;\n    return b;\n  },\n  isValidElement: N,\n  version: \"16.8.1\",\n  unstable_ConcurrentMode: x,\n  unstable_Profiler: u,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentDispatcher: I,\n    ReactCurrentOwner: J,\n    assign: k\n  }\n},\n    Y = {\n  default: X\n},\n    Z = Y && X || Y;\nmodule.exports = Z.default || Z;","/** @license React v16.8.1\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar aa = require(\"react\"),\n    p = require(\"object-assign\"),\n    ba = require(\"scheduler\");\n\nfunction ca(a, b, c, d, e, f, g, h) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [c, d, e, f, g, h],\n          k = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[k++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction t(a) {\n  for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n    c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n}\n\naa ? void 0 : t(\"227\");\n\nfunction da(a, b, c, d, e, f, g, h, l) {\n  var k = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    b.apply(c, k);\n  } catch (m) {\n    this.onError(m);\n  }\n}\n\nvar ea = !1,\n    fa = null,\n    ha = !1,\n    ia = null,\n    ja = {\n  onError: function onError(a) {\n    ea = !0;\n    fa = a;\n  }\n};\n\nfunction ka(a, b, c, d, e, f, g, h, l) {\n  ea = !1;\n  fa = null;\n  da.apply(ja, arguments);\n}\n\nfunction la(a, b, c, d, e, f, g, h, l) {\n  ka.apply(this, arguments);\n\n  if (ea) {\n    if (ea) {\n      var k = fa;\n      ea = !1;\n      fa = null;\n    } else t(\"198\"), k = void 0;\n\n    ha || (ha = !0, ia = k);\n  }\n}\n\nvar ma = null,\n    na = {};\n\nfunction oa() {\n  if (ma) for (var a in na) {\n    var b = na[a],\n        c = ma.indexOf(a);\n    -1 < c ? void 0 : t(\"96\", a);\n\n    if (!pa[c]) {\n      b.extractEvents ? void 0 : t(\"97\", a);\n      pa[c] = b;\n      c = b.eventTypes;\n\n      for (var d in c) {\n        var e = void 0;\n        var f = c[d],\n            g = b,\n            h = d;\n        ra.hasOwnProperty(h) ? t(\"99\", h) : void 0;\n        ra[h] = f;\n        var l = f.phasedRegistrationNames;\n\n        if (l) {\n          for (e in l) {\n            l.hasOwnProperty(e) && sa(l[e], g, h);\n          }\n\n          e = !0;\n        } else f.registrationName ? (sa(f.registrationName, g, h), e = !0) : e = !1;\n\n        e ? void 0 : t(\"98\", d, a);\n      }\n    }\n  }\n}\n\nfunction sa(a, b, c) {\n  ta[a] ? t(\"100\", a) : void 0;\n  ta[a] = b;\n  ua[a] = b.eventTypes[c].dependencies;\n}\n\nvar pa = [],\n    ra = {},\n    ta = {},\n    ua = {},\n    va = null,\n    wa = null,\n    xa = null;\n\nfunction ya(a, b, c) {\n  var d = a.type || \"unknown-event\";\n  a.currentTarget = xa(c);\n  la(d, b, void 0, a);\n  a.currentTarget = null;\n}\n\nfunction za(a, b) {\n  null == b ? t(\"30\") : void 0;\n  if (null == a) return b;\n\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) return a.push.apply(a, b), a;\n    a.push(b);\n    return a;\n  }\n\n  return Array.isArray(b) ? [a].concat(b) : [a, b];\n}\n\nfunction Aa(a, b, c) {\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n}\n\nvar Ba = null;\n\nfunction Ca(a) {\n  if (a) {\n    var b = a._dispatchListeners,\n        c = a._dispatchInstances;\n    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n      ya(a, b[d], c[d]);\n    } else b && ya(a, b, c);\n    a._dispatchListeners = null;\n    a._dispatchInstances = null;\n    a.isPersistent() || a.constructor.release(a);\n  }\n}\n\nvar Da = {\n  injectEventPluginOrder: function injectEventPluginOrder(a) {\n    ma ? t(\"101\") : void 0;\n    ma = Array.prototype.slice.call(a);\n    oa();\n  },\n  injectEventPluginsByName: function injectEventPluginsByName(a) {\n    var b = !1,\n        c;\n\n    for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];\n        na.hasOwnProperty(c) && na[c] === d || (na[c] ? t(\"102\", c) : void 0, na[c] = d, b = !0);\n      }\n    }\n\n    b && oa();\n  }\n};\n\nfunction Ea(a, b) {\n  var c = a.stateNode;\n  if (!c) return null;\n  var d = va(c);\n  if (!d) return null;\n  c = d[b];\n\n  a: switch (b) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n      a = !d;\n      break a;\n\n    default:\n      a = !1;\n  }\n\n  if (a) return null;\n  c && \"function\" !== typeof c ? t(\"231\", b, typeof c) : void 0;\n  return c;\n}\n\nfunction Fa(a) {\n  null !== a && (Ba = za(Ba, a));\n  a = Ba;\n  Ba = null;\n  if (a && (Aa(a, Ca), Ba ? t(\"95\") : void 0, ha)) throw a = ia, ha = !1, ia = null, a;\n}\n\nvar Ga = Math.random().toString(36).slice(2),\n    Ha = \"__reactInternalInstance$\" + Ga,\n    Ia = \"__reactEventHandlers$\" + Ga;\n\nfunction Ja(a) {\n  if (a[Ha]) return a[Ha];\n\n  for (; !a[Ha];) {\n    if (a.parentNode) a = a.parentNode;else return null;\n  }\n\n  a = a[Ha];\n  return 5 === a.tag || 6 === a.tag ? a : null;\n}\n\nfunction Ka(a) {\n  a = a[Ha];\n  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n}\n\nfunction La(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  t(\"33\");\n}\n\nfunction Ma(a) {\n  return a[Ia] || null;\n}\n\nfunction Na(a) {\n  do {\n    a = a.return;\n  } while (a && 5 !== a.tag);\n\n  return a ? a : null;\n}\n\nfunction Oa(a, b, c) {\n  if (b = Ea(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = za(c._dispatchListeners, b), c._dispatchInstances = za(c._dispatchInstances, a);\n}\n\nfunction Pa(a) {\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\n    for (var b = a._targetInst, c = []; b;) {\n      c.push(b), b = Na(b);\n    }\n\n    for (b = c.length; 0 < b--;) {\n      Oa(c[b], \"captured\", a);\n    }\n\n    for (b = 0; b < c.length; b++) {\n      Oa(c[b], \"bubbled\", a);\n    }\n  }\n}\n\nfunction Qa(a, b, c) {\n  a && c && c.dispatchConfig.registrationName && (b = Ea(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = za(c._dispatchListeners, b), c._dispatchInstances = za(c._dispatchInstances, a));\n}\n\nfunction Ra(a) {\n  a && a.dispatchConfig.registrationName && Qa(a._targetInst, null, a);\n}\n\nfunction Sa(a) {\n  Aa(a, Pa);\n}\n\nvar Ta = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\nfunction Ua(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c[\"Webkit\" + a] = \"webkit\" + b;\n  c[\"Moz\" + a] = \"moz\" + b;\n  return c;\n}\n\nvar Va = {\n  animationend: Ua(\"Animation\", \"AnimationEnd\"),\n  animationiteration: Ua(\"Animation\", \"AnimationIteration\"),\n  animationstart: Ua(\"Animation\", \"AnimationStart\"),\n  transitionend: Ua(\"Transition\", \"TransitionEnd\")\n},\n    Wa = {},\n    Xa = {};\nTa && (Xa = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Va.animationend.animation, delete Va.animationiteration.animation, delete Va.animationstart.animation), \"TransitionEvent\" in window || delete Va.transitionend.transition);\n\nfunction Ya(a) {\n  if (Wa[a]) return Wa[a];\n  if (!Va[a]) return a;\n  var b = Va[a],\n      c;\n\n  for (c in b) {\n    if (b.hasOwnProperty(c) && c in Xa) return Wa[a] = b[c];\n  }\n\n  return a;\n}\n\nvar Za = Ya(\"animationend\"),\n    $a = Ya(\"animationiteration\"),\n    ab = Ya(\"animationstart\"),\n    bb = Ya(\"transitionend\"),\n    cb = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n    db = null,\n    eb = null,\n    fb = null;\n\nfunction gb() {\n  if (fb) return fb;\n  var a,\n      b = eb,\n      c = b.length,\n      d,\n      e = \"value\" in db ? db.value : db.textContent,\n      f = e.length;\n\n  for (a = 0; a < c && b[a] === e[a]; a++) {\n    ;\n  }\n\n  var g = c - a;\n\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n    ;\n  }\n\n  return fb = e.slice(a, 1 < d ? 1 - d : void 0);\n}\n\nfunction hb() {\n  return !0;\n}\n\nfunction ib() {\n  return !1;\n}\n\nfunction A(a, b, c, d) {\n  this.dispatchConfig = a;\n  this._targetInst = b;\n  this.nativeEvent = c;\n  a = this.constructor.Interface;\n\n  for (var e in a) {\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n  }\n\n  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? hb : ib;\n  this.isPropagationStopped = ib;\n  return this;\n}\n\np(A.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = !0;\n    var a = this.nativeEvent;\n    a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = hb);\n  },\n  stopPropagation: function stopPropagation() {\n    var a = this.nativeEvent;\n    a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = hb);\n  },\n  persist: function persist() {\n    this.isPersistent = hb;\n  },\n  isPersistent: ib,\n  destructor: function destructor() {\n    var a = this.constructor.Interface,\n        b;\n\n    for (b in a) {\n      this[b] = null;\n    }\n\n    this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n    this.isPropagationStopped = this.isDefaultPrevented = ib;\n    this._dispatchInstances = this._dispatchListeners = null;\n  }\n});\nA.Interface = {\n  type: null,\n  target: null,\n  currentTarget: function currentTarget() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(a) {\n    return a.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\nA.extend = function (a) {\n  function b() {}\n\n  function c() {\n    return d.apply(this, arguments);\n  }\n\n  var d = this;\n  b.prototype = d.prototype;\n  var e = new b();\n  p(e, c.prototype);\n  c.prototype = e;\n  c.prototype.constructor = c;\n  c.Interface = p({}, d.Interface, a);\n  c.extend = d.extend;\n  jb(c);\n  return c;\n};\n\njb(A);\n\nfunction kb(a, b, c, d) {\n  if (this.eventPool.length) {\n    var e = this.eventPool.pop();\n    this.call(e, a, b, c, d);\n    return e;\n  }\n\n  return new this(a, b, c, d);\n}\n\nfunction lb(a) {\n  a instanceof this ? void 0 : t(\"279\");\n  a.destructor();\n  10 > this.eventPool.length && this.eventPool.push(a);\n}\n\nfunction jb(a) {\n  a.eventPool = [];\n  a.getPooled = kb;\n  a.release = lb;\n}\n\nvar mb = A.extend({\n  data: null\n}),\n    nb = A.extend({\n  data: null\n}),\n    ob = [9, 13, 27, 32],\n    pb = Ta && \"CompositionEvent\" in window,\n    qb = null;\nTa && \"documentMode\" in document && (qb = document.documentMode);\nvar rb = Ta && \"TextEvent\" in window && !qb,\n    sb = Ta && (!pb || qb && 8 < qb && 11 >= qb),\n    tb = String.fromCharCode(32),\n    ub = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: \"onBeforeInput\",\n      captured: \"onBeforeInputCapture\"\n    },\n    dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionEnd\",\n      captured: \"onCompositionEndCapture\"\n    },\n    dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionStart\",\n      captured: \"onCompositionStartCapture\"\n    },\n    dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionUpdate\",\n      captured: \"onCompositionUpdateCapture\"\n    },\n    dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n  }\n},\n    wb = !1;\n\nfunction xb(a, b) {\n  switch (a) {\n    case \"keyup\":\n      return -1 !== ob.indexOf(b.keyCode);\n\n    case \"keydown\":\n      return 229 !== b.keyCode;\n\n    case \"keypress\":\n    case \"mousedown\":\n    case \"blur\":\n      return !0;\n\n    default:\n      return !1;\n  }\n}\n\nfunction yb(a) {\n  a = a.detail;\n  return \"object\" === typeof a && \"data\" in a ? a.data : null;\n}\n\nvar zb = !1;\n\nfunction Ab(a, b) {\n  switch (a) {\n    case \"compositionend\":\n      return yb(b);\n\n    case \"keypress\":\n      if (32 !== b.which) return null;\n      wb = !0;\n      return tb;\n\n    case \"textInput\":\n      return a = b.data, a === tb && wb ? null : a;\n\n    default:\n      return null;\n  }\n}\n\nfunction Bb(a, b) {\n  if (zb) return \"compositionend\" === a || !pb && xb(a, b) ? (a = gb(), fb = eb = db = null, zb = !1, a) : null;\n\n  switch (a) {\n    case \"paste\":\n      return null;\n\n    case \"keypress\":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n\n      return null;\n\n    case \"compositionend\":\n      return sb && \"ko\" !== b.locale ? null : b.data;\n\n    default:\n      return null;\n  }\n}\n\nvar Cb = {\n  eventTypes: ub,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = void 0;\n    var f = void 0;\n    if (pb) b: {\n      switch (a) {\n        case \"compositionstart\":\n          e = ub.compositionStart;\n          break b;\n\n        case \"compositionend\":\n          e = ub.compositionEnd;\n          break b;\n\n        case \"compositionupdate\":\n          e = ub.compositionUpdate;\n          break b;\n      }\n\n      e = void 0;\n    } else zb ? xb(a, c) && (e = ub.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = ub.compositionStart);\n    e ? (sb && \"ko\" !== c.locale && (zb || e !== ub.compositionStart ? e === ub.compositionEnd && zb && (f = gb()) : (db = d, eb = \"value\" in db ? db.value : db.textContent, zb = !0)), e = mb.getPooled(e, b, c, d), f ? e.data = f : (f = yb(c), null !== f && (e.data = f)), Sa(e), f = e) : f = null;\n    (a = rb ? Ab(a, c) : Bb(a, c)) ? (b = nb.getPooled(ub.beforeInput, b, c, d), b.data = a, Sa(b)) : b = null;\n    return null === f ? b : null === b ? f : [f, b];\n  }\n},\n    Db = null,\n    Eb = null,\n    Fb = null;\n\nfunction Gb(a) {\n  if (a = wa(a)) {\n    \"function\" !== typeof Db ? t(\"280\") : void 0;\n    var b = va(a.stateNode);\n    Db(a.stateNode, a.type, b);\n  }\n}\n\nfunction Hb(a) {\n  Eb ? Fb ? Fb.push(a) : Fb = [a] : Eb = a;\n}\n\nfunction Ib() {\n  if (Eb) {\n    var a = Eb,\n        b = Fb;\n    Fb = Eb = null;\n    Gb(a);\n    if (b) for (a = 0; a < b.length; a++) {\n      Gb(b[a]);\n    }\n  }\n}\n\nfunction Jb(a, b) {\n  return a(b);\n}\n\nfunction Kb(a, b, c) {\n  return a(b, c);\n}\n\nfunction Lb() {}\n\nvar Mb = !1;\n\nfunction Nb(a, b) {\n  if (Mb) return a(b);\n  Mb = !0;\n\n  try {\n    return Jb(a, b);\n  } finally {\n    if (Mb = !1, null !== Eb || null !== Fb) Lb(), Ib();\n  }\n}\n\nvar Ob = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\n\nfunction Pb(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return \"input\" === b ? !!Ob[a.type] : \"textarea\" === b ? !0 : !1;\n}\n\nfunction Qb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\n\nfunction Sb(a) {\n  if (!Ta) return !1;\n  a = \"on\" + a;\n  var b = a in document;\n  b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n  return b;\n}\n\nfunction Tb(a) {\n  var b = a.type;\n  return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n}\n\nfunction Ub(a) {\n  var b = Tb(a) ? \"checked\" : \"value\",\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n      d = \"\" + a[b];\n\n  if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n    var e = c.get,\n        f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function get() {\n        return e.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function getValue() {\n        return d;\n      },\n      setValue: function setValue(a) {\n        d = \"\" + a;\n      },\n      stopTracking: function stopTracking() {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\n\nfunction Vb(a) {\n  a._valueTracker || (a._valueTracker = Ub(a));\n}\n\nfunction Wb(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = \"\";\n  a && (d = Tb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\n\nvar Xb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nXb.hasOwnProperty(\"ReactCurrentDispatcher\") || (Xb.ReactCurrentDispatcher = {\n  current: null\n});\nvar Yb = /^(.*)[\\\\\\/]/,\n    D = \"function\" === typeof Symbol && Symbol.for,\n    Zb = D ? Symbol.for(\"react.element\") : 60103,\n    $b = D ? Symbol.for(\"react.portal\") : 60106,\n    ac = D ? Symbol.for(\"react.fragment\") : 60107,\n    bc = D ? Symbol.for(\"react.strict_mode\") : 60108,\n    cc = D ? Symbol.for(\"react.profiler\") : 60114,\n    dc = D ? Symbol.for(\"react.provider\") : 60109,\n    ec = D ? Symbol.for(\"react.context\") : 60110,\n    fc = D ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    gc = D ? Symbol.for(\"react.forward_ref\") : 60112,\n    hc = D ? Symbol.for(\"react.suspense\") : 60113,\n    ic = D ? Symbol.for(\"react.memo\") : 60115,\n    jc = D ? Symbol.for(\"react.lazy\") : 60116,\n    kc = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction lc(a) {\n  if (null === a || \"object\" !== typeof a) return null;\n  a = kc && a[kc] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\n\nfunction mc(a) {\n  if (null == a) return null;\n  if (\"function\" === typeof a) return a.displayName || a.name || null;\n  if (\"string\" === typeof a) return a;\n\n  switch (a) {\n    case fc:\n      return \"ConcurrentMode\";\n\n    case ac:\n      return \"Fragment\";\n\n    case $b:\n      return \"Portal\";\n\n    case cc:\n      return \"Profiler\";\n\n    case bc:\n      return \"StrictMode\";\n\n    case hc:\n      return \"Suspense\";\n  }\n\n  if (\"object\" === typeof a) switch (a.$$typeof) {\n    case ec:\n      return \"Context.Consumer\";\n\n    case dc:\n      return \"Context.Provider\";\n\n    case gc:\n      var b = a.render;\n      b = b.displayName || b.name || \"\";\n      return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n    case ic:\n      return mc(a.type);\n\n    case jc:\n      if (a = 1 === a._status ? a._result : null) return mc(a);\n  }\n  return null;\n}\n\nfunction nc(a) {\n  var b = \"\";\n\n  do {\n    a: switch (a.tag) {\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n      case 10:\n      case 9:\n        var c = \"\";\n        break a;\n\n      default:\n        var d = a._debugOwner,\n            e = a._debugSource,\n            f = mc(a.type);\n        c = null;\n        d && (c = mc(d.type));\n        d = f;\n        f = \"\";\n        e ? f = \" (at \" + e.fileName.replace(Yb, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n        c = \"\\n    in \" + (d || \"Unknown\") + f;\n    }\n\n    b += c;\n    a = a.return;\n  } while (a);\n\n  return b;\n}\n\nvar oc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n    pc = Object.prototype.hasOwnProperty,\n    qc = {},\n    rc = {};\n\nfunction sc(a) {\n  if (pc.call(rc, a)) return !0;\n  if (pc.call(qc, a)) return !1;\n  if (oc.test(a)) return rc[a] = !0;\n  qc[a] = !0;\n  return !1;\n}\n\nfunction tc(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n\n  switch (typeof b) {\n    case \"function\":\n    case \"symbol\":\n      return !0;\n\n    case \"boolean\":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return \"data-\" !== a && \"aria-\" !== a;\n\n    default:\n      return !1;\n  }\n}\n\nfunction uc(a, b, c, d) {\n  if (null === b || \"undefined\" === typeof b || tc(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n\n    case 4:\n      return !1 === b;\n\n    case 5:\n      return isNaN(b);\n\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\n\nfunction F(a, b, c, d, e) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n}\n\nvar G = {};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n  G[a] = new F(a, 0, !1, a, null);\n});\n[[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n  var b = a[0];\n  G[b] = new F(b, 1, !1, a[1], null);\n});\n[\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n  G[a] = new F(a, 2, !1, a.toLowerCase(), null);\n});\n[\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n  G[a] = new F(a, 2, !1, a, null);\n});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n  G[a] = new F(a, 3, !1, a.toLowerCase(), null);\n});\n[\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n  G[a] = new F(a, 3, !0, a, null);\n});\n[\"capture\", \"download\"].forEach(function (a) {\n  G[a] = new F(a, 4, !1, a, null);\n});\n[\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n  G[a] = new F(a, 6, !1, a, null);\n});\n[\"rowSpan\", \"start\"].forEach(function (a) {\n  G[a] = new F(a, 5, !1, a.toLowerCase(), null);\n});\nvar vc = /[\\-:]([a-z])/g;\n\nfunction wc(a) {\n  return a[1].toUpperCase();\n}\n\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n  var b = a.replace(vc, wc);\n  G[b] = new F(b, 1, !1, a, null);\n});\n\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n  var b = a.replace(vc, wc);\n  G[b] = new F(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n});\n[\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n  var b = a.replace(vc, wc);\n  G[b] = new F(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n});\nG.tabIndex = new F(\"tabIndex\", 1, !1, \"tabindex\", null);\n\nfunction xc(a, b, c, d) {\n  var e = G.hasOwnProperty(b) ? G[b] : null;\n  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n  f || (uc(b, c, e, d) && (c = null), d || null === e ? sc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n}\n\nfunction yc(a) {\n  switch (typeof a) {\n    case \"boolean\":\n    case \"number\":\n    case \"object\":\n    case \"string\":\n    case \"undefined\":\n      return a;\n\n    default:\n      return \"\";\n  }\n}\n\nfunction zc(a, b) {\n  var c = b.checked;\n  return p({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\n\nfunction Ac(a, b) {\n  var c = null == b.defaultValue ? \"\" : b.defaultValue,\n      d = null != b.checked ? b.checked : b.defaultChecked;\n  c = yc(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n  };\n}\n\nfunction Bc(a, b) {\n  b = b.checked;\n  null != b && xc(a, \"checked\", b, !1);\n}\n\nfunction Cc(a, b) {\n  Bc(a, b);\n  var c = yc(b.value),\n      d = b.type;\n  if (null != c) {\n    if (\"number\" === d) {\n      if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\n  } else if (\"submit\" === d || \"reset\" === d) {\n    a.removeAttribute(\"value\");\n    return;\n  }\n  b.hasOwnProperty(\"value\") ? Dc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && Dc(a, b.type, yc(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\n\nfunction Ec(a, b, c) {\n  if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n    var d = b.type;\n    if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = \"\" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n\n  c = a.name;\n  \"\" !== c && (a.name = \"\");\n  a.defaultChecked = !a.defaultChecked;\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  \"\" !== c && (a.name = c);\n}\n\nfunction Dc(a, b, c) {\n  if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n}\n\nvar Fc = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: \"onChange\",\n      captured: \"onChangeCapture\"\n    },\n    dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n  }\n};\n\nfunction Gc(a, b, c) {\n  a = A.getPooled(Fc.change, a, b, c);\n  a.type = \"change\";\n  Hb(c);\n  Sa(a);\n  return a;\n}\n\nvar Hc = null,\n    Ic = null;\n\nfunction Jc(a) {\n  Fa(a);\n}\n\nfunction Kc(a) {\n  var b = La(a);\n  if (Wb(b)) return a;\n}\n\nfunction Lc(a, b) {\n  if (\"change\" === a) return b;\n}\n\nvar Mc = !1;\nTa && (Mc = Sb(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\nfunction Nc() {\n  Hc && (Hc.detachEvent(\"onpropertychange\", Oc), Ic = Hc = null);\n}\n\nfunction Oc(a) {\n  \"value\" === a.propertyName && Kc(Ic) && (a = Gc(Ic, a, Qb(a)), Nb(Jc, a));\n}\n\nfunction Pc(a, b, c) {\n  \"focus\" === a ? (Nc(), Hc = b, Ic = c, Hc.attachEvent(\"onpropertychange\", Oc)) : \"blur\" === a && Nc();\n}\n\nfunction Qc(a) {\n  if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Kc(Ic);\n}\n\nfunction Rc(a, b) {\n  if (\"click\" === a) return Kc(b);\n}\n\nfunction Sc(a, b) {\n  if (\"input\" === a || \"change\" === a) return Kc(b);\n}\n\nvar Tc = {\n  eventTypes: Fc,\n  _isInputEventSupported: Mc,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = b ? La(b) : window,\n        f = void 0,\n        g = void 0,\n        h = e.nodeName && e.nodeName.toLowerCase();\n    \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Lc : Pb(e) ? Mc ? f = Sc : (f = Qc, g = Pc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Rc);\n    if (f && (f = f(a, b))) return Gc(f, c, d);\n    g && g(a, e, b);\n    \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && Dc(e, \"number\", e.value);\n  }\n},\n    Uc = A.extend({\n  view: null,\n  detail: null\n}),\n    Vc = {\n  Alt: \"altKey\",\n  Control: \"ctrlKey\",\n  Meta: \"metaKey\",\n  Shift: \"shiftKey\"\n};\n\nfunction Wc(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Vc[a]) ? !!b[a] : !1;\n}\n\nfunction Xc() {\n  return Wc;\n}\n\nvar Yc = 0,\n    Zc = 0,\n    $c = !1,\n    ad = !1,\n    bd = Uc.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: Xc,\n  button: null,\n  buttons: null,\n  relatedTarget: function relatedTarget(a) {\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n  },\n  movementX: function movementX(a) {\n    if (\"movementX\" in a) return a.movementX;\n    var b = Yc;\n    Yc = a.screenX;\n    return $c ? \"mousemove\" === a.type ? a.screenX - b : 0 : ($c = !0, 0);\n  },\n  movementY: function movementY(a) {\n    if (\"movementY\" in a) return a.movementY;\n    var b = Zc;\n    Zc = a.screenY;\n    return ad ? \"mousemove\" === a.type ? a.screenY - b : 0 : (ad = !0, 0);\n  }\n}),\n    cd = bd.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n}),\n    dd = {\n  mouseEnter: {\n    registrationName: \"onMouseEnter\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  mouseLeave: {\n    registrationName: \"onMouseLeave\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  pointerEnter: {\n    registrationName: \"onPointerEnter\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  },\n  pointerLeave: {\n    registrationName: \"onPointerLeave\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  }\n},\n    ed = {\n  eventTypes: dd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = \"mouseover\" === a || \"pointerover\" === a,\n        f = \"mouseout\" === a || \"pointerout\" === a;\n    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ja(b) : null) : f = null;\n    if (f === b) return null;\n    var g = void 0,\n        h = void 0,\n        l = void 0,\n        k = void 0;\n    if (\"mouseout\" === a || \"mouseover\" === a) g = bd, h = dd.mouseLeave, l = dd.mouseEnter, k = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = cd, h = dd.pointerLeave, l = dd.pointerEnter, k = \"pointer\";\n    var m = null == f ? e : La(f);\n    e = null == b ? e : La(b);\n    a = g.getPooled(h, f, c, d);\n    a.type = k + \"leave\";\n    a.target = m;\n    a.relatedTarget = e;\n    c = g.getPooled(l, b, c, d);\n    c.type = k + \"enter\";\n    c.target = e;\n    c.relatedTarget = m;\n    d = b;\n    if (f && d) a: {\n      b = f;\n      e = d;\n      k = 0;\n\n      for (g = b; g; g = Na(g)) {\n        k++;\n      }\n\n      g = 0;\n\n      for (l = e; l; l = Na(l)) {\n        g++;\n      }\n\n      for (; 0 < k - g;) {\n        b = Na(b), k--;\n      }\n\n      for (; 0 < g - k;) {\n        e = Na(e), g--;\n      }\n\n      for (; k--;) {\n        if (b === e || b === e.alternate) break a;\n        b = Na(b);\n        e = Na(e);\n      }\n\n      b = null;\n    } else b = null;\n    e = b;\n\n    for (b = []; f && f !== e;) {\n      k = f.alternate;\n      if (null !== k && k === e) break;\n      b.push(f);\n      f = Na(f);\n    }\n\n    for (f = []; d && d !== e;) {\n      k = d.alternate;\n      if (null !== k && k === e) break;\n      f.push(d);\n      d = Na(d);\n    }\n\n    for (d = 0; d < b.length; d++) {\n      Qa(b[d], \"bubbled\", a);\n    }\n\n    for (d = f.length; 0 < d--;) {\n      Qa(f[d], \"captured\", c);\n    }\n\n    return [a, c];\n  }\n};\n\nfunction fd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\n\nvar gd = Object.prototype.hasOwnProperty;\n\nfunction hd(a, b) {\n  if (fd(a, b)) return !0;\n  if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n      d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n\n  for (d = 0; d < c.length; d++) {\n    if (!gd.call(b, c[d]) || !fd(a[c[d]], b[c[d]])) return !1;\n  }\n\n  return !0;\n}\n\nfunction kd(a) {\n  var b = a;\n  if (a.alternate) for (; b.return;) {\n    b = b.return;\n  } else {\n    if (0 !== (b.effectTag & 2)) return 1;\n\n    for (; b.return;) {\n      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n    }\n  }\n  return 3 === b.tag ? 2 : 3;\n}\n\nfunction ld(a) {\n  2 !== kd(a) ? t(\"188\") : void 0;\n}\n\nfunction md(a) {\n  var b = a.alternate;\n  if (!b) return b = kd(a), 3 === b ? t(\"188\") : void 0, 1 === b ? null : a;\n\n  for (var c = a, d = b;;) {\n    var e = c.return,\n        f = e ? e.alternate : null;\n    if (!e || !f) break;\n\n    if (e.child === f.child) {\n      for (var g = e.child; g;) {\n        if (g === c) return ld(e), a;\n        if (g === d) return ld(e), b;\n        g = g.sibling;\n      }\n\n      t(\"188\");\n    }\n\n    if (c.return !== d.return) c = e, d = f;else {\n      g = !1;\n\n      for (var h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n\n        h = h.sibling;\n      }\n\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        g ? void 0 : t(\"189\");\n      }\n    }\n    c.alternate !== d ? t(\"190\") : void 0;\n  }\n\n  3 !== c.tag ? t(\"188\") : void 0;\n  return c.stateNode.current === c ? a : b;\n}\n\nfunction nd(a) {\n  a = md(a);\n  if (!a) return null;\n\n  for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag) return b;\n    if (b.child) b.child.return = b, b = b.child;else {\n      if (b === a) break;\n\n      for (; !b.sibling;) {\n        if (!b.return || b.return === a) return null;\n        b = b.return;\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  return null;\n}\n\nvar od = A.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    pd = A.extend({\n  clipboardData: function clipboardData(a) {\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n  }\n}),\n    qd = Uc.extend({\n  relatedTarget: null\n});\n\nfunction rd(a) {\n  var b = a.keyCode;\n  \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\n\nvar sd = {\n  Esc: \"Escape\",\n  Spacebar: \" \",\n  Left: \"ArrowLeft\",\n  Up: \"ArrowUp\",\n  Right: \"ArrowRight\",\n  Down: \"ArrowDown\",\n  Del: \"Delete\",\n  Win: \"OS\",\n  Menu: \"ContextMenu\",\n  Apps: \"ContextMenu\",\n  Scroll: \"ScrollLock\",\n  MozPrintableKey: \"Unidentified\"\n},\n    td = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  12: \"Clear\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  19: \"Pause\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  45: \"Insert\",\n  46: \"Delete\",\n  112: \"F1\",\n  113: \"F2\",\n  114: \"F3\",\n  115: \"F4\",\n  116: \"F5\",\n  117: \"F6\",\n  118: \"F7\",\n  119: \"F8\",\n  120: \"F9\",\n  121: \"F10\",\n  122: \"F11\",\n  123: \"F12\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  224: \"Meta\"\n},\n    ud = Uc.extend({\n  key: function key(a) {\n    if (a.key) {\n      var b = sd[a.key] || a.key;\n      if (\"Unidentified\" !== b) return b;\n    }\n\n    return \"keypress\" === a.type ? (a = rd(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? td[a.keyCode] || \"Unidentified\" : \"\";\n  },\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: Xc,\n  charCode: function charCode(a) {\n    return \"keypress\" === a.type ? rd(a) : 0;\n  },\n  keyCode: function keyCode(a) {\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  },\n  which: function which(a) {\n    return \"keypress\" === a.type ? rd(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  }\n}),\n    vd = bd.extend({\n  dataTransfer: null\n}),\n    wd = Uc.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: Xc\n}),\n    xd = A.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    yd = bd.extend({\n  deltaX: function deltaX(a) {\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n  },\n  deltaY: function deltaY(a) {\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n  },\n  deltaZ: null,\n  deltaMode: null\n}),\n    zd = [[\"abort\", \"abort\"], [Za, \"animationEnd\"], [$a, \"animationIteration\"], [ab, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [bb, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n    Ad = {},\n    Bd = {};\n\nfunction Cd(a, b) {\n  var c = a[0];\n  a = a[1];\n  var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n  b = {\n    phasedRegistrationNames: {\n      bubbled: d,\n      captured: d + \"Capture\"\n    },\n    dependencies: [c],\n    isInteractive: b\n  };\n  Ad[a] = b;\n  Bd[c] = b;\n}\n\n[[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n  Cd(a, !0);\n});\nzd.forEach(function (a) {\n  Cd(a, !1);\n});\nvar Dd = {\n  eventTypes: Ad,\n  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n    a = Bd[a];\n    return void 0 !== a && !0 === a.isInteractive;\n  },\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = Bd[a];\n    if (!e) return null;\n\n    switch (a) {\n      case \"keypress\":\n        if (0 === rd(c)) return null;\n\n      case \"keydown\":\n      case \"keyup\":\n        a = ud;\n        break;\n\n      case \"blur\":\n      case \"focus\":\n        a = qd;\n        break;\n\n      case \"click\":\n        if (2 === c.button) return null;\n\n      case \"auxclick\":\n      case \"dblclick\":\n      case \"mousedown\":\n      case \"mousemove\":\n      case \"mouseup\":\n      case \"mouseout\":\n      case \"mouseover\":\n      case \"contextmenu\":\n        a = bd;\n        break;\n\n      case \"drag\":\n      case \"dragend\":\n      case \"dragenter\":\n      case \"dragexit\":\n      case \"dragleave\":\n      case \"dragover\":\n      case \"dragstart\":\n      case \"drop\":\n        a = vd;\n        break;\n\n      case \"touchcancel\":\n      case \"touchend\":\n      case \"touchmove\":\n      case \"touchstart\":\n        a = wd;\n        break;\n\n      case Za:\n      case $a:\n      case ab:\n        a = od;\n        break;\n\n      case bb:\n        a = xd;\n        break;\n\n      case \"scroll\":\n        a = Uc;\n        break;\n\n      case \"wheel\":\n        a = yd;\n        break;\n\n      case \"copy\":\n      case \"cut\":\n      case \"paste\":\n        a = pd;\n        break;\n\n      case \"gotpointercapture\":\n      case \"lostpointercapture\":\n      case \"pointercancel\":\n      case \"pointerdown\":\n      case \"pointermove\":\n      case \"pointerout\":\n      case \"pointerover\":\n      case \"pointerup\":\n        a = cd;\n        break;\n\n      default:\n        a = A;\n    }\n\n    b = a.getPooled(e, b, c, d);\n    Sa(b);\n    return b;\n  }\n},\n    Ed = Dd.isInteractiveTopLevelEventType,\n    Fd = [];\n\nfunction Gd(a) {\n  var b = a.targetInst,\n      c = b;\n\n  do {\n    if (!c) {\n      a.ancestors.push(c);\n      break;\n    }\n\n    var d;\n\n    for (d = c; d.return;) {\n      d = d.return;\n    }\n\n    d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n    if (!d) break;\n    a.ancestors.push(c);\n    c = Ja(d);\n  } while (c);\n\n  for (c = 0; c < a.ancestors.length; c++) {\n    b = a.ancestors[c];\n    var e = Qb(a.nativeEvent);\n    d = a.topLevelType;\n\n    for (var f = a.nativeEvent, g = null, h = 0; h < pa.length; h++) {\n      var l = pa[h];\n      l && (l = l.extractEvents(d, b, f, e)) && (g = za(g, l));\n    }\n\n    Fa(g);\n  }\n}\n\nvar Hd = !0;\n\nfunction H(a, b) {\n  if (!b) return null;\n  var c = (Ed(a) ? Id : Jd).bind(null, a);\n  b.addEventListener(a, c, !1);\n}\n\nfunction Kd(a, b) {\n  if (!b) return null;\n  var c = (Ed(a) ? Id : Jd).bind(null, a);\n  b.addEventListener(a, c, !0);\n}\n\nfunction Id(a, b) {\n  Kb(Jd, a, b);\n}\n\nfunction Jd(a, b) {\n  if (Hd) {\n    var c = Qb(b);\n    c = Ja(c);\n    null === c || \"number\" !== typeof c.tag || 2 === kd(c) || (c = null);\n\n    if (Fd.length) {\n      var d = Fd.pop();\n      d.topLevelType = a;\n      d.nativeEvent = b;\n      d.targetInst = c;\n      a = d;\n    } else a = {\n      topLevelType: a,\n      nativeEvent: b,\n      targetInst: c,\n      ancestors: []\n    };\n\n    try {\n      Nb(Gd, a);\n    } finally {\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > Fd.length && Fd.push(a);\n    }\n  }\n}\n\nvar Ld = {},\n    Md = 0,\n    Nd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\nfunction Od(a) {\n  Object.prototype.hasOwnProperty.call(a, Nd) || (a[Nd] = Md++, Ld[a[Nd]] = {});\n  return Ld[a[Nd]];\n}\n\nfunction Pd(a) {\n  a = a || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof a) return null;\n\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\n\nfunction Qd(a) {\n  for (; a && a.firstChild;) {\n    a = a.firstChild;\n  }\n\n  return a;\n}\n\nfunction Rd(a, b) {\n  var c = Qd(a);\n  a = 0;\n\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n\n        c = c.parentNode;\n      }\n\n      c = void 0;\n    }\n\n    c = Qd(c);\n  }\n}\n\nfunction Sd(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Sd(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\n\nfunction Td() {\n  for (var a = window, b = Pd(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      a = b.contentDocument.defaultView;\n    } catch (c) {\n      break;\n    }\n\n    b = Pd(a.document);\n  }\n\n  return b;\n}\n\nfunction Ud(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n}\n\nvar Vd = Ta && \"documentMode\" in document && 11 >= document.documentMode,\n    Wd = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelect\",\n      captured: \"onSelectCapture\"\n    },\n    dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n  }\n},\n    Xd = null,\n    Yd = null,\n    Zd = null,\n    $d = !1;\n\nfunction ae(a, b) {\n  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n  if ($d || null == Xd || Xd !== Pd(c)) return null;\n  c = Xd;\n  \"selectionStart\" in c && Ud(c) ? c = {\n    start: c.selectionStart,\n    end: c.selectionEnd\n  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n    anchorNode: c.anchorNode,\n    anchorOffset: c.anchorOffset,\n    focusNode: c.focusNode,\n    focusOffset: c.focusOffset\n  });\n  return Zd && hd(Zd, c) ? null : (Zd = c, a = A.getPooled(Wd.select, Yd, a, b), a.type = \"select\", a.target = Xd, Sa(a), a);\n}\n\nvar be = {\n  eventTypes: Wd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n        f;\n\n    if (!(f = !e)) {\n      a: {\n        e = Od(e);\n        f = ua.onSelect;\n\n        for (var g = 0; g < f.length; g++) {\n          var h = f[g];\n\n          if (!e.hasOwnProperty(h) || !e[h]) {\n            e = !1;\n            break a;\n          }\n        }\n\n        e = !0;\n      }\n\n      f = !e;\n    }\n\n    if (f) return null;\n    e = b ? La(b) : window;\n\n    switch (a) {\n      case \"focus\":\n        if (Pb(e) || \"true\" === e.contentEditable) Xd = e, Yd = b, Zd = null;\n        break;\n\n      case \"blur\":\n        Zd = Yd = Xd = null;\n        break;\n\n      case \"mousedown\":\n        $d = !0;\n        break;\n\n      case \"contextmenu\":\n      case \"mouseup\":\n      case \"dragend\":\n        return $d = !1, ae(c, d);\n\n      case \"selectionchange\":\n        if (Vd) break;\n\n      case \"keydown\":\n      case \"keyup\":\n        return ae(c, d);\n    }\n\n    return null;\n  }\n};\nDa.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nva = Ma;\nwa = Ka;\nxa = La;\nDa.injectEventPluginsByName({\n  SimpleEventPlugin: Dd,\n  EnterLeaveEventPlugin: ed,\n  ChangeEventPlugin: Tc,\n  SelectEventPlugin: be,\n  BeforeInputEventPlugin: Cb\n});\n\nfunction ce(a) {\n  var b = \"\";\n  aa.Children.forEach(a, function (a) {\n    null != a && (b += a);\n  });\n  return b;\n}\n\nfunction de(a, b) {\n  a = p({\n    children: void 0\n  }, b);\n  if (b = ce(b.children)) a.children = b;\n  return a;\n}\n\nfunction ee(a, b, c, d) {\n  a = a.options;\n\n  if (b) {\n    b = {};\n\n    for (var e = 0; e < c.length; e++) {\n      b[\"$\" + c[e]] = !0;\n    }\n\n    for (c = 0; c < a.length; c++) {\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n    }\n  } else {\n    c = \"\" + yc(c);\n    b = null;\n\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n\n    null !== b && (b.selected = !0);\n  }\n}\n\nfunction fe(a, b) {\n  null != b.dangerouslySetInnerHTML ? t(\"91\") : void 0;\n  return p({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: \"\" + a._wrapperState.initialValue\n  });\n}\n\nfunction ge(a, b) {\n  var c = b.value;\n  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? t(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : t(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n  a._wrapperState = {\n    initialValue: yc(c)\n  };\n}\n\nfunction he(a, b) {\n  var c = yc(b.value),\n      d = yc(b.defaultValue);\n  null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = \"\" + d);\n}\n\nfunction ie(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && (a.value = b);\n}\n\nvar je = {\n  html: \"http://www.w3.org/1999/xhtml\",\n  mathml: \"http://www.w3.org/1998/Math/MathML\",\n  svg: \"http://www.w3.org/2000/svg\"\n};\n\nfunction ke(a) {\n  switch (a) {\n    case \"svg\":\n      return \"http://www.w3.org/2000/svg\";\n\n    case \"math\":\n      return \"http://www.w3.org/1998/Math/MathML\";\n\n    default:\n      return \"http://www.w3.org/1999/xhtml\";\n  }\n}\n\nfunction le(a, b) {\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? ke(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n}\n\nvar me = void 0,\n    ne = function (a) {\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n    MSApp.execUnsafeLocalFunction(function () {\n      return a(b, c, d, e);\n    });\n  } : a;\n}(function (a, b) {\n  if (a.namespaceURI !== je.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n    me = me || document.createElement(\"div\");\n    me.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n    for (b = me.firstChild; a.firstChild;) {\n      a.removeChild(a.firstChild);\n    }\n\n    for (; b.firstChild;) {\n      a.appendChild(b.firstChild);\n    }\n  }\n});\n\nfunction oe(a, b) {\n  if (b) {\n    var c = a.firstChild;\n\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n\n  a.textContent = b;\n}\n\nvar pe = {\n  animationIterationCount: !0,\n  borderImageOutset: !0,\n  borderImageSlice: !0,\n  borderImageWidth: !0,\n  boxFlex: !0,\n  boxFlexGroup: !0,\n  boxOrdinalGroup: !0,\n  columnCount: !0,\n  columns: !0,\n  flex: !0,\n  flexGrow: !0,\n  flexPositive: !0,\n  flexShrink: !0,\n  flexNegative: !0,\n  flexOrder: !0,\n  gridArea: !0,\n  gridRow: !0,\n  gridRowEnd: !0,\n  gridRowSpan: !0,\n  gridRowStart: !0,\n  gridColumn: !0,\n  gridColumnEnd: !0,\n  gridColumnSpan: !0,\n  gridColumnStart: !0,\n  fontWeight: !0,\n  lineClamp: !0,\n  lineHeight: !0,\n  opacity: !0,\n  order: !0,\n  orphans: !0,\n  tabSize: !0,\n  widows: !0,\n  zIndex: !0,\n  zoom: !0,\n  fillOpacity: !0,\n  floodOpacity: !0,\n  stopOpacity: !0,\n  strokeDasharray: !0,\n  strokeDashoffset: !0,\n  strokeMiterlimit: !0,\n  strokeOpacity: !0,\n  strokeWidth: !0\n},\n    qe = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\nObject.keys(pe).forEach(function (a) {\n  qe.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    pe[b] = pe[a];\n  });\n});\n\nfunction re(a, b, c) {\n  return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || pe.hasOwnProperty(a) && pe[a] ? (\"\" + b).trim() : b + \"px\";\n}\n\nfunction se(a, b) {\n  a = a.style;\n\n  for (var c in b) {\n    if (b.hasOwnProperty(c)) {\n      var d = 0 === c.indexOf(\"--\"),\n          e = re(c, b[c], d);\n      \"float\" === c && (c = \"cssFloat\");\n      d ? a.setProperty(c, e) : a[c] = e;\n    }\n  }\n}\n\nvar te = p({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\n\nfunction ue(a, b) {\n  b && (te[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? t(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? t(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : t(\"61\")), null != b.style && \"object\" !== typeof b.style ? t(\"62\", \"\") : void 0);\n}\n\nfunction ve(a, b) {\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n  switch (a) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n\n    default:\n      return !0;\n  }\n}\n\nfunction we(a, b) {\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n  var c = Od(a);\n  b = ua[b];\n\n  for (var d = 0; d < b.length; d++) {\n    var e = b[d];\n\n    if (!c.hasOwnProperty(e) || !c[e]) {\n      switch (e) {\n        case \"scroll\":\n          Kd(\"scroll\", a);\n          break;\n\n        case \"focus\":\n        case \"blur\":\n          Kd(\"focus\", a);\n          Kd(\"blur\", a);\n          c.blur = !0;\n          c.focus = !0;\n          break;\n\n        case \"cancel\":\n        case \"close\":\n          Sb(e) && Kd(e, a);\n          break;\n\n        case \"invalid\":\n        case \"submit\":\n        case \"reset\":\n          break;\n\n        default:\n          -1 === cb.indexOf(e) && H(e, a);\n      }\n\n      c[e] = !0;\n    }\n  }\n}\n\nfunction xe() {}\n\nvar ye = null,\n    ze = null;\n\nfunction Ae(a, b) {\n  switch (a) {\n    case \"button\":\n    case \"input\":\n    case \"select\":\n    case \"textarea\":\n      return !!b.autoFocus;\n  }\n\n  return !1;\n}\n\nfunction Be(a, b) {\n  return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\n\nvar Ce = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    De = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    Ee = ba.unstable_scheduleCallback,\n    Fe = ba.unstable_cancelCallback;\n\nfunction Ge(a, b, c, d, e) {\n  a[Ia] = e;\n  \"input\" === c && \"radio\" === e.type && null != e.name && Bc(a, e);\n  ve(c, d);\n  d = ve(c, e);\n\n  for (var f = 0; f < b.length; f += 2) {\n    var g = b[f],\n        h = b[f + 1];\n    \"style\" === g ? se(a, h) : \"dangerouslySetInnerHTML\" === g ? ne(a, h) : \"children\" === g ? oe(a, h) : xc(a, g, h, d);\n  }\n\n  switch (c) {\n    case \"input\":\n      Cc(a, e);\n      break;\n\n    case \"textarea\":\n      he(a, e);\n      break;\n\n    case \"select\":\n      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ee(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ee(a, !!e.multiple, e.defaultValue, !0) : ee(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n  }\n}\n\nfunction He(a) {\n  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nfunction Ie(a) {\n  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nnew Set();\nvar Je = [],\n    Ke = -1;\n\nfunction I(a) {\n  0 > Ke || (a.current = Je[Ke], Je[Ke] = null, Ke--);\n}\n\nfunction J(a, b) {\n  Ke++;\n  Je[Ke] = a.current;\n  a.current = b;\n}\n\nvar Le = {},\n    K = {\n  current: Le\n},\n    L = {\n  current: !1\n},\n    Me = Le;\n\nfunction Oe(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return Le;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n      f;\n\n  for (f in c) {\n    e[f] = b[f];\n  }\n\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\n\nfunction M(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\n\nfunction Pe(a) {\n  I(L, a);\n  I(K, a);\n}\n\nfunction Qe(a) {\n  I(L, a);\n  I(K, a);\n}\n\nfunction Re(a, b, c) {\n  K.current !== Le ? t(\"168\") : void 0;\n  J(K, b, a);\n  J(L, c, a);\n}\n\nfunction Se(a, b, c) {\n  var d = a.stateNode;\n  a = b.childContextTypes;\n  if (\"function\" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n\n  for (var e in d) {\n    e in a ? void 0 : t(\"108\", mc(b) || \"Unknown\", e);\n  }\n\n  return p({}, c, d);\n}\n\nfunction Te(a) {\n  var b = a.stateNode;\n  b = b && b.__reactInternalMemoizedMergedChildContext || Le;\n  Me = K.current;\n  J(K, b, a);\n  J(L, L.current, a);\n  return !0;\n}\n\nfunction Ue(a, b, c) {\n  var d = a.stateNode;\n  d ? void 0 : t(\"169\");\n  c ? (b = Se(a, b, Me), d.__reactInternalMemoizedMergedChildContext = b, I(L, a), I(K, a), J(K, b, a)) : I(L, a);\n  J(L, c, a);\n}\n\nvar Ve = null,\n    We = null;\n\nfunction Xe(a) {\n  return function (b) {\n    try {\n      return a(b);\n    } catch (c) {}\n  };\n}\n\nfunction Ye(a) {\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (b.isDisabled || !b.supportsFiber) return !0;\n\n  try {\n    var c = b.inject(a);\n    Ve = Xe(function (a) {\n      return b.onCommitFiberRoot(c, a);\n    });\n    We = Xe(function (a) {\n      return b.onCommitFiberUnmount(c, a);\n    });\n  } catch (d) {}\n\n  return !0;\n}\n\nfunction Ze(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.effectTag = 0;\n  this.lastEffect = this.firstEffect = this.nextEffect = null;\n  this.childExpirationTime = this.expirationTime = 0;\n  this.alternate = null;\n}\n\nfunction N(a, b, c, d) {\n  return new Ze(a, b, c, d);\n}\n\nfunction $e(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\n\nfunction af(a) {\n  if (\"function\" === typeof a) return $e(a) ? 1 : 0;\n\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === gc) return 11;\n    if (a === ic) return 14;\n  }\n\n  return 2;\n}\n\nfunction bf(a, b) {\n  var c = a.alternate;\n  null === c ? (c = N(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n  c.childExpirationTime = a.childExpirationTime;\n  c.expirationTime = a.expirationTime;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  c.contextDependencies = a.contextDependencies;\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\n\nfunction cf(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if (\"function\" === typeof a) $e(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n    case ac:\n      return df(c.children, e, f, b);\n\n    case fc:\n      return ef(c, e | 3, f, b);\n\n    case bc:\n      return ef(c, e | 2, f, b);\n\n    case cc:\n      return a = N(12, c, b, e | 4), a.elementType = cc, a.type = cc, a.expirationTime = f, a;\n\n    case hc:\n      return a = N(13, c, b, e), a.elementType = hc, a.type = hc, a.expirationTime = f, a;\n\n    default:\n      if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n        case dc:\n          g = 10;\n          break a;\n\n        case ec:\n          g = 9;\n          break a;\n\n        case gc:\n          g = 11;\n          break a;\n\n        case ic:\n          g = 14;\n          break a;\n\n        case jc:\n          g = 16;\n          d = null;\n          break a;\n      }\n      t(\"130\", null == a ? a : typeof a, \"\");\n  }\n  b = N(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.expirationTime = f;\n  return b;\n}\n\nfunction df(a, b, c, d) {\n  a = N(7, a, d, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction ef(a, b, c, d) {\n  a = N(8, a, d, b);\n  b = 0 === (b & 1) ? bc : fc;\n  a.elementType = b;\n  a.type = b;\n  a.expirationTime = c;\n  return a;\n}\n\nfunction ff(a, b, c) {\n  a = N(6, a, null, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction gf(a, b, c) {\n  b = N(4, null !== a.children ? a.children : [], a.key, b);\n  b.expirationTime = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\n\nfunction hf(a, b) {\n  a.didError = !1;\n  var c = a.earliestPendingTime;\n  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n  jf(b, a);\n}\n\nfunction kf(a, b) {\n  a.didError = !1;\n  a.latestPingedTime >= b && (a.latestPingedTime = 0);\n  var c = a.earliestPendingTime,\n      d = a.latestPendingTime;\n  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n  c = a.earliestSuspendedTime;\n  d = a.latestSuspendedTime;\n  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n  jf(b, a);\n}\n\nfunction lf(a, b) {\n  var c = a.earliestPendingTime;\n  a = a.earliestSuspendedTime;\n  c > b && (b = c);\n  a > b && (b = a);\n  return b;\n}\n\nfunction jf(a, b) {\n  var c = b.earliestSuspendedTime,\n      d = b.latestSuspendedTime,\n      e = b.earliestPendingTime,\n      f = b.latestPingedTime;\n  e = 0 !== e ? e : f;\n  0 === e && (0 === a || d < a) && (e = d);\n  a = e;\n  0 !== a && c > a && (a = c);\n  b.nextExpirationTimeToWorkOn = e;\n  b.expirationTime = a;\n}\n\nfunction P(a, b) {\n  if (a && a.defaultProps) {\n    b = p({}, b);\n    a = a.defaultProps;\n\n    for (var c in a) {\n      void 0 === b[c] && (b[c] = a[c]);\n    }\n  }\n\n  return b;\n}\n\nfunction mf(a) {\n  var b = a._result;\n\n  switch (a._status) {\n    case 1:\n      return b;\n\n    case 2:\n      throw b;\n\n    case 0:\n      throw b;\n\n    default:\n      a._status = 0;\n      b = a._ctor;\n      b = b();\n      b.then(function (b) {\n        0 === a._status && (b = b.default, a._status = 1, a._result = b);\n      }, function (b) {\n        0 === a._status && (a._status = 2, a._result = b);\n      });\n\n      switch (a._status) {\n        case 1:\n          return a._result;\n\n        case 2:\n          throw a._result;\n      }\n\n      a._result = b;\n      throw b;\n  }\n}\n\nvar nf = new aa.Component().refs;\n\nfunction of(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : p({}, b, c);\n  a.memoizedState = c;\n  d = a.updateQueue;\n  null !== d && 0 === a.expirationTime && (d.baseState = c);\n}\n\nvar xf = {\n  isMounted: function isMounted(a) {\n    return (a = a._reactInternalFiber) ? 2 === kd(a) : !1;\n  },\n  enqueueSetState: function enqueueSetState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = pf();\n    d = qf(d, a);\n    var e = rf(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    sf();\n    tf(a, e);\n    uf(a, d);\n  },\n  enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = pf();\n    d = qf(d, a);\n    var e = rf(d);\n    e.tag = vf;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    sf();\n    tf(a, e);\n    uf(a, d);\n  },\n  enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n    a = a._reactInternalFiber;\n    var c = pf();\n    c = qf(c, a);\n    var d = rf(c);\n    d.tag = wf;\n    void 0 !== b && null !== b && (d.callback = b);\n    sf();\n    tf(a, d);\n    uf(a, c);\n  }\n};\n\nfunction yf(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !hd(c, d) || !hd(e, f) : !0;\n}\n\nfunction zf(a, b, c) {\n  var d = !1,\n      e = Le;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? f = Af(f) : (e = M(b) ? Me : K.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Oe(a, e) : Le);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = xf;\n  a.stateNode = b;\n  b._reactInternalFiber = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\n\nfunction Bf(a, b, c, d) {\n  a = b.state;\n  \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && xf.enqueueReplaceState(b, b.state, null);\n}\n\nfunction Cf(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = nf;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? e.context = Af(f) : (f = M(b) ? Me : K.current, e.context = Oe(a, f));\n  f = a.updateQueue;\n  null !== f && (Df(a, f, c, e, d), e.state = a.memoizedState);\n  f = b.getDerivedStateFromProps;\n  \"function\" === typeof f && (of(a, b, f, c), e.state = a.memoizedState);\n  \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && xf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (Df(a, f, c, e, d), e.state = a.memoizedState));\n  \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n}\n\nvar Ef = Array.isArray;\n\nfunction Ff(a, b, c) {\n  a = c.ref;\n\n  if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      var d = void 0;\n      c && (1 !== c.tag ? t(\"309\") : void 0, d = c.stateNode);\n      d ? void 0 : t(\"147\", a);\n      var e = \"\" + a;\n      if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n      b = function b(a) {\n        var b = d.refs;\n        b === nf && (b = d.refs = {});\n        null === a ? delete b[e] : b[e] = a;\n      };\n\n      b._stringRef = e;\n      return b;\n    }\n\n    \"string\" !== typeof a ? t(\"284\") : void 0;\n    c._owner ? void 0 : t(\"290\", a);\n  }\n\n  return a;\n}\n\nfunction Gf(a, b) {\n  \"textarea\" !== a.type && t(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n}\n\nfunction Hf(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.lastEffect;\n      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n      c.nextEffect = null;\n      c.effectTag = 8;\n    }\n  }\n\n  function c(c, d) {\n    if (!a) return null;\n\n    for (; null !== d;) {\n      b(c, d), d = d.sibling;\n    }\n\n    return null;\n  }\n\n  function d(a, b) {\n    for (a = new Map(); null !== b;) {\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    }\n\n    return a;\n  }\n\n  function e(a, b, c) {\n    a = bf(a, b, c);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n    b.effectTag = 2;\n    return c;\n  }\n\n  function g(b) {\n    a && null === b.alternate && (b.effectTag = 2);\n    return b;\n  }\n\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = ff(c, a.mode, d), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function l(a, b, c, d) {\n    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Ff(a, b, c), d.return = a, d;\n    d = cf(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = Ff(a, b, c);\n    d.return = a;\n    return d;\n  }\n\n  function k(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = gf(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || [], d);\n    b.return = a;\n    return b;\n  }\n\n  function m(a, b, c, d, f) {\n    if (null === b || 7 !== b.tag) return b = df(c, a.mode, d, f), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function q(a, b, c) {\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = ff(\"\" + b, a.mode, c), b.return = a, b;\n\n    if (\"object\" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case Zb:\n          return c = cf(b.type, b.key, b.props, null, a.mode, c), c.ref = Ff(a, null, b), c.return = a, c;\n\n        case $b:\n          return b = gf(b, a.mode, c), b.return = a, b;\n      }\n\n      if (Ef(b) || lc(b)) return b = df(b, a.mode, c, null), b.return = a, b;\n      Gf(a, b);\n    }\n\n    return null;\n  }\n\n  function x(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n    if (\"object\" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case Zb:\n          return c.key === e ? c.type === ac ? m(a, b, c.props.children, d, e) : l(a, b, c, d) : null;\n\n        case $b:\n          return c.key === e ? k(a, b, c, d) : null;\n      }\n\n      if (Ef(c) || lc(c)) return null !== e ? null : m(a, b, c, d, null);\n      Gf(a, c);\n    }\n\n    return null;\n  }\n\n  function C(a, b, c, d, e) {\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n    if (\"object\" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Zb:\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === ac ? m(b, a, d.props.children, e, d.key) : l(b, a, d, e);\n\n        case $b:\n          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);\n      }\n\n      if (Ef(d) || lc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      Gf(b, d);\n    }\n\n    return null;\n  }\n\n  function w(e, g, h, k) {\n    for (var l = null, m = null, n = g, u = g = 0, r = null; null !== n && u < h.length; u++) {\n      n.index > u ? (r = n, n = null) : r = n.sibling;\n      var v = x(e, n, h[u], k);\n\n      if (null === v) {\n        null === n && (n = r);\n        break;\n      }\n\n      a && n && null === v.alternate && b(e, n);\n      g = f(v, g, u);\n      null === m ? l = v : m.sibling = v;\n      m = v;\n      n = r;\n    }\n\n    if (u === h.length) return c(e, n), l;\n\n    if (null === n) {\n      for (; u < h.length; u++) {\n        if (n = q(e, h[u], k)) g = f(n, g, u), null === m ? l = n : m.sibling = n, m = n;\n      }\n\n      return l;\n    }\n\n    for (n = d(e, n); u < h.length; u++) {\n      if (r = C(n, e, u, h[u], k)) a && null !== r.alternate && n.delete(null === r.key ? u : r.key), g = f(r, g, u), null === m ? l = r : m.sibling = r, m = r;\n    }\n\n    a && n.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  function E(e, g, h, k) {\n    var l = lc(h);\n    \"function\" !== typeof l ? t(\"150\") : void 0;\n    h = l.call(h);\n    null == h ? t(\"151\") : void 0;\n\n    for (var m = l = null, n = g, u = g = 0, r = null, v = h.next(); null !== n && !v.done; u++, v = h.next()) {\n      n.index > u ? (r = n, n = null) : r = n.sibling;\n      var z = x(e, n, v.value, k);\n\n      if (null === z) {\n        n || (n = r);\n        break;\n      }\n\n      a && n && null === z.alternate && b(e, n);\n      g = f(z, g, u);\n      null === m ? l = z : m.sibling = z;\n      m = z;\n      n = r;\n    }\n\n    if (v.done) return c(e, n), l;\n\n    if (null === n) {\n      for (; !v.done; u++, v = h.next()) {\n        v = q(e, v.value, k), null !== v && (g = f(v, g, u), null === m ? l = v : m.sibling = v, m = v);\n      }\n\n      return l;\n    }\n\n    for (n = d(e, n); !v.done; u++, v = h.next()) {\n      v = C(n, e, u, v.value, k), null !== v && (a && null !== v.alternate && n.delete(null === v.key ? u : v.key), g = f(v, g, u), null === m ? l = v : m.sibling = v, m = v);\n    }\n\n    a && n.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  return function (a, d, f, h) {\n    var k = \"object\" === typeof f && null !== f && f.type === ac && null === f.key;\n    k && (f = f.props.children);\n    var l = \"object\" === typeof f && null !== f;\n    if (l) switch (f.$$typeof) {\n      case Zb:\n        a: {\n          l = f.key;\n\n          for (k = d; null !== k;) {\n            if (k.key === l) {\n              if (7 === k.tag ? f.type === ac : k.elementType === f.type) {\n                c(a, k.sibling);\n                d = e(k, f.type === ac ? f.props.children : f.props, h);\n                d.ref = Ff(a, k, f);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, k);\n                break;\n              }\n            } else b(a, k);\n            k = k.sibling;\n          }\n\n          f.type === ac ? (d = df(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = cf(f.type, f.key, f.props, null, a.mode, h), h.ref = Ff(a, d, f), h.return = a, a = h);\n        }\n\n        return g(a);\n\n      case $b:\n        a: {\n          for (k = f.key; null !== d;) {\n            if (d.key === k) {\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                c(a, d.sibling);\n                d = e(d, f.children || [], h);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, d);\n                break;\n              }\n            } else b(a, d);\n            d = d.sibling;\n          }\n\n          d = gf(f, a.mode, h);\n          d.return = a;\n          a = d;\n        }\n\n        return g(a);\n    }\n    if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = ff(f, a.mode, h), d.return = a, a = d), g(a);\n    if (Ef(f)) return w(a, d, f, h);\n    if (lc(f)) return E(a, d, f, h);\n    l && Gf(a, f);\n    if (\"undefined\" === typeof f && !k) switch (a.tag) {\n      case 1:\n      case 0:\n        h = a.type, t(\"152\", h.displayName || h.name || \"Component\");\n    }\n    return c(a, d);\n  };\n}\n\nvar If = Hf(!0),\n    Jf = Hf(!1),\n    Kf = {},\n    Lf = {\n  current: Kf\n},\n    Mf = {\n  current: Kf\n},\n    Nf = {\n  current: Kf\n};\n\nfunction Of(a) {\n  a === Kf ? t(\"174\") : void 0;\n  return a;\n}\n\nfunction Pf(a, b) {\n  J(Nf, b, a);\n  J(Mf, a, a);\n  J(Lf, Kf, a);\n  var c = b.nodeType;\n\n  switch (c) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : le(null, \"\");\n      break;\n\n    default:\n      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = le(b, c);\n  }\n\n  I(Lf, a);\n  J(Lf, b, a);\n}\n\nfunction Qf(a) {\n  I(Lf, a);\n  I(Mf, a);\n  I(Nf, a);\n}\n\nfunction Rf(a) {\n  Of(Nf.current);\n  var b = Of(Lf.current);\n  var c = le(b, a.type);\n  b !== c && (J(Mf, a, a), J(Lf, c, a));\n}\n\nfunction Sf(a) {\n  Mf.current === a && (I(Lf, a), I(Mf, a));\n}\n\nvar Tf = 0,\n    Uf = 2,\n    Vf = 4,\n    Wf = 8,\n    Xf = 16,\n    Yf = 32,\n    Zf = 64,\n    $f = 128,\n    ag = Xb.ReactCurrentDispatcher,\n    bg = 0,\n    cg = null,\n    Q = null,\n    dg = null,\n    eg = null,\n    R = null,\n    fg = null,\n    gg = 0,\n    hg = null,\n    ig = 0,\n    jg = !1,\n    kg = null,\n    lg = 0;\n\nfunction mg() {\n  t(\"307\");\n}\n\nfunction ng(a, b) {\n  if (null === b) return !1;\n\n  for (var c = 0; c < b.length && c < a.length; c++) {\n    if (!fd(a[c], b[c])) return !1;\n  }\n\n  return !0;\n}\n\nfunction og(a, b, c, d, e, f) {\n  bg = f;\n  cg = b;\n  dg = null !== a ? a.memoizedState : null;\n  ag.current = null === dg ? pg : qg;\n  b = c(d, e);\n\n  if (jg) {\n    do {\n      jg = !1, lg += 1, dg = null !== a ? a.memoizedState : null, fg = eg, hg = R = Q = null, ag.current = qg, b = c(d, e);\n    } while (jg);\n\n    kg = null;\n    lg = 0;\n  }\n\n  ag.current = rg;\n  a = cg;\n  a.memoizedState = eg;\n  a.expirationTime = gg;\n  a.updateQueue = hg;\n  a.effectTag |= ig;\n  a = null !== Q && null !== Q.next;\n  bg = 0;\n  fg = R = eg = dg = Q = cg = null;\n  gg = 0;\n  hg = null;\n  ig = 0;\n  a ? t(\"300\") : void 0;\n  return b;\n}\n\nfunction sg() {\n  ag.current = rg;\n  bg = 0;\n  fg = R = eg = dg = Q = cg = null;\n  gg = 0;\n  hg = null;\n  ig = 0;\n  jg = !1;\n  kg = null;\n  lg = 0;\n}\n\nfunction tg() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n    next: null\n  };\n  null === R ? eg = R = a : R = R.next = a;\n  return R;\n}\n\nfunction ug() {\n  if (null !== fg) R = fg, fg = R.next, Q = dg, dg = null !== Q ? Q.next : null;else {\n    null === dg ? t(\"310\") : void 0;\n    Q = dg;\n    var a = {\n      memoizedState: Q.memoizedState,\n      baseState: Q.baseState,\n      queue: Q.queue,\n      baseUpdate: Q.baseUpdate,\n      next: null\n    };\n    R = null === R ? eg = a : R.next = a;\n    dg = Q.next;\n  }\n  return R;\n}\n\nfunction vg(a, b) {\n  return \"function\" === typeof b ? b(a) : b;\n}\n\nfunction wg(a) {\n  var b = ug(),\n      c = b.queue;\n  null === c ? t(\"311\") : void 0;\n\n  if (0 < lg) {\n    var d = c.dispatch;\n\n    if (null !== kg) {\n      var e = kg.get(c);\n\n      if (void 0 !== e) {\n        kg.delete(c);\n        var f = b.memoizedState;\n\n        do {\n          f = a(f, e.action), e = e.next;\n        } while (null !== e);\n\n        fd(f, b.memoizedState) || (xg = !0);\n        b.memoizedState = f;\n        b.baseUpdate === c.last && (b.baseState = f);\n        return [f, d];\n      }\n    }\n\n    return [b.memoizedState, d];\n  }\n\n  d = c.last;\n  var g = b.baseUpdate;\n  f = b.baseState;\n  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;\n\n  if (null !== d) {\n    var h = e = null,\n        l = d,\n        k = !1;\n\n    do {\n      var m = l.expirationTime;\n      m < bg ? (k || (k = !0, h = g, e = f), m > gg && (gg = m)) : f = l.eagerReducer === a ? l.eagerState : a(f, l.action);\n      g = l;\n      l = l.next;\n    } while (null !== l && l !== d);\n\n    k || (h = g, e = f);\n    fd(f, b.memoizedState) || (xg = !0);\n    b.memoizedState = f;\n    b.baseUpdate = h;\n    b.baseState = e;\n    c.eagerReducer = a;\n    c.eagerState = f;\n  }\n\n  return [b.memoizedState, c.dispatch];\n}\n\nfunction yg(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    destroy: c,\n    deps: d,\n    next: null\n  };\n  null === hg ? (hg = {\n    lastEffect: null\n  }, hg.lastEffect = a.next = a) : (b = hg.lastEffect, null === b ? hg.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, hg.lastEffect = a));\n  return a;\n}\n\nfunction zg(a, b, c, d) {\n  var e = tg();\n  ig |= a;\n  e.memoizedState = yg(b, c, void 0, void 0 === d ? null : d);\n}\n\nfunction Bg(a, b, c, d) {\n  var e = ug();\n  d = void 0 === d ? null : d;\n  var f = void 0;\n\n  if (null !== Q) {\n    var g = Q.memoizedState;\n    f = g.destroy;\n\n    if (null !== d && ng(d, g.deps)) {\n      yg(Tf, c, f, d);\n      return;\n    }\n  }\n\n  ig |= a;\n  e.memoizedState = yg(b, c, f, d);\n}\n\nfunction Cg(a, b) {\n  if (\"function\" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\n\nfunction Dg() {}\n\nfunction Eg(a, b, c) {\n  25 > lg ? void 0 : t(\"301\");\n  var d = a.alternate;\n  if (a === cg || null !== d && d === cg) {\n    if (jg = !0, a = {\n      expirationTime: bg,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    }, null === kg && (kg = new Map()), c = kg.get(b), void 0 === c) kg.set(b, a);else {\n      for (b = c; null !== b.next;) {\n        b = b.next;\n      }\n\n      b.next = a;\n    }\n  } else {\n    sf();\n    var e = pf();\n    e = qf(e, a);\n    var f = {\n      expirationTime: e,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    },\n        g = b.last;\n    if (null === g) f.next = f;else {\n      var h = g.next;\n      null !== h && (f.next = h);\n      g.next = f;\n    }\n    b.last = f;\n    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.eagerReducer, null !== d)) try {\n      var l = b.eagerState,\n          k = d(l, c);\n      f.eagerReducer = d;\n      f.eagerState = k;\n      if (fd(k, l)) return;\n    } catch (m) {} finally {}\n    uf(a, e);\n  }\n}\n\nvar rg = {\n  readContext: Af,\n  useCallback: mg,\n  useContext: mg,\n  useEffect: mg,\n  useImperativeHandle: mg,\n  useLayoutEffect: mg,\n  useMemo: mg,\n  useReducer: mg,\n  useRef: mg,\n  useState: mg,\n  useDebugValue: mg\n},\n    pg = {\n  readContext: Af,\n  useCallback: function useCallback(a, b) {\n    tg().memoizedState = [a, void 0 === b ? null : b];\n    return a;\n  },\n  useContext: Af,\n  useEffect: function useEffect(a, b) {\n    return zg(516, $f | Zf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : [a];\n    return zg(4, Vf | Yf, Cg.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return zg(4, Vf | Yf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = tg();\n    b = void 0 === b ? null : b;\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: function useReducer(a, b, c) {\n    var d = tg();\n    b = void 0 !== c ? c(b) : b;\n    d.memoizedState = d.baseState = b;\n    a = d.queue = {\n      last: null,\n      dispatch: null,\n      eagerReducer: a,\n      eagerState: b\n    };\n    a = a.dispatch = Eg.bind(null, cg, a);\n    return [d.memoizedState, a];\n  },\n  useRef: function useRef(a) {\n    var b = tg();\n    a = {\n      current: a\n    };\n    return b.memoizedState = a;\n  },\n  useState: function useState(a) {\n    var b = tg();\n    \"function\" === typeof a && (a = a());\n    b.memoizedState = b.baseState = a;\n    a = b.queue = {\n      last: null,\n      dispatch: null,\n      eagerReducer: vg,\n      eagerState: a\n    };\n    a = a.dispatch = Eg.bind(null, cg, a);\n    return [b.memoizedState, a];\n  },\n  useDebugValue: Dg\n},\n    qg = {\n  readContext: Af,\n  useCallback: function useCallback(a, b) {\n    var c = ug();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && ng(b, d[1])) return d[0];\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useContext: Af,\n  useEffect: function useEffect(a, b) {\n    return Bg(516, $f | Zf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : [a];\n    return Bg(4, Vf | Yf, Cg.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return Bg(4, Vf | Yf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = ug();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && ng(b, d[1])) return d[0];\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: wg,\n  useRef: function useRef() {\n    return ug().memoizedState;\n  },\n  useState: function useState(a) {\n    return wg(vg, a);\n  },\n  useDebugValue: Dg\n},\n    Fg = null,\n    Gg = null,\n    Hg = !1;\n\nfunction Ig(a, b) {\n  var c = N(5, null, null, 0);\n  c.elementType = \"DELETED\";\n  c.type = \"DELETED\";\n  c.stateNode = b;\n  c.return = a;\n  c.effectTag = 8;\n  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n}\n\nfunction Jg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 6:\n      return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n    default:\n      return !1;\n  }\n}\n\nfunction Kg(a) {\n  if (Hg) {\n    var b = Gg;\n\n    if (b) {\n      var c = b;\n\n      if (!Jg(a, b)) {\n        b = He(c);\n\n        if (!b || !Jg(a, b)) {\n          a.effectTag |= 2;\n          Hg = !1;\n          Fg = a;\n          return;\n        }\n\n        Ig(Fg, c);\n      }\n\n      Fg = a;\n      Gg = Ie(b);\n    } else a.effectTag |= 2, Hg = !1, Fg = a;\n  }\n}\n\nfunction Lg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag;) {\n    a = a.return;\n  }\n\n  Fg = a;\n}\n\nfunction Mg(a) {\n  if (a !== Fg) return !1;\n  if (!Hg) return Lg(a), Hg = !0, !1;\n  var b = a.type;\n  if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !Be(b, a.memoizedProps)) for (b = Gg; b;) {\n    Ig(a, b), b = He(b);\n  }\n  Lg(a);\n  Gg = Fg ? He(a.stateNode) : null;\n  return !0;\n}\n\nfunction Ng() {\n  Gg = Fg = null;\n  Hg = !1;\n}\n\nvar Og = Xb.ReactCurrentOwner,\n    xg = !1;\n\nfunction S(a, b, c, d) {\n  b.child = null === a ? Jf(b, null, c, d) : If(b, a.child, c, d);\n}\n\nfunction Pg(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Qg(b, e);\n  d = og(a, b, c, d, f, e);\n  if (null !== a && !xg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Rg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, d, e);\n  return b.child;\n}\n\nfunction Sg(a, b, c, d, e, f) {\n  if (null === a) {\n    var g = c.type;\n    if (\"function\" === typeof g && !$e(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, Tg(a, b, g, d, e, f);\n    a = cf(c.type, null, d, null, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  g = a.child;\n  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : hd, c(e, d) && a.ref === b.ref)) return Rg(a, b, f);\n  b.effectTag |= 1;\n  a = bf(g, d, f);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\n\nfunction Tg(a, b, c, d, e, f) {\n  return null !== a && hd(a.memoizedProps, d) && a.ref === b.ref && (xg = !1, e < f) ? Rg(a, b, f) : Ug(a, b, c, d, f);\n}\n\nfunction Vg(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n}\n\nfunction Ug(a, b, c, d, e) {\n  var f = M(c) ? Me : K.current;\n  f = Oe(b, f);\n  Qg(b, e);\n  c = og(a, b, c, d, f, e);\n  if (null !== a && !xg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Rg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, c, e);\n  return b.child;\n}\n\nfunction Wg(a, b, c, d, e) {\n  if (M(c)) {\n    var f = !0;\n    Te(b);\n  } else f = !1;\n\n  Qg(b, e);\n  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), zf(b, c, d, e), Cf(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n        h = b.memoizedProps;\n    g.props = h;\n    var l = g.context,\n        k = c.contextType;\n    \"object\" === typeof k && null !== k ? k = Af(k) : (k = M(c) ? Me : K.current, k = Oe(b, k));\n    var m = c.getDerivedStateFromProps,\n        q = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n    q || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && Bf(b, g, d, k);\n    Xg = !1;\n    var x = b.memoizedState;\n    l = g.state = x;\n    var C = b.updateQueue;\n    null !== C && (Df(b, C, d, g, e), l = b.memoizedState);\n    h !== d || x !== l || L.current || Xg ? (\"function\" === typeof m && (of(b, c, m, d), l = b.memoizedState), (h = Xg || yf(b, c, h, d, x, l, k)) ? (q || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = k, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : P(b.type, h), l = g.context, k = c.contextType, \"object\" === typeof k && null !== k ? k = Af(k) : (k = M(c) ? Me : K.current, k = Oe(b, k)), m = c.getDerivedStateFromProps, (q = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && Bf(b, g, d, k), Xg = !1, l = b.memoizedState, x = g.state = l, C = b.updateQueue, null !== C && (Df(b, C, d, g, e), x = b.memoizedState), h !== d || l !== x || L.current || Xg ? (\"function\" === typeof m && (of(b, c, m, d), x = b.memoizedState), (m = Xg || yf(b, c, h, d, l, x, k)) ? (q || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, x, k), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, x, k)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = x), g.props = d, g.state = x, g.context = k, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), d = !1);\n  return Yg(a, b, c, d, f, e);\n}\n\nfunction Yg(a, b, c, d, e, f) {\n  Vg(a, b);\n  var g = 0 !== (b.effectTag & 64);\n  if (!d && !g) return e && Ue(b, c, !1), Rg(a, b, f);\n  d = b.stateNode;\n  Og.current = b;\n  var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.effectTag |= 1;\n  null !== a && g ? (b.child = If(b, a.child, null, f), b.child = If(b, null, h, f)) : S(a, b, h, f);\n  b.memoizedState = d.state;\n  e && Ue(b, c, !0);\n  return b.child;\n}\n\nfunction Zg(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Re(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Re(a, b.context, !1);\n  Pf(a, b.containerInfo);\n}\n\nfunction $g(a, b, c) {\n  var d = b.mode,\n      e = b.pendingProps,\n      f = b.memoizedState;\n\n  if (0 === (b.effectTag & 64)) {\n    f = null;\n    var g = !1;\n  } else f = {\n    timedOutAt: null !== f ? f.timedOutAt : 0\n  }, g = !0, b.effectTag &= -65;\n\n  if (null === a) {\n    if (g) {\n      var h = e.fallback;\n      a = df(null, d, 0, null);\n      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n      d = df(h, d, c, null);\n      a.sibling = d;\n      c = a;\n      c.return = d.return = b;\n    } else c = d = Jf(b, null, e.children, c);\n  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = bf(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = bf(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = If(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = df(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = df(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = If(b, h, e.children, c)), b.stateNode = a.stateNode;\n  b.memoizedState = f;\n  b.child = c;\n  return d;\n}\n\nfunction Rg(a, b, c) {\n  null !== a && (b.contextDependencies = a.contextDependencies);\n  if (b.childExpirationTime < c) return null;\n  null !== a && b.child !== a.child ? t(\"153\") : void 0;\n\n  if (null !== b.child) {\n    a = b.child;\n    c = bf(a, a.pendingProps, a.expirationTime);\n    b.child = c;\n\n    for (c.return = b; null !== a.sibling;) {\n      a = a.sibling, c = c.sibling = bf(a, a.pendingProps, a.expirationTime), c.return = b;\n    }\n\n    c.sibling = null;\n  }\n\n  return b.child;\n}\n\nfunction ah(a, b, c) {\n  var d = b.expirationTime;\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || L.current) xg = !0;else {\n      if (d < c) {\n        xg = !1;\n\n        switch (b.tag) {\n          case 3:\n            Zg(b);\n            Ng();\n            break;\n\n          case 5:\n            Rf(b);\n            break;\n\n          case 1:\n            M(b.type) && Te(b);\n            break;\n\n          case 4:\n            Pf(b, b.stateNode.containerInfo);\n            break;\n\n          case 10:\n            bh(b, b.memoizedProps.value);\n            break;\n\n          case 13:\n            if (null !== b.memoizedState) {\n              d = b.child.childExpirationTime;\n              if (0 !== d && d >= c) return $g(a, b, c);\n              b = Rg(a, b, c);\n              return null !== b ? b.sibling : null;\n            }\n\n        }\n\n        return Rg(a, b, c);\n      }\n    }\n  } else xg = !1;\n  b.expirationTime = 0;\n\n  switch (b.tag) {\n    case 2:\n      d = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      a = b.pendingProps;\n      var e = Oe(b, K.current);\n      Qg(b, c);\n      e = og(null, b, d, a, e, c);\n      b.effectTag |= 1;\n\n      if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n        b.tag = 1;\n        sg();\n\n        if (M(d)) {\n          var f = !0;\n          Te(b);\n        } else f = !1;\n\n        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n        var g = d.getDerivedStateFromProps;\n        \"function\" === typeof g && of(b, d, g, a);\n        e.updater = xf;\n        b.stateNode = e;\n        e._reactInternalFiber = b;\n        Cf(b, d, a, c);\n        b = Yg(null, b, d, !0, f, c);\n      } else b.tag = 0, S(null, b, e, c), b = b.child;\n\n      return b;\n\n    case 16:\n      e = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      f = b.pendingProps;\n      a = mf(e);\n      b.type = a;\n      e = b.tag = af(a);\n      f = P(a, f);\n      g = void 0;\n\n      switch (e) {\n        case 0:\n          g = Ug(null, b, a, f, c);\n          break;\n\n        case 1:\n          g = Wg(null, b, a, f, c);\n          break;\n\n        case 11:\n          g = Pg(null, b, a, f, c);\n          break;\n\n        case 14:\n          g = Sg(null, b, a, P(a.type, f), d, c);\n          break;\n\n        default:\n          t(\"306\", a, \"\");\n      }\n\n      return g;\n\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), Ug(a, b, d, e, c);\n\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), Wg(a, b, d, e, c);\n\n    case 3:\n      Zg(b);\n      d = b.updateQueue;\n      null === d ? t(\"282\") : void 0;\n      e = b.memoizedState;\n      e = null !== e ? e.element : null;\n      Df(b, d, b.pendingProps, null, c);\n      d = b.memoizedState.element;\n      if (d === e) Ng(), b = Rg(a, b, c);else {\n        e = b.stateNode;\n        if (e = (null === a || null === a.child) && e.hydrate) Gg = Ie(b.stateNode.containerInfo), Fg = b, e = Hg = !0;\n        e ? (b.effectTag |= 2, b.child = Jf(b, null, d, c)) : (S(a, b, d, c), Ng());\n        b = b.child;\n      }\n      return b;\n\n    case 5:\n      return Rf(b), null === a && Kg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, Be(d, e) ? g = null : null !== f && Be(d, f) && (b.effectTag |= 16), Vg(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (S(a, b, g, c), b = b.child), b;\n\n    case 6:\n      return null === a && Kg(b), null;\n\n    case 13:\n      return $g(a, b, c);\n\n    case 4:\n      return Pf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = If(b, null, d, c) : S(a, b, d, c), b.child;\n\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), Pg(a, b, d, e, c);\n\n    case 7:\n      return S(a, b, b.pendingProps, c), b.child;\n\n    case 8:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 12:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        g = b.memoizedProps;\n        f = e.value;\n        bh(b, f);\n\n        if (null !== g) {\n          var h = g.value;\n          f = fd(h, f) ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n          if (0 === f) {\n            if (g.children === e.children && !L.current) {\n              b = Rg(a, b, c);\n              break a;\n            }\n          } else for (h = b.child, null !== h && (h.return = b); null !== h;) {\n            var l = h.contextDependencies;\n\n            if (null !== l) {\n              g = h.child;\n\n              for (var k = l.first; null !== k;) {\n                if (k.context === d && 0 !== (k.observedBits & f)) {\n                  1 === h.tag && (k = rf(c), k.tag = wf, tf(h, k));\n                  h.expirationTime < c && (h.expirationTime = c);\n                  k = h.alternate;\n                  null !== k && k.expirationTime < c && (k.expirationTime = c);\n\n                  for (var m = h.return; null !== m;) {\n                    k = m.alternate;\n                    if (m.childExpirationTime < c) m.childExpirationTime = c, null !== k && k.childExpirationTime < c && (k.childExpirationTime = c);else if (null !== k && k.childExpirationTime < c) k.childExpirationTime = c;else break;\n                    m = m.return;\n                  }\n\n                  l.expirationTime < c && (l.expirationTime = c);\n                  break;\n                }\n\n                k = k.next;\n              }\n            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;\n\n            if (null !== g) g.return = h;else for (g = h; null !== g;) {\n              if (g === b) {\n                g = null;\n                break;\n              }\n\n              h = g.sibling;\n\n              if (null !== h) {\n                h.return = g.return;\n                g = h;\n                break;\n              }\n\n              g = g.return;\n            }\n            h = g;\n          }\n        }\n\n        S(a, b, e.children, c);\n        b = b.child;\n      }\n\n      return b;\n\n    case 9:\n      return e = b.type, f = b.pendingProps, d = f.children, Qg(b, c), e = Af(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, S(a, b, d, c), b.child;\n\n    case 14:\n      return e = b.type, f = P(e, b.pendingProps), f = P(e.type, f), Sg(a, b, e, f, d, c);\n\n    case 15:\n      return Tg(a, b, b.type, b.pendingProps, d, c);\n\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : P(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, M(d) ? (a = !0, Te(b)) : a = !1, Qg(b, c), zf(b, d, e, c), Cf(b, d, e, c), Yg(null, b, d, !0, a, c);\n\n    default:\n      t(\"156\");\n  }\n}\n\nvar ch = {\n  current: null\n},\n    dh = null,\n    eh = null,\n    fh = null;\n\nfunction bh(a, b) {\n  var c = a.type._context;\n  J(ch, c._currentValue, a);\n  c._currentValue = b;\n}\n\nfunction gh(a) {\n  var b = ch.current;\n  I(ch, a);\n  a.type._context._currentValue = b;\n}\n\nfunction Qg(a, b) {\n  dh = a;\n  fh = eh = null;\n  var c = a.contextDependencies;\n  null !== c && c.expirationTime >= b && (xg = !0);\n  a.contextDependencies = null;\n}\n\nfunction Af(a, b) {\n  if (fh !== a && !1 !== b && 0 !== b) {\n    if (\"number\" !== typeof b || 1073741823 === b) fh = a, b = 1073741823;\n    b = {\n      context: a,\n      observedBits: b,\n      next: null\n    };\n    null === eh ? (null === dh ? t(\"308\") : void 0, eh = b, dh.contextDependencies = {\n      first: b,\n      expirationTime: 0\n    }) : eh = eh.next = b;\n  }\n\n  return a._currentValue;\n}\n\nvar hh = 0,\n    vf = 1,\n    wf = 2,\n    ih = 3,\n    Xg = !1;\n\nfunction jh(a) {\n  return {\n    baseState: a,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction kh(a) {\n  return {\n    baseState: a.baseState,\n    firstUpdate: a.firstUpdate,\n    lastUpdate: a.lastUpdate,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction rf(a) {\n  return {\n    expirationTime: a,\n    tag: hh,\n    payload: null,\n    callback: null,\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction lh(a, b) {\n  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n}\n\nfunction tf(a, b) {\n  var c = a.alternate;\n\n  if (null === c) {\n    var d = a.updateQueue;\n    var e = null;\n    null === d && (d = a.updateQueue = jh(a.memoizedState));\n  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = jh(a.memoizedState), e = c.updateQueue = jh(c.memoizedState)) : d = a.updateQueue = kh(e) : null === e && (e = c.updateQueue = kh(d));\n\n  null === e || d === e ? lh(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (lh(d, b), lh(e, b)) : (lh(d, b), e.lastUpdate = b);\n}\n\nfunction mh(a, b) {\n  var c = a.updateQueue;\n  c = null === c ? a.updateQueue = jh(a.memoizedState) : nh(a, c);\n  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n}\n\nfunction nh(a, b) {\n  var c = a.alternate;\n  null !== c && b === c.updateQueue && (b = a.updateQueue = kh(b));\n  return b;\n}\n\nfunction oh(a, b, c, d, e, f) {\n  switch (c.tag) {\n    case vf:\n      return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n    case ih:\n      a.effectTag = a.effectTag & -2049 | 64;\n\n    case hh:\n      a = c.payload;\n      e = \"function\" === typeof a ? a.call(f, d, e) : a;\n      if (null === e || void 0 === e) break;\n      return p({}, d, e);\n\n    case wf:\n      Xg = !0;\n  }\n\n  return d;\n}\n\nfunction Df(a, b, c, d, e) {\n  Xg = !1;\n  b = nh(a, b);\n\n  for (var f = b.baseState, g = null, h = 0, l = b.firstUpdate, k = f; null !== l;) {\n    var m = l.expirationTime;\n    m < e ? (null === g && (g = l, f = k), h < m && (h = m)) : (k = oh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = l : (b.lastEffect.nextEffect = l, b.lastEffect = l)));\n    l = l.next;\n  }\n\n  m = null;\n\n  for (l = b.firstCapturedUpdate; null !== l;) {\n    var q = l.expirationTime;\n    q < e ? (null === m && (m = l, null === g && (f = k)), h < q && (h = q)) : (k = oh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = l : (b.lastCapturedEffect.nextEffect = l, b.lastCapturedEffect = l)));\n    l = l.next;\n  }\n\n  null === g && (b.lastUpdate = null);\n  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n  null === g && null === m && (f = k);\n  b.baseState = f;\n  b.firstUpdate = g;\n  b.firstCapturedUpdate = m;\n  a.expirationTime = h;\n  a.memoizedState = k;\n}\n\nfunction ph(a, b, c) {\n  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n  qh(b.firstEffect, c);\n  b.firstEffect = b.lastEffect = null;\n  qh(b.firstCapturedEffect, c);\n  b.firstCapturedEffect = b.lastCapturedEffect = null;\n}\n\nfunction qh(a, b) {\n  for (; null !== a;) {\n    var c = a.callback;\n\n    if (null !== c) {\n      a.callback = null;\n      var d = b;\n      \"function\" !== typeof c ? t(\"191\", c) : void 0;\n      c.call(d);\n    }\n\n    a = a.nextEffect;\n  }\n}\n\nfunction rh(a, b) {\n  return {\n    value: a,\n    source: b,\n    stack: nc(b)\n  };\n}\n\nfunction sh(a) {\n  a.effectTag |= 4;\n}\n\nvar wh = void 0,\n    xh = void 0,\n    yh = void 0,\n    zh = void 0;\n\nwh = function wh(a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\n\nxh = function xh() {};\n\nyh = function yh(a, b, c, d, e) {\n  var f = a.memoizedProps;\n\n  if (f !== d) {\n    var g = b.stateNode;\n    Of(Lf.current);\n    a = null;\n\n    switch (c) {\n      case \"input\":\n        f = zc(g, f);\n        d = zc(g, d);\n        a = [];\n        break;\n\n      case \"option\":\n        f = de(g, f);\n        d = de(g, d);\n        a = [];\n        break;\n\n      case \"select\":\n        f = p({}, f, {\n          value: void 0\n        });\n        d = p({}, d, {\n          value: void 0\n        });\n        a = [];\n        break;\n\n      case \"textarea\":\n        f = fe(g, f);\n        d = fe(g, d);\n        a = [];\n        break;\n\n      default:\n        \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = xe);\n    }\n\n    ue(c, d);\n    g = c = void 0;\n    var h = null;\n\n    for (c in f) {\n      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n        var l = f[c];\n\n        for (g in l) {\n          l.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n        }\n      } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (ta.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n    }\n\n    for (c in d) {\n      var k = d[c];\n      l = null != f ? f[c] : void 0;\n      if (d.hasOwnProperty(c) && k !== l && (null != k || null != l)) if (\"style\" === c) {\n        if (l) {\n          for (g in l) {\n            !l.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n          }\n\n          for (g in k) {\n            k.hasOwnProperty(g) && l[g] !== k[g] && (h || (h = {}), h[g] = k[g]);\n          }\n        } else h || (a || (a = []), a.push(c, h)), h = k;\n      } else \"dangerouslySetInnerHTML\" === c ? (k = k ? k.__html : void 0, l = l ? l.__html : void 0, null != k && l !== k && (a = a || []).push(c, \"\" + k)) : \"children\" === c ? l === k || \"string\" !== typeof k && \"number\" !== typeof k || (a = a || []).push(c, \"\" + k) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (ta.hasOwnProperty(c) ? (null != k && we(e, c), a || l === k || (a = [])) : (a = a || []).push(c, k));\n    }\n\n    h && (a = a || []).push(\"style\", h);\n    e = a;\n    (b.updateQueue = e) && sh(b);\n  }\n};\n\nzh = function zh(a, b, c, d) {\n  c !== d && sh(b);\n};\n\nvar Ah = \"function\" === typeof WeakSet ? WeakSet : Set;\n\nfunction Bh(a, b) {\n  var c = b.source,\n      d = b.stack;\n  null === d && null !== c && (d = nc(c));\n  null !== c && mc(c.type);\n  b = b.value;\n  null !== a && 1 === a.tag && mc(a.type);\n\n  try {\n    console.error(b);\n  } catch (e) {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction Ch(a) {\n  var b = a.ref;\n  if (null !== b) if (\"function\" === typeof b) try {\n    b(null);\n  } catch (c) {\n    Dh(a, c);\n  } else b.current = null;\n}\n\nfunction Eh(a, b, c) {\n  c = c.updateQueue;\n  c = null !== c ? c.lastEffect : null;\n\n  if (null !== c) {\n    var d = c = c.next;\n\n    do {\n      if ((d.tag & a) !== Tf) {\n        var e = d.destroy;\n        d.destroy = void 0;\n        void 0 !== e && e();\n      }\n\n      (d.tag & b) !== Tf && (e = d.create, d.destroy = e());\n      d = d.next;\n    } while (d !== c);\n  }\n}\n\nfunction Fh(a, b) {\n  for (var c = a;;) {\n    if (5 === c.tag) {\n      var d = c.stateNode;\n      if (b) d.style.display = \"none\";else {\n        d = c.stateNode;\n        var e = c.memoizedProps.style;\n        e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n        d.style.display = re(\"display\", e);\n      }\n    } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n      d = c.child.sibling;\n      d.return = c;\n      c = d;\n      continue;\n    } else if (null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n\n    if (c === a) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === a) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n}\n\nfunction Gh(a) {\n  \"function\" === typeof We && We(a);\n\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      var b = a.updateQueue;\n\n      if (null !== b && (b = b.lastEffect, null !== b)) {\n        var c = b = b.next;\n\n        do {\n          var d = c.destroy;\n\n          if (void 0 !== d) {\n            var e = a;\n\n            try {\n              d();\n            } catch (f) {\n              Dh(e, f);\n            }\n          }\n\n          c = c.next;\n        } while (c !== b);\n      }\n\n      break;\n\n    case 1:\n      Ch(a);\n      b = a.stateNode;\n      if (\"function\" === typeof b.componentWillUnmount) try {\n        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n      } catch (f) {\n        Dh(a, f);\n      }\n      break;\n\n    case 5:\n      Ch(a);\n      break;\n\n    case 4:\n      Hh(a);\n  }\n}\n\nfunction Ih(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\n\nfunction Jh(a) {\n  a: {\n    for (var b = a.return; null !== b;) {\n      if (Ih(b)) {\n        var c = b;\n        break a;\n      }\n\n      b = b.return;\n    }\n\n    t(\"160\");\n    c = void 0;\n  }\n\n  var d = b = void 0;\n\n  switch (c.tag) {\n    case 5:\n      b = c.stateNode;\n      d = !1;\n      break;\n\n    case 3:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    case 4:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    default:\n      t(\"161\");\n  }\n\n  c.effectTag & 16 && (oe(b, \"\"), c.effectTag &= -17);\n\n  a: b: for (c = a;;) {\n    for (; null === c.sibling;) {\n      if (null === c.return || Ih(c.return)) {\n        c = null;\n        break a;\n      }\n\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n\n    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag;) {\n      if (c.effectTag & 2) continue b;\n      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n    }\n\n    if (!(c.effectTag & 2)) {\n      c = c.stateNode;\n      break a;\n    }\n  }\n\n  for (var e = a;;) {\n    if (5 === e.tag || 6 === e.tag) {\n      if (c) {\n        if (d) {\n          var f = b,\n              g = e.stateNode,\n              h = c;\n          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n        } else b.insertBefore(e.stateNode, c);\n      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = xe)) : b.appendChild(e.stateNode);\n    } else if (4 !== e.tag && null !== e.child) {\n      e.child.return = e;\n      e = e.child;\n      continue;\n    }\n    if (e === a) break;\n\n    for (; null === e.sibling;) {\n      if (null === e.return || e.return === a) return;\n      e = e.return;\n    }\n\n    e.sibling.return = e.return;\n    e = e.sibling;\n  }\n}\n\nfunction Hh(a) {\n  for (var b = a, c = !1, d = void 0, e = void 0;;) {\n    if (!c) {\n      c = b.return;\n\n      a: for (;;) {\n        null === c ? t(\"160\") : void 0;\n\n        switch (c.tag) {\n          case 5:\n            d = c.stateNode;\n            e = !1;\n            break a;\n\n          case 3:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n\n          case 4:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n        }\n\n        c = c.return;\n      }\n\n      c = !0;\n    }\n\n    if (5 === b.tag || 6 === b.tag) {\n      a: for (var f = b, g = f;;) {\n        if (Gh(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n          if (g === f) break;\n\n          for (; null === g.sibling;) {\n            if (null === g.return || g.return === f) break a;\n            g = g.return;\n          }\n\n          g.sibling.return = g.return;\n          g = g.sibling;\n        }\n      }\n\n      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n    } else if (4 === b.tag ? (d = b.stateNode.containerInfo, e = !0) : Gh(b), null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n\n    if (b === a) break;\n\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return;\n      b = b.return;\n      4 === b.tag && (c = !1);\n    }\n\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n}\n\nfunction Kh(a, b) {\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      Eh(Vf, Wf, b);\n      break;\n\n    case 1:\n      break;\n\n    case 5:\n      var c = b.stateNode;\n\n      if (null != c) {\n        var d = b.memoizedProps;\n        a = null !== a ? a.memoizedProps : d;\n        var e = b.type,\n            f = b.updateQueue;\n        b.updateQueue = null;\n        null !== f && Ge(c, f, e, a, d, b);\n      }\n\n      break;\n\n    case 6:\n      null === b.stateNode ? t(\"162\") : void 0;\n      b.stateNode.nodeValue = b.memoizedProps;\n      break;\n\n    case 3:\n      break;\n\n    case 12:\n      break;\n\n    case 13:\n      c = b.memoizedState;\n      d = void 0;\n      a = b;\n      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = pf()));\n      null !== a && Fh(a, d);\n      c = b.updateQueue;\n\n      if (null !== c) {\n        b.updateQueue = null;\n        var g = b.stateNode;\n        null === g && (g = b.stateNode = new Ah());\n        c.forEach(function (a) {\n          var c = Lh.bind(null, b, a);\n          g.has(a) || (g.add(a), a.then(c, c));\n        });\n      }\n\n      break;\n\n    case 17:\n      break;\n\n    default:\n      t(\"163\");\n  }\n}\n\nvar Mh = \"function\" === typeof WeakMap ? WeakMap : Map;\n\nfunction Nh(a, b, c) {\n  c = rf(c);\n  c.tag = ih;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n\n  c.callback = function () {\n    Oh(d);\n    Bh(a, b);\n  };\n\n  return c;\n}\n\nfunction Ph(a, b, c) {\n  c = rf(c);\n  c.tag = ih;\n  var d = a.type.getDerivedStateFromError;\n\n  if (\"function\" === typeof d) {\n    var e = b.value;\n\n    c.payload = function () {\n      return d(e);\n    };\n  }\n\n  var f = a.stateNode;\n  null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n    \"function\" !== typeof d && (null === Qh ? Qh = new Set([this]) : Qh.add(this));\n    var c = b.value,\n        e = b.stack;\n    Bh(a, b);\n    this.componentDidCatch(c, {\n      componentStack: null !== e ? e : \"\"\n    });\n  });\n  return c;\n}\n\nfunction Rh(a) {\n  switch (a.tag) {\n    case 1:\n      M(a.type) && Pe(a);\n      var b = a.effectTag;\n      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 3:\n      return Qf(a), Qe(a), b = a.effectTag, 0 !== (b & 64) ? t(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n    case 5:\n      return Sf(a), null;\n\n    case 13:\n      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 4:\n      return Qf(a), null;\n\n    case 10:\n      return gh(a), null;\n\n    default:\n      return null;\n  }\n}\n\nvar Sh = Xb.ReactCurrentDispatcher,\n    Th = Xb.ReactCurrentOwner,\n    Uh = 1073741822,\n    Vh = 0,\n    Wh = !1,\n    T = null,\n    Xh = null,\n    U = 0,\n    Yh = -1,\n    Zh = !1,\n    V = null,\n    $h = !1,\n    ai = null,\n    bi = null,\n    ci = null,\n    Qh = null;\n\nfunction di() {\n  if (null !== T) for (var a = T.return; null !== a;) {\n    var b = a;\n\n    switch (b.tag) {\n      case 1:\n        var c = b.type.childContextTypes;\n        null !== c && void 0 !== c && Pe(b);\n        break;\n\n      case 3:\n        Qf(b);\n        Qe(b);\n        break;\n\n      case 5:\n        Sf(b);\n        break;\n\n      case 4:\n        Qf(b);\n        break;\n\n      case 10:\n        gh(b);\n    }\n\n    a = a.return;\n  }\n  Xh = null;\n  U = 0;\n  Yh = -1;\n  Zh = !1;\n  T = null;\n}\n\nfunction ei(a, b) {\n  ci = bi = ai = null;\n  var c = W;\n  W = !0;\n\n  do {\n    if (b.effectTag & 512) {\n      var d = !1,\n          e = void 0;\n\n      try {\n        var f = b;\n        Eh($f, Tf, f);\n        Eh(Tf, Zf, f);\n      } catch (g) {\n        d = !0, e = g;\n      }\n\n      d && Dh(b, e);\n    }\n\n    b = b.nextEffect;\n  } while (null !== b);\n\n  W = c;\n  c = a.expirationTime;\n  0 !== c && fi(a, c);\n}\n\nfunction sf() {\n  null !== bi && Fe(bi);\n  null !== ci && ci();\n}\n\nfunction gi(a) {\n  for (;;) {\n    var b = a.alternate,\n        c = a.return,\n        d = a.sibling;\n\n    if (0 === (a.effectTag & 1024)) {\n      T = a;\n\n      a: {\n        var e = b;\n        b = a;\n        var f = U;\n        var g = b.pendingProps;\n\n        switch (b.tag) {\n          case 2:\n            break;\n\n          case 16:\n            break;\n\n          case 15:\n          case 0:\n            break;\n\n          case 1:\n            M(b.type) && Pe(b);\n            break;\n\n          case 3:\n            Qf(b);\n            Qe(b);\n            g = b.stateNode;\n            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n            if (null === e || null === e.child) Mg(b), b.effectTag &= -3;\n            xh(b);\n            break;\n\n          case 5:\n            Sf(b);\n            var h = Of(Nf.current);\n            f = b.type;\n            if (null !== e && null != b.stateNode) yh(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n              var l = Of(Lf.current);\n\n              if (Mg(b)) {\n                g = b;\n                e = g.stateNode;\n                var k = g.type,\n                    m = g.memoizedProps,\n                    q = h;\n                e[Ha] = g;\n                e[Ia] = m;\n                f = void 0;\n                h = k;\n\n                switch (h) {\n                  case \"iframe\":\n                  case \"object\":\n                    H(\"load\", e);\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (k = 0; k < cb.length; k++) {\n                      H(cb[k], e);\n                    }\n\n                    break;\n\n                  case \"source\":\n                    H(\"error\", e);\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    H(\"error\", e);\n                    H(\"load\", e);\n                    break;\n\n                  case \"form\":\n                    H(\"reset\", e);\n                    H(\"submit\", e);\n                    break;\n\n                  case \"details\":\n                    H(\"toggle\", e);\n                    break;\n\n                  case \"input\":\n                    Ac(e, m);\n                    H(\"invalid\", e);\n                    we(q, \"onChange\");\n                    break;\n\n                  case \"select\":\n                    e._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    H(\"invalid\", e);\n                    we(q, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ge(e, m), H(\"invalid\", e), we(q, \"onChange\");\n                }\n\n                ue(h, m);\n                k = null;\n\n                for (f in m) {\n                  m.hasOwnProperty(f) && (l = m[f], \"children\" === f ? \"string\" === typeof l ? e.textContent !== l && (k = [\"children\", l]) : \"number\" === typeof l && e.textContent !== \"\" + l && (k = [\"children\", \"\" + l]) : ta.hasOwnProperty(f) && null != l && we(q, f));\n                }\n\n                switch (h) {\n                  case \"input\":\n                    Vb(e);\n                    Ec(e, m, !0);\n                    break;\n\n                  case \"textarea\":\n                    Vb(e);\n                    ie(e, m);\n                    break;\n\n                  case \"select\":\n                  case \"option\":\n                    break;\n\n                  default:\n                    \"function\" === typeof m.onClick && (e.onclick = xe);\n                }\n\n                f = k;\n                g.updateQueue = f;\n                g = null !== f ? !0 : !1;\n                g && sh(b);\n              } else {\n                m = b;\n                e = f;\n                q = g;\n                k = 9 === h.nodeType ? h : h.ownerDocument;\n                l === je.html && (l = ke(e));\n                l === je.html ? \"script\" === e ? (e = k.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", k = e.removeChild(e.firstChild)) : \"string\" === typeof q.is ? k = k.createElement(e, {\n                  is: q.is\n                }) : (k = k.createElement(e), \"select\" === e && q.multiple && (k.multiple = !0)) : k = k.createElementNS(l, e);\n                e = k;\n                e[Ha] = m;\n                e[Ia] = g;\n                wh(e, b, !1, !1);\n                q = e;\n                k = f;\n                m = g;\n                var x = h,\n                    C = ve(k, m);\n\n                switch (k) {\n                  case \"iframe\":\n                  case \"object\":\n                    H(\"load\", q);\n                    h = m;\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (h = 0; h < cb.length; h++) {\n                      H(cb[h], q);\n                    }\n\n                    h = m;\n                    break;\n\n                  case \"source\":\n                    H(\"error\", q);\n                    h = m;\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    H(\"error\", q);\n                    H(\"load\", q);\n                    h = m;\n                    break;\n\n                  case \"form\":\n                    H(\"reset\", q);\n                    H(\"submit\", q);\n                    h = m;\n                    break;\n\n                  case \"details\":\n                    H(\"toggle\", q);\n                    h = m;\n                    break;\n\n                  case \"input\":\n                    Ac(q, m);\n                    h = zc(q, m);\n                    H(\"invalid\", q);\n                    we(x, \"onChange\");\n                    break;\n\n                  case \"option\":\n                    h = de(q, m);\n                    break;\n\n                  case \"select\":\n                    q._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    h = p({}, m, {\n                      value: void 0\n                    });\n                    H(\"invalid\", q);\n                    we(x, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ge(q, m);\n                    h = fe(q, m);\n                    H(\"invalid\", q);\n                    we(x, \"onChange\");\n                    break;\n\n                  default:\n                    h = m;\n                }\n\n                ue(k, h);\n                l = void 0;\n                var w = k,\n                    E = q,\n                    v = h;\n\n                for (l in v) {\n                  if (v.hasOwnProperty(l)) {\n                    var n = v[l];\n                    \"style\" === l ? se(E, n) : \"dangerouslySetInnerHTML\" === l ? (n = n ? n.__html : void 0, null != n && ne(E, n)) : \"children\" === l ? \"string\" === typeof n ? (\"textarea\" !== w || \"\" !== n) && oe(E, n) : \"number\" === typeof n && oe(E, \"\" + n) : \"suppressContentEditableWarning\" !== l && \"suppressHydrationWarning\" !== l && \"autoFocus\" !== l && (ta.hasOwnProperty(l) ? null != n && we(x, l) : null != n && xc(E, l, n, C));\n                  }\n                }\n\n                switch (k) {\n                  case \"input\":\n                    Vb(q);\n                    Ec(q, m, !1);\n                    break;\n\n                  case \"textarea\":\n                    Vb(q);\n                    ie(q, m);\n                    break;\n\n                  case \"option\":\n                    null != m.value && q.setAttribute(\"value\", \"\" + yc(m.value));\n                    break;\n\n                  case \"select\":\n                    h = q;\n                    h.multiple = !!m.multiple;\n                    q = m.value;\n                    null != q ? ee(h, !!m.multiple, q, !1) : null != m.defaultValue && ee(h, !!m.multiple, m.defaultValue, !0);\n                    break;\n\n                  default:\n                    \"function\" === typeof h.onClick && (q.onclick = xe);\n                }\n\n                (g = Ae(f, g)) && sh(b);\n                b.stateNode = e;\n              }\n\n              null !== b.ref && (b.effectTag |= 128);\n            } else null === b.stateNode ? t(\"166\") : void 0;\n            break;\n\n          case 6:\n            e && null != b.stateNode ? zh(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? t(\"166\") : void 0), e = Of(Nf.current), Of(Lf.current), Mg(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Ha] = g, (g = f.nodeValue !== e) && sh(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Ha] = b, f.stateNode = g));\n            break;\n\n          case 11:\n            break;\n\n          case 13:\n            g = b.memoizedState;\n\n            if (0 !== (b.effectTag & 64)) {\n              b.expirationTime = f;\n              T = b;\n              break a;\n            }\n\n            g = null !== g;\n            f = null !== e && null !== e.memoizedState;\n            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n            if (g || f) b.effectTag |= 4;\n            break;\n\n          case 7:\n            break;\n\n          case 8:\n            break;\n\n          case 12:\n            break;\n\n          case 4:\n            Qf(b);\n            xh(b);\n            break;\n\n          case 10:\n            gh(b);\n            break;\n\n          case 9:\n            break;\n\n          case 14:\n            break;\n\n          case 17:\n            M(b.type) && Pe(b);\n            break;\n\n          default:\n            t(\"156\");\n        }\n\n        T = null;\n      }\n\n      b = a;\n\n      if (1 === U || 1 !== b.childExpirationTime) {\n        g = 0;\n\n        for (f = b.child; null !== f;) {\n          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n        }\n\n        b.childExpirationTime = g;\n      }\n\n      if (null !== T) return T;\n      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n    } else {\n      a = Rh(a, U);\n      if (null !== a) return a.effectTag &= 1023, a;\n      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n    }\n\n    if (null !== d) return d;\n    if (null !== c) a = c;else break;\n  }\n\n  return null;\n}\n\nfunction hi(a) {\n  var b = ah(a.alternate, a, U);\n  a.memoizedProps = a.pendingProps;\n  null === b && (b = gi(a));\n  Th.current = null;\n  return b;\n}\n\nfunction ii(a, b) {\n  Wh ? t(\"243\") : void 0;\n  sf();\n  Wh = !0;\n  var c = Sh.current;\n  Sh.current = rg;\n  var d = a.nextExpirationTimeToWorkOn;\n  if (d !== U || a !== Xh || null === T) di(), Xh = a, U = d, T = bf(Xh.current, null, U), a.pendingCommitExpirationTime = 0;\n  var e = !1;\n\n  do {\n    try {\n      if (b) for (; null !== T && !ji();) {\n        T = hi(T);\n      } else for (; null !== T;) {\n        T = hi(T);\n      }\n    } catch (E) {\n      if (fh = eh = dh = null, sg(), null === T) e = !0, Oh(E);else {\n        null === T ? t(\"271\") : void 0;\n        var f = T,\n            g = f.return;\n        if (null === g) e = !0, Oh(E);else {\n          a: {\n            var h = a,\n                l = g,\n                k = f,\n                m = E;\n            g = U;\n            k.effectTag |= 1024;\n            k.firstEffect = k.lastEffect = null;\n\n            if (null !== m && \"object\" === typeof m && \"function\" === typeof m.then) {\n              var q = m;\n              m = l;\n              var x = -1,\n                  C = -1;\n\n              do {\n                if (13 === m.tag) {\n                  var w = m.alternate;\n\n                  if (null !== w && (w = w.memoizedState, null !== w)) {\n                    C = 10 * (1073741822 - w.timedOutAt);\n                    break;\n                  }\n\n                  w = m.pendingProps.maxDuration;\n                  if (\"number\" === typeof w) if (0 >= w) x = 0;else if (-1 === x || w < x) x = w;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = l;\n\n              do {\n                if (w = 13 === m.tag) w = void 0 === m.memoizedProps.fallback ? !1 : null === m.memoizedState;\n\n                if (w) {\n                  l = m.updateQueue;\n                  null === l ? (l = new Set(), l.add(q), m.updateQueue = l) : l.add(q);\n\n                  if (0 === (m.mode & 1)) {\n                    m.effectTag |= 64;\n                    k.effectTag &= -1957;\n                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (g = rf(1073741823), g.tag = wf, tf(k, g)));\n                    k.expirationTime = 1073741823;\n                    break a;\n                  }\n\n                  k = h.pingCache;\n                  null === k ? (k = h.pingCache = new Mh(), l = new Set(), k.set(q, l)) : (l = k.get(q), void 0 === l && (l = new Set(), k.set(q, l)));\n                  l.has(g) || (l.add(g), k = ki.bind(null, h, q, g), q.then(k, k));\n                  -1 === x ? h = 1073741823 : (-1 === C && (C = 10 * (1073741822 - lf(h, g)) - 5E3), h = C + x);\n                  0 <= h && Yh < h && (Yh = h);\n                  m.effectTag |= 2048;\n                  m.expirationTime = g;\n                  break a;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = Error((mc(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + nc(k));\n            }\n\n            Zh = !0;\n            m = rh(m, k);\n            h = l;\n\n            do {\n              switch (h.tag) {\n                case 3:\n                  h.effectTag |= 2048;\n                  h.expirationTime = g;\n                  g = Nh(h, m, g);\n                  mh(h, g);\n                  break a;\n\n                case 1:\n                  if (q = m, x = h.type, C = h.stateNode, 0 === (h.effectTag & 64) && (\"function\" === typeof x.getDerivedStateFromError || null !== C && \"function\" === typeof C.componentDidCatch && (null === Qh || !Qh.has(C)))) {\n                    h.effectTag |= 2048;\n                    h.expirationTime = g;\n                    g = Ph(h, q, g);\n                    mh(h, g);\n                    break a;\n                  }\n\n              }\n\n              h = h.return;\n            } while (null !== h);\n          }\n\n          T = gi(f);\n          continue;\n        }\n      }\n    }\n\n    break;\n  } while (1);\n\n  Wh = !1;\n  Sh.current = c;\n  fh = eh = dh = null;\n  sg();\n  if (e) Xh = null, a.finishedWork = null;else if (null !== T) a.finishedWork = null;else {\n    c = a.current.alternate;\n    null === c ? t(\"281\") : void 0;\n    Xh = null;\n\n    if (Zh) {\n      e = a.latestPendingTime;\n      f = a.latestSuspendedTime;\n      g = a.latestPingedTime;\n\n      if (0 !== e && e < d || 0 !== f && f < d || 0 !== g && g < d) {\n        kf(a, d);\n        li(a, c, d, a.expirationTime, -1);\n        return;\n      }\n\n      if (!a.didError && b) {\n        a.didError = !0;\n        d = a.nextExpirationTimeToWorkOn = d;\n        b = a.expirationTime = 1073741823;\n        li(a, c, d, b, -1);\n        return;\n      }\n    }\n\n    b && -1 !== Yh ? (kf(a, d), b = 10 * (1073741822 - lf(a, d)), b < Yh && (Yh = b), b = 10 * (1073741822 - pf()), b = Yh - b, li(a, c, d, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = d, a.finishedWork = c);\n  }\n}\n\nfunction Dh(a, b) {\n  for (var c = a.return; null !== c;) {\n    switch (c.tag) {\n      case 1:\n        var d = c.stateNode;\n\n        if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Qh || !Qh.has(d))) {\n          a = rh(b, a);\n          a = Ph(c, a, 1073741823);\n          tf(c, a);\n          uf(c, 1073741823);\n          return;\n        }\n\n        break;\n\n      case 3:\n        a = rh(b, a);\n        a = Nh(c, a, 1073741823);\n        tf(c, a);\n        uf(c, 1073741823);\n        return;\n    }\n\n    c = c.return;\n  }\n\n  3 === a.tag && (c = rh(b, a), c = Nh(a, c, 1073741823), tf(a, c), uf(a, 1073741823));\n}\n\nfunction qf(a, b) {\n  0 !== Vh ? a = Vh : Wh ? a = $h ? 1073741823 : U : b.mode & 1 ? (a = mi ? 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1) : 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1), null !== Xh && a === U && --a) : a = 1073741823;\n  mi && (0 === ni || a < ni) && (ni = a);\n  return a;\n}\n\nfunction ki(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  if (null !== Xh && U === c) Xh = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n    a.didError = !1;\n    b = a.latestPingedTime;\n    if (0 === b || b > c) a.latestPingedTime = c;\n    jf(c, a);\n    c = a.expirationTime;\n    0 !== c && fi(a, c);\n  }\n}\n\nfunction Lh(a, b) {\n  var c = a.stateNode;\n  null !== c && c.delete(b);\n  b = pf();\n  b = qf(b, a);\n  a = oi(a, b);\n  null !== a && (hf(a, b), b = a.expirationTime, 0 !== b && fi(a, b));\n}\n\nfunction oi(a, b) {\n  a.expirationTime < b && (a.expirationTime = b);\n  var c = a.alternate;\n  null !== c && c.expirationTime < b && (c.expirationTime = b);\n  var d = a.return,\n      e = null;\n  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n    c = d.alternate;\n    d.childExpirationTime < b && (d.childExpirationTime = b);\n    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n    if (null === d.return && 3 === d.tag) {\n      e = d.stateNode;\n      break;\n    }\n\n    d = d.return;\n  }\n  return e;\n}\n\nfunction uf(a, b) {\n  a = oi(a, b);\n  null !== a && (!Wh && 0 !== U && b > U && di(), hf(a, b), Wh && !$h && Xh === a || fi(a, a.expirationTime), pi > qi && (pi = 0, t(\"185\")));\n}\n\nfunction ri(a, b, c, d, e) {\n  var f = Vh;\n  Vh = 1073741823;\n\n  try {\n    return a(b, c, d, e);\n  } finally {\n    Vh = f;\n  }\n}\n\nvar si = null,\n    X = null,\n    ti = 0,\n    ui = void 0,\n    W = !1,\n    vi = null,\n    Y = 0,\n    ni = 0,\n    wi = !1,\n    xi = null,\n    Z = !1,\n    yi = !1,\n    mi = !1,\n    zi = null,\n    Ai = ba.unstable_now(),\n    Bi = 1073741822 - (Ai / 10 | 0),\n    Ci = Bi,\n    qi = 50,\n    pi = 0,\n    Di = null;\n\nfunction Ei() {\n  Bi = 1073741822 - ((ba.unstable_now() - Ai) / 10 | 0);\n}\n\nfunction Fi(a, b) {\n  if (0 !== ti) {\n    if (b < ti) return;\n    null !== ui && ba.unstable_cancelCallback(ui);\n  }\n\n  ti = b;\n  a = ba.unstable_now() - Ai;\n  ui = ba.unstable_scheduleCallback(Gi, {\n    timeout: 10 * (1073741822 - b) - a\n  });\n}\n\nfunction li(a, b, c, d, e) {\n  a.expirationTime = d;\n  0 !== e || ji() ? 0 < e && (a.timeoutHandle = Ce(Hi.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n}\n\nfunction Hi(a, b, c) {\n  a.pendingCommitExpirationTime = c;\n  a.finishedWork = b;\n  Ei();\n  Ci = Bi;\n  Ii(a, c);\n}\n\nfunction pf() {\n  if (W) return Ci;\n  Ji();\n  if (0 === Y || 1 === Y) Ei(), Ci = Bi;\n  return Ci;\n}\n\nfunction fi(a, b) {\n  null === a.nextScheduledRoot ? (a.expirationTime = b, null === X ? (si = X = a, a.nextScheduledRoot = a) : (X = X.nextScheduledRoot = a, X.nextScheduledRoot = si)) : b > a.expirationTime && (a.expirationTime = b);\n  W || (Z ? yi && (vi = a, Y = 1073741823, Ki(a, 1073741823, !1)) : 1073741823 === b ? Li(1073741823, !1) : Fi(a, b));\n}\n\nfunction Ji() {\n  var a = 0,\n      b = null;\n  if (null !== X) for (var c = X, d = si; null !== d;) {\n    var e = d.expirationTime;\n\n    if (0 === e) {\n      null === c || null === X ? t(\"244\") : void 0;\n\n      if (d === d.nextScheduledRoot) {\n        si = X = d.nextScheduledRoot = null;\n        break;\n      } else if (d === si) si = e = d.nextScheduledRoot, X.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === X) {\n        X = c;\n        X.nextScheduledRoot = si;\n        d.nextScheduledRoot = null;\n        break;\n      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n      d = c.nextScheduledRoot;\n    } else {\n      e > a && (a = e, b = d);\n      if (d === X) break;\n      if (1073741823 === a) break;\n      c = d;\n      d = d.nextScheduledRoot;\n    }\n  }\n  vi = b;\n  Y = a;\n}\n\nvar Mi = !1;\n\nfunction ji() {\n  return Mi ? !0 : ba.unstable_shouldYield() ? Mi = !0 : !1;\n}\n\nfunction Gi() {\n  try {\n    if (!ji() && null !== si) {\n      Ei();\n      var a = si;\n\n      do {\n        var b = a.expirationTime;\n        0 !== b && Bi <= b && (a.nextExpirationTimeToWorkOn = Bi);\n        a = a.nextScheduledRoot;\n      } while (a !== si);\n    }\n\n    Li(0, !0);\n  } finally {\n    Mi = !1;\n  }\n}\n\nfunction Li(a, b) {\n  Ji();\n  if (b) for (Ei(), Ci = Bi; null !== vi && 0 !== Y && a <= Y && !(Mi && Bi > Y);) {\n    Ki(vi, Y, Bi > Y), Ji(), Ei(), Ci = Bi;\n  } else for (; null !== vi && 0 !== Y && a <= Y;) {\n    Ki(vi, Y, !1), Ji();\n  }\n  b && (ti = 0, ui = null);\n  0 !== Y && Fi(vi, Y);\n  pi = 0;\n  Di = null;\n  if (null !== zi) for (a = zi, zi = null, b = 0; b < a.length; b++) {\n    var c = a[b];\n\n    try {\n      c._onComplete();\n    } catch (d) {\n      wi || (wi = !0, xi = d);\n    }\n  }\n  if (wi) throw a = xi, xi = null, wi = !1, a;\n}\n\nfunction Ii(a, b) {\n  W ? t(\"253\") : void 0;\n  vi = a;\n  Y = b;\n  Ki(a, b, !1);\n  Li(1073741823, !1);\n}\n\nfunction Ki(a, b, c) {\n  W ? t(\"245\") : void 0;\n  W = !0;\n\n  if (c) {\n    var d = a.finishedWork;\n    null !== d ? Oi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, De(d)), ii(a, c), d = a.finishedWork, null !== d && (ji() ? a.finishedWork = d : Oi(a, d, b)));\n  } else d = a.finishedWork, null !== d ? Oi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, De(d)), ii(a, c), d = a.finishedWork, null !== d && Oi(a, d, b));\n\n  W = !1;\n}\n\nfunction Oi(a, b, c) {\n  var d = a.firstBatch;\n\n  if (null !== d && d._expirationTime >= c && (null === zi ? zi = [d] : zi.push(d), d._defer)) {\n    a.finishedWork = b;\n    a.expirationTime = 0;\n    return;\n  }\n\n  a.finishedWork = null;\n  a === Di ? pi++ : (Di = a, pi = 0);\n  $h = Wh = !0;\n  a.current === b ? t(\"177\") : void 0;\n  c = a.pendingCommitExpirationTime;\n  0 === c ? t(\"261\") : void 0;\n  a.pendingCommitExpirationTime = 0;\n  d = b.expirationTime;\n  var e = b.childExpirationTime;\n  d = e > d ? e : d;\n  a.didError = !1;\n  0 === d ? (a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0) : (d < a.latestPingedTime && (a.latestPingedTime = 0), e = a.latestPendingTime, 0 !== e && (e > d ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > d && (a.earliestPendingTime = a.latestPendingTime)), e = a.earliestSuspendedTime, 0 === e ? hf(a, d) : d < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, hf(a, d)) : d > e && hf(a, d));\n  jf(0, a);\n  Th.current = null;\n  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n  ye = Hd;\n  e = Td();\n\n  if (Ud(e)) {\n    if (\"selectionStart\" in e) var f = {\n      start: e.selectionStart,\n      end: e.selectionEnd\n    };else a: {\n      f = (f = e.ownerDocument) && f.defaultView || window;\n      var g = f.getSelection && f.getSelection();\n\n      if (g && 0 !== g.rangeCount) {\n        f = g.anchorNode;\n        var h = g.anchorOffset,\n            l = g.focusNode;\n        g = g.focusOffset;\n\n        try {\n          f.nodeType, l.nodeType;\n        } catch (vb) {\n          f = null;\n          break a;\n        }\n\n        var k = 0,\n            m = -1,\n            q = -1,\n            x = 0,\n            C = 0,\n            w = e,\n            E = null;\n\n        b: for (;;) {\n          for (var v;;) {\n            w !== f || 0 !== h && 3 !== w.nodeType || (m = k + h);\n            w !== l || 0 !== g && 3 !== w.nodeType || (q = k + g);\n            3 === w.nodeType && (k += w.nodeValue.length);\n            if (null === (v = w.firstChild)) break;\n            E = w;\n            w = v;\n          }\n\n          for (;;) {\n            if (w === e) break b;\n            E === f && ++x === h && (m = k);\n            E === l && ++C === g && (q = k);\n            if (null !== (v = w.nextSibling)) break;\n            w = E;\n            E = w.parentNode;\n          }\n\n          w = v;\n        }\n\n        f = -1 === m || -1 === q ? null : {\n          start: m,\n          end: q\n        };\n      } else f = null;\n    }\n    f = f || {\n      start: 0,\n      end: 0\n    };\n  } else f = null;\n\n  ze = {\n    focusedElem: e,\n    selectionRange: f\n  };\n  Hd = !1;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      for (; null !== V;) {\n        if (V.effectTag & 256) a: {\n          var n = V.alternate;\n          h = V;\n\n          switch (h.tag) {\n            case 0:\n            case 11:\n            case 15:\n              Eh(Uf, Tf, h);\n              break a;\n\n            case 1:\n              if (h.effectTag & 256 && null !== n) {\n                var u = n.memoizedProps,\n                    z = n.memoizedState,\n                    Ag = h.stateNode,\n                    Ni = Ag.getSnapshotBeforeUpdate(h.elementType === h.type ? u : P(h.type, u), z);\n                Ag.__reactInternalSnapshotBeforeUpdate = Ni;\n              }\n\n              break a;\n\n            case 3:\n            case 5:\n            case 6:\n            case 4:\n            case 17:\n              break a;\n\n            default:\n              t(\"163\");\n          }\n        }\n        V = V.nextEffect;\n      }\n    } catch (vb) {\n      e = !0, f = vb;\n    }\n\n    e && (null === V ? t(\"178\") : void 0, Dh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  for (V = d; null !== V;) {\n    n = !1;\n    u = void 0;\n\n    try {\n      for (; null !== V;) {\n        var y = V.effectTag;\n        y & 16 && oe(V.stateNode, \"\");\n\n        if (y & 128) {\n          var B = V.alternate;\n\n          if (null !== B) {\n            var r = B.ref;\n            null !== r && (\"function\" === typeof r ? r(null) : r.current = null);\n          }\n        }\n\n        switch (y & 14) {\n          case 2:\n            Jh(V);\n            V.effectTag &= -3;\n            break;\n\n          case 6:\n            Jh(V);\n            V.effectTag &= -3;\n            Kh(V.alternate, V);\n            break;\n\n          case 4:\n            Kh(V.alternate, V);\n            break;\n\n          case 8:\n            z = V;\n            Hh(z);\n            z.return = null;\n            z.child = null;\n            z.memoizedState = null;\n            z.updateQueue = null;\n            var O = z.alternate;\n            null !== O && (O.return = null, O.child = null, O.memoizedState = null, O.updateQueue = null);\n        }\n\n        V = V.nextEffect;\n      }\n    } catch (vb) {\n      n = !0, u = vb;\n    }\n\n    n && (null === V ? t(\"178\") : void 0, Dh(V, u), null !== V && (V = V.nextEffect));\n  }\n\n  r = ze;\n  B = Td();\n  y = r.focusedElem;\n  n = r.selectionRange;\n\n  if (B !== y && y && y.ownerDocument && Sd(y.ownerDocument.documentElement, y)) {\n    null !== n && Ud(y) && (B = n.start, r = n.end, void 0 === r && (r = B), \"selectionStart\" in y ? (y.selectionStart = B, y.selectionEnd = Math.min(r, y.value.length)) : (r = (B = y.ownerDocument || document) && B.defaultView || window, r.getSelection && (r = r.getSelection(), u = y.textContent.length, O = Math.min(n.start, u), n = void 0 === n.end ? O : Math.min(n.end, u), !r.extend && O > n && (u = n, n = O, O = u), u = Rd(y, O), z = Rd(y, n), u && z && (1 !== r.rangeCount || r.anchorNode !== u.node || r.anchorOffset !== u.offset || r.focusNode !== z.node || r.focusOffset !== z.offset) && (B = B.createRange(), B.setStart(u.node, u.offset), r.removeAllRanges(), O > n ? (r.addRange(B), r.extend(z.node, z.offset)) : (B.setEnd(z.node, z.offset), r.addRange(B))))));\n    B = [];\n\n    for (r = y; r = r.parentNode;) {\n      1 === r.nodeType && B.push({\n        element: r,\n        left: r.scrollLeft,\n        top: r.scrollTop\n      });\n    }\n\n    \"function\" === typeof y.focus && y.focus();\n\n    for (y = 0; y < B.length; y++) {\n      r = B[y], r.element.scrollLeft = r.left, r.element.scrollTop = r.top;\n    }\n  }\n\n  ze = null;\n  Hd = !!ye;\n  ye = null;\n  a.current = b;\n\n  for (V = d; null !== V;) {\n    y = !1;\n    B = void 0;\n\n    try {\n      for (r = a, O = c; null !== V;) {\n        var qa = V.effectTag;\n\n        if (qa & 36) {\n          var Rb = V.alternate;\n          n = V;\n          u = O;\n\n          switch (n.tag) {\n            case 0:\n            case 11:\n            case 15:\n              Eh(Xf, Yf, n);\n              break;\n\n            case 1:\n              var id = n.stateNode;\n              if (n.effectTag & 4) if (null === Rb) id.componentDidMount();else {\n                var dj = n.elementType === n.type ? Rb.memoizedProps : P(n.type, Rb.memoizedProps);\n                id.componentDidUpdate(dj, Rb.memoizedState, id.__reactInternalSnapshotBeforeUpdate);\n              }\n              var th = n.updateQueue;\n              null !== th && ph(n, th, id, u);\n              break;\n\n            case 3:\n              var uh = n.updateQueue;\n\n              if (null !== uh) {\n                z = null;\n                if (null !== n.child) switch (n.child.tag) {\n                  case 5:\n                    z = n.child.stateNode;\n                    break;\n\n                  case 1:\n                    z = n.child.stateNode;\n                }\n                ph(n, uh, z, u);\n              }\n\n              break;\n\n            case 5:\n              var ej = n.stateNode;\n              null === Rb && n.effectTag & 4 && Ae(n.type, n.memoizedProps) && ej.focus();\n              break;\n\n            case 6:\n              break;\n\n            case 4:\n              break;\n\n            case 12:\n              break;\n\n            case 13:\n              break;\n\n            case 17:\n              break;\n\n            default:\n              t(\"163\");\n          }\n        }\n\n        if (qa & 128) {\n          var jd = V.ref;\n\n          if (null !== jd) {\n            var vh = V.stateNode;\n\n            switch (V.tag) {\n              case 5:\n                var Ne = vh;\n                break;\n\n              default:\n                Ne = vh;\n            }\n\n            \"function\" === typeof jd ? jd(Ne) : jd.current = Ne;\n          }\n        }\n\n        qa & 512 && (ai = r);\n        V = V.nextEffect;\n      }\n    } catch (vb) {\n      y = !0, B = vb;\n    }\n\n    y && (null === V ? t(\"178\") : void 0, Dh(V, B), null !== V && (V = V.nextEffect));\n  }\n\n  null !== d && null !== ai && (qa = ei.bind(null, a, d), bi = Ee(qa), ci = qa);\n  Wh = $h = !1;\n  \"function\" === typeof Ve && Ve(b.stateNode);\n  qa = b.expirationTime;\n  b = b.childExpirationTime;\n  b = b > qa ? b : qa;\n  0 === b && (Qh = null);\n  a.expirationTime = b;\n  a.finishedWork = null;\n}\n\nfunction Oh(a) {\n  null === vi ? t(\"246\") : void 0;\n  vi.expirationTime = 0;\n  wi || (wi = !0, xi = a);\n}\n\nfunction Pi(a, b) {\n  var c = Z;\n  Z = !0;\n\n  try {\n    return a(b);\n  } finally {\n    (Z = c) || W || Li(1073741823, !1);\n  }\n}\n\nfunction Qi(a, b) {\n  if (Z && !yi) {\n    yi = !0;\n\n    try {\n      return a(b);\n    } finally {\n      yi = !1;\n    }\n  }\n\n  return a(b);\n}\n\nfunction Ri(a, b, c) {\n  if (mi) return a(b, c);\n  Z || W || 0 === ni || (Li(ni, !1), ni = 0);\n  var d = mi,\n      e = Z;\n  Z = mi = !0;\n\n  try {\n    return a(b, c);\n  } finally {\n    mi = d, (Z = e) || W || Li(1073741823, !1);\n  }\n}\n\nfunction Si(a, b, c, d, e) {\n  var f = b.current;\n\n  a: if (c) {\n    c = c._reactInternalFiber;\n\n    b: {\n      2 === kd(c) && 1 === c.tag ? void 0 : t(\"170\");\n      var g = c;\n\n      do {\n        switch (g.tag) {\n          case 3:\n            g = g.stateNode.context;\n            break b;\n\n          case 1:\n            if (M(g.type)) {\n              g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n              break b;\n            }\n\n        }\n\n        g = g.return;\n      } while (null !== g);\n\n      t(\"171\");\n      g = void 0;\n    }\n\n    if (1 === c.tag) {\n      var h = c.type;\n\n      if (M(h)) {\n        c = Se(c, h, g);\n        break a;\n      }\n    }\n\n    c = g;\n  } else c = Le;\n\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = e;\n  e = rf(d);\n  e.payload = {\n    element: a\n  };\n  b = void 0 === b ? null : b;\n  null !== b && (e.callback = b);\n  sf();\n  tf(f, e);\n  uf(f, d);\n  return d;\n}\n\nfunction Ti(a, b, c, d) {\n  var e = b.current,\n      f = pf();\n  e = qf(f, e);\n  return Si(a, b, c, e, d);\n}\n\nfunction Ui(a) {\n  a = a.current;\n  if (!a.child) return null;\n\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n\n    default:\n      return a.child.stateNode;\n  }\n}\n\nfunction Vi(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: $b,\n    key: null == d ? null : \"\" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\n\nDb = function Db(a, b, c) {\n  switch (b) {\n    case \"input\":\n      Cc(a, c);\n      b = c.name;\n\n      if (\"radio\" === c.type && null != b) {\n        for (c = a; c.parentNode;) {\n          c = c.parentNode;\n        }\n\n        c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n\n          if (d !== a && d.form === a.form) {\n            var e = Ma(d);\n            e ? void 0 : t(\"90\");\n            Wb(d);\n            Cc(d, e);\n          }\n        }\n      }\n\n      break;\n\n    case \"textarea\":\n      he(a, c);\n      break;\n\n    case \"select\":\n      b = c.value, null != b && ee(a, !!c.multiple, b, !1);\n  }\n};\n\nfunction Wi(a) {\n  var b = 1073741822 - 25 * (((1073741822 - pf() + 500) / 25 | 0) + 1);\n  b >= Uh && (b = Uh - 1);\n  this._expirationTime = Uh = b;\n  this._root = a;\n  this._callbacks = this._next = null;\n  this._hasChildren = this._didComplete = !1;\n  this._children = null;\n  this._defer = !0;\n}\n\nWi.prototype.render = function (a) {\n  this._defer ? void 0 : t(\"250\");\n  this._hasChildren = !0;\n  this._children = a;\n  var b = this._root._internalRoot,\n      c = this._expirationTime,\n      d = new Xi();\n  Si(a, b, null, c, d._onCommit);\n  return d;\n};\n\nWi.prototype.then = function (a) {\n  if (this._didComplete) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nWi.prototype.commit = function () {\n  var a = this._root._internalRoot,\n      b = a.firstBatch;\n  this._defer && null !== b ? void 0 : t(\"251\");\n\n  if (this._hasChildren) {\n    var c = this._expirationTime;\n\n    if (b !== this) {\n      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n      for (var d = null, e = b; e !== this;) {\n        d = e, e = e._next;\n      }\n\n      null === d ? t(\"251\") : void 0;\n      d._next = e._next;\n      this._next = b;\n      a.firstBatch = this;\n    }\n\n    this._defer = !1;\n    Ii(a, c);\n    b = this._next;\n    this._next = null;\n    b = a.firstBatch = b;\n    null !== b && b._hasChildren && b.render(b._children);\n  } else this._next = null, this._defer = !1;\n};\n\nWi.prototype._onComplete = function () {\n  if (!this._didComplete) {\n    this._didComplete = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      (0, a[b])();\n    }\n  }\n};\n\nfunction Xi() {\n  this._callbacks = null;\n  this._didCommit = !1;\n  this._onCommit = this._onCommit.bind(this);\n}\n\nXi.prototype.then = function (a) {\n  if (this._didCommit) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nXi.prototype._onCommit = function () {\n  if (!this._didCommit) {\n    this._didCommit = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      var c = a[b];\n      \"function\" !== typeof c ? t(\"191\", c) : void 0;\n      c();\n    }\n  }\n};\n\nfunction Yi(a, b, c) {\n  b = N(3, null, null, b ? 3 : 0);\n  a = {\n    current: b,\n    containerInfo: a,\n    pendingChildren: null,\n    pingCache: null,\n    earliestPendingTime: 0,\n    latestPendingTime: 0,\n    earliestSuspendedTime: 0,\n    latestSuspendedTime: 0,\n    latestPingedTime: 0,\n    didError: !1,\n    pendingCommitExpirationTime: 0,\n    finishedWork: null,\n    timeoutHandle: -1,\n    context: null,\n    pendingContext: null,\n    hydrate: c,\n    nextExpirationTimeToWorkOn: 0,\n    expirationTime: 0,\n    firstBatch: null,\n    nextScheduledRoot: null\n  };\n  this._internalRoot = b.stateNode = a;\n}\n\nYi.prototype.render = function (a, b) {\n  var c = this._internalRoot,\n      d = new Xi();\n  b = void 0 === b ? null : b;\n  null !== b && d.then(b);\n  Ti(a, c, null, d._onCommit);\n  return d;\n};\n\nYi.prototype.unmount = function (a) {\n  var b = this._internalRoot,\n      c = new Xi();\n  a = void 0 === a ? null : a;\n  null !== a && c.then(a);\n  Ti(null, b, null, c._onCommit);\n  return c;\n};\n\nYi.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n  var d = this._internalRoot,\n      e = new Xi();\n  c = void 0 === c ? null : c;\n  null !== c && e.then(c);\n  Ti(b, d, a, e._onCommit);\n  return e;\n};\n\nYi.prototype.createBatch = function () {\n  var a = new Wi(this),\n      b = a._expirationTime,\n      c = this._internalRoot,\n      d = c.firstBatch;\n  if (null === d) c.firstBatch = a, a._next = null;else {\n    for (c = null; null !== d && d._expirationTime >= b;) {\n      c = d, d = d._next;\n    }\n\n    a._next = d;\n    null !== c && (c._next = a);\n  }\n  return a;\n};\n\nfunction Zi(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n}\n\nJb = Pi;\nKb = Ri;\n\nLb = function Lb() {\n  W || 0 === ni || (Li(ni, !1), ni = 0);\n};\n\nfunction $i(a, b) {\n  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n  if (!b) for (var c; c = a.lastChild;) {\n    a.removeChild(c);\n  }\n  return new Yi(a, !1, b);\n}\n\nfunction aj(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n\n  if (f) {\n    if (\"function\" === typeof e) {\n      var g = e;\n\n      e = function e() {\n        var a = Ui(f._internalRoot);\n        g.call(a);\n      };\n    }\n\n    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n  } else {\n    f = c._reactRootContainer = $i(c, d);\n\n    if (\"function\" === typeof e) {\n      var h = e;\n\n      e = function e() {\n        var a = Ui(f._internalRoot);\n        h.call(a);\n      };\n    }\n\n    Qi(function () {\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    });\n  }\n\n  return Ui(f._internalRoot);\n}\n\nfunction bj(a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  Zi(b) ? void 0 : t(\"200\");\n  return Vi(a, b, null, c);\n}\n\nvar fj = {\n  createPortal: bj,\n  findDOMNode: function findDOMNode(a) {\n    if (null == a) return null;\n    if (1 === a.nodeType) return a;\n    var b = a._reactInternalFiber;\n    void 0 === b && (\"function\" === typeof a.render ? t(\"188\") : t(\"268\", Object.keys(a)));\n    a = nd(b);\n    a = null === a ? null : a.stateNode;\n    return a;\n  },\n  hydrate: function hydrate(a, b, c) {\n    Zi(b) ? void 0 : t(\"200\");\n    return aj(null, a, b, !0, c);\n  },\n  render: function render(a, b, c) {\n    Zi(b) ? void 0 : t(\"200\");\n    return aj(null, a, b, !1, c);\n  },\n  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n    Zi(c) ? void 0 : t(\"200\");\n    null == a || void 0 === a._reactInternalFiber ? t(\"38\") : void 0;\n    return aj(a, b, c, !1, d);\n  },\n  unmountComponentAtNode: function unmountComponentAtNode(a) {\n    Zi(a) ? void 0 : t(\"40\");\n    return a._reactRootContainer ? (Qi(function () {\n      aj(null, null, a, !1, function () {\n        a._reactRootContainer = null;\n      });\n    }), !0) : !1;\n  },\n  unstable_createPortal: function unstable_createPortal() {\n    return bj.apply(void 0, arguments);\n  },\n  unstable_batchedUpdates: Pi,\n  unstable_interactiveUpdates: Ri,\n  flushSync: function flushSync(a, b) {\n    W ? t(\"187\") : void 0;\n    var c = Z;\n    Z = !0;\n\n    try {\n      return ri(a, b);\n    } finally {\n      Z = c, Li(1073741823, !1);\n    }\n  },\n  unstable_createRoot: cj,\n  unstable_flushControlled: function unstable_flushControlled(a) {\n    var b = Z;\n    Z = !0;\n\n    try {\n      ri(a);\n    } finally {\n      (Z = b) || W || Li(1073741823, !1);\n    }\n  },\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    Events: [Ka, La, Ma, Da.injectEventPluginsByName, ra, Sa, function (a) {\n      Aa(a, Ra);\n    }, Hb, Ib, Jd, Fa]\n  }\n};\n\nfunction cj(a, b) {\n  Zi(a) ? void 0 : t(\"299\", \"unstable_createRoot\");\n  return new Yi(a, !0, null != b && !0 === b.hydrate);\n}\n\n(function (a) {\n  var b = a.findFiberByHostInstance;\n  return Ye(p({}, a, {\n    overrideProps: null,\n    currentDispatcherRef: Xb.ReactCurrentDispatcher,\n    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n      a = nd(a);\n      return null === a ? null : a.stateNode;\n    },\n    findFiberByHostInstance: function findFiberByHostInstance(a) {\n      return b ? b(a) : null;\n    }\n  }));\n})({\n  findFiberByHostInstance: Ja,\n  bundleType: 0,\n  version: \"16.8.1\",\n  rendererPackageName: \"react-dom\"\n});\n\nvar gj = {\n  default: fj\n},\n    hj = gj && fj || gj;\nmodule.exports = hj.default || hj;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}","/** @license React v0.13.1\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar c = null,\n    f = !1,\n    h = 3,\n    k = -1,\n    l = -1,\n    m = !1,\n    n = !1;\n\nfunction p() {\n  if (!m) {\n    var a = c.expirationTime;\n    n ? q() : n = !0;\n\n    _r(t, a);\n  }\n}\n\nfunction u() {\n  var a = c,\n      b = c.next;\n  if (c === b) c = null;else {\n    var d = c.previous;\n    c = d.next = b;\n    b.previous = d;\n  }\n  a.next = a.previous = null;\n  d = a.callback;\n  b = a.expirationTime;\n  a = a.priorityLevel;\n  var e = h,\n      Q = l;\n  h = a;\n  l = b;\n\n  try {\n    var g = d();\n  } finally {\n    h = e, l = Q;\n  }\n\n  if (\"function\" === typeof g) if (g = {\n    callback: g,\n    priorityLevel: a,\n    expirationTime: b,\n    next: null,\n    previous: null\n  }, null === c) c = g.next = g.previous = g;else {\n    d = null;\n    a = c;\n\n    do {\n      if (a.expirationTime >= b) {\n        d = a;\n        break;\n      }\n\n      a = a.next;\n    } while (a !== c);\n\n    null === d ? d = c : d === c && (c = g, p());\n    b = d.previous;\n    b.next = d.previous = g;\n    g.next = d;\n    g.previous = b;\n  }\n}\n\nfunction v() {\n  if (-1 === k && null !== c && 1 === c.priorityLevel) {\n    m = !0;\n\n    try {\n      do {\n        u();\n      } while (null !== c && 1 === c.priorityLevel);\n    } finally {\n      m = !1, null !== c ? p() : n = !1;\n    }\n  }\n}\n\nfunction t(a) {\n  m = !0;\n  var b = f;\n  f = a;\n\n  try {\n    if (a) for (; null !== c;) {\n      var d = exports.unstable_now();\n\n      if (c.expirationTime <= d) {\n        do {\n          u();\n        } while (null !== c && c.expirationTime <= d);\n      } else break;\n    } else if (null !== c) {\n      do {\n        u();\n      } while (null !== c && !w());\n    }\n  } finally {\n    m = !1, f = b, null !== c ? p() : n = !1, v();\n  }\n}\n\nvar x = Date,\n    y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n    B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n    C,\n    D;\n\nfunction E(a) {\n  C = A(function (b) {\n    z(D);\n    a(b);\n  });\n  D = y(function () {\n    B(C);\n    a(exports.unstable_now());\n  }, 100);\n}\n\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var F = performance;\n\n  exports.unstable_now = function () {\n    return F.now();\n  };\n} else exports.unstable_now = function () {\n  return x.now();\n};\n\nvar _r,\n    q,\n    w,\n    G = null;\n\n\"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\nif (G && G._schedMock) {\n  var H = G._schedMock;\n  _r = H[0];\n  q = H[1];\n  w = H[2];\n  exports.unstable_now = H[3];\n} else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n  var I = null,\n      J = function J(a) {\n    if (null !== I) try {\n      I(a);\n    } finally {\n      I = null;\n    }\n  };\n\n  _r = function r(a) {\n    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));\n  };\n\n  q = function q() {\n    I = null;\n  };\n\n  w = function w() {\n    return !1;\n  };\n} else {\n  \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n  var K = null,\n      L = !1,\n      M = -1,\n      N = !1,\n      O = !1,\n      P = 0,\n      R = 33,\n      S = 33;\n\n  w = function w() {\n    return P <= exports.unstable_now();\n  };\n\n  var T = new MessageChannel(),\n      U = T.port2;\n\n  T.port1.onmessage = function () {\n    L = !1;\n    var a = K,\n        b = M;\n    K = null;\n    M = -1;\n    var d = exports.unstable_now(),\n        e = !1;\n    if (0 >= P - d) if (-1 !== b && b <= d) e = !0;else {\n      N || (N = !0, E(V));\n      K = a;\n      M = b;\n      return;\n    }\n\n    if (null !== a) {\n      O = !0;\n\n      try {\n        a(e);\n      } finally {\n        O = !1;\n      }\n    }\n  };\n\n  var V = function V(a) {\n    if (null !== K) {\n      E(V);\n      var b = a - P + S;\n      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n      P = a + S;\n      L || (L = !0, U.postMessage(void 0));\n    } else N = !1;\n  };\n\n  _r = function _r(a, b) {\n    K = a;\n    M = b;\n    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n  };\n\n  q = function q() {\n    K = null;\n    L = !1;\n    M = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_NormalPriority = 3;\nexports.unstable_IdlePriority = 5;\nexports.unstable_LowPriority = 4;\n\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n\n    default:\n      a = 3;\n  }\n\n  var d = h,\n      e = k;\n  h = a;\n  k = exports.unstable_now();\n\n  try {\n    return b();\n  } finally {\n    h = d, k = e, v();\n  }\n};\n\nexports.unstable_scheduleCallback = function (a, b) {\n  var d = -1 !== k ? k : exports.unstable_now();\n  if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = d + b.timeout;else switch (h) {\n    case 1:\n      b = d + -1;\n      break;\n\n    case 2:\n      b = d + 250;\n      break;\n\n    case 5:\n      b = d + 1073741823;\n      break;\n\n    case 4:\n      b = d + 1E4;\n      break;\n\n    default:\n      b = d + 5E3;\n  }\n  a = {\n    callback: a,\n    priorityLevel: h,\n    expirationTime: b,\n    next: null,\n    previous: null\n  };\n  if (null === c) c = a.next = a.previous = a, p();else {\n    d = null;\n    var e = c;\n\n    do {\n      if (e.expirationTime > b) {\n        d = e;\n        break;\n      }\n\n      e = e.next;\n    } while (e !== c);\n\n    null === d ? d = c : d === c && (c = a, p());\n    b = d.previous;\n    b.next = d.previous = a;\n    a.next = d;\n    a.previous = b;\n  }\n  return a;\n};\n\nexports.unstable_cancelCallback = function (a) {\n  var b = a.next;\n\n  if (null !== b) {\n    if (b === a) c = null;else {\n      a === c && (c = b);\n      var d = a.previous;\n      d.next = b;\n      b.previous = d;\n    }\n    a.next = a.previous = null;\n  }\n};\n\nexports.unstable_wrapCallback = function (a) {\n  var b = h;\n  return function () {\n    var d = h,\n        e = k;\n    h = b;\n    k = exports.unstable_now();\n\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      h = d, k = e, v();\n    }\n  };\n};\n\nexports.unstable_getCurrentPriorityLevel = function () {\n  return h;\n};\n\nexports.unstable_shouldYield = function () {\n  return !f && (null !== c && c.expirationTime < l || w());\n};\n\nexports.unstable_continueExecution = function () {\n  null !== c && p();\n};\n\nexports.unstable_pauseExecution = function () {};\n\nexports.unstable_getFirstCallbackNode = function () {\n  return c;\n};","// Main parser class\n'use strict';\n\nvar utils = require('./common/utils');\n\nvar helpers = require('./helpers');\n\nvar Renderer = require('./renderer');\n\nvar ParserCore = require('./parser_core');\n\nvar ParserBlock = require('./parser_block');\n\nvar ParserInline = require('./parser_inline');\n\nvar LinkifyIt = require('linkify-it');\n\nvar mdurl = require('mdurl');\n\nvar punycode = require('punycode');\n\nvar config = {\n  'default': require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n}; ////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) ? true : false : true;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:'];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  }\n\n  return mdurl.decode(mdurl.format(parsed));\n}\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\n\n\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n\n  this.inline = new ParserInline();\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.block = new ParserBlock();\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.core = new ParserCore();\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n\n  this.renderer = new Renderer();\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n\n  this.linkify = new LinkifyIt();\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n\n  this.validateLink = validateLink;\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n\n  this.normalizeLink = normalizeLink;\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n\n  this.normalizeLinkText = normalizeLinkText; // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n\n  this.utils = utils;\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n\n  this.helpers = utils.assign({}, helpers);\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) {\n    this.set(options);\n  }\n}\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\n\n\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you with - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\n\n\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this,\n      presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n\n    if (!presets) {\n      throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name');\n    }\n  }\n\n  if (!presets) {\n    throw new Error('Wrong `markdown-it` preset, can\\'t be empty');\n  }\n\n  if (presets.options) {\n    self.set(presets.options);\n  }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\n\n\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.enable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\n\n\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.disable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\n\n\nMarkdownIt.prototype.use = function (plugin\n/*, params, ... */\n) {\n  var args = [this].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and returns list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\n\n\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\n\n\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\n\n\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\n\n\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\nmodule.exports = MarkdownIt;","'use strict';\n\nvar encodeCache = {}; // Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\n\nfunction getEncodeCache(exclude) {\n  var i,\n      ch,\n      cache = encodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n} // Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\n\n\nfunction encode(string, exclude, keepEscaped) {\n  var i,\n      l,\n      code,\n      nextCode,\n      cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25\n    /* % */\n    && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\nmodule.exports = encode;","'use strict';\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i,\n      ch,\n      cache = decodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n} // Decode percent-encoded string.\n//\n\n\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    var i,\n        l,\n        b1,\n        b2,\n        b3,\n        b4,\n        chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && i + 3 < l) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = b1 << 6 & 0x7C0 | b2 & 0x3F;\n\n          if (chr < 0x80) {\n            result += \"\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && i + 6 < l) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = b1 << 12 & 0xF000 | b2 << 6 & 0xFC0 | b3 & 0x3F;\n\n          if (chr < 0x800 || chr >= 0xD800 && chr <= 0xDFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && i + 9 < l) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = b1 << 18 & 0x1C0000 | b2 << 12 & 0x3F000 | b3 << 6 & 0xFC0 | b4 & 0x3F;\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += \"\\uFFFD\";\n    }\n\n    return result;\n  });\n}\n\ndecode.defaultChars = ';/?:@&=+$,#';\ndecode.componentChars = '';\nmodule.exports = decode;","'use strict';\n\nmodule.exports = function format(url) {\n  var result = '';\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n  return result;\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'; //\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n} // Reference: RFC 3986, RFC 1808, RFC 2396\n// define these here so at least they only have to be\n// compiled once on the first module load.\n\n\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n    // Special case for a simple path URL\nsimplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n    // RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n    // RFC 2396: characters not allowed for various reasons.\nunwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\n/* eslint-disable no-script-url */\n// protocols that never have a hostname.\nhostlessProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that always contain a // bit.\nslashedProtocol = {\n  'http': true,\n  'https': true,\n  'ftp': true,\n  'gopher': true,\n  'file': true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n};\n/* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) {\n    return url;\n  }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  var i,\n      l,\n      lowerProto,\n      hec,\n      slashes,\n      rest = url; // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n\n    if (simplePath) {\n      this.pathname = simplePath[1];\n\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  } // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n\n\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n\n\n    var auth, atSign;\n\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    } // Now we have a portion which is definitely the auth.\n    // Pull that off.\n\n\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    } // the host is the remaining to the left of the first non-host char\n\n\n    hostEnd = -1;\n\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // if we still have not hit it, then the entire thing is a host.\n\n\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') {\n      hostEnd--;\n    }\n\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd); // pull out port.\n\n    this.parseHost(host); // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n\n    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.\n\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n\n        if (!part) {\n          continue;\n        }\n\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          } // we test again with ASCII char only\n\n\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } // strip [ and ] from the hostname\n    // the host field still retains them, though\n\n\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  } // chop off from the tail first.\n\n\n  var hash = rest.indexOf('#');\n\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n\n  var qm = rest.indexOf('?');\n\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n\n  if (rest) {\n    this.pathname = rest;\n  }\n\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function (host) {\n  var port = portPattern.exec(host);\n\n  if (port) {\n    port = port[0];\n\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n\n    host = host.substr(0, host.length - port.length);\n  }\n\n  if (host) {\n    this.hostname = host;\n  }\n};\n\nmodule.exports = urlParse;","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc = require('./categories/Cc/regex');\nexports.Cf = require('./categories/Cf/regex');\nexports.P = require('./categories/P/regex');\nexports.Z = require('./categories/Z/regex');","module.exports = /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804\\uDCBD|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/;","// Just a shortcut for bulk export\n'use strict';\n\nexports.parseLinkLabel = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle = require('./parse_link_title');","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level,\n      found,\n      marker,\n      prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n\n    if (marker === 0x5D\n    /* ] */\n    ) {\n        level--;\n\n        if (level === 0) {\n          found = true;\n          break;\n        }\n      }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n\n    if (marker === 0x5B\n    /* [ */\n    ) {\n        if (prevPos === state.pos - 1) {\n          // increase level if we find text `[`, which is not a part of any token\n          level++;\n        } else if (disableNested) {\n          state.pos = oldPos;\n          return -1;\n        }\n      }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  } // restore old state\n\n\n  state.pos = oldPos;\n  return labelEnd;\n};","// Parse link destination\n//\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code,\n      level,\n      lines = 0,\n      start = pos,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (str.charCodeAt(pos) === 0x3C\n  /* < */\n  ) {\n      pos++;\n\n      while (pos < max) {\n        code = str.charCodeAt(pos);\n\n        if (code === 0x0A\n        /* \\n */\n        || isSpace(code)) {\n          return result;\n        }\n\n        if (code === 0x3E\n        /* > */\n        ) {\n            result.pos = pos + 1;\n            result.str = unescapeAll(str.slice(start + 1, pos));\n            result.ok = true;\n            return result;\n          }\n\n        if (code === 0x5C\n        /* \\ */\n        && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n\n        pos++;\n      } // no closing '>'\n\n\n      return result;\n    } // this should be ... } else { ... branch\n\n\n  level = 0;\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) {\n      break;\n    } // ascii control characters\n\n\n    if (code < 0x20 || code === 0x7F) {\n      break;\n    }\n\n    if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28\n    /* ( */\n    ) {\n        level++;\n      }\n\n    if (code === 0x29\n    /* ) */\n    ) {\n        if (level === 0) {\n          break;\n        }\n\n        level--;\n      }\n\n    pos++;\n  }\n\n  if (start === pos) {\n    return result;\n  }\n\n  if (level !== 0) {\n    return result;\n  }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};","// Parse link title\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (pos >= max) {\n    return result;\n  }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22\n  /* \" */\n  && marker !== 0x27\n  /* ' */\n  && marker !== 0x28\n  /* ( */\n  ) {\n      return result;\n    }\n\n  pos++; // if opening marker is \"(\", switch it to closing marker \")\"\n\n  if (marker === 0x28) {\n    marker = 0x29;\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos++;\n\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\nvar assign = require('./common/utils').assign;\n\nvar unescapeAll = require('./common/utils').unescapeAll;\n\nvar escapeHtml = require('./common/utils').escapeHtml; ////////////////////////////////////////////////////////////////////////////////\n\n\nvar default_rules = {};\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<code' + slf.renderAttrs(token) + '>' + escapeHtml(tokens[idx].content) + '</code>';\n};\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<pre' + slf.renderAttrs(token) + '><code>' + escapeHtml(tokens[idx].content) + '</code></pre>\\n';\n};\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted,\n      i,\n      tmpAttrs,\n      tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  } // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n\n\n  if (info) {\n    i = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    } // Fake token just to render attributes\n\n\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n    return '<pre><code' + slf.renderAttrs(tmpToken) + '>' + highlighted + '</code></pre>\\n';\n  }\n\n  return '<pre><code' + slf.renderAttrs(token) + '>' + highlighted + '</code></pre>\\n';\n};\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx]; // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] = slf.renderInlineAsText(token.children, options, env);\n  return slf.renderToken(tokens, idx, options);\n};\n\ndefault_rules.hardbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\n\ndefault_rules.softbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n};\n\ndefault_rules.text = function (tokens, idx\n/*, options, env */\n) {\n  return escapeHtml(tokens[idx].content);\n};\n\ndefault_rules.html_block = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n\ndefault_rules.html_inline = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\n\n\nfunction Renderer() {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\n\n\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) {\n    return '';\n  }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\n\n\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx]; // Tight list paragraphs\n\n  if (token.hidden) {\n    return '';\n  } // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n\n\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  } // Add token name, e.g. `<img`\n\n\n  result += (token.nesting === -1 ? '</' : '<') + token.tag; // Encode attributes, e.g. `<img src=\"foo\"`\n\n  result += this.renderAttrs(token); // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  } // Check if we need to add a newline after this tag\n\n\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n  return result;\n};\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\n\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\n\n\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\n\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var i,\n      len,\n      type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [['normalize', require('./rules_core/normalize')], ['block', require('./rules_core/block')], ['inline', require('./rules_core/inline')], ['linkify', require('./rules_core/linkify')], ['replacements', require('./rules_core/replacements')], ['smartquotes', require('./rules_core/smartquotes')]];\n/**\n * new Core()\n **/\n\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\n\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\nmodule.exports = Core;","// Normalize input string\n'use strict';\n\nvar NEWLINES_RE = /\\r[\\n\\u0085]?|[\\u2424\\u2028\\u0085]/g;\nvar NULL_RE = /\\u0000/g;\n\nmodule.exports = function inline(state) {\n  var str; // Normalize newlines\n\n  str = state.src.replace(NEWLINES_RE, '\\n'); // Replace NULL characters\n\n  str = str.replace(NULL_RE, \"\\uFFFD\");\n  state.src = str;\n};","'use strict';\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token = new state.Token('inline', '', 0);\n    token.content = state.src;\n    token.map = [0, 1];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens,\n      tok,\n      i,\n      l; // Parse inlines\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\nmodule.exports = function linkify(state) {\n  var i,\n      j,\n      l,\n      tokens,\n      token,\n      currentToken,\n      nodes,\n      ln,\n      text,\n      pos,\n      lastPos,\n      level,\n      htmlLinkLevel,\n      url,\n      fullUrl,\n      urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) {\n    return;\n  }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' || !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n    htmlLinkLevel = 0; // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i]; // Skip content of markdown links\n\n      if (currentToken.type === 'link_close') {\n        i--;\n\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n\n        continue;\n      } // Skip content of html tag links\n\n\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n\n      if (htmlLinkLevel > 0) {\n        continue;\n      }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        text = currentToken.content;\n        links = state.md.linkify.match(text); // Now split string to nodes\n\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n\n          if (!state.md.validateLink(fullUrl)) {\n            continue;\n          }\n\n          urlText = links[ln].text; // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level = level;\n            nodes.push(token);\n          }\n\n          token = new state.Token('link_open', 'a', 1);\n          token.attrs = [['href', fullUrl]];\n          token.level = level++;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          token = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level = level;\n          nodes.push(token);\n          token = new state.Token('link_close', 'a', -1);\n          token.level = --level;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          lastPos = links[ln].lastIndex;\n        }\n\n        if (lastPos < text.length) {\n          token = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level = level;\n          nodes.push(token);\n        } // replace current node\n\n\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};","// Simple typographyc replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict'; // TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/; // Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\n\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content.replace(/\\+-/g, '±') // .., ..., ....... -> …\n        // but ?..... & !..... -> ?.. & !..\n        .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',') // em-dash\n        .replace(/(^|[^-])---([^-]|$)/mg, \"$1\\u2014$2\") // en-dash\n        .replace(/(^|\\s)--(\\s|$)/mg, \"$1\\u2013$2\").replace(/(^|[^-\\s])--([^-\\s]|$)/mg, \"$1\\u2013$2\");\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') {\n      continue;\n    }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n  }\n};","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = \"\\u2019\";\n/* ’ */\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) {\n        break;\n      }\n    }\n\n    stack.length = j + 1;\n\n    if (token.type !== 'text') {\n      continue;\n    }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n    /*eslint no-labels:0,block-scoped-var:0*/\n\n    OUTER: while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n\n      if (!t) {\n        break;\n      }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = t[0] === \"'\"; // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n\n          if (tokens[j].type !== 'text') continue;\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      } // Find next character,\n      // default to space if it's the end of the line\n      //\n\n\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n\n          if (tokens[j].type !== 'text') continue;\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22\n      /* \" */\n      && t[0] === '\"') {\n        if (lastChar >= 0x30\n        /* 0 */\n        && lastChar <= 0x39\n        /* 9 */\n        ) {\n            // special case: 1\"\" - count first quote as an inch\n            canClose = canOpen = false;\n          }\n      }\n\n      if (canOpen && canClose) {\n        // treat this as the middle of the word\n        canOpen = false;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n\n          if (stack[j].level < thisLevel) {\n            break;\n          }\n\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            } // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n\n\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, openQuote);\n            pos += closeQuote.length - 1;\n\n            if (item.token === i) {\n              pos += openQuote.length - 1;\n            }\n\n            text = token.content;\n            max = text.length;\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n} // re-export Token class to use in core rules\n\n\nStateCore.prototype.Token = Token;\nmodule.exports = StateCore;","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [// First 2 params - rule name & source. Secondary array - list of rules,\n// which can be terminated by this one.\n['table', require('./rules_block/table'), ['paragraph', 'reference']], ['code', require('./rules_block/code')], ['fence', require('./rules_block/fence'), ['paragraph', 'reference', 'blockquote', 'list']], ['blockquote', require('./rules_block/blockquote'), ['paragraph', 'reference', 'blockquote', 'list']], ['hr', require('./rules_block/hr'), ['paragraph', 'reference', 'blockquote', 'list']], ['list', require('./rules_block/list'), ['paragraph', 'reference', 'blockquote']], ['reference', require('./rules_block/reference')], ['heading', require('./rules_block/heading'), ['paragraph', 'reference', 'blockquote']], ['lheading', require('./rules_block/lheading')], ['html_block', require('./rules_block/html_block'), ['paragraph', 'reference', 'blockquote']], ['paragraph', require('./rules_block/paragraph')]];\n/**\n * new ParserBlock()\n **/\n\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], {\n      alt: (_rules[i][2] || []).slice()\n    });\n  }\n} // Generate tokens for input range\n//\n\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok,\n      i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n\n    if (line >= endLine) {\n      break;\n    } // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n\n\n    if (state.sCount[line] < state.blkIndent) {\n      break;\n    } // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n\n\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    } // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n\n      if (ok) {\n        break;\n      }\n    } // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n\n\n    state.tight = !hasEmptyLines; // paragraph might \"eat\" one newline after it in nested lists\n\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\n\n\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) {\n    return;\n  }\n\n  state = new this.State(src, md, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\nParserBlock.prototype.State = require('./rules_block/state_block');\nmodule.exports = ParserBlock;","// GFM table, non-standard\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n  ch = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60\n    /* ` */\n    ) {\n        if (backTicked) {\n          // make \\` close code sequence, but not open it;\n          // the reason is: `\\` is correct code block\n          backTicked = false;\n          lastBackTick = pos;\n        } else if (escapes % 2 === 0) {\n          backTicked = true;\n          lastBackTick = pos;\n        }\n      } else if (ch === 0x7c\n    /* | */\n    && escapes % 2 === 0 && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    }\n\n    if (ch === 0x5c\n    /* \\ */\n    ) {\n        escapes++;\n      } else {\n      escapes = 0;\n    }\n\n    pos++; // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n  return result;\n}\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token, aligns, t, tableLines, tbodyLines; // should have at least two lines\n\n  if (startLine + 2 > endLine) {\n    return false;\n  }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  } // if it's indented more than 3 spaces, it should be a code block\n\n\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  } // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch !== 0x7C\n  /* | */\n  && ch !== 0x2D\n  /* - */\n  && ch !== 0x3A\n  /* : */\n  ) {\n      return false;\n    }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C\n    /* | */\n    && ch !== 0x2D\n    /* - */\n    && ch !== 0x3A\n    /* : */\n    && !isSpace(ch)) {\n      return false;\n    }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n  columns = lineText.split('|');\n  aligns = [];\n\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) {\n      return false;\n    }\n\n    if (t.charCodeAt(t.length - 1) === 0x3A\n    /* : */\n    ) {\n        aligns.push(t.charCodeAt(0) === 0x3A\n        /* : */\n        ? 'center' : 'right');\n      } else if (t.charCodeAt(0) === 0x3A\n    /* : */\n    ) {\n        aligns.push('left');\n      } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n\n  if (lineText.indexOf('|') === -1) {\n    return false;\n  }\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, '')); // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n\n  columnCount = columns.length;\n\n  if (columnCount > aligns.length) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  token = state.push('table_open', 'table', 1);\n  token.map = tableLines = [startLine, 0];\n  token = state.push('thead_open', 'thead', 1);\n  token.map = [startLine, startLine + 1];\n  token = state.push('tr_open', 'tr', 1);\n  token.map = [startLine, startLine + 1];\n\n  for (i = 0; i < columns.length; i++) {\n    token = state.push('th_open', 'th', 1);\n    token.map = [startLine, startLine + 1];\n\n    if (aligns[i]) {\n      token.attrs = [['style', 'text-align:' + aligns[i]]];\n    }\n\n    token = state.push('inline', '', 0);\n    token.content = columns[i].trim();\n    token.map = [startLine, startLine + 1];\n    token.children = [];\n    token = state.push('th_close', 'th', -1);\n  }\n\n  token = state.push('tr_close', 'tr', -1);\n  token = state.push('thead_close', 'thead', -1);\n  token = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [startLine + 2, 0];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    }\n\n    lineText = getLine(state, nextLine).trim();\n\n    if (lineText.indexOf('|') === -1) {\n      break;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    }\n\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n    token = state.push('tr_open', 'tr', 1);\n\n    for (i = 0; i < columnCount; i++) {\n      token = state.push('td_open', 'td', 1);\n\n      if (aligns[i]) {\n        token.attrs = [['style', 'text-align:' + aligns[i]]];\n      }\n\n      token = state.push('inline', '', 0);\n      token.content = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n      token = state.push('td_close', 'td', -1);\n    }\n\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};","// Code block (4 spaces padded)\n'use strict';\n\nmodule.exports = function code(state, startLine, endLine\n/*, silent*/\n) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) {\n    return false;\n  }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n\n    break;\n  }\n\n  state.line = last;\n  token = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map = [startLine, state.line];\n  return true;\n};","// fences (``` lang, ~~~ lang)\n'use strict';\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker,\n      len,\n      params,\n      nextLine,\n      mem,\n      token,\n      markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (pos + 3 > max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E\n  /* ~ */\n  && marker !== 0x60\n  /* ` */\n  ) {\n      return false;\n    } // scan marker length\n\n\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n  len = pos - mem;\n\n  if (len < 3) {\n    return false;\n  }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n    return false;\n  } // Since start is found, we can report success here in validation mode\n\n\n  if (silent) {\n    return true;\n  } // search end of block\n\n\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) {\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker); // closing code fence must be at least as long as the opening one\n\n    if (pos - mem < len) {\n      continue;\n    } // make sure tail has spaces only\n\n\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) {\n      continue;\n    }\n\n    haveEndMarker = true; // found!\n\n    break;\n  } // If a fence has heading spaces, they should be removed from its inner block\n\n\n  len = state.sCount[startLine];\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  token = state.push('fence', 'code', 0);\n  token.info = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup = markup;\n  token.map = [startLine, state.line];\n  return true;\n};","// Block quotes\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      wasOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  } // check the block quote marker\n\n\n  if (state.src.charCodeAt(pos++) !== 0x3E\n  /* > */\n  ) {\n      return false;\n    } // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n\n\n  if (silent) {\n    return true;\n  } // skip spaces after \">\" and re-calculate offset\n\n\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]); // skip one optional space after '>'\n\n  if (state.src.charCodeAt(pos) === 0x20\n  /* space */\n  ) {\n      // ' >   test '\n      //     ^ -- position start of line here:\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n      spaceAfterMarker = true;\n    } else if (state.src.charCodeAt(pos) === 0x09\n  /* tab */\n  ) {\n      spaceAfterMarker = true;\n\n      if ((state.bsCount[startLine] + offset) % 4 === 3) {\n        // '  >\\t  test '\n        //       ^ -- position start of line here (tab has width===1)\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n      } else {\n        // ' >\\t  test '\n        //    ^ -- position start of line here + shift bsCount slightly\n        //         to make extra space appear\n        adjustTab = true;\n      }\n    } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [state.bMarks[startLine]];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [state.bsCount[startLine]];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n  lastLineEmpty = pos >= max;\n  oldSCount = [state.sCount[startLine]];\n  state.sCount[startLine] = offset - initial;\n  oldTShift = [state.tShift[startLine]];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  wasOutdented = false; // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    if (state.sCount[nextLine] < state.blkIndent) wasOutdented = true;\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E\n    /* > */\n    && !wasOutdented) {\n      // This line is inside the blockquote.\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]); // skip one optional space after '>'\n\n      if (state.src.charCodeAt(pos) === 0x20\n      /* space */\n      ) {\n          // ' >   test '\n          //     ^ -- position start of line here:\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n          spaceAfterMarker = true;\n        } else if (state.src.charCodeAt(pos) === 0x09\n      /* tab */\n      ) {\n          spaceAfterMarker = true;\n\n          if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n            // '  >\\t  test '\n            //       ^ -- position start of line here (tab has width===1)\n            pos++;\n            initial++;\n            offset++;\n            adjustTab = false;\n          } else {\n            // ' >\\t  test '\n            //    ^ -- position start of line here + shift bsCount slightly\n            //         to make extra space appear\n            adjustTab = true;\n          }\n        } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    } // Case 2: line is not inside the blockquote, and the last line was empty.\n\n\n    if (lastLineEmpty) {\n      break;\n    } // Case 3: another tag found.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]); // A negative indentation means that this is a paragraph continuation\n    //\n\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n  token = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map = lines = [startLine, 0];\n  state.md.block.tokenize(state, startLine, nextLine);\n  token = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line; // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n\n  state.blkIndent = oldIndent;\n  return true;\n};","// Horizontal rule\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker,\n      cnt,\n      ch,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos++); // Check hr marker\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x5F\n  /* _ */\n  ) {\n      return false;\n    } // markers can be mixed with spaces, but there should be at least 3 of them\n\n\n  cnt = 1;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch !== marker && !isSpace(ch)) {\n      return false;\n    }\n\n    if (ch === marker) {\n      cnt++;\n    }\n  }\n\n  if (cnt < 3) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('hr', 'hr', 0);\n  token.map = [startLine, state.line];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n  return true;\n};","// Lists\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace; // Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n  marker = state.src.charCodeAt(pos++); // Check bullet\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x2B\n  /* + */\n  ) {\n      return -1;\n    }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n} // Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine]; // List marker should have at least 2 chars (digit + dot)\n\n  if (pos + 1 >= max) {\n    return -1;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30\n  /* 0 */\n  || ch > 0x39\n  /* 9 */\n  ) {\n      return -1;\n    }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) {\n      return -1;\n    }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30\n    /* 0 */\n    && ch <= 0x39\n    /* 9 */\n    ) {\n        // List marker should have no more than 9 digits\n        // (prevents integer overflow in browsers)\n        if (pos - start >= 10) {\n          return -1;\n        }\n\n        continue;\n      } // found valid marker\n\n\n    if (ch === 0x29\n    /* ) */\n    || ch === 0x2e\n    /* . */\n    ) {\n        break;\n      }\n\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i,\n      l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldIndent,\n      oldLIndent,\n      oldParentType,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  } // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n\n\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  } // Detect list type and position after marker\n\n\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1)); // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  } // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n\n\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  } // We should terminate list on style change. Remember first one to compare.\n\n\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1); // For validation mode we can terminate immediately\n\n  if (silent) {\n    return true;\n  } // Start list\n\n\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token = state.push('ordered_list_open', 'ol', 1);\n\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]];\n    }\n  } else {\n    token = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map = listLines = [startLine, 0];\n  token.markup = String.fromCharCode(markerCharCode); //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    } // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n\n\n    if (indentAfterMarker > 4) {\n      indentAfterMarker = 1;\n    } // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n\n\n    indent = initial + indentAfterMarker; // Run subparser & write tokens\n\n    token = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map = itemLines = [startLine, 0];\n    oldIndent = state.blkIndent;\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldLIndent = state.sCount[startLine];\n    state.blkIndent = indent;\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    } // If any of list item is tight, mark list as tight\n\n\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    } // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n\n\n    prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1);\n    state.blkIndent = oldIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldLIndent;\n    state.tight = oldTight;\n    token = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) {\n      break;\n    } //\n    // Try to check if list is terminated or continued.\n    //\n\n\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    } // fail if terminating block found\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    } // fail if list has another type\n\n\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n      break;\n    }\n  } // Finalize list\n\n\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n\n  token.markup = String.fromCharCode(markerCharCode);\n  listLines[1] = nextLine;\n  state.line = nextLine;\n  state.parentType = oldParentType; // mark paragraphs tight if needed\n\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};","'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    } // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n\n\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D\n    /* ] */\n    && state.src.charCodeAt(pos - 1) !== 0x5C\n    /* \\ */\n    ) {\n        if (pos + 1 === max) {\n          return false;\n        }\n\n        if (state.src.charCodeAt(pos + 1) !== 0x3A\n        /* : */\n        ) {\n            return false;\n          }\n\n        break;\n      }\n  }\n\n  endLine = state.lineMax; // jump line-by-line until empty one or EOF\n\n  terminatorRules = state.md.block.ruler.getRules('reference');\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x5B\n    /* [ */\n    ) {\n        return false;\n      } else if (ch === 0x5D\n    /* ] */\n    ) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x0A\n    /* \\n */\n    ) {\n        lines++;\n      } else if (ch === 0x5C\n    /* \\ */\n    ) {\n        pos++;\n\n        if (pos < max && str.charCodeAt(pos) === 0x0A) {\n          lines++;\n        }\n      }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A\n  /* : */\n  ) {\n      return false;\n    } // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n\n\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n\n  if (!res.ok) {\n    return false;\n  }\n\n  href = state.md.normalizeLink(res.str);\n\n  if (!state.md.validateLink(href)) {\n    return false;\n  }\n\n  pos = res.pos;\n  lines += res.lines; // save cursor state, we could require to rollback later\n\n  destEndPos = pos;\n  destEndLineNo = lines; // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n\n  start = pos;\n\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  } // skip trailing spaces until the rest of the line\n\n\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n\n        if (!isSpace(ch)) {\n          break;\n        }\n\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  } // Reference can not terminate anything. This check is for safety only.\n\n  /*istanbul ignore if*/\n\n\n  if (silent) {\n    return true;\n  }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = {\n      title: title,\n      href: href\n    };\n  }\n\n  state.parentType = oldParentType;\n  state.line = startLine + lines + 1;\n  return true;\n};","// heading (#, ##, ...)\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch,\n      level,\n      tmp,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23\n  /* # */\n  || pos >= max) {\n    return false;\n  } // count heading level\n\n\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n\n  while (ch === 0x23\n  /* # */\n  && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || pos < max && !isSpace(ch)) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  } // Let's cut tails like '    ###  ' from the end of string\n\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = state.src.slice(pos, max).trim();\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n  return true;\n};","// lheading (---, ===)\n'use strict';\n\nmodule.exports = function lheading(state, startLine, endLine\n/*, silent*/\n) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      pos,\n      max,\n      level,\n      marker,\n      nextLine = startLine + 1,\n      oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'); // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n  // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } //\n    // Check for underline in setext header\n    //\n\n\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D\n        /* - */\n        || marker === 0x3D\n        /* = */\n        ) {\n            pos = state.skipChars(pos, marker);\n            pos = state.skipSpaces(pos);\n\n            if (pos >= max) {\n              level = marker === 0x3D\n              /* = */\n              ? 1 : 2;\n              break;\n            }\n          }\n      }\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = String.fromCharCode(marker);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line - 1];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = String.fromCharCode(marker);\n  state.parentType = oldParentType;\n  return true;\n};","// HTML block\n'use strict';\n\nvar block_names = require('../common/html_blocks');\n\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE; // An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\n\n\nvar HTML_SEQUENCES = [[/^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true], [/^<!--/, /-->/, true], [/^<\\?/, /\\?>/, true], [/^<![A-Z]/, />/, true], [/^<!\\[CDATA\\[/, /\\]\\]>/, true], [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true], [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'), /^$/, false]];\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i,\n      nextLine,\n      token,\n      lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (!state.md.options.html) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) {\n      break;\n    }\n  }\n\n  if (i === HTML_SEQUENCES.length) {\n    return false;\n  }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1; // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) {\n        break;\n      }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) {\n          nextLine++;\n        }\n\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n  token = state.push('html_block', '', 0);\n  token.map = [startLine, nextLine];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n  return true;\n};","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n'use strict';\n\nmodule.exports = ['address', 'article', 'aside', 'base', 'basefont', 'blockquote', 'body', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dialog', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'iframe', 'legend', 'li', 'link', 'main', 'menu', 'menuitem', 'meta', 'nav', 'noframes', 'ol', 'optgroup', 'option', 'p', 'param', 'section', 'source', 'summary', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul'];","// Paragraph\n'use strict';\n\nmodule.exports = function paragraph(state, startLine\n/*, endLine*/\n) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine;\n  token = state.push('paragraph_open', 'p', 1);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('paragraph_close', 'p', -1);\n  state.parentType = oldParentType;\n  return true;\n};","// Parser state class\n'use strict';\n\nvar Token = require('../token');\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n  this.src = src; // link to parser instance\n\n  this.md = md;\n  this.env = env; //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n  this.bMarks = []; // line begin offsets for fast jumps\n\n  this.eMarks = []; // line end offsets for fast jumps\n\n  this.tShift = []; // offsets of the first non-space characters (tabs not expanded)\n\n  this.sCount = []; // indents for each line (tabs expanded)\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n\n  this.bsCount = []; // block parser variables\n\n  this.blkIndent = 0; // required block content indent\n  // (for example, if we are in list)\n\n  this.line = 0; // line index in src\n\n  this.lineMax = 0; // lines count\n\n  this.tight = false; // loose/tight mode for lists\n\n  this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n\n  this.parentType = 'root';\n  this.level = 0; // renderer\n\n  this.result = ''; // Create caches\n  // Generate markers.\n\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) {\n        pos++;\n      }\n\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  } // Push fake entry to simplify cache bounds checks\n\n\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n} // Push new token to \"stream\".\n//\n\n\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) {\n    this.level--;\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    this.level++;\n  }\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n\n  return from;\n}; // Skip spaces from given position.\n\n\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip spaces from given position in reverse.\n\n\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // Skip char codes from given position\n\n\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip char codes reverse from given position - 1\n\n\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // cut lines range from source.\n\n\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i,\n      lineIndent,\n      ch,\n      first,\n      last,\n      queue,\n      lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n}; // re-export Token class to use in block rules\n\n\nStateBlock.prototype.Token = Token;\nmodule.exports = StateBlock;","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\nvar Ruler = require('./ruler'); ////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\n\nvar _rules = [['text', require('./rules_inline/text')], ['newline', require('./rules_inline/newline')], ['escape', require('./rules_inline/escape')], ['backticks', require('./rules_inline/backticks')], ['strikethrough', require('./rules_inline/strikethrough').tokenize], ['emphasis', require('./rules_inline/emphasis').tokenize], ['link', require('./rules_inline/link')], ['image', require('./rules_inline/image')], ['autolink', require('./rules_inline/autolink')], ['html_inline', require('./rules_inline/html_inline')], ['entity', require('./rules_inline/entity')]];\nvar _rules2 = [['balance_pairs', require('./rules_inline/balance_pairs')], ['strikethrough', require('./rules_inline/strikethrough').postProcess], ['emphasis', require('./rules_inline/emphasis').postProcess], ['text_collapse', require('./rules_inline/text_collapse')]];\n/**\n * new ParserInline()\n **/\n\nfunction ParserInline() {\n  var i;\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n\n\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n} // Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\n\n\nParserInline.prototype.skipToken = function (state) {\n  var ok,\n      i,\n      pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) {\n    state.pos++;\n  }\n\n  cache[pos] = state.pos;\n}; // Generate tokens for input range\n//\n\n\nParserInline.prototype.tokenize = function (state) {\n  var ok,\n      i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n\n        if (ok) {\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) {\n        break;\n      }\n\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\n\n\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n  this.tokenize(state);\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\nmodule.exports = ParserInline;","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n'use strict'; // Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A\n    /* \\n */\n    :\n    case 0x21\n    /* ! */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) {\n    return false;\n  }\n\n  if (!silent) {\n    state.pending += state.src.slice(state.pos, pos);\n  }\n\n  state.pos = pos;\n  return true;\n}; // Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/","// Proceess '\\n'\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function newline(state, silent) {\n  var pmax,\n      max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A\n  /* \\n */\n  ) {\n      return false;\n    }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax; // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++; // skip heading spaces for next line\n\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  state.pos = pos;\n  return true;\n};","// Process escaped chars and hardbreaks\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) {\n  ESCAPED.push(0);\n}\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n  ESCAPED[ch.charCodeAt(0)] = 1;\n});\n\nmodule.exports = function escape(state, silent) {\n  var ch,\n      pos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C\n  /* \\ */\n  ) {\n      return false;\n    }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) {\n        state.pending += state.src[pos];\n      }\n\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++; // skip leading whitespaces from next line\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (!isSpace(ch)) {\n          break;\n        }\n\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) {\n    state.pending += '\\\\';\n  }\n\n  state.pos++;\n  return true;\n};","// Parse backticks\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start,\n      max,\n      marker,\n      matchStart,\n      matchEnd,\n      token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60\n  /* ` */\n  ) {\n      return false;\n    }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60\n  /* ` */\n  ) {\n    pos++;\n  }\n\n  marker = state.src.slice(start, pos);\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60\n    /* ` */\n    ) {\n      matchEnd++;\n    }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token = state.push('code_inline', 'code', 0);\n        token.markup = marker;\n        token.content = state.src.slice(pos, matchStart).replace(/[ \\n]+/g, ' ').trim();\n      }\n\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) {\n    state.pending += marker;\n  }\n\n  state.pos += marker.length;\n  return true;\n};","// Process [link](<to> \"stuff\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // might have found a valid shortcut link, disable reference parsing\n      parseReference = false; // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        }\n      } else {\n        title = '';\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          // parsing a valid shortcut link failed, fallback to reference\n          parseReference = true;\n        }\n\n      pos++;\n    }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n    token = state.push('link_open', 'a', 1);\n    token.attrs = attrs = [['href', href]];\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n\n    state.md.inline.tokenize(state);\n    token = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// Process ![image](<src> \"title\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21\n  /* ! */\n  ) {\n      return false;\n    }\n\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        }\n      } else {\n        title = '';\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          state.pos = oldPos;\n          return false;\n        }\n\n      pos++;\n    } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n    state.md.inline.parse(content, state.md, state.env, tokens = []);\n    token = state.push('image', 'img', 0);\n    token.attrs = attrs = [['src', href], ['alt', '']];\n    token.children = tokens;\n    token.content = content;\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// Process autolinks '<protocol:...>'\n'use strict';\n/*eslint max-len:0*/\n\nvar EMAIL_RE = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\nmodule.exports = function autolink(state, silent) {\n  var tail,\n      linkMatch,\n      emailMatch,\n      url,\n      fullUrl,\n      token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) {\n    return false;\n  }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};","// Process html tags\n'use strict';\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n\n  return lc >= 0x61\n  /* a */\n  && lc <= 0x7a\n  /* z */\n  ;\n}\n\nmodule.exports = function html_inline(state, silent) {\n  var ch,\n      match,\n      max,\n      token,\n      pos = state.pos;\n\n  if (!state.md.options.html) {\n    return false;\n  } // Check start\n\n\n  max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  || pos + 2 >= max) {\n    return false;\n  } // Quick fail on second char\n\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch !== 0x21\n  /* ! */\n  && ch !== 0x3F\n  /* ? */\n  && ch !== 0x2F\n  /* / */\n  && !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n\n  if (!match) {\n    return false;\n  }\n\n  if (!silent) {\n    token = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n\n  state.pos += match[0].length;\n  return true;\n};","// Process html entity - &#123;, &#xAF;, &quot;, ...\n'use strict';\n\nvar entities = require('../common/entities');\n\nvar has = require('../common/utils').has;\n\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\n\nvar fromCodePoint = require('../common/utils').fromCodePoint;\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\nvar NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\n\nmodule.exports = function entity(state, silent) {\n  var ch,\n      code,\n      match,\n      pos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26\n  /* & */\n  ) {\n      return false;\n    }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23\n    /* # */\n    ) {\n        match = state.src.slice(pos).match(DIGITAL_RE);\n\n        if (match) {\n          if (!silent) {\n            code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n            state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n          }\n\n          state.pos += match[0].length;\n          return true;\n        }\n      } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) {\n            state.pending += entities[match[1]];\n          }\n\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) {\n    state.pending += '&';\n  }\n\n  state.pos++;\n  return true;\n};","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\nmodule.exports = function link_pairs(state) {\n  var i,\n      j,\n      lastDelim,\n      currDelim,\n      delimiters = state.delimiters,\n      max = state.delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    lastDelim = delimiters[i];\n\n    if (!lastDelim.close) {\n      continue;\n    }\n\n    j = i - lastDelim.jump - 1;\n\n    while (j >= 0) {\n      currDelim = delimiters[j];\n\n      if (currDelim.open && currDelim.marker === lastDelim.marker && currDelim.end < 0 && currDelim.level === lastDelim.level) {\n        // typeofs are for backward compatibility with plugins\n        var odd_match = (currDelim.close || lastDelim.open) && typeof currDelim.length !== 'undefined' && typeof lastDelim.length !== 'undefined' && (currDelim.length + lastDelim.length) % 3 === 0;\n\n        if (!odd_match) {\n          lastDelim.jump = i - j;\n          lastDelim.open = false;\n          currDelim.end = i;\n          currDelim.jump = 0;\n          break;\n        }\n      }\n\n      j -= currDelim.jump + 1;\n    }\n  }\n};","// Merge adjacent text nodes into one, and re-calculate all token levels\n//\n'use strict';\n\nmodule.exports = function text_collapse(state) {\n  var curr,\n      last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels\n    level += tokens[curr].nesting;\n    tokens[curr].level = level;\n\n    if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) {\n        tokens[last] = tokens[curr];\n      }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};","// Inline parser state\n'use strict';\n\nvar Token = require('../token');\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n  this.cache = {}; // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n\n  this.delimiters = []; // Emphasis-like delimiters\n} // Flush pending text\n//\n\n\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n}; // Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\n\n\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n\n  if (nesting < 0) {\n    this.level--;\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    this.level++;\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  return token;\n}; // Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\n\n\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start,\n      lastChar,\n      nextChar,\n      count,\n      can_open,\n      can_close,\n      isLastWhiteSpace,\n      isLastPunctChar,\n      isNextWhiteSpace,\n      isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start); // treat beginning of the line as a whitespace\n\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) {\n    pos++;\n  }\n\n  count = pos - start; // treat end of the line as a whitespace\n\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open = left_flanking && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking || isNextPunctChar);\n  } else {\n    can_open = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    length: count\n  };\n}; // re-export Token class to use in block rules\n\n\nStateInline.prototype.Token = Token;\nmodule.exports = StateInline;","'use strict'; ////////////////////////////////////////////////////////////////////////////////\n// Helpers\n// Merge objects\n//\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n}\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nfunction isObject(obj) {\n  return _class(obj) === '[object Object]';\n}\n\nfunction isRegExp(obj) {\n  return _class(obj) === '[object RegExp]';\n}\n\nfunction isFunction(obj) {\n  return _class(obj) === '[object Function]';\n}\n\nfunction escapeRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp('^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i');\n      }\n\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp('^' + self.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'\n        // with code comments\n        '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' + self.re.src_port + self.re.src_host_terminator + self.re.src_path, 'i');\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') {\n          return 0;\n        }\n\n        if (pos >= 3 && text[pos - 3] === '/') {\n          return 0;\n        }\n\n        return tail.match(self.re.no_http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp('^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i');\n      }\n\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n\n      return 0;\n    }\n  }\n};\n/*eslint-disable max-len*/\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'; // DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\n\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n/*eslint-enable max-len*/\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__ = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n} // Schemas compiler. Build regexps.\n//\n\n\nfunction compile(self) {\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__); // Define dynamic patterns\n\n\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n\n  tlds.push(re.src_xn);\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) {\n    return tpl.replace('%TLDS%', re.src_tlds);\n  }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i'); //\n  // Compile each schema\n  //\n\n  var aliases = [];\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name]; // skip disabled methods\n\n    if (val === null) {\n      return;\n    }\n\n    var compiled = {\n      validate: null,\n      link: null\n    };\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  }); //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize;\n  }); //\n  // Fake record for guessed links\n  //\n\n  self.__compiled__[''] = {\n    validate: null,\n    normalize: createNormalizer()\n  }; //\n  // Build schema condition\n  //\n\n  var slist = Object.keys(self.__compiled__).filter(function (name) {\n    // Filter disabled & fake schemas\n    return name.length > 0 && self.__compiled__[name];\n  }).map(escapeRE).join('|'); // (?!_) cause 1.5x slowdown\n\n  self.re.schema_test = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.pretest = RegExp('(' + self.re.schema_test.source + ')|' + '(' + self.re.host_fuzzy_test.source + ')|' + '@', 'i'); //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\n\n\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end = self.__last_index__,\n      text = self.__text_cache__.slice(start, end);\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n\n\n  this.schema = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n\n  this.index = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n\n  this.raw = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n\n  this.text = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n\n  this.url = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\n\n\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options); // Cache last tested result. Used to skip repeating steps on next `match` call.\n\n  this.__index__ = -1;\n  this.__last_index__ = -1; // Next scan position\n\n  this.__schema__ = '';\n  this.__text_cache__ = '';\n  this.__schemas__ = assign({}, defaultSchemas, schemas);\n  this.__compiled__ = {};\n  this.__tlds__ = tlds_default;\n  this.__tlds_replaced__ = false;\n  this.re = {};\n  compile(this);\n}\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\n\n\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\n\n\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\n\n\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n\n  if (!text.length) {\n    return false;\n  }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos; // try to scan for link with schema - that's the most simple rule\n\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n\n      if (len) {\n        this.__schema__ = m[2];\n        this.__index__ = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = '';\n            this.__index__ = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length;\n        next = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ || shift === this.__index__ && next > this.__last_index__) {\n          this.__schema__ = 'mailto:';\n          this.__index__ = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\n\n\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\n\n\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\n\n\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0,\n      result = []; // Try to take previous element from cache, if .test() called before\n\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  } // Cut head if cache was used\n\n\n  var tail = shift ? text.slice(shift) : text; // Scan string until end reached\n\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\n\n\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [list];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list).sort().filter(function (el, idx, arr) {\n    return el !== arr[idx - 1];\n  }).reverse();\n  compile(this);\n  return this;\n};\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\n\n\nLinkifyIt.prototype.normalize = function normalize(match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n  if (!match.schema) {\n    match.url = 'http://' + match.url;\n  }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\n\n\nLinkifyIt.prototype.onCompile = function onCompile() {};\n\nmodule.exports = LinkifyIt;","'use strict';\n\nmodule.exports = function (opts) {\n  var re = {}; // Use direct extract instead of `regenerate` to reduse browserified size\n\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z = require('uc.micro/categories/Z/regex').source;\n  re.src_P = require('uc.micro/categories/P/regex').source; // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|'); // \\p{\\Z\\Cc} (white spaces + control)\n\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|'); // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n\n  var text_separators = \"[><\\uFF5C]\"; // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'; // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 = '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'; // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n  re.src_port = '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n  re.src_host_terminator = '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n  re.src_path = '(?:' + '[/?#]' + '(?:' + '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' + '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' + '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' + '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' + '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' + \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" + \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' + // allow `I'm_king` if no pair found\n  '\\\\.{2,3}[a-zA-Z0-9%/]|' + // github has ... in commit range links. Restrict to\n  // - english\n  // - percent-encoded\n  // - parts of file path\n  // until more examples found.\n  '\\\\.(?!' + re.src_ZCc + '|[.]).|' + (opts && opts['---'] ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n  : '\\\\-+|') + '\\\\,(?!' + re.src_ZCc + ').|' + // allow `,,,` in paths\n  '\\\\!(?!' + re.src_ZCc + '|[!]).|' + '\\\\?(?!' + re.src_ZCc + '|[?]).' + ')+' + '|\\\\/' + ')?';\n  re.src_email_name = '[\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]+';\n  re.src_xn = 'xn--[a-z0-9\\\\-]{1,59}'; // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root = // Allow letters & digits (http://test1)\n  '(?:' + re.src_xn + '|' + re.src_pseudo_letter + '{1,63}' + ')';\n  re.src_domain = '(?:' + re.src_xn + '|' + '(?:' + re.src_pseudo_letter + ')' + '|' + // don't allow `--` in domain names, because:\n  // - that can conflict with markdown &mdash; / &ndash;\n  // - nobody use those anyway\n  '(?:' + re.src_pseudo_letter + '(?:-(?!-)|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' + ')';\n  re.src_host = '(?:' + // Don't need IP check, because digits are already allowed in normal domain names\n  //   src_ip4 +\n  // '|' +\n  '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain\n  /*_root*/\n  + ')' + ')';\n  re.tpl_host_fuzzy = '(?:' + re.src_ip4 + '|' + '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' + ')';\n  re.tpl_host_no_ip_fuzzy = '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n  re.src_host_strict = re.src_host + re.src_host_terminator;\n  re.tpl_host_fuzzy_strict = re.tpl_host_fuzzy + re.src_host_terminator;\n  re.src_host_port_strict = re.src_host + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_fuzzy_strict = re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_no_ip_fuzzy_strict = re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator; ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n  // Rude test fuzzy links by host, for quick deny\n\n  re.tpl_host_fuzzy_test = 'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n  re.tpl_email_fuzzy = '(^|' + text_separators + '|\\\\(|' + re.src_ZCc + ')(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n  re.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n  re.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n  return re;\n};","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;\n\n(function (root) {\n  /** Detect free variables */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n  var freeModule = typeof module == 'object' && module && !module.nodeType && module;\n  var freeGlobal = typeof global == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n    root = freeGlobal;\n  }\n  /**\n   * The `punycode` object.\n   * @name punycode\n   * @type Object\n   */\n\n\n  var punycode,\n\n  /** Highest positive signed 32-bit float value */\n  maxInt = 2147483647,\n      // aka. 0x7FFFFFFF or 2^31-1\n\n  /** Bootstring parameters */\n  base = 36,\n      tMin = 1,\n      tMax = 26,\n      skew = 38,\n      damp = 700,\n      initialBias = 72,\n      initialN = 128,\n      // 0x80\n  delimiter = '-',\n      // '\\x2D'\n\n  /** Regular expressions */\n  regexPunycode = /^xn--/,\n      regexNonASCII = /[^\\x20-\\x7E]/,\n      // unprintable ASCII chars + non-ASCII chars\n  regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n      // RFC 3490 separators\n\n  /** Error messages */\n  errors = {\n    'overflow': 'Overflow: input needs wider integers to process',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'invalid-input': 'Invalid input'\n  },\n\n  /** Convenience shortcuts */\n  baseMinusTMin = base - tMin,\n      floor = Math.floor,\n      stringFromCharCode = String.fromCharCode,\n\n  /** Temporary variable */\n  key;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A generic error utility function.\n   * @private\n   * @param {String} type The error type.\n   * @returns {Error} Throws a `RangeError` with the applicable error message.\n   */\n\n  function error(type) {\n    throw new RangeError(errors[type]);\n  }\n  /**\n   * A generic `Array#map` utility function.\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function that gets called for every array\n   * item.\n   * @returns {Array} A new array of values returned by the callback function.\n   */\n\n\n  function map(array, fn) {\n    var length = array.length;\n    var result = [];\n\n    while (length--) {\n      result[length] = fn(array[length]);\n    }\n\n    return result;\n  }\n  /**\n   * A simple `Array#map`-like wrapper to work with domain name strings or email\n   * addresses.\n   * @private\n   * @param {String} domain The domain name or email address.\n   * @param {Function} callback The function that gets called for every\n   * character.\n   * @returns {Array} A new string of characters returned by the callback\n   * function.\n   */\n\n\n  function mapDomain(string, fn) {\n    var parts = string.split('@');\n    var result = '';\n\n    if (parts.length > 1) {\n      // In email addresses, only the domain name should be punycoded. Leave\n      // the local part (i.e. everything up to `@`) intact.\n      result = parts[0] + '@';\n      string = parts[1];\n    } // Avoid `split(regex)` for IE8 compatibility. See #17.\n\n\n    string = string.replace(regexSeparators, '\\x2E');\n    var labels = string.split('.');\n    var encoded = map(labels, fn).join('.');\n    return result + encoded;\n  }\n  /**\n   * Creates an array containing the numeric code points of each Unicode\n   * character in the string. While JavaScript uses UCS-2 internally,\n   * this function will convert a pair of surrogate halves (each of which\n   * UCS-2 exposes as separate characters) into a single code point,\n   * matching UTF-16.\n   * @see `punycode.ucs2.encode`\n   * @see <https://mathiasbynens.be/notes/javascript-encoding>\n   * @memberOf punycode.ucs2\n   * @name decode\n   * @param {String} string The Unicode input string (UCS-2).\n   * @returns {Array} The new array of code points.\n   */\n\n\n  function ucs2decode(string) {\n    var output = [],\n        counter = 0,\n        length = string.length,\n        value,\n        extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Creates a string based on an array of numeric code points.\n   * @see `punycode.ucs2.decode`\n   * @memberOf punycode.ucs2\n   * @name encode\n   * @param {Array} codePoints The array of numeric code points.\n   * @returns {String} The new Unicode string (UCS-2).\n   */\n\n\n  function ucs2encode(array) {\n    return map(array, function (value) {\n      var output = '';\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n      return output;\n    }).join('');\n  }\n  /**\n   * Converts a basic code point into a digit/integer.\n   * @see `digitToBasic()`\n   * @private\n   * @param {Number} codePoint The basic numeric code point value.\n   * @returns {Number} The numeric value of a basic code point (for use in\n   * representing integers) in the range `0` to `base - 1`, or `base` if\n   * the code point does not represent a value.\n   */\n\n\n  function basicToDigit(codePoint) {\n    if (codePoint - 48 < 10) {\n      return codePoint - 22;\n    }\n\n    if (codePoint - 65 < 26) {\n      return codePoint - 65;\n    }\n\n    if (codePoint - 97 < 26) {\n      return codePoint - 97;\n    }\n\n    return base;\n  }\n  /**\n   * Converts a digit/integer into a basic code point.\n   * @see `basicToDigit()`\n   * @private\n   * @param {Number} digit The numeric value of a basic code point.\n   * @returns {Number} The basic code point whose value (when used for\n   * representing integers) is `digit`, which needs to be in the range\n   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n   * used; else, the lowercase form is used. The behavior is undefined\n   * if `flag` is non-zero and `digit` has no uppercase form.\n   */\n\n\n  function digitToBasic(digit, flag) {\n    //  0..25 map to ASCII a..z or A..Z\n    // 26..35 map to ASCII 0..9\n    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n  }\n  /**\n   * Bias adaptation function as per section 3.4 of RFC 3492.\n   * https://tools.ietf.org/html/rfc3492#section-3.4\n   * @private\n   */\n\n\n  function adapt(delta, numPoints, firstTime) {\n    var k = 0;\n    delta = firstTime ? floor(delta / damp) : delta >> 1;\n    delta += floor(delta / numPoints);\n\n    for (;\n    /* no initialization */\n    delta > baseMinusTMin * tMax >> 1; k += base) {\n      delta = floor(delta / baseMinusTMin);\n    }\n\n    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n  }\n  /**\n   * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n   * symbols.\n   * @memberOf punycode\n   * @param {String} input The Punycode string of ASCII-only symbols.\n   * @returns {String} The resulting string of Unicode symbols.\n   */\n\n\n  function decode(input) {\n    // Don't use UCS-2\n    var output = [],\n        inputLength = input.length,\n        out,\n        i = 0,\n        n = initialN,\n        bias = initialBias,\n        basic,\n        j,\n        index,\n        oldi,\n        w,\n        k,\n        digit,\n        t,\n\n    /** Cached calculation results */\n    baseMinusT; // Handle the basic code points: let `basic` be the number of input code\n    // points before the last delimiter, or `0` if there is none, then copy\n    // the first basic code points to the output.\n\n    basic = input.lastIndexOf(delimiter);\n\n    if (basic < 0) {\n      basic = 0;\n    }\n\n    for (j = 0; j < basic; ++j) {\n      // if it's not a basic code point\n      if (input.charCodeAt(j) >= 0x80) {\n        error('not-basic');\n      }\n\n      output.push(input.charCodeAt(j));\n    } // Main decoding loop: start just after the last delimiter if any basic code\n    // points were copied; start at the beginning otherwise.\n\n\n    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)\n    /* no final expression */\n    {\n      // `index` is the index of the next character to be consumed.\n      // Decode a generalized variable-length integer into `delta`,\n      // which gets added to `i`. The overflow checking is easier\n      // if we increase `i` as we go, then subtract off its starting\n      // value at the end to obtain `delta`.\n      for (oldi = i, w = 1, k = base;;\n      /* no condition */\n      k += base) {\n        if (index >= inputLength) {\n          error('invalid-input');\n        }\n\n        digit = basicToDigit(input.charCodeAt(index++));\n\n        if (digit >= base || digit > floor((maxInt - i) / w)) {\n          error('overflow');\n        }\n\n        i += digit * w;\n        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n        if (digit < t) {\n          break;\n        }\n\n        baseMinusT = base - t;\n\n        if (w > floor(maxInt / baseMinusT)) {\n          error('overflow');\n        }\n\n        w *= baseMinusT;\n      }\n\n      out = output.length + 1;\n      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,\n      // incrementing `n` each time, so we'll fix that now:\n\n      if (floor(i / out) > maxInt - n) {\n        error('overflow');\n      }\n\n      n += floor(i / out);\n      i %= out; // Insert `n` at position `i` of the output\n\n      output.splice(i++, 0, n);\n    }\n\n    return ucs2encode(output);\n  }\n  /**\n   * Converts a string of Unicode symbols (e.g. a domain name label) to a\n   * Punycode string of ASCII-only symbols.\n   * @memberOf punycode\n   * @param {String} input The string of Unicode symbols.\n   * @returns {String} The resulting Punycode string of ASCII-only symbols.\n   */\n\n\n  function encode(input) {\n    var n,\n        delta,\n        handledCPCount,\n        basicLength,\n        bias,\n        j,\n        m,\n        q,\n        k,\n        t,\n        currentValue,\n        output = [],\n\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n        baseMinusT,\n        qMinusT; // Convert the input in UCS-2 to Unicode\n\n    input = ucs2decode(input); // Cache the length\n\n    inputLength = input.length; // Initialize the state\n\n    n = initialN;\n    delta = 0;\n    bias = initialBias; // Handle the basic code points\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < 0x80) {\n        output.push(stringFromCharCode(currentValue));\n      }\n    }\n\n    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;\n    // `basicLength` is the number of basic code points.\n    // Finish the basic string - if it is not empty - with a delimiter\n\n    if (basicLength) {\n      output.push(delimiter);\n    } // Main encoding loop:\n\n\n    while (handledCPCount < inputLength) {\n      // All non-basic code points < n have been handled already. Find the next\n      // larger one:\n      for (m = maxInt, j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue >= n && currentValue < m) {\n          m = currentValue;\n        }\n      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n      // but guard against overflow\n\n\n      handledCPCountPlusOne = handledCPCount + 1;\n\n      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n        error('overflow');\n      }\n\n      delta += (m - n) * handledCPCountPlusOne;\n      n = m;\n\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue < n && ++delta > maxInt) {\n          error('overflow');\n        }\n\n        if (currentValue == n) {\n          // Represent delta as a generalized variable-length integer\n          for (q = delta, k = base;;\n          /* no condition */\n          k += base) {\n            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n            if (q < t) {\n              break;\n            }\n\n            qMinusT = q - t;\n            baseMinusT = base - t;\n            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n            q = floor(qMinusT / baseMinusT);\n          }\n\n          output.push(stringFromCharCode(digitToBasic(q, 0)));\n          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n          delta = 0;\n          ++handledCPCount;\n        }\n      }\n\n      ++delta;\n      ++n;\n    }\n\n    return output.join('');\n  }\n  /**\n   * Converts a Punycode string representing a domain name or an email address\n   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n   * it doesn't matter if you call it on a string that has already been\n   * converted to Unicode.\n   * @memberOf punycode\n   * @param {String} input The Punycoded domain name or email address to\n   * convert to Unicode.\n   * @returns {String} The Unicode representation of the given Punycode\n   * string.\n   */\n\n\n  function toUnicode(input) {\n    return mapDomain(input, function (string) {\n      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n    });\n  }\n  /**\n   * Converts a Unicode string representing a domain name or an email address to\n   * Punycode. Only the non-ASCII parts of the domain name will be converted,\n   * i.e. it doesn't matter if you call it with a domain that's already in\n   * ASCII.\n   * @memberOf punycode\n   * @param {String} input The domain name or email address to convert, as a\n   * Unicode string.\n   * @returns {String} The Punycode representation of the given domain name or\n   * email address.\n   */\n\n\n  function toASCII(input) {\n    return mapDomain(input, function (string) {\n      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n    });\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /** Define the public API */\n\n\n  punycode = {\n    /**\n     * A string representing the current Punycode.js version number.\n     * @memberOf punycode\n     * @type String\n     */\n    'version': '1.4.1',\n\n    /**\n     * An object of methods to convert from JavaScript's internal character\n     * representation (UCS-2) to Unicode code points, and back.\n     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n     * @memberOf punycode\n     * @type Object\n     */\n    'ucs2': {\n      'decode': ucs2decode,\n      'encode': ucs2encode\n    },\n    'decode': decode,\n    'encode': encode,\n    'toASCII': toASCII,\n    'toUnicode': toUnicode\n  };\n  /** Expose `punycode` */\n  // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    define('punycode', function () {\n      return punycode;\n    });\n  } else if (freeExports && freeModule) {\n    if (module.exports == freeExports) {\n      // in Node.js, io.js, or RingoJS v0.8.0+\n      freeModule.exports = punycode;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      for (key in punycode) {\n        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n      }\n    }\n  } else {\n    // in Rhino or a web browser\n    root.punycode = punycode;\n  }\n})(this);","// markdown-it default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 100 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n};","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline']\n    },\n    block: {\n      rules: ['paragraph']\n    },\n    inline: {\n      rules: ['text'],\n      rules2: ['balance_pairs', 'text_collapse']\n    }\n  }\n};","// Commonmark default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: true,\n    // Enable HTML tags in source\n    xhtmlOut: true,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline']\n    },\n    block: {\n      rules: ['blockquote', 'code', 'fence', 'heading', 'hr', 'html_block', 'lheading', 'list', 'reference', 'paragraph']\n    },\n    inline: {\n      rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'html_inline', 'image', 'link', 'newline', 'text'],\n      rules2: ['balance_pairs', 'emphasis', 'text_collapse']\n    }\n  }\n};","'use strict';\n\nvar abc = require('abcjs');\n\nfunction renderAbc(str, opts) {\n  var div = document.createElement('div');\n  abc.renderAbc(div, str, {\n    visualTranspose: opts.transpose\n  });\n  return div.outerHTML;\n}\n\nmodule.exports = {\n  'lang': 'abc',\n  'callback': renderAbc\n};","var animation = require('./src/api/abc_animation');\n\nvar tuneBook = require('./src/api/abc_tunebook');\n\nvar abcjs = {};\nabcjs.signature = \"abcjs-basic v5.6.4\";\nObject.keys(animation).forEach(function (key) {\n  abcjs[key] = animation[key];\n});\nObject.keys(tuneBook).forEach(function (key) {\n  abcjs[key] = tuneBook[key];\n});\nabcjs.renderAbc = require('./src/api/abc_tunebook_svg');\nabcjs.TimingCallbacks = require('./src/api/abc_timing_callbacks');\n\nvar editor = require('./src/edit/abc_editor');\n\nabcjs['Editor'] = editor;\nmodule.exports = abcjs;","//    abc_animation.js: handles animating the music in real time.\n//    Copyright (C) 2014-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar spacing = require('../write/abc_spacing');\n\nvar parseCommon = require('../parse/abc_common');\n\nvar TimingCallbacks = require('./abc_timing_callbacks');\n\nvar animation = {};\n\n(function () {\n  \"use strict\";\n\n  var timer;\n  var cursor;\n\n  animation.startAnimation = function (paper, tune, options) {\n    //options.bpm\n    //options.showCursor\n    //options.hideCurrentMeasure\n    //options.hideFinishedMeasures\n    if (timer) {\n      timer.stop();\n      timer = undefined;\n    }\n\n    if (options.showCursor && !paper.querySelector('.abcjs-cursor')) {\n      cursor = document.createElement('DIV');\n      cursor.className = 'abcjs-cursor cursor';\n      cursor.style.position = 'absolute';\n      paper.appendChild(cursor);\n      paper.style.position = 'relative';\n    }\n\n    function hideMeasures(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        var element = elements[i];\n        if (!element.classList.contains('abcjs-bar')) element.style.display = \"none\";\n      }\n    }\n\n    var lastMeasure;\n\n    function disappearMeasuresAfter(selector) {\n      if (lastMeasure) {\n        var elements = paper.querySelectorAll(lastMeasure);\n        hideMeasures(elements);\n      }\n\n      lastMeasure = selector;\n    }\n\n    function disappearMeasuresBefore(selector) {\n      var elements = paper.querySelectorAll(selector);\n      hideMeasures(elements);\n    }\n\n    function measureCallback(selector) {\n      if (options.hideCurrentMeasure) {\n        disappearMeasuresBefore(selector);\n      } else if (options.hideFinishedMeasures) {\n        disappearMeasuresAfter(selector);\n      }\n    }\n\n    function getLineAndMeasure(element) {\n      return '.abcjs-l' + element.line + '.abcjs-m' + element.measureNumber;\n    }\n\n    function setCursor(range) {\n      if (range) {\n        if (range.measureStart) {\n          var selector = getLineAndMeasure(range);\n          if (selector) measureCallback(selector);\n        }\n\n        cursor.style.left = range.left + \"px\";\n        cursor.style.top = range.top + \"px\";\n        cursor.style.width = range.width + \"px\";\n        cursor.style.height = range.height + \"px\";\n      } else {\n        timer.stop();\n        timer = undefined;\n      }\n    }\n\n    timer = new TimingCallbacks(tune, {\n      qpm: options.bpm,\n      eventCallback: setCursor\n    });\n    timer.start();\n  };\n\n  animation.pauseAnimation = function (pause) {\n    if (pause) timer.pause();else timer.start();\n  };\n\n  animation.stopAnimation = function () {\n    timer.stop();\n    timer = undefined;\n  };\n})();\n\nmodule.exports = animation;","//    abc_parse_header.js: parses a the header fields from a string representing ABC Music Notation into a usable internal structure.\n//    Copyright (C) 2010-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*global window */\nvar parseCommon = require('./abc_common');\n\nvar parseDirective = require('./abc_parse_directive');\n\nvar parseKeyVoice = require('./abc_parse_key_voice');\n\nvar ParseHeader = function ParseHeader(tokenizer, warn, multilineVars, tune) {\n  this.reset = function (tokenizer, warn, multilineVars, tune) {\n    parseKeyVoice.initialize(tokenizer, warn, multilineVars, tune);\n    parseDirective.initialize(tokenizer, warn, multilineVars, tune);\n  };\n\n  this.reset(tokenizer, warn, multilineVars, tune);\n\n  this.setTitle = function (title) {\n    if (multilineVars.hasMainTitle) tune.addSubtitle(tokenizer.translateString(tokenizer.stripComment(title))); // display secondary title\n    else {\n        var titleStr = tokenizer.translateString(tokenizer.theReverser(tokenizer.stripComment(title)));\n        if (multilineVars.titlecaps) titleStr = titleStr.toUpperCase();\n        tune.addMetaText(\"title\", titleStr);\n        multilineVars.hasMainTitle = true;\n      }\n  };\n\n  this.setMeter = function (line) {\n    line = tokenizer.stripComment(line);\n\n    if (line === 'C') {\n      if (multilineVars.havent_set_length === true) {\n        multilineVars.default_length = 0.125;\n        multilineVars.havent_set_length = false;\n      }\n\n      return {\n        type: 'common_time'\n      };\n    } else if (line === 'C|') {\n      if (multilineVars.havent_set_length === true) {\n        multilineVars.default_length = 0.125;\n        multilineVars.havent_set_length = false;\n      }\n\n      return {\n        type: 'cut_time'\n      };\n    } else if (line === 'o') {\n      if (multilineVars.havent_set_length === true) {\n        multilineVars.default_length = 0.125;\n        multilineVars.havent_set_length = false;\n      }\n\n      return {\n        type: 'tempus_perfectum'\n      };\n    } else if (line === 'c') {\n      if (multilineVars.havent_set_length === true) {\n        multilineVars.default_length = 0.125;\n        multilineVars.havent_set_length = false;\n      }\n\n      return {\n        type: 'tempus_imperfectum'\n      };\n    } else if (line === 'o.') {\n      if (multilineVars.havent_set_length === true) {\n        multilineVars.default_length = 0.125;\n        multilineVars.havent_set_length = false;\n      }\n\n      return {\n        type: 'tempus_perfectum_prolatio'\n      };\n    } else if (line === 'c.') {\n      if (multilineVars.havent_set_length === true) {\n        multilineVars.default_length = 0.125;\n        multilineVars.havent_set_length = false;\n      }\n\n      return {\n        type: 'tempus_imperfectum_prolatio'\n      };\n    } else if (line.length === 0 || line.toLowerCase() === 'none') {\n      if (multilineVars.havent_set_length === true) {\n        multilineVars.default_length = 0.125;\n        multilineVars.havent_set_length = false;\n      }\n\n      return null;\n    } else {\n      var tokens = tokenizer.tokenize(line, 0, line.length); // the form is [open_paren] decimal [ plus|dot decimal ]... [close_paren] slash decimal [plus same_as_before]\n\n      try {\n        var parseNum = function parseNum() {\n          // handles this much: [open_paren] decimal [ plus|dot decimal ]... [close_paren]\n          var ret = {\n            value: 0,\n            num: \"\"\n          };\n          var tok = tokens.shift();\n          if (tok.token === '(') tok = tokens.shift();\n\n          while (1) {\n            if (tok.type !== 'number') throw \"Expected top number of meter\";\n            ret.value += parseInt(tok.token);\n            ret.num += tok.token;\n            if (tokens.length === 0 || tokens[0].token === '/') return ret;\n            tok = tokens.shift();\n\n            if (tok.token === ')') {\n              if (tokens.length === 0 || tokens[0].token === '/') return ret;\n              throw \"Unexpected paren in meter\";\n            }\n\n            if (tok.token !== '.' && tok.token !== '+') throw \"Expected top number of meter\";\n            ret.num += tok.token;\n            if (tokens.length === 0) throw \"Expected top number of meter\";\n            tok = tokens.shift();\n          }\n\n          return ret; // just to suppress warning\n        };\n\n        var parseFraction = function parseFraction() {\n          // handles this much: parseNum slash decimal\n          var ret = parseNum();\n          if (tokens.length === 0) return ret;\n          var tok = tokens.shift();\n          if (tok.token !== '/') throw \"Expected slash in meter\";\n          tok = tokens.shift();\n          if (tok.type !== 'number') throw \"Expected bottom number of meter\";\n          ret.den = tok.token;\n          ret.value = ret.value / parseInt(ret.den);\n          return ret;\n        };\n\n        if (tokens.length === 0) throw \"Expected meter definition in M: line\";\n        var meter = {\n          type: 'specified',\n          value: []\n        };\n        var totalLength = 0;\n\n        while (1) {\n          var ret = parseFraction();\n          totalLength += ret.value;\n          var mv = {\n            num: ret.num\n          };\n          if (ret.den !== undefined) mv.den = ret.den;\n          meter.value.push(mv);\n          if (tokens.length === 0) break; //var tok = tokens.shift();\n          //if (tok.token !== '+') throw \"Extra characters in M: line\";\n        }\n\n        if (multilineVars.havent_set_length === true) {\n          multilineVars.default_length = totalLength < 0.75 ? 0.0625 : 0.125;\n          multilineVars.havent_set_length = false;\n        }\n\n        return meter;\n      } catch (e) {\n        warn(e, line, 0);\n      }\n    }\n\n    return null;\n  };\n\n  this.calcTempo = function (relTempo) {\n    var dur = 1 / 4;\n\n    if (multilineVars.meter && multilineVars.meter.type === 'specified') {\n      dur = 1 / parseInt(multilineVars.meter.value[0].den);\n    } else if (multilineVars.origMeter && multilineVars.origMeter.type === 'specified') {\n      dur = 1 / parseInt(multilineVars.origMeter.value[0].den);\n    } //var dur = multilineVars.default_length ? multilineVars.default_length : 1;\n\n\n    for (var i = 0; i < relTempo.duration; i++) {\n      relTempo.duration[i] = dur * relTempo.duration[i];\n    }\n\n    return relTempo;\n  };\n\n  this.resolveTempo = function () {\n    if (multilineVars.tempo) {\n      // If there's a tempo waiting to be resolved\n      this.calcTempo(multilineVars.tempo);\n      tune.metaText.tempo = multilineVars.tempo;\n      delete multilineVars.tempo;\n    }\n  };\n\n  this.addUserDefinition = function (line, start, end) {\n    var equals = line.indexOf('=', start);\n\n    if (equals === -1) {\n      warn(\"Need an = in a macro definition\", line, start);\n      return;\n    }\n\n    var before = parseCommon.strip(line.substring(start, equals));\n    var after = parseCommon.strip(line.substring(equals + 1));\n\n    if (before.length !== 1) {\n      warn(\"Macro definitions can only be one character\", line, start);\n      return;\n    }\n\n    var legalChars = \"HIJKLMNOPQRSTUVWXYhijklmnopqrstuvw~\";\n\n    if (legalChars.indexOf(before) === -1) {\n      warn(\"Macro definitions must be H-Y, h-w, or tilde\", line, start);\n      return;\n    }\n\n    if (after.length === 0) {\n      warn(\"Missing macro definition\", line, start);\n      return;\n    }\n\n    if (multilineVars.macros === undefined) multilineVars.macros = {};\n    multilineVars.macros[before] = after;\n  };\n\n  this.setDefaultLength = function (line, start, end) {\n    var len = parseCommon.gsub(line.substring(start, end), \" \", \"\");\n    var len_arr = len.split('/');\n\n    if (len_arr.length === 2) {\n      var n = parseInt(len_arr[0]);\n      var d = parseInt(len_arr[1]);\n\n      if (d > 0) {\n        multilineVars.default_length = n / d; // a whole note is 1\n\n        multilineVars.havent_set_length = false;\n      }\n    } else if (len_arr.length === 1 && len_arr[0] === '1') {\n      multilineVars.default_length = 1;\n      multilineVars.havent_set_length = false;\n    }\n  };\n\n  var tempoString = {\n    larghissimo: 20,\n    adagissimo: 24,\n    sostenuto: 28,\n    grave: 32,\n    largo: 40,\n    lento: 50,\n    larghetto: 60,\n    adagio: 68,\n    adagietto: 74,\n    andante: 80,\n    andantino: 88,\n    \"marcia moderato\": 84,\n    \"andante moderato\": 100,\n    moderato: 112,\n    allegretto: 116,\n    \"allegro moderato\": 120,\n    allegro: 126,\n    animato: 132,\n    agitato: 140,\n    veloce: 148,\n    \"mosso vivo\": 156,\n    vivace: 164,\n    vivacissimo: 172,\n    allegrissimo: 176,\n    presto: 184,\n    prestissimo: 210\n  };\n\n  this.setTempo = function (line, start, end) {\n    //Q - tempo; can be used to specify the notes per minute, e.g. If\n    //the meter denominator is a 4 note then Q:120 or Q:C=120\n    //is 120 quarter notes per minute. Similarly  Q:C3=40 would be 40\n    //dotted half notes per minute. An absolute tempo may also be\n    //set, e.g. Q:1/8=120 is 120 eighth notes per minute,\n    //irrespective of the meter's denominator.\n    //\n    // This is either a number, \"C=number\", \"Cnumber=number\", or fraction [fraction...]=number\n    // It depends on the M: field, which may either not be present, or may appear after this.\n    // If M: is not present, an eighth note is used.\n    // That means that this field can't be calculated until the end, if it is the first three types, since we don't know if we'll see an M: field.\n    // So, if it is the fourth type, set it here, otherwise, save the info in the multilineVars.\n    // The temporary variables we keep are the duration and the bpm. In the first two forms, the duration is 1.\n    // In addition, a quoted string may both precede and follow. If a quoted string is present, then the duration part is optional.\n    try {\n      var tokens = tokenizer.tokenize(line, start, end);\n      if (tokens.length === 0) throw \"Missing parameter in Q: field\";\n      var tempo = {};\n      var delaySet = true;\n      var token = tokens.shift();\n\n      if (token.type === 'quote') {\n        tempo.preString = token.token;\n        token = tokens.shift();\n\n        if (tokens.length === 0) {\n          // It's ok to just get a string for the tempo\n          // If the string is a well-known tempo, put in the bpm\n          if (tempoString[tempo.preString.toLowerCase()]) {\n            tempo.bpm = tempoString[tempo.preString.toLowerCase()];\n            tempo.suppressBpm = true;\n          }\n\n          return {\n            type: 'immediate',\n            tempo: tempo\n          };\n        }\n      }\n\n      if (token.type === 'alpha' && token.token === 'C') {\n        // either type 2 or type 3\n        if (tokens.length === 0) throw \"Missing tempo after C in Q: field\";\n        token = tokens.shift();\n\n        if (token.type === 'punct' && token.token === '=') {\n          // This is a type 2 format. The duration is an implied 1\n          if (tokens.length === 0) throw \"Missing tempo after = in Q: field\";\n          token = tokens.shift();\n          if (token.type !== 'number') throw \"Expected number after = in Q: field\";\n          tempo.duration = [1];\n          tempo.bpm = parseInt(token.token);\n        } else if (token.type === 'number') {\n          // This is a type 3 format.\n          tempo.duration = [parseInt(token.token)];\n          if (tokens.length === 0) throw \"Missing = after duration in Q: field\";\n          token = tokens.shift();\n          if (token.type !== 'punct' || token.token !== '=') throw \"Expected = after duration in Q: field\";\n          if (tokens.length === 0) throw \"Missing tempo after = in Q: field\";\n          token = tokens.shift();\n          if (token.type !== 'number') throw \"Expected number after = in Q: field\";\n          tempo.bpm = parseInt(token.token);\n        } else throw \"Expected number or equal after C in Q: field\";\n      } else if (token.type === 'number') {\n        // either type 1 or type 4\n        var num = parseInt(token.token);\n\n        if (tokens.length === 0 || tokens[0].type === 'quote') {\n          // This is type 1\n          tempo.duration = [1];\n          tempo.bpm = num;\n        } else {\n          // This is type 4\n          delaySet = false;\n          token = tokens.shift();\n          if (token.type !== 'punct' && token.token !== '/') throw \"Expected fraction in Q: field\";\n          token = tokens.shift();\n          if (token.type !== 'number') throw \"Expected fraction in Q: field\";\n          var den = parseInt(token.token);\n          tempo.duration = [num / den]; // We got the first fraction, keep getting more as long as we find them.\n\n          while (tokens.length > 0 && tokens[0].token !== '=' && tokens[0].type !== 'quote') {\n            token = tokens.shift();\n            if (token.type !== 'number') throw \"Expected fraction in Q: field\";\n            num = parseInt(token.token);\n            token = tokens.shift();\n            if (token.type !== 'punct' && token.token !== '/') throw \"Expected fraction in Q: field\";\n            token = tokens.shift();\n            if (token.type !== 'number') throw \"Expected fraction in Q: field\";\n            den = parseInt(token.token);\n            tempo.duration.push(num / den);\n          }\n\n          token = tokens.shift();\n          if (token.type !== 'punct' && token.token !== '=') throw \"Expected = in Q: field\";\n          token = tokens.shift();\n          if (token.type !== 'number') throw \"Expected tempo in Q: field\";\n          tempo.bpm = parseInt(token.token);\n        }\n      } else throw \"Unknown value in Q: field\";\n\n      if (tokens.length !== 0) {\n        token = tokens.shift();\n\n        if (token.type === 'quote') {\n          tempo.postString = token.token;\n          token = tokens.shift();\n        }\n\n        if (tokens.length !== 0) throw \"Unexpected string at end of Q: field\";\n      }\n\n      if (multilineVars.printTempo === false) tempo.suppress = true;\n      return {\n        type: delaySet ? 'delaySet' : 'immediate',\n        tempo: tempo\n      };\n    } catch (msg) {\n      warn(msg, line, start);\n      return {\n        type: 'none'\n      };\n    }\n  };\n\n  this.letter_to_inline_header = function (line, i) {\n    var ws = tokenizer.eatWhiteSpace(line, i);\n    i += ws;\n\n    if (line.length >= i + 5 && line.charAt(i) === '[' && line.charAt(i + 2) === ':') {\n      var e = line.indexOf(']', i);\n      var startChar = multilineVars.iChar + i;\n      var endChar = multilineVars.iChar + e + 1;\n\n      switch (line.substring(i, i + 3)) {\n        case \"[I:\":\n          var err = parseDirective.addDirective(line.substring(i + 3, e));\n          if (err) warn(err, line, i);\n          return [e - i + 1 + ws];\n\n        case \"[M:\":\n          var meter = this.setMeter(line.substring(i + 3, e));\n          if (tune.hasBeginMusic() && meter) tune.appendStartingElement('meter', startChar, endChar, meter);else multilineVars.meter = meter;\n          return [e - i + 1 + ws];\n\n        case \"[K:\":\n          var result = parseKeyVoice.parseKey(line.substring(i + 3, e));\n          if (result.foundClef && tune.hasBeginMusic()) tune.appendStartingElement('clef', startChar, endChar, multilineVars.clef);\n          if (result.foundKey && tune.hasBeginMusic()) tune.appendStartingElement('key', startChar, endChar, parseKeyVoice.fixKey(multilineVars.clef, multilineVars.key));\n          return [e - i + 1 + ws];\n\n        case \"[P:\":\n          if (tune.lines.length <= tune.lineNum) multilineVars.partForNextLine = {\n            title: line.substring(i + 3, e),\n            startChar: startChar,\n            endChar: endChar\n          };else tune.appendElement('part', startChar, endChar, {\n            title: line.substring(i + 3, e)\n          });\n          return [e - i + 1 + ws];\n\n        case \"[L:\":\n          this.setDefaultLength(line, i + 3, e);\n          return [e - i + 1 + ws];\n\n        case \"[Q:\":\n          if (e > 0) {\n            var tempo = this.setTempo(line, i + 3, e);\n            if (tempo.type === 'delaySet') tune.appendElement('tempo', startChar, endChar, this.calcTempo(tempo.tempo));else if (tempo.type === 'immediate') tune.appendElement('tempo', startChar, endChar, tempo.tempo);\n            return [e - i + 1 + ws, line.charAt(i + 1), line.substring(i + 3, e)];\n          }\n\n          break;\n\n        case \"[V:\":\n          if (e > 0) {\n            parseKeyVoice.parseVoice(line, i + 3, e); //startNewLine();\n\n            return [e - i + 1 + ws, line.charAt(i + 1), line.substring(i + 3, e)];\n          }\n\n          break;\n\n        default: // TODO: complain about unhandled header\n\n      }\n    }\n\n    return [0];\n  };\n\n  this.letter_to_body_header = function (line, i) {\n    if (line.length >= i + 3) {\n      switch (line.substring(i, i + 2)) {\n        case \"I:\":\n          var err = parseDirective.addDirective(line.substring(i + 2));\n          if (err) warn(err, line, i);\n          return [line.length];\n\n        case \"M:\":\n          var meter = this.setMeter(line.substring(i + 2));\n          if (tune.hasBeginMusic() && meter) tune.appendStartingElement('meter', multilineVars.iChar + i, multilineVars.iChar + line.length, meter);\n          return [line.length];\n\n        case \"K:\":\n          var result = parseKeyVoice.parseKey(line.substring(i + 2));\n          if (result.foundClef && tune.hasBeginMusic()) tune.appendStartingElement('clef', multilineVars.iChar + i, multilineVars.iChar + line.length, multilineVars.clef);\n          if (result.foundKey && tune.hasBeginMusic()) tune.appendStartingElement('key', multilineVars.iChar + i, multilineVars.iChar + line.length, parseKeyVoice.fixKey(multilineVars.clef, multilineVars.key));\n          return [line.length];\n\n        case \"P:\":\n          if (tune.hasBeginMusic()) tune.appendElement('part', multilineVars.iChar + i, multilineVars.iChar + line.length, {\n            title: line.substring(i + 2)\n          });\n          return [line.length];\n\n        case \"L:\":\n          this.setDefaultLength(line, i + 2, line.length);\n          return [line.length];\n\n        case \"Q:\":\n          var e = line.indexOf('\\x12', i + 2);\n          if (e === -1) e = line.length;\n          var tempo = this.setTempo(line, i + 2, e);\n          if (tempo.type === 'delaySet') tune.appendElement('tempo', multilineVars.iChar + i, multilineVars.iChar + line.length, this.calcTempo(tempo.tempo));else if (tempo.type === 'immediate') tune.appendElement('tempo', multilineVars.iChar + i, multilineVars.iChar + line.length, tempo.tempo);\n          return [e, line.charAt(i), parseCommon.strip(line.substring(i + 2))];\n\n        case \"V:\":\n          parseKeyVoice.parseVoice(line, i + 2, line.length); //\t\t\t\t\t\tstartNewLine();\n\n          return [line.length, line.charAt(i), parseCommon.strip(line.substring(i + 2))];\n\n        default: // TODO: complain about unhandled header\n\n      }\n    }\n\n    return [0];\n  };\n\n  var metaTextHeaders = {\n    A: 'author',\n    B: 'book',\n    C: 'composer',\n    D: 'discography',\n    F: 'url',\n    G: 'group',\n    I: 'instruction',\n    N: 'notes',\n    O: 'origin',\n    R: 'rhythm',\n    S: 'source',\n    W: 'unalignedWords',\n    Z: 'transcription'\n  };\n\n  this.parseHeader = function (line) {\n    if (parseCommon.startsWith(line, '%%')) {\n      var err = parseDirective.addDirective(line.substring(2));\n      if (err) warn(err, line, 2);\n      return {};\n    }\n\n    var i = line.indexOf('%');\n    if (i >= 0) line = line.substring(0, i);\n    line = line.replace(/\\s+$/, '');\n    if (line.length === 0) return {};\n\n    if (line.length >= 2) {\n      if (line.charAt(1) === ':') {\n        var nextLine = \"\";\n\n        if (line.indexOf('\\x12') >= 0 && line.charAt(0) !== 'w') {\n          // w: is the only header field that can have a continuation.\n          nextLine = line.substring(line.indexOf('\\x12') + 1);\n          line = line.substring(0, line.indexOf('\\x12')); //This handles a continuation mark on a header field\n        }\n\n        var field = metaTextHeaders[line.charAt(0)];\n\n        if (field !== undefined) {\n          if (field === 'unalignedWords') tune.addMetaTextArray(field, parseDirective.parseFontChangeLine(tokenizer.translateString(tokenizer.stripComment(line.substring(2)))));else tune.addMetaText(field, tokenizer.translateString(tokenizer.stripComment(line.substring(2))));\n          return {};\n        } else {\n          var startChar = multilineVars.iChar;\n          var endChar = startChar + line.length;\n\n          switch (line.charAt(0)) {\n            case 'H':\n              tune.addMetaText(\"history\", tokenizer.translateString(tokenizer.stripComment(line.substring(2))));\n              multilineVars.is_in_history = true;\n              break;\n\n            case 'K':\n              // since the key is the last thing that can happen in the header, we can resolve the tempo now\n              this.resolveTempo();\n              var result = parseKeyVoice.parseKey(line.substring(2));\n\n              if (!multilineVars.is_in_header && tune.hasBeginMusic()) {\n                if (result.foundClef) tune.appendStartingElement('clef', startChar, endChar, multilineVars.clef);\n                if (result.foundKey) tune.appendStartingElement('key', startChar, endChar, parseKeyVoice.fixKey(multilineVars.clef, multilineVars.key));\n              }\n\n              multilineVars.is_in_header = false; // The first key signifies the end of the header.\n\n              break;\n\n            case 'L':\n              this.setDefaultLength(line, 2, line.length);\n              break;\n\n            case 'M':\n              multilineVars.origMeter = multilineVars.meter = this.setMeter(line.substring(2));\n              break;\n\n            case 'P':\n              // TODO-PER: There is more to do with parts, but the writer doesn't care.\n              if (multilineVars.is_in_header) tune.addMetaText(\"partOrder\", tokenizer.translateString(tokenizer.stripComment(line.substring(2))));else multilineVars.partForNextLine = {\n                title: tokenizer.translateString(tokenizer.stripComment(line.substring(2))),\n                startChar: startChar,\n                endChar: endChar\n              };\n              break;\n\n            case 'Q':\n              var tempo = this.setTempo(line, 2, line.length);\n              if (tempo.type === 'delaySet') multilineVars.tempo = tempo.tempo;else if (tempo.type === 'immediate') tune.metaText.tempo = tempo.tempo;\n              break;\n\n            case 'T':\n              this.setTitle(line.substring(2));\n              break;\n\n            case 'U':\n              this.addUserDefinition(line, 2, line.length);\n              break;\n\n            case 'V':\n              parseKeyVoice.parseVoice(line, 2, line.length);\n              if (!multilineVars.is_in_header) return {\n                newline: true\n              };\n              break;\n\n            case 's':\n              return {\n                symbols: true\n              };\n\n            case 'w':\n              return {\n                words: true\n              };\n\n            case 'X':\n              break;\n\n            case 'E':\n            case 'm':\n              warn(\"Ignored header\", line, 0);\n              break;\n\n            default:\n              // It wasn't a recognized header value, so parse it as music.\n              if (nextLine.length) nextLine = \"\\x12\" + nextLine; //parseRegularMusicLine(line+nextLine);\n              //nextLine = \"\";\n\n              return {\n                regular: true,\n                str: line + nextLine\n              };\n          }\n        }\n\n        if (nextLine.length > 0) return {\n          recurse: true,\n          str: nextLine\n        };\n        return {};\n      }\n    } // If we got this far, we have a regular line of mulsic\n\n\n    return {\n      regular: true,\n      str: line\n    };\n  };\n};\n\nmodule.exports = ParseHeader;","//    abc_tokenizer.js: tokenizes an ABC Music Notation string to support abc_parse.\n//    Copyright (C) 2010-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar parseCommon = require('./abc_common'); // this is a series of functions that get a particular element out of the passed stream.\n// the return is the number of characters consumed, so 0 means that the element wasn't found.\n// also returned is the element found. This may be a different length because spaces may be consumed that aren't part of the string.\n// The return structure for most calls is { len: num_chars_consumed, token: str }\n\n\nvar Tokenizer = function Tokenizer() {\n  this.skipWhiteSpace = function (str) {\n    for (var i = 0; i < str.length; i++) {\n      if (!this.isWhiteSpace(str.charAt(i))) return i;\n    }\n\n    return str.length; // It must have been all white space\n  };\n\n  var finished = function finished(str, i) {\n    return i >= str.length;\n  };\n\n  this.eatWhiteSpace = function (line, index) {\n    for (var i = index; i < line.length; i++) {\n      if (!this.isWhiteSpace(line.charAt(i))) return i - index;\n    }\n\n    return i - index;\n  }; // This just gets the basic pitch letter, ignoring leading spaces, and normalizing it to a capital\n\n\n  this.getKeyPitch = function (str) {\n    var i = this.skipWhiteSpace(str);\n    if (finished(str, i)) return {\n      len: 0\n    };\n\n    switch (str.charAt(i)) {\n      case 'A':\n        return {\n          len: i + 1,\n          token: 'A'\n        };\n\n      case 'B':\n        return {\n          len: i + 1,\n          token: 'B'\n        };\n\n      case 'C':\n        return {\n          len: i + 1,\n          token: 'C'\n        };\n\n      case 'D':\n        return {\n          len: i + 1,\n          token: 'D'\n        };\n\n      case 'E':\n        return {\n          len: i + 1,\n          token: 'E'\n        };\n\n      case 'F':\n        return {\n          len: i + 1,\n          token: 'F'\n        };\n\n      case 'G':\n        return {\n          len: i + 1,\n          token: 'G'\n        };\n      //\t\t\tcase 'a':return {len: i+1, token: 'A'};\n      //\t\t\tcase 'b':return {len: i+1, token: 'B'};\n      //\t\t\tcase 'c':return {len: i+1, token: 'C'};\n      //\t\t\tcase 'd':return {len: i+1, token: 'D'};\n      //\t\t\tcase 'e':return {len: i+1, token: 'E'};\n      //\t\t\tcase 'f':return {len: i+1, token: 'F'};\n      //\t\t\tcase 'g':return {len: i+1, token: 'G'};\n    }\n\n    return {\n      len: 0\n    };\n  }; // This just gets the basic accidental, ignoring leading spaces, and only the ones that appear in a key\n\n\n  this.getSharpFlat = function (str) {\n    if (str === 'bass') return {\n      len: 0\n    };\n\n    switch (str.charAt(0)) {\n      case '#':\n        return {\n          len: 1,\n          token: '#'\n        };\n\n      case 'b':\n        return {\n          len: 1,\n          token: 'b'\n        };\n    }\n\n    return {\n      len: 0\n    };\n  };\n\n  this.getMode = function (str) {\n    var skipAlpha = function skipAlpha(str, start) {\n      // This returns the index of the next non-alphabetic char, or the entire length of the string if not found.\n      while (start < str.length && (str.charAt(start) >= 'a' && str.charAt(start) <= 'z' || str.charAt(start) >= 'A' && str.charAt(start) <= 'Z')) {\n        start++;\n      }\n\n      return start;\n    };\n\n    var i = this.skipWhiteSpace(str);\n    if (finished(str, i)) return {\n      len: 0\n    };\n    var firstThree = str.substring(i, i + 3).toLowerCase();\n    if (firstThree.length > 1 && firstThree.charAt(1) === ' ' || firstThree.charAt(1) === '^' || firstThree.charAt(1) === '_' || firstThree.charAt(1) === '=') firstThree = firstThree.charAt(0); // This will handle the case of 'm'\n\n    switch (firstThree) {\n      case 'mix':\n        return {\n          len: skipAlpha(str, i),\n          token: 'Mix'\n        };\n\n      case 'dor':\n        return {\n          len: skipAlpha(str, i),\n          token: 'Dor'\n        };\n\n      case 'phr':\n        return {\n          len: skipAlpha(str, i),\n          token: 'Phr'\n        };\n\n      case 'lyd':\n        return {\n          len: skipAlpha(str, i),\n          token: 'Lyd'\n        };\n\n      case 'loc':\n        return {\n          len: skipAlpha(str, i),\n          token: 'Loc'\n        };\n\n      case 'aeo':\n        return {\n          len: skipAlpha(str, i),\n          token: 'm'\n        };\n\n      case 'maj':\n        return {\n          len: skipAlpha(str, i),\n          token: ''\n        };\n\n      case 'ion':\n        return {\n          len: skipAlpha(str, i),\n          token: ''\n        };\n\n      case 'min':\n        return {\n          len: skipAlpha(str, i),\n          token: 'm'\n        };\n\n      case 'm':\n        return {\n          len: skipAlpha(str, i),\n          token: 'm'\n        };\n    }\n\n    return {\n      len: 0\n    };\n  };\n\n  this.getClef = function (str, bExplicitOnly) {\n    var strOrig = str;\n    var i = this.skipWhiteSpace(str);\n    if (finished(str, i)) return {\n      len: 0\n    }; // The word 'clef' is optional, but if it appears, a clef MUST appear\n\n    var needsClef = false;\n    var strClef = str.substring(i);\n\n    if (parseCommon.startsWith(strClef, 'clef=')) {\n      needsClef = true;\n      strClef = strClef.substring(5);\n      i += 5;\n    }\n\n    if (strClef.length === 0 && needsClef) return {\n      len: i + 5,\n      warn: \"No clef specified: \" + strOrig\n    };\n    var j = this.skipWhiteSpace(strClef);\n    if (finished(strClef, j)) return {\n      len: 0\n    };\n\n    if (j > 0) {\n      i += j;\n      strClef = strClef.substring(j);\n    }\n\n    var name = null;\n    if (parseCommon.startsWith(strClef, 'treble')) name = 'treble';else if (parseCommon.startsWith(strClef, 'bass3')) name = 'bass3';else if (parseCommon.startsWith(strClef, 'bass')) name = 'bass';else if (parseCommon.startsWith(strClef, 'tenor')) name = 'tenor';else if (parseCommon.startsWith(strClef, 'alto2')) name = 'alto2';else if (parseCommon.startsWith(strClef, 'alto1')) name = 'alto1';else if (parseCommon.startsWith(strClef, 'alto')) name = 'alto';else if (!bExplicitOnly && needsClef && parseCommon.startsWith(strClef, 'none')) name = 'none';else if (parseCommon.startsWith(strClef, 'perc')) name = 'perc';else if (!bExplicitOnly && needsClef && parseCommon.startsWith(strClef, 'C')) name = 'tenor';else if (!bExplicitOnly && needsClef && parseCommon.startsWith(strClef, 'F')) name = 'bass';else if (!bExplicitOnly && needsClef && parseCommon.startsWith(strClef, 'G')) name = 'treble';else return {\n      len: i + 5,\n      warn: \"Unknown clef specified: \" + strOrig\n    };\n    strClef = strClef.substring(name.length);\n    j = this.isMatch(strClef, '+8');\n    if (j > 0) name += \"+8\";else {\n      j = this.isMatch(strClef, '-8');\n      if (j > 0) name += \"-8\";\n    }\n    return {\n      len: i + name.length,\n      token: name,\n      explicit: needsClef\n    };\n  }; // This returns one of the legal bar lines\n  // This is called alot and there is no obvious tokenable items, so this is broken apart.\n\n\n  this.getBarLine = function (line, i) {\n    switch (line.charAt(i)) {\n      case ']':\n        ++i;\n\n        switch (line.charAt(i)) {\n          case '|':\n            return {\n              len: 2,\n              token: \"bar_thick_thin\"\n            };\n\n          case '[':\n            ++i;\n            if (line.charAt(i) >= '1' && line.charAt(i) <= '9' || line.charAt(i) === '\"') return {\n              len: 2,\n              token: \"bar_invisible\"\n            };\n            return {\n              len: 1,\n              warn: \"Unknown bar symbol\"\n            };\n\n          default:\n            return {\n              len: 1,\n              token: \"bar_invisible\"\n            };\n        }\n\n        break;\n\n      case ':':\n        ++i;\n\n        switch (line.charAt(i)) {\n          case ':':\n            return {\n              len: 2,\n              token: \"bar_dbl_repeat\"\n            };\n\n          case '|':\n            // :|\n            ++i;\n\n            switch (line.charAt(i)) {\n              case ']':\n                // :|]\n                ++i;\n\n                switch (line.charAt(i)) {\n                  case '|':\n                    // :|]|\n                    ++i;\n                    if (line.charAt(i) === ':') return {\n                      len: 5,\n                      token: \"bar_dbl_repeat\"\n                    };\n                    return {\n                      len: 3,\n                      token: \"bar_right_repeat\"\n                    };\n\n                  default:\n                    return {\n                      len: 3,\n                      token: \"bar_right_repeat\"\n                    };\n                }\n\n                break;\n\n              case '|':\n                // :||\n                ++i;\n                if (line.charAt(i) === ':') return {\n                  len: 4,\n                  token: \"bar_dbl_repeat\"\n                };\n                return {\n                  len: 3,\n                  token: \"bar_right_repeat\"\n                };\n\n              default:\n                return {\n                  len: 2,\n                  token: \"bar_right_repeat\"\n                };\n            }\n\n            break;\n\n          default:\n            return {\n              len: 1,\n              warn: \"Unknown bar symbol\"\n            };\n        }\n\n        break;\n\n      case '[':\n        // [\n        ++i;\n\n        if (line.charAt(i) === '|') {\n          // [|\n          ++i;\n\n          switch (line.charAt(i)) {\n            case ':':\n              return {\n                len: 3,\n                token: \"bar_left_repeat\"\n              };\n\n            case ']':\n              return {\n                len: 3,\n                token: \"bar_invisible\"\n              };\n\n            default:\n              return {\n                len: 2,\n                token: \"bar_thick_thin\"\n              };\n          }\n        } else {\n          if (line.charAt(i) >= '1' && line.charAt(i) <= '9' || line.charAt(i) === '\"') return {\n            len: 1,\n            token: \"bar_invisible\"\n          };\n          return {\n            len: 0\n          };\n        }\n\n        break;\n\n      case '|':\n        // |\n        ++i;\n\n        switch (line.charAt(i)) {\n          case ']':\n            return {\n              len: 2,\n              token: \"bar_thin_thick\"\n            };\n\n          case '|':\n            // ||\n            ++i;\n            if (line.charAt(i) === ':') return {\n              len: 3,\n              token: \"bar_left_repeat\"\n            };\n            return {\n              len: 2,\n              token: \"bar_thin_thin\"\n            };\n\n          case ':':\n            // |:\n            var colons = 0;\n\n            while (line.charAt(i + colons) === ':') {\n              colons++;\n            }\n\n            return {\n              len: 1 + colons,\n              token: \"bar_left_repeat\"\n            };\n\n          default:\n            return {\n              len: 1,\n              token: \"bar_thin\"\n            };\n        }\n\n        break;\n    }\n\n    return {\n      len: 0\n    };\n  }; // this returns all the characters in the string that match one of the characters in the legalChars string\n\n\n  this.getTokenOf = function (str, legalChars) {\n    for (var i = 0; i < str.length; i++) {\n      if (legalChars.indexOf(str.charAt(i)) < 0) return {\n        len: i,\n        token: str.substring(0, i)\n      };\n    }\n\n    return {\n      len: i,\n      token: str\n    };\n  };\n\n  this.getToken = function (str, start, end) {\n    // This returns the next set of chars that doesn't contain spaces\n    var i = start;\n\n    while (i < end && !this.isWhiteSpace(str.charAt(i))) {\n      i++;\n    }\n\n    return str.substring(start, i);\n  }; // This just sees if the next token is the word passed in, with possible leading spaces\n\n\n  this.isMatch = function (str, match) {\n    var i = this.skipWhiteSpace(str);\n    if (finished(str, i)) return 0;\n    if (parseCommon.startsWith(str.substring(i), match)) return i + match.length;\n    return 0;\n  };\n\n  this.getPitchFromTokens = function (tokens) {\n    var ret = {};\n    var pitches = {\n      A: 5,\n      B: 6,\n      C: 0,\n      D: 1,\n      E: 2,\n      F: 3,\n      G: 4,\n      a: 12,\n      b: 13,\n      c: 7,\n      d: 8,\n      e: 9,\n      f: 10,\n      g: 11\n    };\n    ret.position = pitches[tokens[0].token];\n    if (ret.position === undefined) return {\n      warn: \"Pitch expected. Found: \" + tokens[0].token\n    };\n    tokens.shift();\n\n    while (tokens.length) {\n      switch (tokens[0].token) {\n        case ',':\n          ret.position -= 7;\n          tokens.shift();\n          break;\n\n        case '\\'':\n          ret.position += 7;\n          tokens.shift();\n          break;\n\n        default:\n          return ret;\n      }\n    }\n\n    return ret;\n  };\n\n  this.getKeyAccidentals2 = function (tokens) {\n    var accs; // find and strip off all accidentals in the token list\n\n    while (tokens.length > 0) {\n      var acc;\n\n      if (tokens[0].token === '^') {\n        acc = 'sharp';\n        tokens.shift();\n        if (tokens.length === 0) return {\n          accs: accs,\n          warn: 'Expected note name after ' + acc\n        };\n\n        switch (tokens[0].token) {\n          case '^':\n            acc = 'dblsharp';\n            tokens.shift();\n            break;\n\n          case '/':\n            acc = 'quartersharp';\n            tokens.shift();\n            break;\n        }\n      } else if (tokens[0].token === '=') {\n        acc = 'natural';\n        tokens.shift();\n      } else if (tokens[0].token === '_') {\n        acc = 'flat';\n        tokens.shift();\n        if (tokens.length === 0) return {\n          accs: accs,\n          warn: 'Expected note name after ' + acc\n        };\n\n        switch (tokens[0].token) {\n          case '_':\n            acc = 'dblflat';\n            tokens.shift();\n            break;\n\n          case '/':\n            acc = 'quarterflat';\n            tokens.shift();\n            break;\n        }\n      } else {\n        // Not an accidental, we'll assume that a later parse will recognize it.\n        return {\n          accs: accs\n        };\n      }\n\n      if (tokens.length === 0) return {\n        accs: accs,\n        warn: 'Expected note name after ' + acc\n      };\n\n      switch (tokens[0].token.charAt(0)) {\n        case 'a':\n        case 'b':\n        case 'c':\n        case 'd':\n        case 'e':\n        case 'f':\n        case 'g':\n        case 'A':\n        case 'B':\n        case 'C':\n        case 'D':\n        case 'E':\n        case 'F':\n        case 'G':\n          if (accs === undefined) accs = [];\n          accs.push({\n            acc: acc,\n            note: tokens[0].token.charAt(0)\n          });\n          if (tokens[0].token.length === 1) tokens.shift();else tokens[0].token = tokens[0].token.substring(1);\n          break;\n\n        default:\n          return {\n            accs: accs,\n            warn: 'Expected note name after ' + acc + ' Found: ' + tokens[0].token\n          };\n      }\n    }\n\n    return {\n      accs: accs\n    };\n  }; // This gets an accidental marking for the key signature. It has the accidental then the pitch letter.\n\n\n  this.getKeyAccidental = function (str) {\n    var accTranslation = {\n      '^': 'sharp',\n      '^^': 'dblsharp',\n      '=': 'natural',\n      '_': 'flat',\n      '__': 'dblflat',\n      '_/': 'quarterflat',\n      '^/': 'quartersharp'\n    };\n    var i = this.skipWhiteSpace(str);\n    if (finished(str, i)) return {\n      len: 0\n    };\n    var acc = null;\n\n    switch (str.charAt(i)) {\n      case '^':\n      case '_':\n      case '=':\n        acc = str.charAt(i);\n        break;\n\n      default:\n        return {\n          len: 0\n        };\n    }\n\n    i++;\n    if (finished(str, i)) return {\n      len: 1,\n      warn: 'Expected note name after accidental'\n    };\n\n    switch (str.charAt(i)) {\n      case 'a':\n      case 'b':\n      case 'c':\n      case 'd':\n      case 'e':\n      case 'f':\n      case 'g':\n      case 'A':\n      case 'B':\n      case 'C':\n      case 'D':\n      case 'E':\n      case 'F':\n      case 'G':\n        return {\n          len: i + 1,\n          token: {\n            acc: accTranslation[acc],\n            note: str.charAt(i)\n          }\n        };\n\n      case '^':\n      case '_':\n      case '/':\n        acc += str.charAt(i);\n        i++;\n        if (finished(str, i)) return {\n          len: 2,\n          warn: 'Expected note name after accidental'\n        };\n\n        switch (str.charAt(i)) {\n          case 'a':\n          case 'b':\n          case 'c':\n          case 'd':\n          case 'e':\n          case 'f':\n          case 'g':\n          case 'A':\n          case 'B':\n          case 'C':\n          case 'D':\n          case 'E':\n          case 'F':\n          case 'G':\n            return {\n              len: i + 1,\n              token: {\n                acc: accTranslation[acc],\n                note: str.charAt(i)\n              }\n            };\n\n          default:\n            return {\n              len: 2,\n              warn: 'Expected note name after accidental'\n            };\n        }\n\n        break;\n\n      default:\n        return {\n          len: 1,\n          warn: 'Expected note name after accidental'\n        };\n    }\n  };\n\n  this.isWhiteSpace = function (ch) {\n    return ch === ' ' || ch === '\\t' || ch === '\\x12';\n  };\n\n  this.getMeat = function (line, start, end) {\n    // This removes any comments starting with '%' and trims the ends of the string so that there are no leading or trailing spaces.\n    // it returns just the start and end characters that contain the meat.\n    var comment = line.indexOf('%', start);\n    if (comment >= 0 && comment < end) end = comment;\n\n    while (start < end && (line.charAt(start) === ' ' || line.charAt(start) === '\\t' || line.charAt(start) === '\\x12')) {\n      start++;\n    }\n\n    while (start < end && (line.charAt(end - 1) === ' ' || line.charAt(end - 1) === '\\t' || line.charAt(end - 1) === '\\x12')) {\n      end--;\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  };\n\n  var isLetter = function isLetter(ch) {\n    return ch >= 'A' && ch <= 'Z' || ch >= 'a' && ch <= 'z';\n  };\n\n  var isNumber = function isNumber(ch) {\n    return ch >= '0' && ch <= '9';\n  };\n\n  this.tokenize = function (line, start, end, alphaUntilWhiteSpace) {\n    // this returns all the tokens inside the passed string. A token is a punctuation mark, a string of digits, a string of letters.\n    //  Quoted strings are one token.\n    //  If there is a minus sign next to a number, then it is included in the number.\n    // If there is a period immediately after a number, with a number immediately following, then a float is returned.\n    // The type of token is returned: quote, alpha, number, punct\n    // If alphaUntilWhiteSpace is true, then the behavior of the alpha token changes.\n    var ret = this.getMeat(line, start, end);\n    start = ret.start;\n    end = ret.end;\n    var tokens = [];\n    var i;\n\n    while (start < end) {\n      if (line.charAt(start) === '\"') {\n        i = start + 1;\n\n        while (i < end && line.charAt(i) !== '\"') {\n          i++;\n        }\n\n        tokens.push({\n          type: 'quote',\n          token: line.substring(start + 1, i),\n          start: start + 1,\n          end: i\n        });\n        i++;\n      } else if (isLetter(line.charAt(start))) {\n        i = start + 1;\n        if (alphaUntilWhiteSpace) while (i < end && !this.isWhiteSpace(line.charAt(i))) {\n          i++;\n        } else while (i < end && isLetter(line.charAt(i))) {\n          i++;\n        }\n        tokens.push({\n          type: 'alpha',\n          token: line.substring(start, i),\n          continueId: isNumber(line.charAt(i)),\n          start: start,\n          end: i\n        });\n        start = i + 1;\n      } else if (line.charAt(start) === '.' && isNumber(line.charAt(i + 1))) {\n        i = start + 1;\n        var int2 = null;\n        var float2 = null;\n\n        while (i < end && isNumber(line.charAt(i))) {\n          i++;\n        }\n\n        float2 = parseFloat(line.substring(start, i));\n        tokens.push({\n          type: 'number',\n          token: line.substring(start, i),\n          intt: int2,\n          floatt: float2,\n          continueId: isLetter(line.charAt(i)),\n          start: start,\n          end: i\n        });\n        start = i + 1;\n      } else if (isNumber(line.charAt(start)) || line.charAt(start) === '-' && isNumber(line.charAt(i + 1))) {\n        i = start + 1;\n        var intt = null;\n        var floatt = null;\n\n        while (i < end && isNumber(line.charAt(i))) {\n          i++;\n        }\n\n        if (line.charAt(i) === '.' && isNumber(line.charAt(i + 1))) {\n          i++;\n\n          while (i < end && isNumber(line.charAt(i))) {\n            i++;\n          }\n        } else intt = parseInt(line.substring(start, i));\n\n        floatt = parseFloat(line.substring(start, i));\n        tokens.push({\n          type: 'number',\n          token: line.substring(start, i),\n          intt: intt,\n          floatt: floatt,\n          continueId: isLetter(line.charAt(i)),\n          start: start,\n          end: i\n        });\n        start = i + 1;\n      } else if (line.charAt(start) === ' ' || line.charAt(start) === '\\t') {\n        i = start + 1;\n      } else {\n        tokens.push({\n          type: 'punct',\n          token: line.charAt(start),\n          start: start,\n          end: start + 1\n        });\n        i = start + 1;\n      }\n\n      start = i;\n    }\n\n    return tokens;\n  };\n\n  this.getVoiceToken = function (line, start, end) {\n    // This finds the next token. A token is delimited by a space or an equal sign. If it starts with a quote, then the portion between the quotes is returned.\n    var i = start;\n\n    while (i < end && this.isWhiteSpace(line.charAt(i)) || line.charAt(i) === '=') {\n      i++;\n    }\n\n    if (line.charAt(i) === '\"') {\n      var close = line.indexOf('\"', i + 1);\n      if (close === -1 || close >= end) return {\n        len: 1,\n        err: \"Missing close quote\"\n      };\n      return {\n        len: close - start + 1,\n        token: this.translateString(line.substring(i + 1, close))\n      };\n    } else {\n      var ii = i;\n\n      while (ii < end && !this.isWhiteSpace(line.charAt(ii)) && line.charAt(ii) !== '=') {\n        ii++;\n      }\n\n      return {\n        len: ii - start + 1,\n        token: line.substring(i, ii)\n      };\n    }\n  };\n\n  var charMap = {\n    \"`a\": 'à',\n    \"'a\": \"á\",\n    \"^a\": \"â\",\n    \"~a\": \"ã\",\n    \"\\\"a\": \"ä\",\n    \"oa\": \"å\",\n    \"aa\": \"å\",\n    \"=a\": \"ā\",\n    \"ua\": \"ă\",\n    \";a\": \"ą\",\n    \"`e\": 'è',\n    \"'e\": \"é\",\n    \"^e\": \"ê\",\n    \"\\\"e\": \"ë\",\n    \"=e\": \"ē\",\n    \"ue\": \"ĕ\",\n    \";e\": \"ę\",\n    \".e\": \"ė\",\n    \"`i\": 'ì',\n    \"'i\": \"í\",\n    \"^i\": \"î\",\n    \"\\\"i\": \"ï\",\n    \"=i\": \"ī\",\n    \"ui\": \"ĭ\",\n    \";i\": \"į\",\n    \"`o\": 'ò',\n    \"'o\": \"ó\",\n    \"^o\": \"ô\",\n    \"~o\": \"õ\",\n    \"\\\"o\": \"ö\",\n    \"=o\": \"ō\",\n    \"uo\": \"ŏ\",\n    \"/o\": \"ø\",\n    \"`u\": 'ù',\n    \"'u\": \"ú\",\n    \"^u\": \"û\",\n    \"~u\": \"ũ\",\n    \"\\\"u\": \"ü\",\n    \"ou\": \"ů\",\n    \"=u\": \"ū\",\n    \"uu\": \"ŭ\",\n    \";u\": \"ų\",\n    \"`A\": 'À',\n    \"'A\": \"Á\",\n    \"^A\": \"Â\",\n    \"~A\": \"Ã\",\n    \"\\\"A\": \"Ä\",\n    \"oA\": \"Å\",\n    \"AA\": \"Å\",\n    \"=A\": \"Ā\",\n    \"uA\": \"Ă\",\n    \";A\": \"Ą\",\n    \"`E\": 'È',\n    \"'E\": \"É\",\n    \"^E\": \"Ê\",\n    \"\\\"E\": \"Ë\",\n    \"=E\": \"Ē\",\n    \"uE\": \"Ĕ\",\n    \";E\": \"Ę\",\n    \".E\": \"Ė\",\n    \"`I\": 'Ì',\n    \"'I\": \"Í\",\n    \"^I\": \"Î\",\n    \"~I\": \"Ĩ\",\n    \"\\\"I\": \"Ï\",\n    \"=I\": \"Ī\",\n    \"uI\": \"Ĭ\",\n    \";I\": \"Į\",\n    \".I\": \"İ\",\n    \"`O\": 'Ò',\n    \"'O\": \"Ó\",\n    \"^O\": \"Ô\",\n    \"~O\": \"Õ\",\n    \"\\\"O\": \"Ö\",\n    \"=O\": \"Ō\",\n    \"uO\": \"Ŏ\",\n    \"/O\": \"Ø\",\n    \"`U\": 'Ù',\n    \"'U\": \"Ú\",\n    \"^U\": \"Û\",\n    \"~U\": \"Ũ\",\n    \"\\\"U\": \"Ü\",\n    \"oU\": \"Ů\",\n    \"=U\": \"Ū\",\n    \"uU\": \"Ŭ\",\n    \";U\": \"Ų\",\n    \"ae\": \"æ\",\n    \"AE\": \"Æ\",\n    \"oe\": \"œ\",\n    \"OE\": \"Œ\",\n    \"ss\": \"ß\",\n    \"'c\": \"ć\",\n    \"^c\": \"ĉ\",\n    \"uc\": \"č\",\n    \"cc\": \"ç\",\n    \".c\": \"ċ\",\n    \"cC\": \"Ç\",\n    \"'C\": \"Ć\",\n    \"^C\": \"Ĉ\",\n    \"uC\": \"Č\",\n    \".C\": \"Ċ\",\n    \"~N\": \"Ñ\",\n    \"~n\": \"ñ\",\n    \"=s\": \"š\",\n    \"vs\": \"š\",\n    \"DH\": \"Ð\",\n    \"dh\": \"ð\",\n    \"HO\": \"Ő\",\n    \"Ho\": \"ő\",\n    \"HU\": \"Ű\",\n    \"Hu\": \"ű\",\n    \"'Y\": \"Ý\",\n    \"'y\": \"ý\",\n    \"^Y\": \"Ŷ\",\n    \"^y\": \"ŷ\",\n    \"\\\"Y\": \"Ÿ\",\n    \"\\\"y\": \"ÿ\",\n    \"vS\": \"Š\",\n    \"vZ\": \"Ž\",\n    \"vz\": 'ž' // More chars: Ĳ ĳ Ď ď Đ đ Ĝ ĝ Ğ ğ Ġ ġ Ģ ģ Ĥ ĥ Ħ ħ Ĵ ĵ Ķ ķ ĸ Ĺ ĺ Ļ ļ Ľ ľ Ŀ ŀ Ł ł Ń ń Ņ ņ Ň ň ŉ Ŋ ŋ Ŕ ŕ Ŗ ŗ Ř ř Ś ś Ŝ ŝ Ş ş Š Ţ ţ Ť ť Ŧ ŧ Ŵ ŵ Ź ź Ż ż Ž\n\n  };\n  var charMap1 = {\n    \"#\": \"♯\",\n    \"b\": \"♭\",\n    \"=\": \"♮\"\n  };\n  var charMap2 = {\n    \"201\": \"♯\",\n    \"202\": \"♭\",\n    \"203\": \"♮\",\n    \"241\": \"¡\",\n    \"242\": \"¢\",\n    \"252\": \"a\",\n    \"262\": \"2\",\n    \"272\": \"o\",\n    \"302\": \"Â\",\n    \"312\": \"Ê\",\n    \"322\": \"Ò\",\n    \"332\": \"Ú\",\n    \"342\": \"â\",\n    \"352\": \"ê\",\n    \"362\": \"ò\",\n    \"372\": \"ú\",\n    \"243\": \"£\",\n    \"253\": \"«\",\n    \"263\": \"3\",\n    \"273\": \"»\",\n    \"303\": \"Ã\",\n    \"313\": \"Ë\",\n    \"323\": \"Ó\",\n    \"333\": \"Û\",\n    \"343\": \"ã\",\n    \"353\": \"ë\",\n    \"363\": \"ó\",\n    \"373\": \"û\",\n    \"244\": \"¤\",\n    \"254\": \"¬\",\n    \"264\": \"  ́\",\n    \"274\": \"1⁄4\",\n    \"304\": \"Ä\",\n    \"314\": \"Ì\",\n    \"324\": \"Ô\",\n    \"334\": \"Ü\",\n    \"344\": \"ä\",\n    \"354\": \"ì\",\n    \"364\": \"ô\",\n    \"374\": \"ü\",\n    \"245\": \"¥\",\n    \"255\": \"-\",\n    \"265\": \"μ\",\n    \"275\": \"1⁄2\",\n    \"305\": \"Å\",\n    \"315\": \"Í\",\n    \"325\": \"Õ\",\n    \"335\": \"Ý\",\n    \"345\": \"å\",\n    \"355\": \"í\",\n    \"365\": \"õ\",\n    \"375\": \"ý\",\n    \"246\": \"¦\",\n    \"256\": \"®\",\n    \"266\": \"¶\",\n    \"276\": \"3⁄4\",\n    \"306\": \"Æ\",\n    \"316\": \"Î\",\n    \"326\": \"Ö\",\n    \"336\": \"Þ\",\n    \"346\": \"æ\",\n    \"356\": \"î\",\n    \"366\": \"ö\",\n    \"376\": \"þ\",\n    \"247\": \"§\",\n    \"257\": \" ̄\",\n    \"267\": \"·\",\n    \"277\": \"¿\",\n    \"307\": \"Ç\",\n    \"317\": \"Ï\",\n    \"327\": \"×\",\n    \"337\": \"ß\",\n    \"347\": \"ç\",\n    \"357\": \"ï\",\n    \"367\": \"÷\",\n    \"377\": \"ÿ\",\n    \"250\": \" ̈\",\n    \"260\": \"°\",\n    \"270\": \" ̧\",\n    \"300\": \"À\",\n    \"310\": \"È\",\n    \"320\": \"Ð\",\n    \"330\": \"Ø\",\n    \"340\": \"à\",\n    \"350\": \"è\",\n    \"360\": \"ð\",\n    \"370\": \"ø\",\n    \"251\": \"©\",\n    \"261\": \"±\",\n    \"271\": \"1\",\n    \"301\": \"Á\",\n    \"311\": \"É\",\n    \"321\": \"Ñ\",\n    \"331\": \"Ù\",\n    \"341\": \"á\",\n    \"351\": \"é\",\n    \"361\": \"ñ\",\n    \"371\": \"ù\"\n  };\n\n  this.translateString = function (str) {\n    var arr = str.split('\\\\');\n    if (arr.length === 1) return str;\n    var out = null;\n    parseCommon.each(arr, function (s) {\n      if (out === null) out = s;else {\n        var c = charMap[s.substring(0, 2)];\n        if (c !== undefined) out += c + s.substring(2);else {\n          c = charMap2[s.substring(0, 3)];\n          if (c !== undefined) out += c + s.substring(3);else {\n            c = charMap1[s.substring(0, 1)];\n            if (c !== undefined) out += c + s.substring(1);else out += \"\\\\\" + s;\n          }\n        }\n      }\n    });\n    return out;\n  };\n\n  this.getNumber = function (line, index) {\n    var num = 0;\n\n    while (index < line.length) {\n      switch (line.charAt(index)) {\n        case '0':\n          num = num * 10;\n          index++;\n          break;\n\n        case '1':\n          num = num * 10 + 1;\n          index++;\n          break;\n\n        case '2':\n          num = num * 10 + 2;\n          index++;\n          break;\n\n        case '3':\n          num = num * 10 + 3;\n          index++;\n          break;\n\n        case '4':\n          num = num * 10 + 4;\n          index++;\n          break;\n\n        case '5':\n          num = num * 10 + 5;\n          index++;\n          break;\n\n        case '6':\n          num = num * 10 + 6;\n          index++;\n          break;\n\n        case '7':\n          num = num * 10 + 7;\n          index++;\n          break;\n\n        case '8':\n          num = num * 10 + 8;\n          index++;\n          break;\n\n        case '9':\n          num = num * 10 + 9;\n          index++;\n          break;\n\n        default:\n          return {\n            num: num,\n            index: index\n          };\n      }\n    }\n\n    return {\n      num: num,\n      index: index\n    };\n  };\n\n  this.getFraction = function (line, index) {\n    var num = 1;\n    var den = 1;\n\n    if (line.charAt(index) !== '/') {\n      var ret = this.getNumber(line, index);\n      num = ret.num;\n      index = ret.index;\n    }\n\n    if (line.charAt(index) === '/') {\n      index++;\n\n      if (line.charAt(index) === '/') {\n        var div = 0.5;\n\n        while (line.charAt(index++) === '/') {\n          div = div / 2;\n        }\n\n        return {\n          value: num * div,\n          index: index - 1\n        };\n      } else {\n        var iSave = index;\n        var ret2 = this.getNumber(line, index);\n        if (ret2.num === 0 && iSave === index) // If we didn't use any characters, it is an implied 2\n          ret2.num = 2;\n        if (ret2.num !== 0) den = ret2.num;\n        index = ret2.index;\n      }\n    }\n\n    return {\n      value: num / den,\n      index: index\n    };\n  };\n\n  this.theReverser = function (str) {\n    if (parseCommon.endsWith(str, \", The\")) return \"The \" + str.substring(0, str.length - 5);\n    if (parseCommon.endsWith(str, \", A\")) return \"A \" + str.substring(0, str.length - 3);\n    return str;\n  };\n\n  this.stripComment = function (str) {\n    var i = str.indexOf('%');\n    if (i >= 0) return parseCommon.strip(str.substring(0, i));\n    return parseCommon.strip(str);\n  };\n\n  this.getInt = function (str) {\n    // This parses the beginning of the string for a number and returns { value: num, digits: num }\n    // If digits is 0, then the string didn't point to a number.\n    var x = parseInt(str);\n    if (isNaN(x)) return {\n      digits: 0\n    };\n    var s = \"\" + x;\n    var i = str.indexOf(s); // This is to account for leading spaces\n\n    return {\n      value: x,\n      digits: i + s.length\n    };\n  };\n\n  this.getFloat = function (str) {\n    // This parses the beginning of the string for a number and returns { value: num, digits: num }\n    // If digits is 0, then the string didn't point to a number.\n    var x = parseFloat(str);\n    if (isNaN(x)) return {\n      digits: 0\n    };\n    var s = \"\" + x;\n    var i = str.indexOf(s); // This is to account for leading spaces\n\n    return {\n      value: x,\n      digits: i + s.length\n    };\n  };\n\n  this.getMeasurement = function (tokens) {\n    if (tokens.length === 0) return {\n      used: 0\n    };\n    var used = 1;\n    var num = '';\n\n    if (tokens[0].token === '-') {\n      tokens.shift();\n      num = '-';\n      used++;\n    } else if (tokens[0].type !== 'number') return {\n      used: 0\n    };\n\n    num += tokens.shift().token;\n    if (tokens.length === 0) return {\n      used: 1,\n      value: parseInt(num)\n    };\n    var x = tokens.shift();\n\n    if (x.token === '.') {\n      used++;\n      if (tokens.length === 0) return {\n        used: used,\n        value: parseInt(num)\n      };\n\n      if (tokens[0].type === 'number') {\n        x = tokens.shift();\n        num = num + '.' + x.token;\n        used++;\n        if (tokens.length === 0) return {\n          used: used,\n          value: parseFloat(num)\n        };\n      }\n\n      x = tokens.shift();\n    }\n\n    switch (x.token) {\n      case 'pt':\n        return {\n          used: used + 1,\n          value: parseFloat(num)\n        };\n\n      case 'cm':\n        return {\n          used: used + 1,\n          value: parseFloat(num) / 2.54 * 72\n        };\n\n      case 'in':\n        return {\n          used: used + 1,\n          value: parseFloat(num) * 72\n        };\n\n      default:\n        tokens.unshift(x);\n        return {\n          used: used,\n          value: parseFloat(num)\n        };\n    }\n\n    return {\n      used: 0\n    };\n  };\n\n  var substInChord = function substInChord(str) {\n    while (str.indexOf(\"\\\\n\") !== -1) {\n      str = str.replace(\"\\\\n\", \"\\n\");\n    }\n\n    return str;\n  };\n\n  this.getBrackettedSubstring = function (line, i, maxErrorChars, _matchChar) {\n    // This extracts the sub string by looking at the first character and searching for that\n    // character later in the line (or search for the optional _matchChar).\n    // For instance, if the first character is a quote it will look for\n    // the end quote. If the end of the line is reached, then only up to the default number\n    // of characters are returned, so that a missing end quote won't eat up the entire line.\n    // It returns the substring and the number of characters consumed.\n    // The number of characters consumed is normally two more than the size of the substring,\n    // but in the error case it might not be.\n    var matchChar = _matchChar || line.charAt(i);\n\n    var pos = i + 1;\n\n    while (pos < line.length && line.charAt(pos) !== matchChar) {\n      ++pos;\n    }\n\n    if (line.charAt(pos) === matchChar) return [pos - i + 1, substInChord(line.substring(i + 1, pos)), true];else // we hit the end of line, so we'll just pick an arbitrary num of chars so the line doesn't disappear.\n      {\n        pos = i + maxErrorChars;\n        if (pos > line.length - 1) pos = line.length - 1;\n        return [pos - i + 1, substInChord(line.substring(i + 1, pos)), false];\n      }\n  };\n};\n\nmodule.exports = Tokenizer;","//    abc_tune.js: a computer usable internal structure representing one tune.\n//    Copyright (C) 2010-2018 Paul Rosen (paul at paulrosen dot net)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar parseCommon = require('../parse/abc_common');\n\nvar parseKeyVoice = require('../parse/abc_parse_key_voice');\n\nvar spacing = require('../write/abc_spacing');\n/**\n * This is the data for a single ABC tune. It is created and populated by the window.ABCJS.parse.Parse class.\n * Also known as the ABCJS Abstract Syntax Tree\n * @alternateClassName ABCJS.Tune\n */\n\n\nvar Tune = function Tune() {\n  // The structure consists of a hash with the following two items:\n  // metaText: a hash of {key, value}, where key is one of: title, author, rhythm, source, transcription, unalignedWords, etc...\n  // tempo: { noteLength: number (e.g. .125), bpm: number }\n  // lines: an array of elements, or one of the following:\n  //\n  // STAFF: array of elements\n  // SUBTITLE: string\n  //\n  // TODO: actually, the start and end char should modify each part of the note type\n  // The elements all have a type field and a start and end char\n  // field. The rest of the fields depend on the type and are listed below:\n  // REST: duration=1,2,4,8; chord: string\n  // NOTE: accidental=none,dbl_flat,flat,natural,sharp,dbl_sharp\n  //\t\tpitch: \"C\" is 0. The numbers refer to the pitch letter.\n  //\t\tduration: .5 (sixteenth), .75 (dotted sixteenth), 1 (eighth), 1.5 (dotted eighth)\n  //\t\t\t2 (quarter), 3 (dotted quarter), 4 (half), 6 (dotted half) 8 (whole)\n  //\t\tchord: { name:chord, position: one of 'default', 'above', 'below' }\n  //\t\tend_beam = true or undefined if this is the last note in a beam.\n  //\t\tlyric: array of { syllable: xxx, divider: one of \" -_\" }\n  //\t\tstartTie = true|undefined\n  //\t\tendTie = true|undefined\n  //\t\tstartTriplet = num <- that is the number to print\n  //\t\tendTriplet = true|undefined (the last note of the triplet)\n  // TODO: actually, decoration should be an array.\n  //\t\tdecoration: upbow, downbow, accent\n  // BAR: type=bar_thin, bar_thin_thick, bar_thin_thin, bar_thick_thin, bar_right_repeat, bar_left_repeat, bar_double_repeat\n  //\tnumber: 1 or 2: if it is the start of a first or second ending\n  // CLEF: type=treble,bass\n  // KEY-SIG:\n  //\t\taccidentals[]: { acc:sharp|dblsharp|natural|flat|dblflat,  note:a|b|c|d|e|f|g }\n  // METER: type: common_time,cut_time,specified\n  //\t\tif specified, { num: 99, den: 99 }\n  this.getBeatLength = function () {\n    for (var i = 0; i < this.lines.length; i++) {\n      if (this.lines[i].staff) {\n        for (var j = 0; j < this.lines[i].staff.length; j++) {\n          if (this.lines[i].staff[j].meter) {\n            var meter = this.lines[i].staff[j].meter;\n\n            if (meter.type === \"specified\") {\n              if (meter.value.length > 0) {\n                var num = parseInt(meter.value[0].num, 10);\n                var den = parseInt(meter.value[0].den, 10);\n                if (num === 3 && den === 8) return 3 / 8;\n                if (num === 6 && den === 8) return 3 / 8;\n                if (num === 9 && den === 8) return 3 / 8;\n                if (num === 12 && den === 8) return 3 / 8;\n                return 1 / den;\n              } else return 1 / 4; // No meter was specified, so use this default\n\n            } else if (meter.type === 'cut_time') {\n              return 1 / 2;\n            } else {\n              return 1 / 4; // TODO-PER: this works for common time, but not for the ancient meters.\n            }\n          }\n        }\n      }\n    }\n\n    return 1 / 4; // No meter was specified, so use this default\n  };\n\n  this.getPickupLength = function () {\n    var pickupLength = 0;\n    var barLength = this.getBarLength();\n\n    for (var i = 0; i < this.lines.length; i++) {\n      if (this.lines[i].staff) {\n        for (var j = 0; j < this.lines[i].staff.length; j++) {\n          for (var v = 0; v < this.lines[i].staff[j].voices.length; v++) {\n            var voice = this.lines[i].staff[j].voices[v];\n            var hasNote = false;\n            var tripletMultiplier = 1;\n\n            for (var el = 0; el < voice.length; el++) {\n              var isSpacer = voice[el].rest && voice[el].rest.type === \"spacer\";\n              if (voice[el].startTriplet) tripletMultiplier = voice[el].tripletMultiplier;\n              if (voice[el].duration && !isSpacer) pickupLength += voice[el].duration * tripletMultiplier;\n              if (voice[el].endTriplet) tripletMultiplier = 1;\n              if (pickupLength >= barLength) pickupLength -= barLength;\n              if (voice[el].el_type === 'bar') return pickupLength;\n            }\n          }\n        }\n      }\n    }\n\n    return pickupLength;\n  };\n\n  this.getBarLength = function () {\n    var meter = this.getMeterFraction();\n    return meter.num / meter.den;\n  };\n\n  this.millisecondsPerMeasure = function (bpmOverride) {\n    var bpm;\n\n    if (bpmOverride) {\n      bpm = bpmOverride;\n    } else {\n      var tempo = this.metaText ? this.metaText.tempo : null;\n      bpm = this.getBpm(tempo);\n    }\n\n    if (bpm <= 0) bpm = 1; // I don't think this can happen, but we don't want a possibility of dividing by zero.\n\n    var beatsPerMeasure;\n    var meter = this.getMeterFraction();\n\n    if (meter.den === 8) {\n      beatsPerMeasure = meter.num / 3;\n    } else {\n      beatsPerMeasure = meter.num;\n    }\n\n    if (beatsPerMeasure <= 0) // This probably won't happen in any normal case - but it is possible that the meter could be set to something nonsensical.\n      beatsPerMeasure = 1;\n    var minutesPerMeasure = beatsPerMeasure / bpm;\n    return minutesPerMeasure * 60000;\n  };\n\n  this.reset = function () {\n    this.version = \"1.0.1\";\n    this.media = \"screen\";\n    this.metaText = {};\n    this.formatting = {};\n    this.lines = [];\n    this.staffNum = 0;\n    this.voiceNum = 0;\n    this.lineNum = 0;\n  };\n\n  this.resolveOverlays = function () {\n    var madeChanges = false;\n\n    for (var i = 0; i < this.lines.length; i++) {\n      var line = this.lines[i];\n\n      if (line.staff) {\n        for (var j = 0; j < line.staff.length; j++) {\n          var staff = line.staff[j];\n          var overlayVoice = [];\n\n          for (var k = 0; k < staff.voices.length; k++) {\n            var voice = staff.voices[k];\n            overlayVoice.push({\n              hasOverlay: false,\n              voice: [],\n              snip: []\n            });\n            var durationThisBar = 0;\n            var inOverlay = false;\n            var snipStart = -1;\n\n            for (var kk = 0; kk < voice.length; kk++) {\n              var event = voice[kk];\n\n              if (event.el_type === \"overlay\" && !inOverlay) {\n                madeChanges = true;\n                inOverlay = true;\n                snipStart = kk;\n                overlayVoice[k].hasOverlay = true;\n              } else if (event.el_type === \"bar\") {\n                if (inOverlay) {\n                  // delete the overlay events from this array without messing up this loop.\n                  inOverlay = false;\n                  overlayVoice[k].snip.push({\n                    start: snipStart,\n                    len: kk - snipStart\n                  });\n                  overlayVoice[k].voice.push(event); // Also end the overlay with the barline.\n                } else {\n                  overlayVoice[k].voice.push({\n                    el_type: \"note\",\n                    duration: durationThisBar,\n                    rest: {\n                      type: \"invisible\"\n                    },\n                    startChar: event.startChar,\n                    endChar: event.endChar\n                  });\n                  overlayVoice[k].voice.push(event);\n                }\n\n                durationThisBar = 0;\n              } else if (event.el_type === \"note\") {\n                if (inOverlay) {\n                  overlayVoice[k].voice.push(event);\n                } else {\n                  durationThisBar += event.duration;\n                }\n              } else if (event.el_type === \"scale\" || event.el_type === \"stem\" || event.el_type === \"overlay\" || event.el_type === \"style\" || event.el_type === \"transpose\") {\n                // These types of events are duplicated on the overlay layer.\n                overlayVoice[k].voice.push(event);\n              }\n            }\n\n            if (overlayVoice[k].hasOverlay && overlayVoice[k].snip.length === 0) {\n              // there was no closing bar, so we didn't set the snip amount.\n              overlayVoice[k].snip.push({\n                start: snipStart,\n                len: voice.length - snipStart\n              });\n            }\n          }\n\n          for (k = 0; k < overlayVoice.length; k++) {\n            var ov = overlayVoice[k];\n\n            if (ov.hasOverlay) {\n              staff.voices.push(ov.voice);\n\n              for (var kkk = ov.snip.length - 1; kkk >= 0; kkk--) {\n                var snip = ov.snip[kkk];\n                staff.voices[k].splice(snip.start, snip.len);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return madeChanges;\n  };\n\n  function fixTitles(lines) {\n    // We might have name and subname defined. We now know what line everything is on, so we can determine which to use.\n    var firstMusicLine = true;\n\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i];\n\n      if (line.staff) {\n        for (var j = 0; j < line.staff.length; j++) {\n          var staff = line.staff[j];\n\n          if (staff.title) {\n            var hasATitle = false;\n\n            for (var k = 0; k < staff.title.length; k++) {\n              if (staff.title[k]) {\n                staff.title[k] = firstMusicLine ? staff.title[k].name : staff.title[k].subname;\n                if (staff.title[k]) hasATitle = true;else staff.title[k] = '';\n              } else staff.title[k] = '';\n            }\n\n            if (!hasATitle) delete staff.title;\n          }\n        }\n\n        firstMusicLine = false;\n      }\n    }\n  }\n\n  this.cleanUp = function (defWidth, defLength, barsperstaff, staffnonote, currSlur) {\n    this.closeLine(); // Close the last line.\n    // If the tempo was created with a string like \"Allegro\", then the duration of a beat needs to be set at the last moment, when it is most likely known.\n\n    if (this.metaText.tempo && this.metaText.tempo.bpm && !this.metaText.tempo.duration) this.metaText.tempo.duration = [this.getBeatLength()]; // Remove any blank lines\n\n    var anyDeleted = false;\n    var i, s, v;\n\n    for (i = 0; i < this.lines.length; i++) {\n      if (this.lines[i].staff !== undefined) {\n        var hasAny = false;\n\n        for (s = 0; s < this.lines[i].staff.length; s++) {\n          if (this.lines[i].staff[s] === undefined) {\n            anyDeleted = true;\n            this.lines[i].staff[s] = null; //this.lines[i].staff[s] = { voices: []};\t// TODO-PER: There was a part missing in the abc music. How should we recover?\n          } else {\n            for (v = 0; v < this.lines[i].staff[s].voices.length; v++) {\n              if (this.lines[i].staff[s].voices[v] === undefined) this.lines[i].staff[s].voices[v] = []; // TODO-PER: There was a part missing in the abc music. How should we recover?\n              else if (this.containsNotes(this.lines[i].staff[s].voices[v])) hasAny = true;\n            }\n          }\n        }\n\n        if (!hasAny) {\n          this.lines[i] = null;\n          anyDeleted = true;\n        }\n      }\n    }\n\n    if (anyDeleted) {\n      this.lines = parseCommon.compact(this.lines);\n      parseCommon.each(this.lines, function (line) {\n        if (line.staff) line.staff = parseCommon.compact(line.staff);\n      });\n    } // if we exceeded the number of bars allowed on a line, then force a new line\n\n\n    if (barsperstaff) {\n      while (wrapMusicLines(this.lines, barsperstaff)) {// This will keep wrapping until the end of the piece.\n      }\n    } // If we were passed staffnonote, then we want to get rid of all staffs that contain only rests.\n\n\n    if (staffnonote) {\n      anyDeleted = false;\n\n      for (i = 0; i < this.lines.length; i++) {\n        if (this.lines[i].staff !== undefined) {\n          for (s = 0; s < this.lines[i].staff.length; s++) {\n            var keepThis = false;\n\n            for (v = 0; v < this.lines[i].staff[s].voices.length; v++) {\n              if (this.containsNotesStrict(this.lines[i].staff[s].voices[v])) {\n                keepThis = true;\n              }\n            }\n\n            if (!keepThis) {\n              anyDeleted = true;\n              this.lines[i].staff[s] = null;\n            }\n          }\n        }\n      }\n\n      if (anyDeleted) {\n        parseCommon.each(this.lines, function (line) {\n          if (line.staff) line.staff = parseCommon.compact(line.staff);\n        });\n      }\n    }\n\n    fixTitles(this.lines); // Remove the temporary working variables\n\n    for (i = 0; i < this.lines.length; i++) {\n      if (this.lines[i].staff) {\n        for (s = 0; s < this.lines[i].staff.length; s++) {\n          delete this.lines[i].staff[s].workingClef;\n        }\n      }\n    } // If there are overlays, create new voices for them.\n\n\n    while (this.resolveOverlays()) {// keep resolving overlays as long as any are found.\n    }\n\n    function cleanUpSlursInLine(line) {\n      var x; //\t\t\tvar lyr = null;\t// TODO-PER: debugging.\n\n      var addEndSlur = function addEndSlur(obj, num, chordPos) {\n        if (currSlur[chordPos] === undefined) {\n          // There isn't an exact match for note position, but we'll take any other open slur.\n          for (x = 0; x < currSlur.length; x++) {\n            if (currSlur[x] !== undefined) {\n              chordPos = x;\n              break;\n            }\n          }\n\n          if (currSlur[chordPos] === undefined) {\n            var offNum = chordPos * 100 + 1;\n            parseCommon.each(obj.endSlur, function (x) {\n              if (offNum === x) --offNum;\n            });\n            currSlur[chordPos] = [offNum];\n          }\n        }\n\n        var slurNum;\n\n        for (var i = 0; i < num; i++) {\n          slurNum = currSlur[chordPos].pop();\n          obj.endSlur.push(slurNum); //\t\t\t\t\tlyr.syllable += '<' + slurNum;\t// TODO-PER: debugging\n        }\n\n        if (currSlur[chordPos].length === 0) delete currSlur[chordPos];\n        return slurNum;\n      };\n\n      var addStartSlur = function addStartSlur(obj, num, chordPos, usedNums) {\n        obj.startSlur = [];\n\n        if (currSlur[chordPos] === undefined) {\n          currSlur[chordPos] = [];\n        }\n\n        var nextNum = chordPos * 100 + 1;\n\n        for (var i = 0; i < num; i++) {\n          if (usedNums) {\n            parseCommon.each(usedNums, function (x) {\n              if (nextNum === x) ++nextNum;\n            });\n            parseCommon.each(usedNums, function (x) {\n              if (nextNum === x) ++nextNum;\n            });\n            parseCommon.each(usedNums, function (x) {\n              if (nextNum === x) ++nextNum;\n            });\n          }\n\n          parseCommon.each(currSlur[chordPos], function (x) {\n            if (nextNum === x) ++nextNum;\n          });\n          parseCommon.each(currSlur[chordPos], function (x) {\n            if (nextNum === x) ++nextNum;\n          });\n          currSlur[chordPos].push(nextNum);\n          obj.startSlur.push({\n            label: nextNum\n          }); //\t\t\t\t\tlyr.syllable += ' ' + nextNum + '>';\t// TODO-PER:debugging\n\n          nextNum++;\n        }\n      };\n\n      for (var i = 0; i < line.length; i++) {\n        var el = line[i]; //\t\t\t\tif (el.lyric === undefined)\t// TODO-PER: debugging\n        //\t\t\t\t\tel.lyric = [{ divider: '-' }];\t// TODO-PER: debugging\n        //\t\t\t\tlyr = el.lyric[0];\t// TODO-PER: debugging\n        //\t\t\t\tlyr.syllable = '';\t// TODO-PER: debugging\n\n        if (el.el_type === 'note') {\n          if (el.gracenotes) {\n            for (var g = 0; g < el.gracenotes.length; g++) {\n              if (el.gracenotes[g].endSlur) {\n                var gg = el.gracenotes[g].endSlur;\n                el.gracenotes[g].endSlur = [];\n\n                for (var ggg = 0; ggg < gg; ggg++) {\n                  addEndSlur(el.gracenotes[g], 1, 20);\n                }\n              }\n\n              if (el.gracenotes[g].startSlur) {\n                x = el.gracenotes[g].startSlur;\n                addStartSlur(el.gracenotes[g], x, 20);\n              }\n            }\n          }\n\n          if (el.endSlur) {\n            x = el.endSlur;\n            el.endSlur = [];\n            addEndSlur(el, x, 0);\n          }\n\n          if (el.startSlur) {\n            x = el.startSlur;\n            addStartSlur(el, x, 0);\n          }\n\n          if (el.pitches) {\n            var usedNums = [];\n\n            for (var p = 0; p < el.pitches.length; p++) {\n              if (el.pitches[p].endSlur) {\n                var k = el.pitches[p].endSlur;\n                el.pitches[p].endSlur = [];\n\n                for (var j = 0; j < k; j++) {\n                  var slurNum = addEndSlur(el.pitches[p], 1, p + 1);\n                  usedNums.push(slurNum);\n                }\n              }\n            }\n\n            for (p = 0; p < el.pitches.length; p++) {\n              if (el.pitches[p].startSlur) {\n                x = el.pitches[p].startSlur;\n                addStartSlur(el.pitches[p], x, p + 1, usedNums);\n              }\n            } // Correct for the weird gracenote case where ({g}a) should match.\n            // The end slur was already assigned to the note, and needs to be moved to the first note of the graces.\n\n\n            if (el.gracenotes && el.pitches[0].endSlur && el.pitches[0].endSlur[0] === 100 && el.pitches[0].startSlur) {\n              if (el.gracenotes[0].endSlur) el.gracenotes[0].endSlur.push(el.pitches[0].startSlur[0].label);else el.gracenotes[0].endSlur = [el.pitches[0].startSlur[0].label];\n              if (el.pitches[0].endSlur.length === 1) delete el.pitches[0].endSlur;else if (el.pitches[0].endSlur[0] === 100) el.pitches[0].endSlur.shift();else if (el.pitches[0].endSlur[el.pitches[0].endSlur.length - 1] === 100) el.pitches[0].endSlur.pop();\n              if (currSlur[1].length === 1) delete currSlur[1];else currSlur[1].pop();\n            }\n          }\n        }\n      }\n    } // TODO-PER: This could be done faster as we go instead of as the last step.\n\n\n    function fixClefPlacement(el) {\n      parseKeyVoice.fixClef(el); //if (el.el_type === 'clef') {\n      //\t\t\t\tvar min = -2;\n      //\t\t\t\tvar max = 5;\n      //\t\t\t\tswitch(el.type) {\n      //\t\t\t\t\tcase 'treble+8':\n      //\t\t\t\t\tcase 'treble-8':\n      //\t\t\t\t\t\tbreak;\n      //\t\t\t\t\tcase 'bass':\n      //\t\t\t\t\tcase 'bass+8':\n      //\t\t\t\t\tcase 'bass-8':\n      //\t\t\t\t\t\tel.verticalPos = 20 + el.verticalPos; min += 6; max += 6;\n      //\t\t\t\t\t\tbreak;\n      //\t\t\t\t\tcase 'tenor':\n      //\t\t\t\t\tcase 'tenor+8':\n      //\t\t\t\t\tcase 'tenor-8':\n      //\t\t\t\t\t\tel.verticalPos = - el.verticalPos; min = -40; max = 40;\n      ////\t\t\t\t\t\tel.verticalPos+=2; min += 6; max += 6;\n      //\t\t\t\t\t\tbreak;\n      //\t\t\t\t\tcase 'alto':\n      //\t\t\t\t\tcase 'alto+8':\n      //\t\t\t\t\tcase 'alto-8':\n      //\t\t\t\t\t\tel.verticalPos = - el.verticalPos; min = -40; max = 40;\n      ////\t\t\t\t\t\tel.verticalPos-=2; min += 4; max += 4;\n      //\t\t\t\t\t\tbreak;\n      //\t\t\t\t}\n      //\t\t\t\tif (el.verticalPos < min) {\n      //\t\t\t\t\twhile (el.verticalPos < min)\n      //\t\t\t\t\t\tel.verticalPos += 7;\n      //\t\t\t\t} else if (el.verticalPos > max) {\n      //\t\t\t\t\twhile (el.verticalPos > max)\n      //\t\t\t\t\t\tel.verticalPos -= 7;\n      //\t\t\t\t}\n      //}\n    }\n\n    function wrapMusicLines(lines, barsperstaff) {\n      for (i = 0; i < lines.length; i++) {\n        if (lines[i].staff !== undefined) {\n          for (s = 0; s < lines[i].staff.length; s++) {\n            var permanentItems = [];\n\n            for (v = 0; v < lines[i].staff[s].voices.length; v++) {\n              var voice = lines[i].staff[s].voices[v];\n              var barNumThisLine = 0;\n\n              for (var n = 0; n < voice.length; n++) {\n                if (voice[n].el_type === 'bar') {\n                  barNumThisLine++;\n\n                  if (barNumThisLine >= barsperstaff) {\n                    // push everything else to the next line, if there is anything else,\n                    // and there is a next line. If there isn't a next line, create one.\n                    if (n < voice.length - 1) {\n                      var nextLine = getNextMusicLine(lines, i);\n\n                      if (!nextLine) {\n                        var cp = JSON.parse(JSON.stringify(lines[i]));\n                        lines.push(parseCommon.clone(cp));\n                        nextLine = lines[lines.length - 1];\n\n                        for (var ss = 0; ss < nextLine.staff.length; ss++) {\n                          for (var vv = 0; vv < nextLine.staff[ss].voices.length; vv++) {\n                            nextLine.staff[ss].voices[vv] = [];\n                          }\n                        }\n                      }\n\n                      var startElement = n + 1;\n                      var section = lines[i].staff[s].voices[v].slice(startElement);\n                      lines[i].staff[s].voices[v] = lines[i].staff[s].voices[v].slice(0, startElement);\n                      nextLine.staff[s].voices[v] = permanentItems.concat(section.concat(nextLine.staff[s].voices[v]));\n                      return true;\n                    }\n                  }\n                } else if (!voice[n].duration) {\n                  permanentItems.push(voice[n]);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n\n    function getNextMusicLine(lines, currentLine) {\n      currentLine++;\n\n      while (lines.length > currentLine) {\n        if (lines[currentLine].staff) return lines[currentLine];\n        currentLine++;\n      }\n\n      return null;\n    }\n\n    for (this.lineNum = 0; this.lineNum < this.lines.length; this.lineNum++) {\n      var staff = this.lines[this.lineNum].staff;\n\n      if (staff) {\n        for (this.staffNum = 0; this.staffNum < staff.length; this.staffNum++) {\n          if (staff[this.staffNum].clef) fixClefPlacement(staff[this.staffNum].clef);\n\n          for (this.voiceNum = 0; this.voiceNum < staff[this.staffNum].voices.length; this.voiceNum++) {\n            var voice = staff[this.staffNum].voices[this.voiceNum];\n            cleanUpSlursInLine(voice);\n\n            for (var j = 0; j < voice.length; j++) {\n              if (voice[j].el_type === 'clef') fixClefPlacement(voice[j]);\n            }\n\n            if (voice.length > 0 && voice[voice.length - 1].barNumber) {\n              // Don't hang a bar number on the last bar line: it should go on the next line.\n              var nextLine = getNextMusicLine(this.lines, this.lineNum);\n              if (nextLine) nextLine.staff[0].barNumber = voice[voice.length - 1].barNumber;\n              delete voice[voice.length - 1].barNumber;\n            }\n          }\n        }\n      }\n    }\n\n    if (!this.formatting.pagewidth) this.formatting.pagewidth = defWidth;\n    if (!this.formatting.pageheight) this.formatting.pageheight = defLength; // Remove temporary variables that the outside doesn't need to know about\n\n    delete this.staffNum;\n    delete this.voiceNum;\n    delete this.lineNum;\n    delete this.potentialStartBeam;\n    delete this.potentialEndBeam;\n    delete this.vskipPending;\n    return currSlur;\n  };\n\n  this.reset();\n\n  this.getLastNote = function () {\n    if (this.lines[this.lineNum] && this.lines[this.lineNum].staff && this.lines[this.lineNum].staff[this.staffNum] && this.lines[this.lineNum].staff[this.staffNum].voices[this.voiceNum]) {\n      for (var i = this.lines[this.lineNum].staff[this.staffNum].voices[this.voiceNum].length - 1; i >= 0; i--) {\n        var el = this.lines[this.lineNum].staff[this.staffNum].voices[this.voiceNum][i];\n\n        if (el.el_type === 'note') {\n          return el;\n        }\n      }\n    }\n\n    return null;\n  };\n\n  this.addTieToLastNote = function () {\n    // TODO-PER: if this is a chord, which note?\n    var el = this.getLastNote();\n\n    if (el && el.pitches && el.pitches.length > 0) {\n      el.pitches[0].startTie = {};\n      return true;\n    }\n\n    return false;\n  };\n\n  this.getDuration = function (el) {\n    if (el.duration) return el.duration; //if (el.pitches && el.pitches.length > 0) return el.pitches[0].duration;\n\n    return 0;\n  };\n\n  this.closeLine = function () {\n    if (this.potentialStartBeam && this.potentialEndBeam) {\n      this.potentialStartBeam.startBeam = true;\n      this.potentialEndBeam.endBeam = true;\n    }\n\n    delete this.potentialStartBeam;\n    delete this.potentialEndBeam;\n  };\n\n  this.appendElement = function (type, startChar, endChar, hashParams) {\n    var This = this;\n\n    var pushNote = function pushNote(hp) {\n      if (hp.pitches !== undefined) {\n        var mid = This.lines[This.lineNum].staff[This.staffNum].workingClef.verticalPos;\n        parseCommon.each(hp.pitches, function (p) {\n          p.verticalPos = p.pitch - mid;\n        });\n      }\n\n      if (hp.gracenotes !== undefined) {\n        var mid2 = This.lines[This.lineNum].staff[This.staffNum].workingClef.verticalPos;\n        parseCommon.each(hp.gracenotes, function (p) {\n          p.verticalPos = p.pitch - mid2;\n        });\n      }\n\n      This.lines[This.lineNum].staff[This.staffNum].voices[This.voiceNum].push(hp);\n    };\n\n    hashParams.el_type = type;\n    if (startChar !== null) hashParams.startChar = startChar;\n    if (endChar !== null) hashParams.endChar = endChar;\n\n    var endBeamHere = function endBeamHere() {\n      This.potentialStartBeam.startBeam = true;\n      hashParams.endBeam = true;\n      delete This.potentialStartBeam;\n      delete This.potentialEndBeam;\n    };\n\n    var endBeamLast = function endBeamLast() {\n      if (This.potentialStartBeam !== undefined && This.potentialEndBeam !== undefined) {\n        // Do we have a set of notes to beam?\n        This.potentialStartBeam.startBeam = true;\n        This.potentialEndBeam.endBeam = true;\n      }\n\n      delete This.potentialStartBeam;\n      delete This.potentialEndBeam;\n    };\n\n    if (type === 'note') {\n      // && (hashParams.rest !== undefined || hashParams.end_beam === undefined)) {\n      // Now, add the startBeam and endBeam where it is needed.\n      // end_beam is already set on the places where there is a forced end_beam. We'll remove that here after using that info.\n      // this.potentialStartBeam either points to null or the start beam.\n      // this.potentialEndBeam either points to null or the start beam.\n      // If we have a beam break (note is longer than a quarter, or an end_beam is on this element), then set the beam if we have one.\n      // reset the variables for the next notes.\n      var dur = This.getDuration(hashParams);\n\n      if (dur >= 0.25) {\n        // The beam ends on the note before this.\n        endBeamLast();\n      } else if (hashParams.force_end_beam_last && This.potentialStartBeam !== undefined) {\n        endBeamLast();\n      } else if (hashParams.end_beam && This.potentialStartBeam !== undefined) {\n        // the beam is forced to end on this note, probably because of a space in the ABC\n        if (hashParams.rest === undefined) endBeamHere();else endBeamLast();\n      } else if (hashParams.rest === undefined) {\n        // this a short note and we aren't about to end the beam\n        if (This.potentialStartBeam === undefined) {\n          // We aren't collecting notes for a beam, so start here.\n          if (!hashParams.end_beam) {\n            This.potentialStartBeam = hashParams;\n            delete This.potentialEndBeam;\n          }\n        } else {\n          This.potentialEndBeam = hashParams; // Continue the beaming, look for the end next note.\n        }\n      } //  end_beam goes on rests and notes which precede rests _except_ when a rest (or set of adjacent rests) has normal notes on both sides (no spaces)\n      //\t\t\tif (hashParams.rest !== undefined)\n      //\t\t\t{\n      //\t\t\t\thashParams.end_beam = true;\n      //\t\t\t\tvar el2 = this.getLastNote();\n      //\t\t\t\tif (el2) el2.end_beam = true;\n      //\t\t\t\t// TODO-PER: implement exception mentioned in the comment.\n      //\t\t\t}\n\n    } else {\n      // It's not a note, so there definitely isn't beaming after it.\n      endBeamLast();\n    }\n\n    delete hashParams.end_beam; // We don't want this temporary variable hanging around.\n\n    delete hashParams.force_end_beam_last; // We don't want this temporary variable hanging around.\n\n    pushNote(hashParams);\n  };\n\n  this.appendStartingElement = function (type, startChar, endChar, hashParams2) {\n    // If we're in the middle of beaming, then end the beam.\n    this.closeLine(); // We only ever want implied naturals the first time.\n\n    var impliedNaturals;\n\n    if (type === 'key') {\n      impliedNaturals = hashParams2.impliedNaturals;\n      delete hashParams2.impliedNaturals;\n      delete hashParams2.explicitAccidentals;\n    } // Clone the object because it will be sticking around for the next line and we don't want the extra fields in it.\n\n\n    var hashParams = parseCommon.clone(hashParams2);\n\n    if (this.lines[this.lineNum].staff) {\n      // be sure that we are on a music type line before doing the following.\n      // If this is the first item in this staff, then we might have to initialize the staff, first.\n      if (this.lines[this.lineNum].staff.length <= this.staffNum) {\n        this.lines[this.lineNum].staff[this.staffNum] = {};\n        this.lines[this.lineNum].staff[this.staffNum].clef = parseCommon.clone(this.lines[this.lineNum].staff[0].clef);\n        this.lines[this.lineNum].staff[this.staffNum].key = parseCommon.clone(this.lines[this.lineNum].staff[0].key);\n        if (this.lines[this.lineNum].staff[0].meter) this.lines[this.lineNum].staff[this.staffNum].meter = parseCommon.clone(this.lines[this.lineNum].staff[0].meter);\n        this.lines[this.lineNum].staff[this.staffNum].workingClef = parseCommon.clone(this.lines[this.lineNum].staff[0].workingClef);\n        this.lines[this.lineNum].staff[this.staffNum].voices = [[]];\n      } // If this is a clef type, then we replace the working clef on the line. This is kept separate from\n      // the clef in case there is an inline clef field. We need to know what the current position for\n      // the note is.\n\n\n      if (type === 'clef') {\n        this.lines[this.lineNum].staff[this.staffNum].workingClef = hashParams;\n      } // These elements should not be added twice, so if the element exists on this line without a note or bar before it, just replace the staff version.\n\n\n      var voice = this.lines[this.lineNum].staff[this.staffNum].voices[this.voiceNum];\n\n      for (var i = 0; i < voice.length; i++) {\n        if (voice[i].el_type === 'note' || voice[i].el_type === 'bar') {\n          hashParams.el_type = type;\n          hashParams.startChar = startChar;\n          hashParams.endChar = endChar;\n          if (impliedNaturals) hashParams.accidentals = impliedNaturals.concat(hashParams.accidentals);\n          voice.push(hashParams);\n          return;\n        }\n\n        if (voice[i].el_type === type) {\n          hashParams.el_type = type;\n          hashParams.startChar = startChar;\n          hashParams.endChar = endChar;\n          if (impliedNaturals) hashParams.accidentals = impliedNaturals.concat(hashParams.accidentals);\n          voice[i] = hashParams;\n          return;\n        }\n      } // We didn't see either that type or a note, so replace the element to the staff.\n\n\n      this.lines[this.lineNum].staff[this.staffNum][type] = hashParams2;\n    }\n  };\n\n  this.getNumLines = function () {\n    return this.lines.length;\n  };\n\n  this.pushLine = function (hash) {\n    if (this.vskipPending) {\n      hash.vskip = this.vskipPending;\n      delete this.vskipPending;\n    }\n\n    this.lines.push(hash);\n  };\n\n  this.addSubtitle = function (str) {\n    this.pushLine({\n      subtitle: str\n    });\n  };\n\n  this.addSpacing = function (num) {\n    this.vskipPending = num;\n  };\n\n  this.addNewPage = function (num) {\n    this.pushLine({\n      newpage: num\n    });\n  };\n\n  this.addSeparator = function (spaceAbove, spaceBelow, lineLength) {\n    this.pushLine({\n      separator: {\n        spaceAbove: spaceAbove,\n        spaceBelow: spaceBelow,\n        lineLength: lineLength\n      }\n    });\n  };\n\n  this.addText = function (str) {\n    this.pushLine({\n      text: str\n    });\n  };\n\n  this.addCentered = function (str) {\n    this.pushLine({\n      text: [{\n        text: str,\n        center: true\n      }]\n    });\n  };\n\n  this.containsNotes = function (voice) {\n    for (var i = 0; i < voice.length; i++) {\n      if (voice[i].el_type === 'note' || voice[i].el_type === 'bar') return true;\n    }\n\n    return false;\n  };\n\n  this.containsNotesStrict = function (voice) {\n    for (var i = 0; i < voice.length; i++) {\n      if (voice[i].el_type === 'note' && voice[i].rest === undefined) return true;\n    }\n\n    return false;\n  }; //\tanyVoiceContainsNotes: function(line) {\n  //\t\tfor (var i = 0; i < line.staff.voices.length; i++) {\n  //\t\t\tif (this.containsNotes(line.staff.voices[i]))\n  //\t\t\t\treturn true;\n  //\t\t}\n  //\t\treturn false;\n  //\t},\n\n\n  this.changeVoiceScale = function (scale) {\n    var This = this;\n    This.appendElement('scale', null, null, {\n      size: scale\n    });\n  };\n\n  this.startNewLine = function (params) {\n    // If the pointed to line doesn't exist, just create that. If the line does exist, but doesn't have any music on it, just use it.\n    // If it does exist and has music, then increment the line number. If the new element doesn't exist, create it.\n    var This = this;\n    this.closeLine(); // Close the previous line.\n\n    var createVoice = function createVoice(params) {\n      var thisStaff = This.lines[This.lineNum].staff[This.staffNum];\n      thisStaff.voices[This.voiceNum] = [];\n      if (!thisStaff.title) thisStaff.title = [];\n      thisStaff.title[This.voiceNum] = {\n        name: params.name,\n        subname: params.subname\n      };\n      if (params.style) This.appendElement('style', null, null, {\n        head: params.style\n      });\n      if (params.stem) This.appendElement('stem', null, null, {\n        direction: params.stem\n      });else if (This.voiceNum > 0) {\n        if (thisStaff.voices[0] !== undefined) {\n          var found = false;\n\n          for (var i = 0; i < thisStaff.voices[0].length; i++) {\n            if (thisStaff.voices[0].el_type === 'stem') found = true;\n          }\n\n          if (!found) {\n            var stem = {\n              el_type: 'stem',\n              direction: 'up'\n            };\n            thisStaff.voices[0].splice(0, 0, stem);\n          }\n        }\n\n        This.appendElement('stem', null, null, {\n          direction: 'down'\n        });\n      }\n      if (params.scale) This.appendElement('scale', null, null, {\n        size: params.scale\n      });\n    };\n\n    var createStaff = function createStaff(params) {\n      if (params.key && params.key.impliedNaturals) {\n        params.key.accidentals = params.key.accidentals.concat(params.key.impliedNaturals);\n        delete params.key.impliedNaturals;\n      }\n\n      This.lines[This.lineNum].staff[This.staffNum] = {\n        voices: [],\n        clef: params.clef,\n        key: params.key,\n        workingClef: params.clef\n      };\n\n      if (params.stafflines !== undefined) {\n        This.lines[This.lineNum].staff[This.staffNum].clef.stafflines = params.stafflines;\n        This.lines[This.lineNum].staff[This.staffNum].workingClef.stafflines = params.stafflines;\n      }\n\n      if (params.staffscale) {\n        This.lines[This.lineNum].staff[This.staffNum].staffscale = params.staffscale;\n      }\n\n      if (params.tripletfont) This.lines[This.lineNum].staff[This.staffNum].tripletfont = params.tripletfont;\n      if (params.vocalfont) This.lines[This.lineNum].staff[This.staffNum].vocalfont = params.vocalfont;\n      if (params.bracket) This.lines[This.lineNum].staff[This.staffNum].bracket = params.bracket;\n      if (params.brace) This.lines[This.lineNum].staff[This.staffNum].brace = params.brace;\n      if (params.connectBarLines) This.lines[This.lineNum].staff[This.staffNum].connectBarLines = params.connectBarLines;\n      if (params.barNumber) This.lines[This.lineNum].staff[This.staffNum].barNumber = params.barNumber;\n      createVoice(params); // Some stuff just happens for the first voice\n\n      if (params.part) This.appendElement('part', params.part.startChar, params.part.endChar, {\n        title: params.part.title\n      });\n      if (params.meter !== undefined) This.lines[This.lineNum].staff[This.staffNum].meter = params.meter;\n    };\n\n    var createLine = function createLine(params) {\n      This.lines[This.lineNum] = {\n        staff: []\n      };\n      createStaff(params);\n    };\n\n    if (this.lines[this.lineNum] === undefined) createLine(params);else if (this.lines[this.lineNum].staff === undefined) {\n      this.lineNum++;\n      this.startNewLine(params);\n    } else if (this.lines[this.lineNum].staff[this.staffNum] === undefined) createStaff(params);else if (this.lines[this.lineNum].staff[this.staffNum].voices[this.voiceNum] === undefined) createVoice(params);else if (!this.containsNotes(this.lines[this.lineNum].staff[this.staffNum].voices[this.voiceNum])) return;else {\n      this.lineNum++;\n      this.startNewLine(params);\n    }\n  };\n\n  this.hasBeginMusic = function () {\n    // return true if there exists at least one line that contains \"staff\"\n    for (var i = 0; i < this.lines.length; i++) {\n      if (this.lines[i].staff) return true;\n    }\n\n    return false;\n  };\n\n  this.isFirstLine = function (index) {\n    for (var i = index - 1; i >= 0; i--) {\n      if (this.lines[i].staff !== undefined) return false;\n    }\n\n    return true;\n  };\n\n  this.getMeter = function () {\n    for (var i = 0; i < this.lines.length; i++) {\n      var line = this.lines[i];\n\n      if (line.staff) {\n        for (var j = 0; j < line.staff.length; j++) {\n          var meter = line.staff[j].meter;\n\n          if (meter) {\n            return meter;\n          }\n        }\n      }\n    }\n\n    return {\n      type: \"common_time\"\n    };\n  };\n\n  this.getMeterFraction = function () {\n    var meter = this.getMeter();\n    var num = 4;\n    var den = 4;\n\n    if (meter) {\n      if (meter.type === 'specified') {\n        num = parseInt(meter.value[0].num, 10);\n        den = parseInt(meter.value[0].den, 10);\n      } else if (meter.type === 'cut_time') {\n        num = 2;\n        den = 2;\n      } else if (meter.type === 'common_time') {\n        num = 4;\n        den = 4;\n      }\n    }\n\n    this.meter = {\n      num: num,\n      den: den\n    };\n    return this.meter; // TODO-PER: is this saved value used anywhere? A get function shouldn't change state.\n  };\n\n  this.getCurrentVoice = function () {\n    if (this.lines[this.lineNum] !== undefined && this.lines[this.lineNum].staff[this.staffNum] !== undefined && this.lines[this.lineNum].staff[this.staffNum].voices[this.voiceNum] !== undefined) return this.lines[this.lineNum].staff[this.staffNum].voices[this.voiceNum];else return null;\n  };\n\n  this.setCurrentVoice = function (staffNum, voiceNum) {\n    this.staffNum = staffNum;\n    this.voiceNum = voiceNum;\n\n    for (var i = 0; i < this.lines.length; i++) {\n      if (this.lines[i].staff) {\n        if (this.lines[i].staff[staffNum] === undefined || this.lines[i].staff[staffNum].voices[voiceNum] === undefined || !this.containsNotes(this.lines[i].staff[staffNum].voices[voiceNum])) {\n          this.lineNum = i;\n          return;\n        }\n      }\n    }\n\n    this.lineNum = i;\n  };\n\n  this.addMetaText = function (key, value) {\n    if (this.metaText[key] === undefined) this.metaText[key] = value;else this.metaText[key] += \"\\n\" + value;\n  };\n\n  this.addMetaTextArray = function (key, value) {\n    if (this.metaText[key] === undefined) this.metaText[key] = [value];else this.metaText[key].push(value);\n  };\n\n  this.addMetaTextObj = function (key, value) {\n    this.metaText[key] = value;\n  };\n\n  function addVerticalInfo(timingEvents) {\n    // Add vertical info to the bar events: put the next event's top, and the event after the next measure's top.\n    var lastBarTop;\n    var lastBarBottom;\n    var lastEventTop;\n    var lastEventBottom;\n\n    for (var e = timingEvents.length - 1; e >= 0; e--) {\n      var ev = timingEvents[e];\n\n      if (ev.type === 'bar') {\n        ev.top = lastEventTop;\n        ev.nextTop = lastBarTop;\n        lastBarTop = lastEventTop;\n        ev.bottom = lastEventBottom;\n        ev.nextBottom = lastBarBottom;\n        lastBarBottom = lastEventBottom;\n      } else if (ev.type === 'event') {\n        lastEventTop = ev.top;\n        lastEventBottom = ev.top + ev.height;\n      }\n    }\n  }\n\n  function makeSortedArray(hash) {\n    var arr = [];\n\n    for (var k in hash) {\n      if (hash.hasOwnProperty(k)) arr.push(hash[k]);\n    }\n\n    arr = arr.sort(function (a, b) {\n      var diff = a.milliseconds - b.milliseconds; // if the events have the same time, make sure a bar comes before a note\n\n      if (diff !== 0) {\n        return diff;\n      } else {\n        return a.type === \"bar\" ? -1 : 1;\n      }\n    });\n    return arr;\n  }\n\n  this.addElementToEvents = function (eventHash, element, voiceTimeMilliseconds, top, height, line, measureNumber, timeDivider, isTiedState, nextIsBar) {\n    if (element.hint) return {\n      isTiedState: undefined,\n      duration: 0\n    };\n    var realDuration = element.durationClass ? element.durationClass : element.duration;\n    if (element.abcelem.rest && element.abcelem.rest.type === \"spacer\") realDuration = 0;\n\n    if (realDuration > 0) {\n      var es = []; // If there is an invisible rest, then there are not elements, so don't push a null one.\n\n      for (var i = 0; i < element.elemset.length; i++) {\n        if (element.elemset[i] !== null) es.push(element.elemset[i]);\n      }\n\n      var isTiedToNext = element.startTie;\n\n      if (isTiedState !== undefined) {\n        eventHash[\"event\" + isTiedState].elements.push(es); // Add the tied note to the first note that it is tied to\n\n        if (nextIsBar) {\n          if (!eventHash[\"event\" + voiceTimeMilliseconds]) {\n            eventHash[\"event\" + voiceTimeMilliseconds] = {\n              type: \"event\",\n              milliseconds: voiceTimeMilliseconds,\n              line: line,\n              measureNumber: measureNumber,\n              top: top,\n              height: height,\n              left: null,\n              width: 0,\n              elements: [],\n              startChar: null,\n              endChar: null,\n              startCharArray: [],\n              endCharArray: []\n            };\n          }\n\n          eventHash[\"event\" + voiceTimeMilliseconds].measureStart = true;\n          nextIsBar = false;\n        }\n\n        if (!isTiedToNext) isTiedState = undefined;\n      } else {\n        // the last note wasn't tied.\n        if (!eventHash[\"event\" + voiceTimeMilliseconds]) {\n          eventHash[\"event\" + voiceTimeMilliseconds] = {\n            type: \"event\",\n            milliseconds: voiceTimeMilliseconds,\n            line: line,\n            measureNumber: measureNumber,\n            top: top,\n            height: height,\n            left: element.x,\n            width: element.w,\n            elements: [es],\n            startChar: element.abcelem.startChar,\n            endChar: element.abcelem.endChar,\n            startCharArray: [element.abcelem.startChar],\n            endCharArray: [element.abcelem.endChar]\n          };\n        } else {\n          // If there is more than one voice then two notes can fall at the same time. Usually they would be lined up in the same place, but if it is a whole rest, then it is placed funny. In any case, the left most element wins.\n          if (eventHash[\"event\" + voiceTimeMilliseconds].left) eventHash[\"event\" + voiceTimeMilliseconds].left = Math.min(eventHash[\"event\" + voiceTimeMilliseconds].left, element.x);else eventHash[\"event\" + voiceTimeMilliseconds].left = element.x;\n          eventHash[\"event\" + voiceTimeMilliseconds].elements.push(es);\n          eventHash[\"event\" + voiceTimeMilliseconds].startCharArray.push(element.abcelem.startChar);\n          eventHash[\"event\" + voiceTimeMilliseconds].endCharArray.push(element.abcelem.endChar);\n          if (eventHash[\"event\" + voiceTimeMilliseconds].startChar === null) eventHash[\"event\" + voiceTimeMilliseconds].startChar = element.abcelem.startChar;\n          if (eventHash[\"event\" + voiceTimeMilliseconds].endChar === null) eventHash[\"event\" + voiceTimeMilliseconds].endChar = element.abcelem.endChar;\n        }\n\n        if (nextIsBar) {\n          eventHash[\"event\" + voiceTimeMilliseconds].measureStart = true;\n          nextIsBar = false;\n        }\n\n        if (isTiedToNext) isTiedState = voiceTimeMilliseconds;\n      }\n    }\n\n    return {\n      isTiedState: isTiedState,\n      duration: realDuration / timeDivider,\n      nextIsBar: nextIsBar || element.type === 'bar'\n    };\n  };\n\n  this.makeVoicesArray = function () {\n    // First make a new array that is arranged by voice so that the repeats that span different lines are handled correctly.\n    var voicesArr = [];\n\n    for (var line = 0; line < this.engraver.staffgroups.length; line++) {\n      var group = this.engraver.staffgroups[line];\n      var firstStaff = group.staffs[0];\n      var middleC = firstStaff.absoluteY;\n      var top = middleC - firstStaff.top * spacing.STEP;\n      var lastStaff = group.staffs[group.staffs.length - 1];\n      middleC = lastStaff.absoluteY;\n      var bottom = middleC - lastStaff.bottom * spacing.STEP;\n      var height = bottom - top;\n      var voices = group.voices;\n\n      for (var v = 0; v < voices.length; v++) {\n        var measureNumber = 0;\n        var noteFound = false;\n        if (!voicesArr[v]) voicesArr[v] = [];\n        var elements = voices[v].children;\n\n        for (var elem = 0; elem < elements.length; elem++) {\n          voicesArr[v].push({\n            top: top,\n            height: height,\n            line: line,\n            measureNumber: measureNumber,\n            elem: elements[elem]\n          });\n          if (elements[elem].type === 'bar' && noteFound) // Count the measures by counting the bar lines, but skip a bar line that appears at the left of the music, before any notes.\n            measureNumber++;\n          if (elements[elem].type === 'note') noteFound = true;\n        }\n      }\n    }\n\n    return voicesArr;\n  };\n\n  this.setupEvents = function (startingDelay, timeDivider) {\n    var timingEvents = [];\n    var eventHash = {}; // The time is the number of seconds from the beginning of the piece.\n    // The units we are scanning are in notation units (i.e. 0.25 is a quarter note)\n\n    var time = startingDelay;\n    var isTiedState;\n    var nextIsBar = true;\n    var voices = this.makeVoicesArray();\n\n    for (var v = 0; v < voices.length; v++) {\n      var voiceTime = time;\n      var voiceTimeMilliseconds = Math.round(voiceTime * 1000);\n      var startingRepeatElem = 0;\n      var endingRepeatElem = -1;\n      var elements = voices[v];\n\n      for (var elem = 0; elem < elements.length; elem++) {\n        var element = elements[elem].elem;\n\n        if (element.abcelem.el_type === \"tempo\") {\n          var bpm = this.getBpm(element.abcelem);\n          var beatLength = this.getBeatLength();\n          var beatsPerSecond = bpm / 60;\n          timeDivider = beatLength * beatsPerSecond;\n        }\n\n        var ret = this.addElementToEvents(eventHash, element, voiceTimeMilliseconds, elements[elem].top, elements[elem].height, elements[elem].line, elements[elem].measureNumber, timeDivider, isTiedState, nextIsBar);\n        isTiedState = ret.isTiedState;\n        nextIsBar = ret.nextIsBar;\n        voiceTime += ret.duration;\n        voiceTimeMilliseconds = Math.round(voiceTime * 1000);\n\n        if (element.type === 'bar') {\n          var barType = element.abcelem.type;\n          var endRepeat = barType === \"bar_right_repeat\" || barType === \"bar_dbl_repeat\";\n          var startEnding = element.abcelem.startEnding === '1';\n          var startRepeat = barType === \"bar_left_repeat\" || barType === \"bar_dbl_repeat\" || barType === \"bar_right_repeat\";\n\n          if (endRepeat) {\n            if (endingRepeatElem === -1) endingRepeatElem = elem;\n\n            for (var el2 = startingRepeatElem; el2 < endingRepeatElem; el2++) {\n              var element2 = elements[el2].elem;\n              ret = this.addElementToEvents(eventHash, element2, voiceTimeMilliseconds, elements[el2].top, elements[el2].height, elements[el2].line, elements[el2].measureNumber, timeDivider, isTiedState, nextIsBar);\n              isTiedState = ret.isTiedState;\n              nextIsBar = ret.nextIsBar;\n              voiceTime += ret.duration;\n              voiceTimeMilliseconds = Math.round(voiceTime * 1000);\n            }\n\n            nextIsBar = true;\n            endingRepeatElem = -1;\n          }\n\n          if (startEnding) endingRepeatElem = elem;\n          if (startRepeat) startingRepeatElem = elem;\n        }\n      }\n    } // now we have all the events, but if there are multiple voices then there may be events out of order or duplicated, so normalize it.\n\n\n    timingEvents = makeSortedArray(eventHash);\n    addVerticalInfo(timingEvents);\n    timingEvents.push({\n      type: \"end\",\n      milliseconds: voiceTimeMilliseconds\n    });\n    return timingEvents;\n  };\n\n  function getVertical(group) {\n    var voices = group.voices;\n    var firstStaff = group.staffs[0];\n    var middleC = firstStaff.absoluteY;\n    var top = middleC - firstStaff.top * spacing.STEP;\n    var lastStaff = group.staffs[group.staffs.length - 1];\n    middleC = lastStaff.absoluteY;\n    var bottom = middleC - lastStaff.bottom * spacing.STEP;\n    var height = bottom - top;\n    return {\n      top: top,\n      height: height\n    };\n  }\n\n  this.getBpm = function (tempo) {\n    var bpm;\n\n    if (tempo) {\n      bpm = tempo.bpm;\n      var beatLength = this.getBeatLength();\n      var statedBeatLength = tempo.duration && tempo.duration.length > 0 ? tempo.duration[0] : beatLength;\n      bpm = bpm * statedBeatLength / beatLength;\n    }\n\n    if (!bpm) {\n      bpm = 180; // Compensate for compound meter, where the beat isn't a beat.\n\n      var meter = this.getMeterFraction();\n\n      if (meter && meter.den === 8) {\n        bpm = 120;\n      }\n    }\n\n    return bpm;\n  };\n\n  this.setTiming = function (bpm, measuresOfDelay) {\n    if (!bpm) {\n      var tempo = this.metaText ? this.metaText.tempo : null;\n      bpm = this.getBpm(tempo);\n    }\n\n    var beatLength = this.getBeatLength();\n    var beatsPerSecond = bpm / 60;\n    var measureLength = this.getBarLength();\n    var startingDelay = measureLength / beatLength * measuresOfDelay / beatsPerSecond;\n    if (startingDelay) startingDelay -= this.getPickupLength() / beatLength / beatsPerSecond;\n    var timeDivider = beatLength * beatsPerSecond;\n    this.noteTimings = this.setupEvents(startingDelay, timeDivider);\n  };\n};\n\nmodule.exports = Tune;","var tunebook = require('./abc_tunebook');\n\nvar EngraverController = require('../write/abc_engraver_controller');\n\nvar Parse = require('../parse/abc_parse');\n\nvar wrap = require('../parse/wrap_lines');\n\nvar resizeDivs = {};\n\nfunction resizeOuter() {\n  var width = window.innerWidth;\n\n  for (var id in resizeDivs) {\n    if (resizeDivs.hasOwnProperty(id)) {\n      var outer = resizeDivs[id];\n      var ofs = outer.offsetLeft;\n      width -= ofs * 2;\n      outer.style.width = width + \"px\";\n    }\n  }\n}\n\nwindow.addEventListener(\"resize\", resizeOuter);\nwindow.addEventListener(\"orientationChange\", resizeOuter);\n\nfunction renderOne(div, tune, params, tuneNumber) {\n  if (params.viewportHorizontal) {\n    // Create an inner div that holds the music, so that the passed in div will be the viewport.\n    div.innerHTML = '<div class=\"abcjs-inner\"></div>';\n\n    if (params.scrollHorizontal) {\n      div.style.overflowX = \"auto\";\n      div.style.overflowY = \"hidden\";\n    } else div.style.overflow = \"hidden\";\n\n    resizeDivs[div.id] = div; // We use a hash on the element's id so that multiple calls won't keep adding to the list.\n\n    div = div.children[0]; // The music should be rendered in the inner div.\n  } else if (params.viewportVertical) {\n    // Create an inner div that holds the music, so that the passed in div will be the viewport.\n    div.innerHTML = '<div class=\"abcjs-inner scroll-amount\"></div>';\n    div.style.overflowX = \"hidden\";\n    div.style.overflowY = \"auto\";\n    div = div.children[0]; // The music should be rendered in the inner div.\n  } else div.innerHTML = \"\";\n\n  var engraver_controller = new EngraverController(div, params);\n  engraver_controller.engraveABC(tune, tuneNumber);\n  tune.engraver = engraver_controller;\n\n  if (params.viewportVertical || params.viewportHorizontal) {\n    // If we added a wrapper around the div, then we need to size the wrapper, too.\n    var parent = div.parentNode;\n    parent.style.width = div.style.width;\n  }\n}\n\nfunction renderEachLineSeparately(div, tune, params, tuneNumber) {\n  function initializeTuneLine(tune) {\n    return {\n      formatting: tune.formatting,\n      media: tune.media,\n      version: tune.version,\n      metaText: {},\n      lines: []\n    };\n  } // Before rendering, chop up the returned tune into an array where each element is a line.\n  // The first element of the array gets the title and other items that go on top, the last element\n  // of the array gets the extra text that goes on bottom. Each element gets any non-music info that comes before it.\n\n\n  var tunes = [];\n  var tuneLine;\n\n  for (var i = 0; i < tune.lines.length; i++) {\n    var line = tune.lines[i];\n    if (!tuneLine) tuneLine = initializeTuneLine(tune);\n\n    if (i === 0) {\n      // These items go on top of the music\n      tuneLine.metaText.tempo = tune.metaText.tempo;\n      tuneLine.metaText.title = tune.metaText.title;\n      tuneLine.metaText.header = tune.metaText.header;\n      tuneLine.metaText.rhythm = tune.metaText.rhythm;\n      tuneLine.metaText.origin = tune.metaText.origin;\n      tuneLine.metaText.composer = tune.metaText.composer;\n      tuneLine.metaText.author = tune.metaText.author;\n      tuneLine.metaText.partOrder = tune.metaText.partOrder;\n    } // push the lines until we get to a music line\n\n\n    tuneLine.lines.push(line);\n\n    if (line.staff) {\n      tunes.push(tuneLine);\n      tuneLine = undefined;\n    }\n  } // Add any extra stuff to the last line.\n\n\n  if (tuneLine) {\n    var lastLine = tunes[tunes.length - 1];\n\n    for (var j = 0; j < tuneLine.lines.length; j++) {\n      lastLine.lines.push(tuneLine.lines[j]);\n    }\n  } // These items go below the music\n\n\n  tuneLine = tunes[tunes.length - 1];\n  tuneLine.metaText.unalignedWords = tune.metaText.unalignedWords;\n  tuneLine.metaText.book = tune.metaText.book;\n  tuneLine.metaText.source = tune.metaText.source;\n  tuneLine.metaText.discography = tune.metaText.discography;\n  tuneLine.metaText.notes = tune.metaText.notes;\n  tuneLine.metaText.transcription = tune.metaText.transcription;\n  tuneLine.metaText.history = tune.metaText.history;\n  tuneLine.metaText['abc-copyright'] = tune.metaText['abc-copyright'];\n  tuneLine.metaText['abc-creator'] = tune.metaText['abc-creator'];\n  tuneLine.metaText['abc-edited-by'] = tune.metaText['abc-edited-by'];\n  tuneLine.metaText.footer = tune.metaText.footer; // Now create sub-divs and render each line. Need to copy the params to change the padding for the interior slices.\n\n  var ep = {};\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      ep[key] = params[key];\n    }\n  }\n\n  var origPaddingTop = ep.paddingtop;\n  var origPaddingBottom = ep.paddingbottom;\n  div.innerHTML = \"\";\n\n  for (var k = 0; k < tunes.length; k++) {\n    var lineEl = document.createElement(\"div\");\n    div.appendChild(lineEl);\n\n    if (k === 0) {\n      ep.paddingtop = origPaddingTop;\n      ep.paddingbottom = -20;\n    } else if (k === tunes.length - 1) {\n      ep.paddingtop = 10;\n      ep.paddingbottom = origPaddingBottom;\n    } else {\n      ep.paddingtop = 10;\n      ep.paddingbottom = -20;\n    }\n\n    renderOne(lineEl, tunes[k], ep, tuneNumber);\n  }\n} // A quick way to render a tune from javascript when interactivity is not required.\n// This is used when a javascript routine has some abc text that it wants to render\n// in a div or collection of divs. One tune or many can be rendered.\n//\n// parameters:\n//      output: an array of divs that the individual tunes are rendered to.\n//          If the number of tunes exceeds the number of divs in the array, then\n//          only the first tunes are rendered. If the number of divs exceeds the number\n//          of tunes, then the unused divs are cleared. The divs can be passed as either\n//          elements or strings of ids. If ids are passed, then the div MUST exist already.\n//          (if a single element is passed, then it is an implied array of length one.)\n//          (if a null is passed for an element, or the element doesn't exist, then that tune is skipped.)\n//      abc: text representing a tune or an entire tune book in ABC notation.\n//      renderParams: hash of:\n//          startingTune: an index, starting at zero, representing which tune to start rendering at.\n//              (If this element is not present, then rendering starts at zero.)\n//          width: 800 by default. The width in pixels of the output paper\n\n\nvar renderAbc = function renderAbc(output, abc, parserParams, engraverParams, renderParams) {\n  // Note: all parameters have been condensed into the first ones. It doesn't hurt anything to allow the old format, so just copy them here.\n  var params = {};\n  var key;\n\n  if (parserParams) {\n    for (key in parserParams) {\n      if (parserParams.hasOwnProperty(key)) {\n        params[key] = parserParams[key];\n      }\n    }\n  }\n\n  if (engraverParams) {\n    for (key in engraverParams) {\n      if (engraverParams.hasOwnProperty(key)) {\n        // There is a conflict with the name of the parameter \"listener\". If it is in the second parameter, then it is for click.\n        if (key === \"listener\") {\n          if (engraverParams[key].highlight) params.clickListener = engraverParams[key].highlight;\n        } else params[key] = engraverParams[key];\n      }\n    }\n  }\n\n  if (renderParams) {\n    for (key in renderParams) {\n      if (renderParams.hasOwnProperty(key)) {\n        params[key] = renderParams[key];\n      }\n    }\n  }\n\n  function callback(div, tune, tuneNumber, abcString) {\n    if (params.wrap && params.staffwidth) {\n      tune = doLineWrapping(div, tune, tuneNumber, abcString, params);\n      return tune;\n    } else if (!params.oneSvgPerLine || tune.lines.length < 2) renderOne(div, tune, params, tuneNumber);else renderEachLineSeparately(div, tune, params, tuneNumber);\n\n    return null;\n  }\n\n  return tunebook.renderEngine(callback, output, abc, params);\n};\n\nfunction doLineWrapping(div, tune, tuneNumber, abcString, params) {\n  var engraver_controller = new EngraverController(div, params);\n  var widths = engraver_controller.getMeasureWidths(tune);\n  var ret = wrap.calcLineWraps(tune, widths, abcString, params, Parse, engraver_controller);\n  if (!params.oneSvgPerLine || ret.tune.lines.length < 2) renderOne(div, ret.tune, ret.revisedParams, tuneNumber);else renderEachLineSeparately(div, ret.tune, ret.revisedParams, tuneNumber);\n  ret.tune.explanation = ret.explanation;\n  return ret.tune;\n}\n\nmodule.exports = renderAbc;","// abc_abstract_engraver.js: Creates a data structure suitable for printing a line of abc\n// Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar AbsoluteElement = require('./abc_absolute_element');\n\nvar BeamElem = require('./abc_beam_element');\n\nvar BraceElem = require('./abc_brace_element');\n\nvar createClef = require('./abc_create_clef');\n\nvar createKeySignature = require('./abc_create_key_signature');\n\nvar createTimeSignature = require('./abc_create_time_signature');\n\nvar Decoration = require('./abc_decoration');\n\nvar EndingElem = require('./abc_ending_element');\n\nvar glyphs = require('./abc_glyphs');\n\nvar RelativeElement = require('./abc_relative_element');\n\nvar spacing = require('./abc_spacing');\n\nvar StaffGroupElement = require('./abc_staff_group_element');\n\nvar TempoElement = require('./abc_tempo_element');\n\nvar TieElem = require('./abc_tie_element');\n\nvar TripletElem = require('./abc_triplet_element');\n\nvar VoiceElement = require('./abc_voice_element');\n\nvar parseCommon = require('../parse/abc_common');\n\nvar AbstractEngraver;\n\n(function () {\n  \"use strict\";\n\n  var getDuration = function getDuration(elem) {\n    var d = 0;\n\n    if (elem.duration) {\n      d = elem.duration;\n    }\n\n    return d;\n  };\n\n  var hint = false;\n  var chartable = {\n    rest: {\n      0: \"rests.whole\",\n      1: \"rests.half\",\n      2: \"rests.quarter\",\n      3: \"rests.8th\",\n      4: \"rests.16th\",\n      5: \"rests.32nd\",\n      6: \"rests.64th\",\n      7: \"rests.128th\",\n      \"multi\": \"rests.multimeasure\"\n    },\n    note: {\n      \"-1\": \"noteheads.dbl\",\n      0: \"noteheads.whole\",\n      1: \"noteheads.half\",\n      2: \"noteheads.quarter\",\n      3: \"noteheads.quarter\",\n      4: \"noteheads.quarter\",\n      5: \"noteheads.quarter\",\n      6: \"noteheads.quarter\",\n      7: \"noteheads.quarter\",\n      'nostem': \"noteheads.quarter\"\n    },\n    rhythm: {\n      \"-1\": \"noteheads.slash.whole\",\n      0: \"noteheads.slash.whole\",\n      1: \"noteheads.slash.whole\",\n      2: \"noteheads.slash.quarter\",\n      3: \"noteheads.slash.quarter\",\n      4: \"noteheads.slash.quarter\",\n      5: \"noteheads.slash.quarter\",\n      6: \"noteheads.slash.quarter\",\n      7: \"noteheads.slash.quarter\",\n      nostem: \"noteheads.slash.nostem\"\n    },\n    x: {\n      \"-1\": \"noteheads.indeterminate\",\n      0: \"noteheads.indeterminate\",\n      1: \"noteheads.indeterminate\",\n      2: \"noteheads.indeterminate\",\n      3: \"noteheads.indeterminate\",\n      4: \"noteheads.indeterminate\",\n      5: \"noteheads.indeterminate\",\n      6: \"noteheads.indeterminate\",\n      7: \"noteheads.indeterminate\",\n      nostem: \"noteheads.indeterminate\"\n    },\n    harmonic: {\n      \"-1\": \"noteheads.harmonic.quarter\",\n      0: \"noteheads.harmonic.quarter\",\n      1: \"noteheads.harmonic.quarter\",\n      2: \"noteheads.harmonic.quarter\",\n      3: \"noteheads.harmonic.quarter\",\n      4: \"noteheads.harmonic.quarter\",\n      5: \"noteheads.harmonic.quarter\",\n      6: \"noteheads.harmonic.quarter\",\n      7: \"noteheads.harmonic.quarter\",\n      nostem: \"noteheads.harmonic.quarter\"\n    },\n    uflags: {\n      3: \"flags.u8th\",\n      4: \"flags.u16th\",\n      5: \"flags.u32nd\",\n      6: \"flags.u64th\"\n    },\n    dflags: {\n      3: \"flags.d8th\",\n      4: \"flags.d16th\",\n      5: \"flags.d32nd\",\n      6: \"flags.d64th\"\n    }\n  };\n\n  AbstractEngraver = function AbstractEngraver(renderer, tuneNumber, options) {\n    this.decoration = new Decoration();\n    this.renderer = renderer;\n    this.tuneNumber = tuneNumber;\n    this.isBagpipes = options.bagpipes;\n    this.flatBeams = options.flatbeams;\n    this.reset();\n  };\n\n  AbstractEngraver.prototype.reset = function () {\n    this.slurs = {};\n    this.ties = [];\n    this.voiceScale = 1;\n    this.slursbyvoice = {};\n    this.tiesbyvoice = {};\n    this.endingsbyvoice = {};\n    this.scaleByVoice = {};\n    this.tripletmultiplier = 1;\n    this.abcline = undefined;\n    this.accidentalSlot = undefined;\n    this.accidentalshiftx = undefined;\n    this.dotshiftx = undefined;\n    this.hasVocals = false;\n    this.minY = undefined;\n    this.partstartelem = undefined;\n    this.startlimitelem = undefined;\n    this.stemdir = undefined;\n  };\n\n  AbstractEngraver.prototype.setStemHeight = function (heightInPixels) {\n    this.stemHeight = heightInPixels / spacing.STEP;\n  };\n\n  AbstractEngraver.prototype.getCurrentVoiceId = function (s, v) {\n    return \"s\" + s + \"v\" + v;\n  };\n\n  AbstractEngraver.prototype.pushCrossLineElems = function (s, v) {\n    this.slursbyvoice[this.getCurrentVoiceId(s, v)] = this.slurs;\n    this.tiesbyvoice[this.getCurrentVoiceId(s, v)] = this.ties;\n    this.endingsbyvoice[this.getCurrentVoiceId(s, v)] = this.partstartelem;\n    this.scaleByVoice[this.getCurrentVoiceId(s, v)] = this.voiceScale;\n  };\n\n  AbstractEngraver.prototype.popCrossLineElems = function (s, v) {\n    this.slurs = this.slursbyvoice[this.getCurrentVoiceId(s, v)] || {};\n    this.ties = this.tiesbyvoice[this.getCurrentVoiceId(s, v)] || [];\n    this.partstartelem = this.endingsbyvoice[this.getCurrentVoiceId(s, v)];\n    this.voiceScale = this.scaleByVoice[this.getCurrentVoiceId(s, v)];\n    if (this.voiceScale === undefined) this.voiceScale = 1;\n  };\n\n  AbstractEngraver.prototype.containsLyrics = function (staves) {\n    for (var i = 0; i < staves.length; i++) {\n      for (var j = 0; j < staves[i].voices.length; j++) {\n        for (var k = 0; k < staves[i].voices[j].length; k++) {\n          var el = staves[i].voices[j][k];\n\n          if (el.lyric) {\n            // We just want to see if there are vocals below the music to know where to put the dynamics.\n            if (!el.positioning || el.positioning.vocalPosition === 'below') this.hasVocals = true;\n            return;\n          }\n        }\n      }\n    }\n  };\n\n  AbstractEngraver.prototype.createABCLine = function (staffs, tempo) {\n    this.minY = 2; // PER: This will be the lowest that any note reaches. It will be used to set the dynamics row.\n    // See if there are any lyrics on this line.\n\n    this.containsLyrics(staffs);\n    var staffgroup = new StaffGroupElement();\n    this.tempoSet = false;\n\n    for (var s = 0; s < staffs.length; s++) {\n      if (hint) this.restoreState();\n      hint = false;\n      this.createABCStaff(staffgroup, staffs[s], tempo, s);\n    }\n\n    return staffgroup;\n  };\n\n  AbstractEngraver.prototype.createABCStaff = function (staffgroup, abcstaff, tempo, s) {\n    // If the tempo is passed in, then the first element should get the tempo attached to it.\n    for (var v = 0; v < abcstaff.voices.length; v++) {\n      var voice = new VoiceElement(v, abcstaff.voices.length);\n\n      if (v === 0) {\n        voice.barfrom = abcstaff.connectBarLines === \"start\" || abcstaff.connectBarLines === \"continue\";\n        voice.barto = abcstaff.connectBarLines === \"continue\" || abcstaff.connectBarLines === \"end\";\n      } else {\n        voice.duplicate = true; // bar lines and other duplicate info need not be created\n      }\n\n      if (abcstaff.title && abcstaff.title[v]) voice.header = abcstaff.title[v];\n      var clef = createClef(abcstaff.clef, this.tuneNumber);\n\n      if (clef) {\n        if (v === 0 && abcstaff.barNumber) {\n          this.addMeasureNumber(abcstaff.barNumber, clef);\n        }\n\n        voice.addChild(clef);\n      }\n\n      var keySig = createKeySignature(abcstaff.key, this.tuneNumber);\n\n      if (keySig) {\n        voice.addChild(keySig);\n        this.startlimitelem = keySig; // limit ties here\n      }\n\n      if (abcstaff.meter) {\n        var ts = createTimeSignature(abcstaff.meter, this.tuneNumber);\n        voice.addChild(ts);\n        this.startlimitelem = ts; // limit ties here\n      }\n\n      if (voice.duplicate) voice.children = []; // we shouldn't reprint the above if we're reusing the same staff. We just created them to get the right spacing.\n\n      var staffLines = abcstaff.clef.stafflines || abcstaff.clef.stafflines === 0 ? abcstaff.clef.stafflines : 5;\n      staffgroup.addVoice(voice, s, staffLines);\n      var isSingleLineStaff = staffLines === 1;\n      this.createABCVoice(abcstaff.voices[v], tempo, s, v, isSingleLineStaff, voice);\n      staffgroup.setStaffLimits(voice); //Tony: Here I am following what staves need to be surrounded by the brace, by incrementing the length of the brace class.\n      //So basically this keeps incrementing the number of staff surrounded by the brace until it sees \"end\".\n      //This then gets processed in abc_staff_group_element.js, so that it will have the correct top and bottom coordinates for the brace.\n\n      if (abcstaff.brace === \"start\") {\n        staffgroup.brace = new BraceElem(1, true);\n      } else if (abcstaff.brace === \"end\" && staffgroup.brace) {\n        staffgroup.brace.increaseStavesIncluded();\n      } else if (abcstaff.brace === \"continue\" && staffgroup.brace) {\n        staffgroup.brace.increaseStavesIncluded();\n      }\n    }\n  };\n\n  function getBeamGroup(abcline, pos) {\n    // If there are notes beamed together, they are handled as a group, so find all of them here.\n    var elem = abcline[pos];\n    if (elem.el_type !== 'note' || !elem.startBeam || elem.endBeam) return {\n      count: 1,\n      elem: elem\n    };\n    var group = [];\n\n    while (pos < abcline.length && abcline[pos].el_type === 'note') {\n      group.push(abcline[pos]);\n      if (abcline[pos].endBeam) break;\n      pos++;\n    }\n\n    return {\n      count: group.length,\n      elem: group\n    };\n  }\n\n  AbstractEngraver.prototype.createABCVoice = function (abcline, tempo, s, v, isSingleLineStaff, voice) {\n    this.popCrossLineElems(s, v);\n    this.stemdir = this.isBagpipes ? \"down\" : null;\n    this.abcline = abcline;\n\n    if (this.partstartelem) {\n      this.partstartelem = new EndingElem(\"\", null, null);\n      voice.addOther(this.partstartelem);\n    }\n\n    for (var slur in this.slurs) {\n      if (this.slurs.hasOwnProperty(slur)) {\n        this.slurs[slur] = new TieElem(null, null, this.slurs[slur].above, this.slurs[slur].force, false);\n        if (hint) this.slurs[slur].setHint();\n        voice.addOther(this.slurs[slur]);\n      }\n    }\n\n    for (var i = 0; i < this.ties.length; i++) {\n      this.ties[i] = new TieElem(null, null, this.ties[i].above, this.ties[i].force, true);\n      if (hint) this.ties[i].setHint();\n      voice.addOther(this.ties[i]);\n    }\n\n    for (var j = 0; j < this.abcline.length; j++) {\n      setAveragePitch(this.abcline[j]);\n      this.minY = Math.min(this.abcline[j].minpitch, this.minY);\n    }\n\n    var isFirstStaff = s === 0;\n    var pos = 0;\n\n    while (pos < this.abcline.length) {\n      var ret = getBeamGroup(this.abcline, pos);\n      var abselems = this.createABCElement(isFirstStaff, isSingleLineStaff, voice, ret.elem);\n\n      if (abselems) {\n        for (i = 0; i < abselems.length; i++) {\n          if (!this.tempoSet && tempo && !tempo.suppress) {\n            this.tempoSet = true;\n            abselems[i].addChild(new TempoElement(tempo, this.tuneNumber, createNoteHead));\n          }\n\n          voice.addChild(abselems[i]);\n        }\n      }\n\n      pos += ret.count;\n    }\n\n    this.pushCrossLineElems(s, v);\n  };\n\n  AbstractEngraver.prototype.saveState = function () {\n    this.tiesSave = parseCommon.cloneArray(this.ties);\n    this.slursSave = parseCommon.cloneHashOfHash(this.slurs);\n    this.slursbyvoiceSave = parseCommon.cloneHashOfHash(this.slursbyvoice);\n    this.tiesbyvoiceSave = parseCommon.cloneHashOfArrayOfHash(this.tiesbyvoice);\n  };\n\n  AbstractEngraver.prototype.restoreState = function () {\n    this.ties = parseCommon.cloneArray(this.tiesSave);\n    this.slurs = parseCommon.cloneHashOfHash(this.slursSave);\n    this.slursbyvoice = parseCommon.cloneHashOfHash(this.slursbyvoiceSave);\n    this.tiesbyvoice = parseCommon.cloneHashOfArrayOfHash(this.tiesbyvoiceSave);\n  }; // function writeMeasureWidth(voice) {\n  // \tvar width = 0;\n  // \tfor (var i = voice.children.length-1; i >= 0; i--) {\n  // \t\tvar elem = voice.children[i];\n  // \t\tif (elem.abcelem.el_type === 'bar')\n  // \t\t\tbreak;\n  // \t\twidth += elem.w;\n  // \t}\n  // \treturn new RelativeElement(width.toFixed(2), -70, 0, undefined, {type:\"debug\"});\n  // }\n  // return an array of AbsoluteElement\n\n\n  AbstractEngraver.prototype.createABCElement = function (isFirstStaff, isSingleLineStaff, voice, elem) {\n    var elemset = [];\n\n    switch (elem.el_type) {\n      case undefined:\n        // it is undefined if we were passed an array in - an array means a set of notes that should be beamed together.\n        elemset = this.createBeam(isSingleLineStaff, voice, elem);\n        break;\n\n      case \"note\":\n        elemset[0] = this.createNote(elem, false, isSingleLineStaff, voice);\n\n        if (this.triplet && this.triplet.isClosed()) {\n          voice.addOther(this.triplet);\n          this.triplet = null;\n          this.tripletmultiplier = 1;\n        }\n\n        break;\n\n      case \"bar\":\n        elemset[0] = this.createBarLine(voice, elem, isFirstStaff);\n        if (voice.duplicate && elemset.length > 0) elemset[0].invisible = true; //\t  elemset[0].addChild(writeMeasureWidth(voice));\n\n        break;\n\n      case \"meter\":\n        elemset[0] = createTimeSignature(elem, this.tuneNumber);\n        this.startlimitelem = elemset[0]; // limit ties here\n\n        if (voice.duplicate && elemset.length > 0) elemset[0].invisible = true;\n        break;\n\n      case \"clef\":\n        elemset[0] = createClef(elem, this.tuneNumber);\n        if (!elemset[0]) return null;\n        if (voice.duplicate && elemset.length > 0) elemset[0].invisible = true;\n        break;\n\n      case \"key\":\n        var absKey = createKeySignature(elem, this.tuneNumber);\n\n        if (absKey) {\n          elemset[0] = absKey;\n          this.startlimitelem = elemset[0]; // limit ties here\n        }\n\n        if (voice.duplicate && elemset.length > 0) elemset[0].invisible = true;\n        break;\n\n      case \"stem\":\n        this.stemdir = elem.direction;\n        break;\n\n      case \"part\":\n        var abselem = new AbsoluteElement(elem, 0, 0, 'part', this.tuneNumber);\n        var dim = this.renderer.getTextSize(elem.title, 'partsfont', \"part\");\n        abselem.addChild(new RelativeElement(elem.title, 0, 0, undefined, {\n          type: \"part\",\n          height: dim.height / spacing.STEP\n        }));\n        elemset[0] = abselem;\n        break;\n\n      case \"tempo\":\n        var abselem3 = new AbsoluteElement(elem, 0, 0, 'tempo', this.tuneNumber);\n        abselem3.addChild(new TempoElement(elem, this.tuneNumber, createNoteHead));\n        elemset[0] = abselem3;\n        break;\n\n      case \"style\":\n        if (elem.head === \"normal\") delete this.style;else this.style = elem.head;\n        break;\n\n      case \"hint\":\n        hint = true;\n        this.saveState();\n        break;\n\n      case \"midi\":\n        // This has no effect on the visible music, so just skip it.\n        break;\n\n      case \"scale\":\n        this.voiceScale = elem.size;\n        break;\n\n      default:\n        var abselem2 = new AbsoluteElement(elem, 0, 0, 'unsupported', this.tuneNumber);\n        abselem2.addChild(new RelativeElement(\"element type \" + elem.el_type, 0, 0, undefined, {\n          type: \"debug\"\n        }));\n        elemset[0] = abselem2;\n    }\n\n    return elemset;\n  };\n\n  function setAveragePitch(elem) {\n    if (elem.pitches) {\n      sortPitch(elem);\n      var sum = 0;\n\n      for (var p = 0; p < elem.pitches.length; p++) {\n        sum += elem.pitches[p].verticalPos;\n      }\n\n      elem.averagepitch = sum / elem.pitches.length;\n      elem.minpitch = elem.pitches[0].verticalPos;\n      elem.maxpitch = elem.pitches[elem.pitches.length - 1].verticalPos;\n    }\n  }\n\n  AbstractEngraver.prototype.calcBeamDir = function (isSingleLineStaff, voice, elems) {\n    if (this.stemdir) // If the user or voice is forcing the stem direction, we already know the answer.\n      return this.stemdir;\n    var beamelem = new BeamElem(this.stemHeight * this.voiceScale, this.stemdir, this.flatBeams);\n\n    for (var i = 0; i < elems.length; i++) {\n      beamelem.add({\n        abcelem: elems[i]\n      }); // This is a hack to call beam elem with just a minimum of processing: for our purposes, we don't need to construct the whole note.\n    }\n\n    var dir = beamelem.calcDir();\n    return dir ? \"up\" : \"down\";\n  };\n\n  AbstractEngraver.prototype.createBeam = function (isSingleLineStaff, voice, elems) {\n    var abselemset = [];\n    var dir = this.calcBeamDir(isSingleLineStaff, voice, elems);\n    var beamelem = new BeamElem(this.stemHeight * this.voiceScale, dir, this.flatBeams);\n    if (hint) beamelem.setHint();\n    var oldDir = this.stemdir;\n    this.stemdir = dir;\n\n    for (var i = 0; i < elems.length; i++) {\n      var elem = elems[i];\n      var abselem = this.createNote(elem, true, isSingleLineStaff, voice);\n      abselemset.push(abselem);\n      beamelem.add(abselem);\n\n      if (this.triplet && this.triplet.isClosed()) {\n        voice.addOther(this.triplet);\n        this.triplet = null;\n        this.tripletmultiplier = 1;\n      }\n    }\n\n    this.stemdir = oldDir;\n    voice.addBeam(beamelem);\n    return abselemset;\n  };\n\n  var sortPitch = function sortPitch(elem) {\n    var sorted;\n\n    do {\n      sorted = true;\n\n      for (var p = 0; p < elem.pitches.length - 1; p++) {\n        if (elem.pitches[p].pitch > elem.pitches[p + 1].pitch) {\n          sorted = false;\n          var tmp = elem.pitches[p];\n          elem.pitches[p] = elem.pitches[p + 1];\n          elem.pitches[p + 1] = tmp;\n        }\n      }\n    } while (!sorted);\n  };\n\n  var ledgerLines = function ledgerLines(abselem, minPitch, maxPitch, isRest, symbolWidth, additionalLedgers, dir, dx, scale) {\n    for (var i = maxPitch; i > 11; i--) {\n      if (i % 2 === 0 && !isRest) {\n        abselem.addChild(new RelativeElement(null, dx, (symbolWidth + 4) * scale, i, {\n          type: \"ledger\"\n        }));\n      }\n    }\n\n    for (i = minPitch; i < 1; i++) {\n      if (i % 2 === 0 && !isRest) {\n        abselem.addChild(new RelativeElement(null, dx, (symbolWidth + 4) * scale, i, {\n          type: \"ledger\"\n        }));\n      }\n    }\n\n    for (i = 0; i < additionalLedgers.length; i++) {\n      // PER: draw additional ledgers\n      var ofs = symbolWidth;\n      if (dir === 'down') ofs = -ofs;\n      abselem.addChild(new RelativeElement(null, ofs + dx, (symbolWidth + 4) * scale, additionalLedgers[i], {\n        type: \"ledger\"\n      }));\n    }\n  };\n\n  AbstractEngraver.prototype.addGraceNotes = function (elem, voice, abselem, notehead, stemHeight, isBagpipes, roomtaken) {\n    var gracescale = 3 / 5;\n    var graceScaleStem = 3.5 / 5; // TODO-PER: empirically found constant.\n\n    var gracebeam = null;\n    var flag;\n\n    if (elem.gracenotes.length > 1) {\n      gracebeam = new BeamElem(stemHeight * graceScaleStem, \"grace\", isBagpipes);\n      if (hint) gracebeam.setHint();\n      gracebeam.mainNote = abselem; // this gives us a reference back to the note this is attached to so that the stems can be attached somewhere.\n    }\n\n    var graceoffsets = [];\n\n    for (i = elem.gracenotes.length - 1; i >= 0; i--) {\n      // figure out where to place each gracenote\n      roomtaken += 10;\n      graceoffsets[i] = roomtaken;\n\n      if (elem.gracenotes[i].accidental) {\n        roomtaken += 7;\n      }\n    }\n\n    var i;\n\n    for (i = 0; i < elem.gracenotes.length; i++) {\n      var gracepitch = elem.gracenotes[i].verticalPos;\n      flag = gracebeam ? null : chartable.uflags[isBagpipes ? 5 : 3];\n      var accidentalSlot = [];\n      var ret = createNoteHead(abselem, \"noteheads.quarter\", elem.gracenotes[i], \"up\", -graceoffsets[i], -graceoffsets[i], flag, 0, 0, gracescale * this.voiceScale, accidentalSlot);\n      var grace = ret.notehead;\n      this.addSlursAndTies(abselem, elem.gracenotes[i], grace, voice, \"up\");\n      abselem.addExtra(grace); // PER: added acciaccatura slash\n\n      if (elem.gracenotes[i].acciaccatura) {\n        var pos = elem.gracenotes[i].verticalPos + 7 * gracescale; // the same formula that determines the flag position.\n\n        var dAcciaccatura = gracebeam ? 5 : 6; // just an offset to make it line up correctly.\n\n        abselem.addRight(new RelativeElement(\"flags.ugrace\", -graceoffsets[i] + dAcciaccatura, 0, pos, {\n          scalex: gracescale,\n          scaley: gracescale\n        }));\n      }\n\n      if (gracebeam) {\n        // give the beam the necessary info\n        var graceDuration = elem.gracenotes[i].duration / 2;\n        if (isBagpipes) graceDuration /= 2;\n        var pseudoabselem = {\n          heads: [grace],\n          abcelem: {\n            averagepitch: gracepitch,\n            minpitch: gracepitch,\n            maxpitch: gracepitch,\n            duration: graceDuration\n          }\n        };\n        gracebeam.add(pseudoabselem);\n      } else {\n        // draw the stem\n        var p1 = gracepitch + 1 / 3 * gracescale;\n        var p2 = gracepitch + 7 * gracescale;\n        var dx = grace.dx + grace.w;\n        var width = -0.6;\n        abselem.addExtra(new RelativeElement(null, dx, 0, p1, {\n          \"type\": \"stem\",\n          \"pitch2\": p2,\n          linewidth: width\n        }));\n      }\n\n      ledgerLines(abselem, gracepitch, gracepitch, false, glyphs.getSymbolWidth(\"noteheads.quarter\"), [], true, grace.dx - 1, 0.6);\n\n      if (i === 0 && !isBagpipes && !(elem.rest && (elem.rest.type === \"spacer\" || elem.rest.type === \"invisible\"))) {\n        var isTie = elem.gracenotes.length === 1 && grace.pitch === notehead.pitch;\n        voice.addOther(new TieElem(grace, notehead, false, true, isTie));\n      }\n    }\n\n    if (gracebeam) {\n      voice.addBeam(gracebeam);\n    }\n\n    return roomtaken;\n  };\n\n  function addRestToAbsElement(abselem, elem, duration, dot, isMultiVoice, stemdir, isSingleLineStaff, durlog, voiceScale) {\n    var c;\n    var restpitch = 7;\n    var noteHead;\n    var roomTaken;\n    var roomTakenRight;\n\n    if (isMultiVoice) {\n      if (stemdir === \"down\") restpitch = 3;\n      if (stemdir === \"up\") restpitch = 11;\n    } // There is special placement for the percussion staff. If there is one staff line, then move the rest position.\n\n\n    if (isSingleLineStaff) {\n      // The half and whole rests are attached to different lines normally, so we need to tweak their position to get them to both be attached to the same one.\n      if (duration < 0.5) restpitch = 7;else if (duration < 1) restpitch = 7; // half rest\n      else restpitch = 5; // whole rest\n    }\n\n    switch (elem.rest.type) {\n      case \"whole\":\n        c = chartable.rest[0];\n        elem.averagepitch = restpitch;\n        elem.minpitch = restpitch;\n        elem.maxpitch = restpitch;\n        dot = 0;\n        break;\n\n      case \"rest\":\n        if (elem.style === \"rhythm\") // special case for rhythm: rests are a handy way to express the rhythm.\n          c = chartable.rhythm[-durlog];else c = chartable.rest[-durlog];\n        elem.averagepitch = restpitch;\n        elem.minpitch = restpitch;\n        elem.maxpitch = restpitch;\n        break;\n\n      case \"invisible\":\n      case \"spacer\":\n        c = \"\";\n        elem.averagepitch = restpitch;\n        elem.minpitch = restpitch;\n        elem.maxpitch = restpitch;\n        break;\n\n      case \"multimeasure\":\n        c = chartable.rest['multi'];\n        elem.averagepitch = restpitch;\n        elem.minpitch = restpitch;\n        elem.maxpitch = restpitch;\n        dot = 0;\n        var mmWidth = glyphs.getSymbolWidth(c);\n        abselem.addHead(new RelativeElement(c, -mmWidth, mmWidth * 2, 7));\n        var numMeasures = new RelativeElement(\"\" + elem.duration, 0, mmWidth, 16, {\n          type: \"multimeasure-text\"\n        });\n        abselem.addExtra(numMeasures);\n    }\n\n    if (elem.rest.type !== \"multimeasure\") {\n      var ret = createNoteHead(abselem, c, {\n        verticalPos: restpitch\n      }, null, 0, 0, null, dot, 0, voiceScale, []);\n      noteHead = ret.notehead;\n\n      if (noteHead) {\n        abselem.addHead(noteHead);\n        roomTaken = ret.accidentalshiftx;\n        roomTakenRight = ret.dotshiftx;\n      }\n    }\n\n    return {\n      noteHead: noteHead,\n      roomTaken: roomTaken,\n      roomTakenRight: roomTakenRight\n    };\n  }\n\n  function addIfNotExist(arr, item) {\n    for (var i = 0; i < arr.length; i++) {\n      if (JSON.stringify(arr[i]) === JSON.stringify(item)) return;\n    }\n\n    arr.push(item);\n  }\n\n  AbstractEngraver.prototype.addNoteToAbcElement = function (abselem, elem, dot, stemdir, style, zeroDuration, durlog, nostem, voice) {\n    var dotshiftx = 0; // room taken by chords with displaced noteheads which cause dots to shift\n\n    var noteHead;\n    var roomTaken = 0;\n    var roomTakenRight = 0;\n    var min;\n    var i;\n    var additionalLedgers = []; // The accidentalSlot will hold a list of all the accidentals on this chord. Each element is a vertical place,\n    // and contains a pitch, which is the last pitch that contains an accidental in that slot. The slots are numbered\n    // from closest to the note to farther left. We only need to know the last accidental we placed because\n    // we know that the pitches are sorted by now.\n\n    var accidentalSlot = [];\n    var symbolWidth = 0;\n    var dir = elem.averagepitch >= 6 ? \"down\" : \"up\";\n    if (stemdir) dir = stemdir;\n    style = elem.style ? elem.style : style; // get the style of note head.\n\n    if (!style || style === \"normal\") style = \"note\";\n    var noteSymbol;\n    if (zeroDuration) noteSymbol = chartable[style].nostem;else noteSymbol = chartable[style][-durlog];\n    if (!noteSymbol) console.log(\"noteSymbol:\", style, durlog, zeroDuration); // determine elements of chords which should be shifted\n\n    var p;\n\n    for (p = dir === \"down\" ? elem.pitches.length - 2 : 1; dir === \"down\" ? p >= 0 : p < elem.pitches.length; p = dir === \"down\" ? p - 1 : p + 1) {\n      var prev = elem.pitches[dir === \"down\" ? p + 1 : p - 1];\n      var curr = elem.pitches[p];\n      var delta = dir === \"down\" ? prev.pitch - curr.pitch : curr.pitch - prev.pitch;\n\n      if (delta <= 1 && !prev.printer_shift) {\n        curr.printer_shift = delta ? \"different\" : \"same\";\n\n        if (curr.verticalPos > 11 || curr.verticalPos < 1) {\n          // PER: add extra ledger line\n          additionalLedgers.push(curr.verticalPos - curr.verticalPos % 2);\n        }\n\n        if (dir === \"down\") {\n          roomTaken = glyphs.getSymbolWidth(noteSymbol) + 2;\n        } else {\n          dotshiftx = glyphs.getSymbolWidth(noteSymbol) + 2;\n        }\n      }\n    }\n\n    var pp = elem.pitches.length;\n\n    for (p = 0; p < elem.pitches.length; p++) {\n      if (!nostem) {\n        var flag;\n\n        if (dir === \"down\" && p !== 0 || dir === \"up\" && p !== pp - 1) {\n          // not the stemmed elem of the chord\n          flag = null;\n        } else {\n          flag = chartable[dir === \"down\" ? \"dflags\" : \"uflags\"][-durlog];\n        }\n      }\n\n      var c;\n\n      if (elem.pitches[p].style) {\n        // There is a style for the whole group of pitches, but there could also be an override for a particular pitch.\n        c = chartable[elem.pitches[p].style][-durlog];\n      } else c = noteSymbol; // The highest position for the sake of placing slurs is itself if the slur is internal. It is the highest position possible if the slur is for the whole chord.\n      // If the note is the only one in the chord, then any slur it has counts as if it were on the whole chord.\n\n\n      elem.pitches[p].highestVert = elem.pitches[p].verticalPos;\n      var isTopWhenStemIsDown = (stemdir === \"up\" || dir === \"up\") && p === 0;\n      var isBottomWhenStemIsUp = (stemdir === \"down\" || dir === \"down\") && p === pp - 1;\n\n      if (isTopWhenStemIsDown || isBottomWhenStemIsUp) {\n        // place to put slurs if not already on pitches\n        if (elem.startSlur || pp === 1) {\n          elem.pitches[p].highestVert = elem.pitches[pp - 1].verticalPos;\n          if (stemdir === \"up\" || dir === \"up\") elem.pitches[p].highestVert += 6; // If the stem is up, then compensate for the length of the stem\n        }\n\n        if (elem.startSlur) {\n          if (!elem.pitches[p].startSlur) elem.pitches[p].startSlur = []; //TODO possibly redundant, provided array is not optional\n\n          for (i = 0; i < elem.startSlur.length; i++) {\n            addIfNotExist(elem.pitches[p].startSlur, elem.startSlur[i]);\n          }\n        }\n\n        if (elem.endSlur) {\n          elem.pitches[p].highestVert = elem.pitches[pp - 1].verticalPos;\n          if (stemdir === \"up\" || dir === \"up\") elem.pitches[p].highestVert += 6; // If the stem is up, then compensate for the length of the stem\n\n          if (!elem.pitches[p].endSlur) elem.pitches[p].endSlur = []; //TODO possibly redundant, provided array is not optional\n\n          for (i = 0; i < elem.endSlur.length; i++) {\n            addIfNotExist(elem.pitches[p].endSlur, elem.endSlur[i]);\n          }\n        }\n      }\n\n      var hasStem = !nostem && durlog <= -1;\n      var ret = createNoteHead(abselem, c, elem.pitches[p], hasStem ? dir : null, 0, -roomTaken, flag, dot, dotshiftx, this.voiceScale, accidentalSlot);\n      symbolWidth = Math.max(glyphs.getSymbolWidth(c), symbolWidth);\n      abselem.extraw -= ret.extraLeft;\n      noteHead = ret.notehead;\n\n      if (noteHead) {\n        this.addSlursAndTies(abselem, elem.pitches[p], noteHead, voice, hasStem ? dir : null);\n        if (elem.gracenotes && elem.gracenotes.length > 0) noteHead.bottom = noteHead.bottom - 1; // If there is a tie to the grace notes, leave a little more room for the note to avoid collisions.\n\n        abselem.addHead(noteHead);\n      }\n\n      roomTaken += ret.accidentalshiftx;\n      roomTakenRight = Math.max(roomTakenRight, ret.dotshiftx);\n    } // draw stem from the furthest note to a pitch above/below the stemmed note\n\n\n    if (hasStem) {\n      var stemHeight = 7 * this.voiceScale;\n      var p1 = dir === \"down\" ? elem.minpitch - stemHeight : elem.minpitch + 1 / 3; // PER added stemdir test to make the line meet the note.\n\n      if (p1 > 6 && !stemdir) p1 = 6;\n      var p2 = dir === \"down\" ? elem.maxpitch - 1 / 3 : elem.maxpitch + stemHeight; // PER added stemdir test to make the line meet the note.\n\n      if (p2 < 6 && !stemdir) p2 = 6;\n      var dx = dir === \"down\" || abselem.heads.length === 0 ? 0 : abselem.heads[0].w;\n      var width = dir === \"down\" ? 1 : -1; // TODO-PER-HACK: One type of note head has a different placement of the stem. This should be more generically calculated:\n\n      if (noteHead.c === 'noteheads.slash.quarter') {\n        if (dir === 'down') p2 -= 1;else p1 += 1;\n      }\n\n      abselem.addExtra(new RelativeElement(null, dx, 0, p1, {\n        \"type\": \"stem\",\n        \"pitch2\": p2,\n        linewidth: width\n      })); //var RelativeElement = function RelativeElement(c, dx, w, pitch, opt) {\n\n      min = Math.min(p1, p2);\n    }\n\n    return {\n      noteHead: noteHead,\n      roomTaken: roomTaken,\n      roomTakenRight: roomTakenRight,\n      min: min,\n      additionalLedgers: additionalLedgers,\n      dir: dir,\n      symbolWidth: symbolWidth\n    };\n  };\n\n  AbstractEngraver.prototype.addLyric = function (abselem, elem) {\n    var lyricStr = \"\";\n    parseCommon.each(elem.lyric, function (ly) {\n      var div = ly.divider === ' ' ? \"\" : ly.divider;\n      lyricStr += ly.syllable + div + \"\\n\";\n    });\n    var lyricDim = this.renderer.getTextSize(lyricStr, 'vocalfont', \"lyric\");\n    var position = elem.positioning ? elem.positioning.vocalPosition : 'below';\n    abselem.addCentered(new RelativeElement(lyricStr, 0, lyricDim.width, undefined, {\n      type: \"lyric\",\n      position: position,\n      height: lyricDim.height / spacing.STEP\n    }));\n  };\n\n  AbstractEngraver.prototype.addChord = function (abselem, elem, roomTaken, roomTakenRight) {\n    var chordMargin = 8; // If there are chords next to each other, this is how close they can get.\n\n    for (var i = 0; i < elem.chord.length; i++) {\n      var x = 0;\n      var y;\n      var dim = this.renderer.getTextSize(elem.chord[i].name, 'annotationfont', \"annotation\");\n      var chordWidth = dim.width;\n      var chordHeight = dim.height / spacing.STEP;\n\n      switch (elem.chord[i].position) {\n        case \"left\":\n          roomTaken += chordWidth + 7;\n          x = -roomTaken; // TODO-PER: This is just a guess from trial and error\n\n          y = elem.averagepitch;\n          abselem.addExtra(new RelativeElement(elem.chord[i].name, x, chordWidth + 4, y, {\n            type: \"text\",\n            height: chordHeight\n          }));\n          break;\n\n        case \"right\":\n          roomTakenRight += 4;\n          x = roomTakenRight; // TODO-PER: This is just a guess from trial and error\n\n          y = elem.averagepitch;\n          abselem.addRight(new RelativeElement(elem.chord[i].name, x, chordWidth + 4, y, {\n            type: \"text\",\n            height: chordHeight\n          }));\n          break;\n\n        case \"below\":\n          // setting the y-coordinate to undefined for now: it will be overwritten later on, after we figure out what the highest element on the line is.\n          abselem.addRight(new RelativeElement(elem.chord[i].name, 0, chordWidth + chordMargin, undefined, {\n            type: \"text\",\n            position: \"below\",\n            height: chordHeight\n          }));\n          break;\n\n        case \"above\":\n          // setting the y-coordinate to undefined for now: it will be overwritten later on, after we figure out what the highest element on the line is.\n          abselem.addRight(new RelativeElement(elem.chord[i].name, 0, chordWidth + chordMargin, undefined, {\n            type: \"text\",\n            height: chordHeight\n          }));\n          break;\n\n        default:\n          if (elem.chord[i].rel_position) {\n            var relPositionY = elem.chord[i].rel_position.y + 3 * spacing.STEP; // TODO-PER: this is a fudge factor to make it line up with abcm2ps\n\n            abselem.addChild(new RelativeElement(elem.chord[i].name, x + elem.chord[i].rel_position.x, 0, elem.minpitch + relPositionY / spacing.STEP, {\n              type: \"text\",\n              height: chordHeight\n            }));\n          } else {\n            // setting the y-coordinate to undefined for now: it will be overwritten later on, after we figure out what the highest element on the line is.\n            var pos2 = 'above';\n            if (elem.positioning && elem.positioning.chordPosition) pos2 = elem.positioning.chordPosition;\n            dim = this.renderer.getTextSize(elem.chord[i].name, 'gchordfont', \"chord\");\n            chordHeight = dim.height / spacing.STEP;\n            chordWidth = dim.width; // Since the chord is centered, we only use half the width.\n\n            abselem.addCentered(new RelativeElement(elem.chord[i].name, x, chordWidth, undefined, {\n              type: \"chord\",\n              position: pos2,\n              height: chordHeight\n            }));\n          }\n\n      }\n    }\n\n    return {\n      roomTaken: roomTaken,\n      roomTakenRight: roomTakenRight\n    };\n  };\n\n  AbstractEngraver.prototype.createNote = function (elem, nostem, isSingleLineStaff, voice) {\n    //stem presence: true for drawing stemless notehead\n    var notehead = null;\n    var roomtaken = 0; // room needed to the left of the note\n\n    var roomtakenright = 0; // room needed to the right of the note\n\n    var symbolWidth = 0;\n    var additionalLedgers = []; // PER: handle the case of [bc'], where the b doesn't have a ledger line\n\n    var i;\n    var dir;\n    var duration = getDuration(elem);\n    var zeroDuration = false;\n\n    if (duration === 0) {\n      zeroDuration = true;\n      duration = 0.25;\n      nostem = true;\n    } //PER: zero duration will draw a quarter note head.\n\n\n    var durlog = Math.floor(Math.log(duration) / Math.log(2)); //TODO use getDurlog\n\n    var dot = 0;\n\n    for (var tot = Math.pow(2, durlog), inc = tot / 2; tot < duration; dot++, tot += inc, inc /= 2) {\n      ;\n    }\n\n    if (elem.startTriplet) {\n      this.tripletmultiplier = elem.tripletMultiplier;\n    }\n\n    var durationForSpacing = duration * this.tripletmultiplier;\n    if (elem.rest && elem.rest.type === 'multimeasure') durationForSpacing = 1;\n    var absType = elem.rest ? \"rest\" : \"note\";\n    var abselem = new AbsoluteElement(elem, durationForSpacing, 1, absType, this.tuneNumber, {\n      durationClassOveride: elem.duration * this.tripletmultiplier\n    });\n    if (hint) abselem.setHint();\n\n    if (elem.rest) {\n      var ret1 = addRestToAbsElement(abselem, elem, duration, dot, voice.voicetotal > 1, this.stemdir, isSingleLineStaff, durlog, this.voiceScale);\n      notehead = ret1.noteHead;\n      roomtaken = ret1.roomTaken;\n      roomtakenright = ret1.roomTakenRight;\n    } else {\n      var ret2 = this.addNoteToAbcElement(abselem, elem, dot, this.stemdir, this.style, zeroDuration, durlog, nostem, voice);\n      if (ret2.min !== undefined) this.minY = Math.min(ret2.min, this.minY);\n      notehead = ret2.noteHead;\n      roomtaken = ret2.roomTaken;\n      roomtakenright = ret2.roomTakenRight;\n      additionalLedgers = ret2.additionalLedgers;\n      dir = ret2.dir;\n      symbolWidth = ret2.symbolWidth;\n    }\n\n    if (elem.lyric !== undefined) {\n      this.addLyric(abselem, elem);\n    }\n\n    if (elem.gracenotes !== undefined) {\n      roomtaken += this.addGraceNotes(elem, voice, abselem, notehead, this.stemHeight * this.voiceScale, this.isBagpipes, roomtaken);\n    }\n\n    if (elem.decoration) {\n      this.decoration.createDecoration(voice, elem.decoration, abselem.top, notehead ? notehead.w : 0, abselem, roomtaken, dir, abselem.bottom, elem.positioning, this.hasVocals);\n    }\n\n    if (elem.barNumber) {\n      abselem.addChild(new RelativeElement(elem.barNumber, -10, 0, 0, {\n        type: \"barNumber\"\n      }));\n    } // ledger lines\n\n\n    ledgerLines(abselem, elem.minpitch, elem.maxpitch, elem.rest, symbolWidth, additionalLedgers, dir, -2, 1);\n\n    if (elem.chord !== undefined) {\n      var ret3 = this.addChord(abselem, elem, roomtaken, roomtakenright);\n      roomtaken = ret3.roomTaken;\n      roomtakenright = ret3.roomTakenRight;\n    }\n\n    if (elem.startTriplet) {\n      this.triplet = new TripletElem(elem.startTriplet, notehead, {\n        flatBeams: this.flatBeams\n      }); // above is opposite from case of slurs\n    }\n\n    if (elem.endTriplet && this.triplet) {\n      this.triplet.setCloseAnchor(notehead);\n    }\n\n    if (this.triplet && !elem.startTriplet && !elem.endTriplet) {\n      this.triplet.middleNote(notehead);\n    }\n\n    return abselem;\n  };\n\n  var createNoteHead = function createNoteHead(abselem, c, pitchelem, dir, headx, extrax, flag, dot, dotshiftx, scale, accidentalSlot) {\n    // TODO scale the dot as well\n    var pitch = pitchelem.verticalPos;\n    var notehead;\n    var i;\n    var accidentalshiftx = 0;\n    var newDotShiftX = 0;\n    var extraLeft = 0;\n    if (c === undefined) abselem.addChild(new RelativeElement(\"pitch is undefined\", 0, 0, 0, {\n      type: \"debug\"\n    }));else if (c === \"\") {\n      notehead = new RelativeElement(null, 0, 0, pitch);\n    } else {\n      var shiftheadx = headx;\n\n      if (pitchelem.printer_shift) {\n        var adjust = pitchelem.printer_shift === \"same\" ? 1 : 0;\n        shiftheadx = dir === \"down\" ? -glyphs.getSymbolWidth(c) * scale + adjust : glyphs.getSymbolWidth(c) * scale - adjust;\n      }\n\n      var opts = {\n        scalex: scale,\n        scaley: scale,\n        thickness: glyphs.symbolHeightInPitches(c) * scale\n      };\n      notehead = new RelativeElement(c, shiftheadx, glyphs.getSymbolWidth(c) * scale, pitch, opts);\n\n      if (flag) {\n        var pos = pitch + (dir === \"down\" ? -7 : 7) * scale; //if (scale===1 && (dir===\"down\")?(pos>6):(pos<6)) pos=6;\n\n        var xdelta = dir === \"down\" ? headx : headx + notehead.w - 0.6;\n        abselem.addRight(new RelativeElement(flag, xdelta, glyphs.getSymbolWidth(flag) * scale, pos, {\n          scalex: scale,\n          scaley: scale\n        }));\n      }\n\n      newDotShiftX = notehead.w + dotshiftx - 2 + 5 * dot;\n\n      for (; dot > 0; dot--) {\n        var dotadjusty = 1 - Math.abs(pitch) % 2; //PER: take abs value of the pitch. And the shift still happens on ledger lines.\n\n        abselem.addRight(new RelativeElement(\"dots.dot\", notehead.w + dotshiftx - 2 + 5 * dot, glyphs.getSymbolWidth(\"dots.dot\"), pitch + dotadjusty));\n      }\n    }\n    if (notehead) notehead.highestVert = pitchelem.highestVert;\n\n    if (pitchelem.accidental) {\n      var symb;\n\n      switch (pitchelem.accidental) {\n        case \"quartersharp\":\n          symb = \"accidentals.halfsharp\";\n          break;\n\n        case \"dblsharp\":\n          symb = \"accidentals.dblsharp\";\n          break;\n\n        case \"sharp\":\n          symb = \"accidentals.sharp\";\n          break;\n\n        case \"quarterflat\":\n          symb = \"accidentals.halfflat\";\n          break;\n\n        case \"flat\":\n          symb = \"accidentals.flat\";\n          break;\n\n        case \"dblflat\":\n          symb = \"accidentals.dblflat\";\n          break;\n\n        case \"natural\":\n          symb = \"accidentals.nat\";\n      } // if a note is at least a sixth away, it can share a slot with another accidental\n\n\n      var accSlotFound = false;\n      var accPlace = extrax;\n\n      for (var j = 0; j < accidentalSlot.length; j++) {\n        if (pitch - accidentalSlot[j][0] >= 6) {\n          accidentalSlot[j][0] = pitch;\n          accPlace = accidentalSlot[j][1];\n          accSlotFound = true;\n          break;\n        }\n      }\n\n      if (accSlotFound === false) {\n        accPlace -= glyphs.getSymbolWidth(symb) * scale + 2;\n        accidentalSlot.push([pitch, accPlace]);\n        accidentalshiftx = glyphs.getSymbolWidth(symb) * scale + 2;\n      }\n\n      abselem.addExtra(new RelativeElement(symb, accPlace, glyphs.getSymbolWidth(symb), pitch, {\n        scalex: scale,\n        scaley: scale\n      }));\n      extraLeft = glyphs.getSymbolWidth(symb) / 2; // TODO-PER: We need a little extra width if there is an accidental, but I'm not sure why it isn't the full width of the accidental.\n    }\n\n    return {\n      notehead: notehead,\n      accidentalshiftx: accidentalshiftx,\n      dotshiftx: newDotShiftX,\n      extraLeft: extraLeft\n    };\n  };\n\n  AbstractEngraver.prototype.addSlursAndTies = function (abselem, pitchelem, notehead, voice, dir) {\n    if (pitchelem.endTie) {\n      if (this.ties[0]) {\n        this.ties[0].setEndAnchor(notehead);\n        this.ties = this.ties.slice(1, this.ties.length);\n      }\n    }\n\n    if (pitchelem.startTie) {\n      //PER: bug fix: var tie = new TieElem(notehead, null, (this.stemdir==\"up\" || dir==\"down\") && this.stemdir!=\"down\",(this.stemdir==\"down\" || this.stemdir==\"up\"));\n      var tie = new TieElem(notehead, null, (this.stemdir === \"down\" || dir === \"down\") && this.stemdir !== \"up\", this.stemdir === \"down\" || this.stemdir === \"up\", true);\n      if (hint) tie.setHint();\n      this.ties[this.ties.length] = tie;\n      voice.addOther(tie); // HACK-PER: For the animation, we need to know if a note is tied to the next one, so here's a flag.\n      // Unfortunately, only some of the notes in the current event might be tied, but this will consider it\n      // tied if any one of them is. That will work for most cases.\n\n      abselem.startTie = true;\n    }\n\n    if (pitchelem.endSlur) {\n      for (var i = 0; i < pitchelem.endSlur.length; i++) {\n        var slurid = pitchelem.endSlur[i];\n        var slur;\n\n        if (this.slurs[slurid]) {\n          slur = this.slurs[slurid];\n          slur.setEndAnchor(notehead);\n          delete this.slurs[slurid];\n        } else {\n          slur = new TieElem(null, notehead, dir === \"down\", (this.stemdir === \"up\" || dir === \"down\") && this.stemdir !== \"down\", false);\n          if (hint) slur.setHint();\n          voice.addOther(slur);\n        }\n\n        if (this.startlimitelem) {\n          slur.setStartX(this.startlimitelem);\n        }\n      }\n    }\n\n    if (pitchelem.startSlur) {\n      for (i = 0; i < pitchelem.startSlur.length; i++) {\n        var slurid = pitchelem.startSlur[i].label; //PER: bug fix: var slur = new TieElem(notehead, null, (this.stemdir==\"up\" || dir==\"down\") && this.stemdir!=\"down\", this.stemdir);\n\n        var slur = new TieElem(notehead, null, (this.stemdir === \"down\" || dir === \"down\") && this.stemdir !== \"up\", false, false);\n        if (hint) slur.setHint();\n        this.slurs[slurid] = slur;\n        voice.addOther(slur);\n      }\n    }\n  };\n\n  AbstractEngraver.prototype.addMeasureNumber = function (number, abselem) {\n    var measureNumHeight = this.renderer.getTextSize(number, \"measurefont\", 'bar-number');\n    abselem.addChild(new RelativeElement(number, 0, 0, 11 + measureNumHeight.height / spacing.STEP, {\n      type: \"barNumber\"\n    }));\n  };\n\n  AbstractEngraver.prototype.createBarLine = function (voice, elem, isFirstStaff) {\n    // bar_thin, bar_thin_thick, bar_thin_thin, bar_thick_thin, bar_right_repeat, bar_left_repeat, bar_double_repeat\n    var abselem = new AbsoluteElement(elem, 0, 10, 'bar', this.tuneNumber);\n    var anchor = null; // place to attach part lines\n\n    var dx = 0;\n\n    if (elem.barNumber) {\n      this.addMeasureNumber(elem.barNumber, abselem);\n    }\n\n    var firstdots = elem.type === \"bar_right_repeat\" || elem.type === \"bar_dbl_repeat\";\n    var firstthin = elem.type !== \"bar_left_repeat\" && elem.type !== \"bar_thick_thin\" && elem.type !== \"bar_invisible\";\n    var thick = elem.type === \"bar_right_repeat\" || elem.type === \"bar_dbl_repeat\" || elem.type === \"bar_left_repeat\" || elem.type === \"bar_thin_thick\" || elem.type === \"bar_thick_thin\";\n    var secondthin = elem.type === \"bar_left_repeat\" || elem.type === \"bar_thick_thin\" || elem.type === \"bar_thin_thin\" || elem.type === \"bar_dbl_repeat\";\n    var seconddots = elem.type === \"bar_left_repeat\" || elem.type === \"bar_dbl_repeat\"; // limit positioning of slurs\n\n    if (firstdots || seconddots) {\n      for (var slur in this.slurs) {\n        if (this.slurs.hasOwnProperty(slur)) {\n          this.slurs[slur].setEndX(abselem);\n        }\n      }\n\n      this.startlimitelem = abselem;\n    }\n\n    if (firstdots) {\n      abselem.addRight(new RelativeElement(\"dots.dot\", dx, 1, 7));\n      abselem.addRight(new RelativeElement(\"dots.dot\", dx, 1, 5));\n      dx += 6; //2 hardcoded, twice;\n    }\n\n    if (firstthin) {\n      anchor = new RelativeElement(null, dx, 1, 2, {\n        \"type\": \"bar\",\n        \"pitch2\": 10,\n        linewidth: 0.6\n      });\n      abselem.addRight(anchor);\n    }\n\n    if (elem.type === \"bar_invisible\") {\n      anchor = new RelativeElement(null, dx, 1, 2, {\n        \"type\": \"none\",\n        \"pitch2\": 10,\n        linewidth: 0.6\n      });\n      abselem.addRight(anchor);\n    }\n\n    if (elem.decoration) {\n      this.decoration.createDecoration(voice, elem.decoration, 12, thick ? 3 : 1, abselem, 0, \"down\", 2, elem.positioning, this.hasVocals);\n    }\n\n    if (thick) {\n      dx += 4; //3 hardcoded;\n\n      anchor = new RelativeElement(null, dx, 4, 2, {\n        \"type\": \"bar\",\n        \"pitch2\": 10,\n        linewidth: 4\n      });\n      abselem.addRight(anchor);\n      dx += 5;\n    } // if (this.partstartelem && (thick || (firstthin && secondthin))) { // means end of nth part\n    // this.partstartelem.anchor2=anchor;\n    // this.partstartelem = null;\n    // }\n\n\n    if (this.partstartelem && elem.endEnding) {\n      this.partstartelem.anchor2 = anchor;\n      this.partstartelem = null;\n    }\n\n    if (secondthin) {\n      dx += 3; //3 hardcoded;\n\n      anchor = new RelativeElement(null, dx, 1, 2, {\n        \"type\": \"bar\",\n        \"pitch2\": 10,\n        linewidth: 0.6\n      });\n      abselem.addRight(anchor); // 3 is hardcoded\n    }\n\n    if (seconddots) {\n      dx += 3; //3 hardcoded;\n\n      abselem.addRight(new RelativeElement(\"dots.dot\", dx, 1, 7));\n      abselem.addRight(new RelativeElement(\"dots.dot\", dx, 1, 5));\n    } // 2 is hardcoded\n\n\n    if (elem.startEnding && isFirstStaff) {\n      // only put the first & second ending marks on the first staff\n      var textWidth = this.renderer.getTextSize(elem.startEnding, \"repeatfont\", '').width;\n      abselem.minspacing += textWidth + 10; // Give plenty of room for the ending number.\n\n      this.partstartelem = new EndingElem(elem.startEnding, anchor, null);\n      voice.addOther(this.partstartelem);\n    } // Add a little space to the left of the bar line so that nothing can crowd it.\n\n\n    abselem.extraw -= 5;\n    return abselem;\n  };\n})();\n\nmodule.exports = AbstractEngraver;","//    abc_beam_element.js: Definition of the BeamElem class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar AbsoluteElement = require('./abc_absolute_element');\n\nvar RelativeElement = require('./abc_relative_element');\n\nvar spacing = require('./abc_spacing');\n\nvar getDurlog = function getDurlog(duration) {\n  // TODO-PER: This is a hack to prevent a Chrome lockup. Duration should have been defined already,\n  // but there's definitely a case where it isn't. [Probably something to do with triplets.]\n  if (duration === undefined) {\n    return 0;\n  } //        console.log(\"getDurlog: \" + duration);\n\n\n  return Math.floor(Math.log(duration) / Math.log(2));\n}; // Most elements on the page are related to a particular absolute element -- notes, rests, bars, etc. Beams, however, span multiple elements.\n// This means that beams can't be laid out until the absolute elements are placed. There is the further complication that the stems for beamed\n// notes can't be laid out until the beams are because we don't know how long they will be until we know the slope of the beam and the horizontal\n// spacing of the absolute elements.\n//\n// So, when a beam is detected, a BeamElem is created, then all notes belonging to that beam are added to it. These notes are not given stems at that time.\n// Then, after the horizontal layout is complete, all of the BeamElem are iterated to set the beam position, then all of the notes that are beamed are given\n// stems. After that, we are ready for the drawing step.\n// There are three phases: the setup phase, when new elements are being discovered, the layout phase, when everything is calculated, and the drawing phase,\n// when the object is not changed, but is used to put the elements on the page.\n\n\nvar BeamElem;\n\n(function () {\n  \"use strict\"; //\n  // Setup phase\n  //\n\n  BeamElem = function BeamElem(stemHeight, type, flat) {\n    // type is \"grace\", \"up\", \"down\", or undefined. flat is used to force flat beams, as it commonly found in the grace notes of bagpipe music.\n    this.isflat = flat;\n    this.isgrace = type && type === \"grace\";\n    this.forceup = this.isgrace || type && type === \"up\";\n    this.forcedown = type && type === \"down\";\n    this.elems = []; // all the AbsoluteElements that this beam touches. It may include embedded rests.\n\n    this.total = 0;\n    this.allrests = true;\n    this.stemHeight = stemHeight;\n    this.beams = []; // During the layout phase, this will become a list of the beams that need to be drawn.\n  };\n\n  BeamElem.prototype.setHint = function () {\n    this.hint = true;\n  };\n\n  BeamElem.prototype.add = function (abselem) {\n    var pitch = abselem.abcelem.averagepitch;\n    if (pitch === undefined) return; // don't include elements like spacers in beams\n\n    this.allrests = this.allrests && abselem.abcelem.rest;\n    abselem.beam = this;\n    this.elems.push(abselem); //var pitch = abselem.abcelem.averagepitch;\n\n    this.total += pitch; // TODO CHORD (get pitches from abselem.heads)\n\n    if (this.min === undefined || abselem.abcelem.minpitch < this.min) {\n      this.min = abselem.abcelem.minpitch;\n    }\n\n    if (this.max === undefined || abselem.abcelem.maxpitch > this.max) {\n      this.max = abselem.abcelem.maxpitch;\n    }\n  };\n\n  var middleLine = 6; // hardcoded 6 is B\n\n  BeamElem.prototype.calcDir = function () {\n    if (this.forceup) return true;\n    if (this.forcedown) return false;\n    var average = calcAverage(this.total, this.elems.length);\n    return average < middleLine;\n  }; //\n  // layout phase\n  //\n\n\n  BeamElem.prototype.layout = function () {\n    if (this.elems.length === 0 || this.allrests) return;\n    this.stemsUp = this.calcDir(); // True means the stems are facing up.\n\n    var dy = calcDy(this.stemsUp, this.isgrace); // This is the width of the beam line.\n    // create the main beam\n\n    var firstElement = this.elems[0];\n    var lastElement = this.elems[this.elems.length - 1];\n    var minStemHeight = 0; // The following is to leave space for \"!///!\" marks.\n\n    var referencePitch = this.stemsUp ? firstElement.abcelem.maxpitch : firstElement.abcelem.minpitch;\n    minStemHeight = minStem(firstElement, this.stemsUp, referencePitch, minStemHeight);\n    minStemHeight = minStem(lastElement, this.stemsUp, referencePitch, minStemHeight);\n    minStemHeight = Math.max(this.stemHeight, minStemHeight + 3); // TODO-PER: The 3 is the width of a 16th beam. The actual height of the beam should be used instead.\n\n    var yPos = calcYPos(this.total, this.elems.length, minStemHeight, this.stemsUp, firstElement.abcelem.averagepitch, lastElement.abcelem.averagepitch, this.isflat, this.min, this.max, this.isgrace);\n    var xPos = calcXPos(this.stemsUp, firstElement, lastElement);\n    this.beams.push({\n      startX: xPos[0],\n      endX: xPos[1],\n      startY: yPos[0],\n      endY: yPos[1],\n      dy: dy\n    }); // create the rest of the beams (in the case of 1/16th notes, etc.\n\n    var beams = createAdditionalBeams(this.elems, this.stemsUp, this.beams[0], this.isgrace, dy);\n\n    for (var i = 0; i < beams.length; i++) {\n      this.beams.push(beams[i]);\n    } // Now that the main beam is defined, we know how tall the stems should be, so create them and attach them to the original notes.\n\n\n    createStems(this.elems, this.stemsUp, this.beams[0], dy, this.mainNote);\n  };\n\n  BeamElem.prototype.isAbove = function () {\n    return this.stemsUp;\n  }; // We can't just use the entire beam for the calculation. The range has to be passed in, because the beam might extend into some unrelated notes. for instance, (3_a'f'e'f'2 when L:16\n\n\n  BeamElem.prototype.heightAtMidpoint = function (startX, endX) {\n    if (this.beams.length === 0) return 0;\n    var beam = this.beams[0];\n    var midPoint = startX + (endX - startX) / 2;\n    return getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, midPoint);\n  };\n\n  BeamElem.prototype.yAtNote = function (element) {\n    var beam = this.beams[0];\n    return getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, element.x);\n  };\n\n  BeamElem.prototype.xAtMidpoint = function (startX, endX) {\n    return startX + (endX - startX) / 2;\n  }; //\n  // Drawing phase\n  //\n\n\n  BeamElem.prototype.draw = function (renderer) {\n    if (this.beams.length === 0) return;\n    renderer.beginGroup();\n\n    for (var i = 0; i < this.beams.length; i++) {\n      var beam = this.beams[i];\n      drawBeam(renderer, beam.startX, beam.startY, beam.endX, beam.endY, beam.dy, this.hint);\n    }\n\n    renderer.endGroup('beam-elem');\n  }; //\n  // private functions\n  //\n\n\n  function minStem(element, stemsUp, referencePitch, minStemHeight) {\n    if (!element.children) return minStemHeight;\n\n    for (var i = 0; i < element.children.length; i++) {\n      var elem = element.children[i];\n      if (stemsUp && elem.top !== undefined && elem.c === \"flags.ugrace\") minStemHeight = Math.max(minStemHeight, elem.top - referencePitch);else if (!stemsUp && elem.bottom !== undefined && elem.c === \"flags.ugrace\") minStemHeight = Math.max(minStemHeight, referencePitch - elem.bottom + 7); // The extra 7 is because we are measuring the slash from the top.\n    }\n\n    return minStemHeight;\n  }\n\n  function calcSlant(leftAveragePitch, rightAveragePitch, numStems, isFlat) {\n    if (isFlat) return 0;\n    var slant = leftAveragePitch - rightAveragePitch;\n    var maxSlant = numStems / 2;\n    if (slant > maxSlant) slant = maxSlant;\n    if (slant < -maxSlant) slant = -maxSlant;\n    return slant;\n  }\n\n  function calcAverage(total, numElements) {\n    if (!numElements) return 0;\n    return total / numElements;\n  }\n\n  function getBarYAt(startx, starty, endx, endy, x) {\n    return starty + (endy - starty) / (endx - startx) * (x - startx);\n  }\n\n  function calcDy(asc, isGrace) {\n    var dy = asc ? spacing.STEP : -spacing.STEP;\n    if (isGrace) dy = dy * 0.4;\n    return dy;\n  }\n\n  function drawBeam(renderer, startX, startY, endX, endY, dy, isHint) {\n    var klass = 'beam-elem';\n    if (isHint) klass += \" abcjs-hint\"; // the X coordinates are actual coordinates, but the Y coordinates are in pitches.\n\n    startY = renderer.calcY(startY);\n    endY = renderer.calcY(endY);\n    var pathString = \"M\" + startX + \" \" + startY + \" L\" + endX + \" \" + endY + \"L\" + endX + \" \" + (endY + dy) + \" L\" + startX + \" \" + (startY + dy) + \"z\";\n    renderer.printPath({\n      path: pathString,\n      stroke: \"none\",\n      fill: \"#000000\",\n      'class': renderer.addClasses(klass)\n    });\n  }\n\n  function calcXPos(asc, firstElement, lastElement) {\n    var starthead = firstElement.heads[asc ? 0 : firstElement.heads.length - 1];\n    var endhead = lastElement.heads[asc ? 0 : lastElement.heads.length - 1];\n    var startX = starthead.x;\n    if (asc) startX += starthead.w - 0.6;\n    var endX = endhead.x;\n    if (asc) endX += endhead.w;\n    return [startX, endX];\n  }\n\n  function calcYPos(total, numElements, stemHeight, asc, firstAveragePitch, lastAveragePitch, isFlat, minPitch, maxPitch, isGrace) {\n    var average = calcAverage(total, numElements); // This is the average pitch for the all the notes that will be beamed.\n\n    var barpos = stemHeight - 2; // (isGrace)? 5:7;\n\n    var barminpos = stemHeight - 2;\n    var pos = Math.round(asc ? Math.max(average + barpos, maxPitch + barminpos) : Math.min(average - barpos, minPitch - barminpos));\n    var slant = calcSlant(firstAveragePitch, lastAveragePitch, numElements, isFlat);\n    var startY = pos + Math.floor(slant / 2);\n    var endY = pos + Math.floor(-slant / 2); // If the notes are too high or too low, make the beam go down to the middle\n\n    if (!isGrace) {\n      if (asc && pos < 6) {\n        startY = 6;\n        endY = 6;\n      } else if (!asc && pos > 6) {\n        startY = 6;\n        endY = 6;\n      }\n    }\n\n    return [startY, endY];\n  }\n\n  function createStems(elems, asc, beam, dy, mainNote) {\n    for (var i = 0; i < elems.length; i++) {\n      var elem = elems[i];\n      if (elem.abcelem.rest) continue; // TODO-PER: This is odd. If it is a regular beam then elems is an array of AbsoluteElements, if it is a grace beam then it is an array of objects , so we directly attach the element to the parent. We tell it if is a grace note because they are passed in as a generic object instead of an AbsoluteElement.\n\n      var isGrace = elem.addExtra ? false : true;\n      var parent = isGrace ? mainNote : elem;\n      var furthestHead = elem.heads[asc ? 0 : elem.heads.length - 1];\n      var ovalDelta = 1 / 5; //(isGrace)?1/3:1/5;\n\n      var pitch = furthestHead.pitch + (asc ? ovalDelta : -ovalDelta);\n      var dx = asc ? furthestHead.w : 0; // down-pointing stems start on the left side of the note, up-pointing stems start on the right side, so we offset by the note width.\n\n      var x = furthestHead.x + dx; // this is now the actual x location in pixels.\n\n      var bary = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, x);\n      var lineWidth = asc ? -0.6 : 0.6;\n      if (!asc) bary -= dy / 2 / spacing.STEP; // TODO-PER: This is just a fudge factor so the down-pointing stems don't overlap.\n\n      if (isGrace) dx += elem.heads[0].dx; // TODO-PER-HACK: One type of note head has a different placement of the stem. This should be more generically calculated:\n\n      if (furthestHead.c === 'noteheads.slash.quarter') {\n        if (asc) pitch += 1;else pitch -= 1;\n      }\n\n      var stem = new RelativeElement(null, dx, 0, pitch, {\n        \"type\": \"stem\",\n        \"pitch2\": bary,\n        linewidth: lineWidth\n      });\n      stem.setX(parent.x); // This is after the x coordinates were set, so we have to set it directly.\n\n      parent.addExtra(stem);\n    }\n  }\n\n  function createAdditionalBeams(elems, asc, beam, isGrace, dy) {\n    var beams = [];\n    var auxBeams = []; // auxbeam will be {x, y, durlog, single} auxbeam[0] should match with durlog=-4 (16th) (j=-4-durlog)\n\n    for (var i = 0; i < elems.length; i++) {\n      var elem = elems[i];\n      if (elem.abcelem.rest) continue;\n      var furthestHead = elem.heads[asc ? 0 : elem.heads.length - 1];\n      var x = furthestHead.x + (asc ? furthestHead.w : 0);\n      var bary = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, x);\n      var sy = asc ? -1.5 : 1.5;\n      if (isGrace) sy = sy * 2 / 3; // This makes the second beam on grace notes closer to the first one.\n\n      var duration = elem.abcelem.duration; // get the duration via abcelem because of triplets\n\n      if (duration === 0) duration = 0.25; // if this is stemless, then we use quarter note as the duration.\n\n      for (var durlog = getDurlog(duration); durlog < -3; durlog++) {\n        if (auxBeams[-4 - durlog]) {\n          auxBeams[-4 - durlog].single = false;\n        } else {\n          auxBeams[-4 - durlog] = {\n            x: x + (asc ? -0.6 : 0),\n            y: bary + sy * (-4 - durlog + 1),\n            durlog: durlog,\n            single: true\n          };\n        }\n      }\n\n      for (var j = auxBeams.length - 1; j >= 0; j--) {\n        if (i === elems.length - 1 || getDurlog(elems[i + 1].abcelem.duration) > -j - 4) {\n          var auxBeamEndX = x;\n          var auxBeamEndY = bary + sy * (j + 1);\n\n          if (auxBeams[j].single) {\n            auxBeamEndX = i === 0 ? x + 5 : x - 5;\n            auxBeamEndY = getBarYAt(beam.startX, beam.startY, beam.endX, beam.endY, auxBeamEndX) + sy * (j + 1);\n          }\n\n          beams.push({\n            startX: auxBeams[j].x,\n            endX: auxBeamEndX,\n            startY: auxBeams[j].y,\n            endY: auxBeamEndY,\n            dy: dy\n          });\n          auxBeams = auxBeams.slice(0, j);\n        }\n      }\n    }\n\n    return beams;\n  }\n})();\n\nmodule.exports = BeamElem;","//    abc_brace_element.js: Definition of the BraceElement class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar BraceElem = function BraceElem() {\n  this.length = 1;\n};\n\nBraceElem.prototype.increaseStavesIncluded = function () {\n  this.length++;\n};\n\nBraceElem.prototype.setLocation = function (x) {\n  this.x = x;\n};\n\nBraceElem.prototype.getWidth = function () {\n  return 10; // TODO-PER: right now the drawing function doesn't vary the width at all. If it does in the future then this will change.\n};\n\nBraceElem.prototype.layout = function (renderer, top, bottom) {\n  this.startY = top;\n  this.endY = bottom;\n};\n\nBraceElem.prototype.draw = function (renderer, top, bottom) {\n  this.layout(renderer, top, bottom);\n  renderer.drawBrace(this.x, this.startY, this.endY);\n};\n\nmodule.exports = BraceElem;","//    abc_create_clef.js\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar AbsoluteElement = require('./abc_absolute_element');\n\nvar glyphs = require('./abc_glyphs');\n\nvar RelativeElement = require('./abc_relative_element');\n\nvar createClef;\n\n(function () {\n  \"use strict\";\n\n  createClef = function createClef(elem, tuneNumber) {\n    var clef;\n    var octave = 0;\n    var abselem = new AbsoluteElement(elem, 0, 10, 'staff-extra', tuneNumber);\n    abselem.isClef = true;\n\n    switch (elem.type) {\n      case \"treble\":\n        clef = \"clefs.G\";\n        break;\n\n      case \"tenor\":\n        clef = \"clefs.C\";\n        break;\n\n      case \"alto\":\n        clef = \"clefs.C\";\n        break;\n\n      case \"bass\":\n        clef = \"clefs.F\";\n        break;\n\n      case 'treble+8':\n        clef = \"clefs.G\";\n        octave = 1;\n        break;\n\n      case 'tenor+8':\n        clef = \"clefs.C\";\n        octave = 1;\n        break;\n\n      case 'bass+8':\n        clef = \"clefs.F\";\n        octave = 1;\n        break;\n\n      case 'alto+8':\n        clef = \"clefs.C\";\n        octave = 1;\n        break;\n\n      case 'treble-8':\n        clef = \"clefs.G\";\n        octave = -1;\n        break;\n\n      case 'tenor-8':\n        clef = \"clefs.C\";\n        octave = -1;\n        break;\n\n      case 'bass-8':\n        clef = \"clefs.F\";\n        octave = -1;\n        break;\n\n      case 'alto-8':\n        clef = \"clefs.C\";\n        octave = -1;\n        break;\n\n      case 'none':\n        return null;\n\n      case 'perc':\n        clef = \"clefs.perc\";\n        break;\n\n      default:\n        abselem.addChild(new RelativeElement(\"clef=\" + elem.type, 0, 0, undefined, {\n          type: \"debug\"\n        }));\n    } // if (elem.verticalPos) {\n    // pitch = elem.verticalPos;\n    // }\n\n\n    var dx = 5;\n\n    if (clef) {\n      abselem.addRight(new RelativeElement(clef, dx, glyphs.getSymbolWidth(clef), elem.clefPos));\n\n      if (clef === 'clefs.G') {\n        abselem.top = 13;\n        abselem.bottom = -1;\n      } else {\n        abselem.top = 10;\n        abselem.bottom = 2;\n      }\n\n      if (octave !== 0) {\n        var scale = 2 / 3;\n        var adjustspacing = (glyphs.getSymbolWidth(clef) - glyphs.getSymbolWidth(\"8\") * scale) / 2;\n        abselem.addRight(new RelativeElement(\"8\", dx + adjustspacing, glyphs.getSymbolWidth(\"8\") * scale, octave > 0 ? abselem.top + 3 : abselem.bottom - 1, {\n          scalex: scale,\n          scaley: scale\n        }));\n        abselem.top += 2;\n      }\n    }\n\n    return abselem;\n  };\n})();\n\nmodule.exports = createClef;","//    abc_create_key_signature.js\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar AbsoluteElement = require('./abc_absolute_element');\n\nvar glyphs = require('./abc_glyphs');\n\nvar RelativeElement = require('./abc_relative_element');\n\nvar parseCommon = require('../parse/abc_common');\n\nvar createKeySignature;\n\n(function () {\n  \"use strict\";\n\n  createKeySignature = function createKeySignature(elem, tuneNumber) {\n    if (!elem.accidentals || elem.accidentals.length === 0) return null;\n    var abselem = new AbsoluteElement(elem, 0, 10, 'staff-extra', tuneNumber);\n    abselem.isKeySig = true;\n    var dx = 0;\n    parseCommon.each(elem.accidentals, function (acc) {\n      var symbol = acc.acc === \"sharp\" ? \"accidentals.sharp\" : acc.acc === \"natural\" ? \"accidentals.nat\" : \"accidentals.flat\"; //var notes = { 'A': 5, 'B': 6, 'C': 0, 'D': 1, 'E': 2, 'F': 3, 'G':4, 'a': 12, 'b': 13, 'c': 7, 'd': 8, 'e': 9, 'f': 10, 'g':11 };\n\n      abselem.addRight(new RelativeElement(symbol, dx, glyphs.getSymbolWidth(symbol), acc.verticalPos, {\n        thickness: glyphs.symbolHeightInPitches(symbol)\n      }));\n      dx += glyphs.getSymbolWidth(symbol) + 2;\n    }, this);\n    return abselem;\n  };\n})();\n\nmodule.exports = createKeySignature;","//    abc_create_time_signature.js\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar AbsoluteElement = require('./abc_absolute_element');\n\nvar glyphs = require('./abc_glyphs');\n\nvar RelativeElement = require('./abc_relative_element');\n\nvar createTimeSignature;\n\n(function () {\n  \"use strict\";\n\n  createTimeSignature = function createTimeSignature(elem, tuneNumber) {\n    var abselem = new AbsoluteElement(elem, 0, 10, 'staff-extra', tuneNumber);\n\n    if (elem.type === \"specified\") {\n      var x = 0;\n\n      for (var i = 0; i < elem.value.length; i++) {\n        if (i !== 0) {\n          abselem.addRight(new RelativeElement('+', x + 1, glyphs.getSymbolWidth(\"+\"), 6, {\n            thickness: glyphs.symbolHeightInPitches(\"+\")\n          }));\n          x += glyphs.getSymbolWidth(\"+\") + 2;\n        }\n\n        if (elem.value[i].den) {\n          var numWidth = 0;\n\n          for (var i2 = 0; i2 < elem.value[i].num.length; i2++) {\n            numWidth += glyphs.getSymbolWidth(elem.value[i].num.charAt(i2));\n          }\n\n          var denWidth = 0;\n\n          for (i2 = 0; i2 < elem.value[i].num.length; i2++) {\n            denWidth += glyphs.getSymbolWidth(elem.value[i].den.charAt(i2));\n          }\n\n          var maxWidth = Math.max(numWidth, denWidth);\n          abselem.addRight(new RelativeElement(elem.value[i].num, x + (maxWidth - numWidth) / 2, numWidth, 8, {\n            thickness: glyphs.symbolHeightInPitches(elem.value[i].num.charAt(0))\n          }));\n          abselem.addRight(new RelativeElement(elem.value[i].den, x + (maxWidth - denWidth) / 2, denWidth, 4, {\n            thickness: glyphs.symbolHeightInPitches(elem.value[i].den.charAt(0))\n          }));\n          x += maxWidth;\n        } else {\n          var thisWidth = 0;\n\n          for (var i3 = 0; i3 < elem.value[i].num.length; i3++) {\n            thisWidth += glyphs.getSymbolWidth(elem.value[i].num.charAt(i3));\n          }\n\n          abselem.addRight(new RelativeElement(elem.value[i].num, x, thisWidth, 6, {\n            thickness: glyphs.symbolHeightInPitches(elem.value[i].num.charAt(0))\n          }));\n          x += thisWidth;\n        }\n      }\n    } else if (elem.type === \"common_time\") {\n      abselem.addRight(new RelativeElement(\"timesig.common\", 0, glyphs.getSymbolWidth(\"timesig.common\"), 6, {\n        thickness: glyphs.symbolHeightInPitches(\"timesig.common\")\n      }));\n    } else if (elem.type === \"cut_time\") {\n      abselem.addRight(new RelativeElement(\"timesig.cut\", 0, glyphs.getSymbolWidth(\"timesig.cut\"), 6, {\n        thickness: glyphs.symbolHeightInPitches(\"timesig.cut\")\n      }));\n    } else if (elem.type === \"tempus_imperfectum\") {\n      abselem.addRight(new RelativeElement(\"timesig.imperfectum\", 0, glyphs.getSymbolWidth(\"timesig.imperfectum\"), 6, {\n        thickness: glyphs.symbolHeightInPitches(\"timesig.imperfectum\")\n      }));\n    } else if (elem.type === \"tempus_imperfectum_prolatio\") {\n      abselem.addRight(new RelativeElement(\"timesig.imperfectum2\", 0, glyphs.getSymbolWidth(\"timesig.imperfectum2\"), 6, {\n        thickness: glyphs.symbolHeightInPitches(\"timesig.imperfectum2\")\n      }));\n    } else if (elem.type === \"tempus_perfectum\") {\n      abselem.addRight(new RelativeElement(\"timesig.perfectum\", 0, glyphs.getSymbolWidth(\"timesig.perfectum\"), 6, {\n        thickness: glyphs.symbolHeightInPitches(\"timesig.perfectum\")\n      }));\n    } else if (elem.type === \"tempus_perfectum_prolatio\") {\n      abselem.addRight(new RelativeElement(\"timesig.perfectum2\", 0, glyphs.getSymbolWidth(\"timesig.perfectum2\"), 6, {\n        thickness: glyphs.symbolHeightInPitches(\"timesig.perfectum2\")\n      }));\n    } else {\n      console.log(\"time signature:\", elem);\n    }\n\n    return abselem;\n  };\n})();\n\nmodule.exports = createTimeSignature;","// abc_decoration.js: Creates a data structure suitable for printing a line of abc\n// Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) & Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*global window */\nvar DynamicDecoration = require('./abc_dynamic_decoration');\n\nvar CrescendoElem = require('./abc_crescendo_element');\n\nvar glyphs = require('./abc_glyphs');\n\nvar RelativeElement = require('./abc_relative_element');\n\nvar TieElem = require('./abc_tie_element');\n\nvar Decoration;\n\n(function () {\n  \"use strict\";\n\n  Decoration = function Decoration() {\n    this.startDiminuendoX = undefined;\n    this.startCrescendoX = undefined;\n    this.minTop = 12; // TODO-PER: this is assuming a 5-line staff. Pass that info in.\n\n    this.minBottom = 0;\n  };\n\n  var closeDecoration = function closeDecoration(voice, decoration, pitch, width, abselem, roomtaken, dir, minPitch) {\n    var yPos;\n\n    for (var i = 0; i < decoration.length; i++) {\n      if (decoration[i] === \"staccato\" || decoration[i] === \"tenuto\" || decoration[i] === \"accent\") {\n        var symbol = \"scripts.\" + decoration[i];\n        if (decoration[i] === \"accent\") symbol = \"scripts.sforzato\";\n        if (yPos === undefined) yPos = dir === \"down\" ? pitch + 2 : minPitch - 2;else yPos = dir === \"down\" ? yPos + 2 : yPos - 2;\n\n        if (decoration[i] === \"accent\") {\n          // Always place the accent three pitches away, no matter whether that is a line or space.\n          if (dir === \"up\") yPos--;else yPos++;\n        } else {\n          // don't place on a stave line. The stave lines are 2,4,6,8,10\n          switch (yPos) {\n            case 2:\n            case 4:\n            case 6:\n            case 8:\n            case 10:\n              if (dir === \"up\") yPos--;else yPos++;\n              break;\n          }\n        }\n\n        if (pitch > 9) yPos++; // take up some room of those that are above\n\n        var deltaX = width / 2;\n\n        if (glyphs.getSymbolAlign(symbol) !== \"center\") {\n          deltaX -= glyphs.getSymbolWidth(symbol) / 2;\n        }\n\n        abselem.addChild(new RelativeElement(symbol, deltaX, glyphs.getSymbolWidth(symbol), yPos));\n      }\n\n      if (decoration[i] === \"slide\" && abselem.heads[0]) {\n        var yPos2 = abselem.heads[0].pitch;\n        yPos2 -= 2; // TODO-PER: not sure what this fudge factor is.\n\n        var blank1 = new RelativeElement(\"\", -roomtaken - 15, 0, yPos2 - 1);\n        var blank2 = new RelativeElement(\"\", -roomtaken - 5, 0, yPos2 + 1);\n        abselem.addChild(blank1);\n        abselem.addChild(blank2);\n        voice.addOther(new TieElem(blank1, blank2, false, false, false));\n      }\n    }\n\n    if (yPos === undefined) yPos = pitch;\n    return {\n      above: yPos,\n      below: abselem.bottom\n    };\n  };\n\n  var volumeDecoration = function volumeDecoration(voice, decoration, abselem, positioning) {\n    for (var i = 0; i < decoration.length; i++) {\n      switch (decoration[i]) {\n        case \"p\":\n        case \"mp\":\n        case \"pp\":\n        case \"ppp\":\n        case \"pppp\":\n        case \"f\":\n        case \"ff\":\n        case \"fff\":\n        case \"ffff\":\n        case \"sfz\":\n        case \"mf\":\n          var elem = new DynamicDecoration(abselem, decoration[i], positioning);\n          voice.addOther(elem);\n      }\n    }\n  };\n\n  var compoundDecoration = function compoundDecoration(decoration, pitch, width, abselem, dir) {\n    function highestPitch() {\n      if (abselem.heads.length === 0) return 10; // TODO-PER: I don't know if this can happen, but we'll return the top of the staff if so.\n\n      var pitch = abselem.heads[0].pitch;\n\n      for (var i = 1; i < abselem.heads.length; i++) {\n        pitch = Math.max(pitch, abselem.heads[i].pitch);\n      }\n\n      return pitch;\n    }\n\n    function lowestPitch() {\n      if (abselem.heads.length === 0) return 2; // TODO-PER: I don't know if this can happen, but we'll return the bottom of the staff if so.\n\n      var pitch = abselem.heads[0].pitch;\n\n      for (var i = 1; i < abselem.heads.length; i++) {\n        pitch = Math.min(pitch, abselem.heads[i].pitch);\n      }\n\n      return pitch;\n    }\n\n    function compoundDecoration(symbol, count) {\n      var placement = dir === 'down' ? lowestPitch() + 1 : highestPitch() + 9;\n      if (dir !== 'down' && count === 1) placement--;\n      var deltaX = width / 2;\n      deltaX += dir === 'down' ? -5 : 3;\n\n      for (var i = 0; i < count; i++) {\n        placement -= 1;\n        abselem.addChild(new RelativeElement(symbol, deltaX, glyphs.getSymbolWidth(symbol), placement));\n      }\n    }\n\n    for (var i = 0; i < decoration.length; i++) {\n      switch (decoration[i]) {\n        case \"/\":\n          compoundDecoration(\"flags.ugrace\", 1);\n          break;\n\n        case \"//\":\n          compoundDecoration(\"flags.ugrace\", 2);\n          break;\n\n        case \"///\":\n          compoundDecoration(\"flags.ugrace\", 3);\n          break;\n\n        case \"////\":\n          compoundDecoration(\"flags.ugrace\", 4);\n          break;\n      }\n    }\n  };\n\n  var stackedDecoration = function stackedDecoration(decoration, width, abselem, yPos, positioning, minTop, minBottom) {\n    function incrementPlacement(placement, height) {\n      if (placement === 'above') yPos.above += height;else yPos.below -= height;\n    }\n\n    function getPlacement(placement) {\n      var y;\n\n      if (placement === 'above') {\n        y = yPos.above;\n        if (y < minTop) y = minTop;\n      } else {\n        y = yPos.below;\n        if (y > minBottom) y = minBottom;\n      }\n\n      return y;\n    }\n\n    function textDecoration(text, placement) {\n      var y = getPlacement(placement);\n      var textFudge = 2;\n      var textHeight = 5; // TODO-PER: Get the height of the current font and use that for the thickness.\n\n      abselem.addChild(new RelativeElement(text, width / 2, 0, y + textFudge, {\n        type: \"decoration\",\n        klass: 'ornament',\n        thickness: 3\n      }));\n      incrementPlacement(placement, textHeight);\n    }\n\n    function symbolDecoration(symbol, placement) {\n      var deltaX = width / 2;\n\n      if (glyphs.getSymbolAlign(symbol) !== \"center\") {\n        deltaX -= glyphs.getSymbolWidth(symbol) / 2;\n      }\n\n      var height = glyphs.symbolHeightInPitches(symbol) + 1; // adding a little padding so nothing touches.\n\n      var y = getPlacement(placement);\n      y = placement === 'above' ? y + height / 2 : y - height / 2; // Center the element vertically.\n\n      abselem.addChild(new RelativeElement(symbol, deltaX, glyphs.getSymbolWidth(symbol), y, {\n        klass: 'ornament',\n        thickness: glyphs.symbolHeightInPitches(symbol)\n      }));\n      incrementPlacement(placement, height);\n    }\n\n    var symbolList = {\n      \"+\": \"scripts.stopped\",\n      \"open\": \"scripts.open\",\n      \"snap\": \"scripts.snap\",\n      \"wedge\": \"scripts.wedge\",\n      \"thumb\": \"scripts.thumb\",\n      \"shortphrase\": \"scripts.shortphrase\",\n      \"mediumphrase\": \"scripts.mediumphrase\",\n      \"longphrase\": \"scripts.longphrase\",\n      \"trill\": \"scripts.trill\",\n      \"roll\": \"scripts.roll\",\n      \"irishroll\": \"scripts.roll\",\n      \"marcato\": \"scripts.umarcato\",\n      \"dmarcato\": \"scripts.dmarcato\",\n      \"umarcato\": \"scripts.umarcato\",\n      \"turn\": \"scripts.turn\",\n      \"uppermordent\": \"scripts.prall\",\n      \"pralltriller\": \"scripts.prall\",\n      \"mordent\": \"scripts.mordent\",\n      \"lowermordent\": \"scripts.mordent\",\n      \"downbow\": \"scripts.downbow\",\n      \"upbow\": \"scripts.upbow\",\n      \"fermata\": \"scripts.ufermata\",\n      \"invertedfermata\": \"scripts.dfermata\",\n      \"breath\": \",\",\n      \"coda\": \"scripts.coda\",\n      \"segno\": \"scripts.segno\"\n    };\n    var hasOne = false;\n\n    for (var i = 0; i < decoration.length; i++) {\n      switch (decoration[i]) {\n        case \"0\":\n        case \"1\":\n        case \"2\":\n        case \"3\":\n        case \"4\":\n        case \"5\":\n        case \"D.C.\":\n        case \"D.S.\":\n          textDecoration(decoration[i], positioning);\n          hasOne = true;\n          break;\n\n        case \"fine\":\n          textDecoration(\"FINE\", positioning);\n          hasOne = true;\n          break;\n\n        case \"+\":\n        case \"open\":\n        case \"snap\":\n        case \"wedge\":\n        case \"thumb\":\n        case \"shortphrase\":\n        case \"mediumphrase\":\n        case \"longphrase\":\n        case \"trill\":\n        case \"roll\":\n        case \"irishroll\":\n        case \"marcato\":\n        case \"dmarcato\":\n        case \"turn\":\n        case \"uppermordent\":\n        case \"pralltriller\":\n        case \"mordent\":\n        case \"lowermordent\":\n        case \"downbow\":\n        case \"upbow\":\n        case \"fermata\":\n        case \"breath\":\n        case \"umarcato\":\n        case \"coda\":\n        case \"segno\":\n          symbolDecoration(symbolList[decoration[i]], positioning);\n          hasOne = true;\n          break;\n\n        case \"invertedfermata\":\n          symbolDecoration(symbolList[decoration[i]], 'below');\n          hasOne = true;\n          break;\n\n        case \"mark\":\n          abselem.klass = \"mark\";\n          break;\n      }\n    }\n\n    return hasOne;\n  };\n\n  function leftDecoration(decoration, abselem, roomtaken) {\n    for (var i = 0; i < decoration.length; i++) {\n      switch (decoration[i]) {\n        case \"arpeggio\":\n          // The arpeggio symbol is the height of a note (that is, two Y units). This stacks as many as we need to go from the\n          // top note to the bottom note. The arpeggio should also be a little taller than the stacked notes, so there is an extra\n          // one drawn and it is offset by half of a note height (that is, one Y unit).\n          for (var j = abselem.abcelem.minpitch - 1; j <= abselem.abcelem.maxpitch; j += 2) {\n            abselem.addExtra(new RelativeElement(\"scripts.arpeggio\", -glyphs.getSymbolWidth(\"scripts.arpeggio\") * 2 - roomtaken, 0, j + 2, {\n              klass: 'ornament',\n              thickness: glyphs.symbolHeightInPitches(\"scripts.arpeggio\")\n            }));\n          }\n\n          break;\n      }\n    }\n  }\n\n  Decoration.prototype.dynamicDecoration = function (voice, decoration, abselem, positioning) {\n    var diminuendo;\n    var crescendo;\n\n    for (var i = 0; i < decoration.length; i++) {\n      switch (decoration[i]) {\n        case \"diminuendo(\":\n          this.startDiminuendoX = abselem;\n          diminuendo = undefined;\n          break;\n\n        case \"diminuendo)\":\n          diminuendo = {\n            start: this.startDiminuendoX,\n            stop: abselem\n          };\n          this.startDiminuendoX = undefined;\n          break;\n\n        case \"crescendo(\":\n          this.startCrescendoX = abselem;\n          crescendo = undefined;\n          break;\n\n        case \"crescendo)\":\n          crescendo = {\n            start: this.startCrescendoX,\n            stop: abselem\n          };\n          this.startCrescendoX = undefined;\n          break;\n      }\n    }\n\n    if (diminuendo) {\n      voice.addOther(new CrescendoElem(diminuendo.start, diminuendo.stop, \">\", positioning));\n    }\n\n    if (crescendo) {\n      voice.addOther(new CrescendoElem(crescendo.start, crescendo.stop, \"<\", positioning));\n    }\n  };\n\n  Decoration.prototype.createDecoration = function (voice, decoration, pitch, width, abselem, roomtaken, dir, minPitch, positioning, hasVocals) {\n    if (!positioning) positioning = {\n      ornamentPosition: 'above',\n      volumePosition: hasVocals ? 'above' : 'below',\n      dynamicPosition: hasVocals ? 'above' : 'below'\n    }; // These decorations don't affect the placement of other decorations\n\n    volumeDecoration(voice, decoration, abselem, positioning.volumePosition);\n    this.dynamicDecoration(voice, decoration, abselem, positioning.dynamicPosition);\n    compoundDecoration(decoration, pitch, width, abselem, dir); // treat staccato, accent, and tenuto first (may need to shift other markers)\n\n    var yPos = closeDecoration(voice, decoration, pitch, width, abselem, roomtaken, dir, minPitch); // yPos is an object containing 'above' and 'below'. That is the placement of the next symbol on either side.\n\n    yPos.above = Math.max(yPos.above, this.minTop);\n    var hasOne = stackedDecoration(decoration, width, abselem, yPos, positioning.ornamentPosition, this.minTop, this.minBottom);\n\n    if (hasOne) {//\t\t\tabselem.top = Math.max(yPos.above + 3, abselem.top); // TODO-PER: Not sure why we need this fudge factor.\n    }\n\n    leftDecoration(decoration, abselem, roomtaken);\n  };\n})();\n\nmodule.exports = Decoration;","//    abc_dynamic_decoration.js: Definition of the DynamicDecoration class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar spacing = require('./abc_spacing');\n\nvar DynamicDecoration = function DynamicDecoration(anchor, dec, position) {\n  this.anchor = anchor;\n  this.dec = dec;\n  if (position === 'below') this.volumeHeightBelow = 5;else this.volumeHeightAbove = 5;\n  this.pitch = undefined; // This will be set later\n};\n\nDynamicDecoration.prototype.setUpperAndLowerElements = function (positionY) {\n  if (this.volumeHeightAbove) this.pitch = positionY.volumeHeightAbove;else this.pitch = positionY.volumeHeightBelow;\n};\n\nDynamicDecoration.prototype.draw = function (renderer, linestartx, lineendx) {\n  if (this.pitch === undefined) window.console.error(\"Dynamic Element y-coordinate not set.\");\n  var scalex = 1;\n  var scaley = 1;\n  renderer.printSymbol(this.anchor.x, this.pitch, this.dec, scalex, scaley, renderer.addClasses('decoration'));\n};\n\nmodule.exports = DynamicDecoration;","//    abc_crescendo_element.js: Definition of the CrescendoElem class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar sprintf = require('./sprintf');\n\nvar CrescendoElem = function CrescendoElem(anchor1, anchor2, dir, positioning) {\n  this.anchor1 = anchor1; // must have a .x and a .parent property or be null (means starts at the \"beginning\" of the line - after keysig)\n\n  this.anchor2 = anchor2; // must have a .x property or be null (means ends at the end of the line)\n\n  this.dir = dir; // either \"<\" or \">\"\n\n  if (positioning === 'above') this.dynamicHeightAbove = 4;else this.dynamicHeightBelow = 4;\n  this.pitch = undefined; // This will be set later\n};\n\nCrescendoElem.prototype.setUpperAndLowerElements = function (positionY) {\n  if (this.dynamicHeightAbove) this.pitch = positionY.dynamicHeightAbove;else this.pitch = positionY.dynamicHeightBelow;\n};\n\nCrescendoElem.prototype.draw = function (renderer) {\n  if (this.pitch === undefined) window.console.error(\"Crescendo Element y-coordinate not set.\");\n  var y = renderer.calcY(this.pitch) + 4; // This is the top pixel to use (it is offset a little so that it looks good with the volume marks.)\n\n  var height = 8;\n\n  if (this.dir === \"<\") {\n    this.drawLine(renderer, y + height / 2, y);\n    this.drawLine(renderer, y + height / 2, y + height);\n  } else {\n    this.drawLine(renderer, y, y + height / 2);\n    this.drawLine(renderer, y + height, y + height / 2);\n  }\n};\n\nCrescendoElem.prototype.drawLine = function (renderer, y1, y2) {\n  // TODO-PER: This is just a quick hack to make the dynamic marks not crash if they are mismatched. See the slur treatment for the way to get the beginning and end.\n  var left = this.anchor1 ? this.anchor1.x : 0;\n  var right = this.anchor2 ? this.anchor2.x : 800;\n  var pathString = sprintf(\"M %f %f L %f %f\", left, y1, right, y2);\n  renderer.printPath({\n    path: pathString,\n    stroke: \"#000000\",\n    'class': renderer.addClasses('decoration')\n  });\n};\n\nmodule.exports = CrescendoElem;","//    abc_ending_element.js: Definition of the EndingElement class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar sprintf = require('./sprintf');\n\nvar EndingElem = function EndingElem(text, anchor1, anchor2) {\n  this.text = text; // text to be displayed top left\n\n  this.anchor1 = anchor1; // must have a .x property or be null (means starts at the \"beginning\" of the line - after keysig)\n\n  this.anchor2 = anchor2; // must have a .x property or be null (means ends at the end of the line)\n\n  this.endingHeightAbove = 5;\n  this.pitch = undefined; // This will be set later\n};\n\nEndingElem.prototype.setUpperAndLowerElements = function (positionY) {\n  this.pitch = positionY.endingHeightAbove - 2;\n};\n\nEndingElem.prototype.draw = function (renderer, linestartx, lineendx) {\n  if (this.pitch === undefined) window.console.error(\"Ending Element y-coordinate not set.\");\n  var y = renderer.calcY(this.pitch);\n  var height = 20;\n  var pathString;\n\n  if (this.anchor1) {\n    linestartx = this.anchor1.x + this.anchor1.w;\n    pathString = sprintf(\"M %f %f L %f %f\", linestartx, y, linestartx, y + height);\n    renderer.printPath({\n      path: pathString,\n      stroke: \"#000000\",\n      fill: \"#000000\",\n      'class': renderer.addClasses('ending')\n    });\n    renderer.renderText(linestartx + 5, renderer.calcY(this.pitch - 0.5), this.text, 'repeatfont', 'ending', \"start\");\n  }\n\n  if (this.anchor2) {\n    lineendx = this.anchor2.x;\n    pathString = sprintf(\"M %f %f L %f %f\", lineendx, y, lineendx, y + height);\n    renderer.printPath({\n      path: pathString,\n      stroke: \"#000000\",\n      fill: \"#000000\",\n      'class': renderer.addClasses('ending')\n    });\n  }\n\n  pathString = sprintf(\"M %f %f L %f %f\", linestartx, y, lineendx, y);\n  renderer.printPath({\n    path: pathString,\n    stroke: \"#000000\",\n    fill: \"#000000\",\n    'class': renderer.addClasses('ending')\n  });\n};\n\nmodule.exports = EndingElem;","//    abc_staff_group_element.js: Definition of the StaffGroupElement class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*globals console */\nvar spacing = require('./abc_spacing'); // StaffGroupElement contains all the elements that go together to make one line of music.\n// That might be multiple staves that are tied together, and it might be multiple voices on one staff.\n//\n// Methods:\n// constructor: some basic initialization\n// addVoice(): Called once for each voice. May add a new staff if needed.\n// finished(): Called only internally by layout()\n// layout(): This does all the layout. It sets the following: spacingunits, startx, minspace, w, and the x-coordinate of each element in each voice.\n// draw(): Calls the underlying methods on the voice objects to do the drawing. Sets y and height.\n//\n// Members:\n// staffs: an array of all the staves in this group. Each staff contains the following elements:\n//    { top, bottom, highest, lowest, y }\n// voices: array of VoiceElement objects. This is mostly passed in, but the VoiceElement objects are modified here.\n//\n// spacingunits: number of relative x-units in the line. Used by the calling function to pass back in as the \"spacing\" input parameter.\n// TODO-PER: This should actually be passed back as a return value.\n// minspace: smallest space between two notes. Used by the calling function to pass back in as the \"spacing\" input parameter.\n// TODO-PER: This should actually be passed back as a return value.\n// startx: The left edge, taking the margin and the optional voice name. Used by the draw() method.\n// w: The width of the line. Used by calling function to pass back in as the \"spacing\" input parameter, and the draw() method.\n// TODO-PER: This should actually be passed back as a return value.  (TODO-PER: in pixels or spacing units?)\n// y: The top of the staff group, in pixels. This is set in the draw method.\n// TODO-PER: Where is that used? It looks like it might not be needed.\n// height: Set in the draw() method to the height actually used. Used by the calling function to know where to start the next staff group.\n// TODO-PER: This should actually be set in the layout method and passed back as a return value.\n\n\nvar StaffGroupElement = function StaffGroupElement() {\n  this.voices = [];\n  this.staffs = [];\n  this.brace = undefined; //tony\n};\n\nStaffGroupElement.prototype.setLimit = function (member, voice) {\n  if (!voice.specialY[member]) return;\n  if (!voice.staff.specialY[member]) voice.staff.specialY[member] = voice.specialY[member];else voice.staff.specialY[member] = Math.max(voice.staff.specialY[member], voice.specialY[member]);\n};\n\nStaffGroupElement.prototype.addVoice = function (voice, staffnumber, stafflines) {\n  var voiceNum = this.voices.length;\n  this.voices[voiceNum] = voice;\n  if (this.staffs[staffnumber]) this.staffs[staffnumber].voices.push(voiceNum);else {\n    // TODO-PER: how does the min/max change when stafflines is not 5?\n    this.staffs[this.staffs.length] = {\n      top: 10,\n      bottom: 2,\n      lines: stafflines,\n      voices: [voiceNum],\n      specialY: {\n        tempoHeightAbove: 0,\n        partHeightAbove: 0,\n        volumeHeightAbove: 0,\n        dynamicHeightAbove: 0,\n        endingHeightAbove: 0,\n        chordHeightAbove: 0,\n        lyricHeightAbove: 0,\n        lyricHeightBelow: 0,\n        chordHeightBelow: 0,\n        volumeHeightBelow: 0,\n        dynamicHeightBelow: 0\n      }\n    };\n  }\n  voice.staff = this.staffs[staffnumber];\n};\n\nStaffGroupElement.prototype.setStaffLimits = function (voice) {\n  voice.staff.top = Math.max(voice.staff.top, voice.top);\n  voice.staff.bottom = Math.min(voice.staff.bottom, voice.bottom);\n  this.setLimit('tempoHeightAbove', voice);\n  this.setLimit('partHeightAbove', voice);\n  this.setLimit('volumeHeightAbove', voice);\n  this.setLimit('dynamicHeightAbove', voice);\n  this.setLimit('endingHeightAbove', voice);\n  this.setLimit('chordHeightAbove', voice);\n  this.setLimit('lyricHeightAbove', voice);\n  this.setLimit('lyricHeightBelow', voice);\n  this.setLimit('chordHeightBelow', voice);\n  this.setLimit('volumeHeightBelow', voice);\n  this.setLimit('dynamicHeightBelow', voice);\n};\n\nStaffGroupElement.prototype.setUpperAndLowerElements = function (renderer) {\n  // Each staff already has the top and bottom set, now we see if there are elements that are always on top and bottom, and resolve their pitch.\n  // Also, get the overall height of all the staves in this group.\n  var lastStaffBottom;\n\n  for (var i = 0; i < this.staffs.length; i++) {\n    var staff = this.staffs[i]; // the vertical order of elements that are above is: tempo, part, volume/dynamic, ending/chord, lyric\n    // the vertical order of elements that are below is: lyric, chord, volume/dynamic\n\n    var positionY = {\n      tempoHeightAbove: 0,\n      partHeightAbove: 0,\n      volumeHeightAbove: 0,\n      dynamicHeightAbove: 0,\n      endingHeightAbove: 0,\n      chordHeightAbove: 0,\n      lyricHeightAbove: 0,\n      lyricHeightBelow: 0,\n      chordHeightBelow: 0,\n      volumeHeightBelow: 0,\n      dynamicHeightBelow: 0\n    };\n\n    if (\n    /*ABCJS.write.debugPlacement*/\n    false) {\n      staff.originalTop = staff.top; // This is just being stored for debugging purposes.\n\n      staff.originalBottom = staff.bottom; // This is just being stored for debugging purposes.\n    }\n\n    if (staff.specialY.lyricHeightAbove) {\n      staff.top += staff.specialY.lyricHeightAbove;\n      positionY.lyricHeightAbove = staff.top;\n    }\n\n    if (staff.specialY.chordHeightAbove) {\n      staff.top += staff.specialY.chordHeightAbove;\n      positionY.chordHeightAbove = staff.top;\n    }\n\n    if (staff.specialY.endingHeightAbove) {\n      if (staff.specialY.chordHeightAbove) staff.top += 2;else staff.top += staff.specialY.endingHeightAbove;\n      positionY.endingHeightAbove = staff.top;\n    }\n\n    if (staff.specialY.dynamicHeightAbove && staff.specialY.volumeHeightAbove) {\n      staff.top += Math.max(staff.specialY.dynamicHeightAbove, staff.specialY.volumeHeightAbove);\n      positionY.dynamicHeightAbove = staff.top;\n      positionY.volumeHeightAbove = staff.top;\n    } else if (staff.specialY.dynamicHeightAbove) {\n      staff.top += staff.specialY.dynamicHeightAbove;\n      positionY.dynamicHeightAbove = staff.top;\n    } else if (staff.specialY.volumeHeightAbove) {\n      staff.top += staff.specialY.volumeHeightAbove;\n      positionY.volumeHeightAbove = staff.top;\n    }\n\n    if (staff.specialY.partHeightAbove) {\n      staff.top += staff.specialY.partHeightAbove;\n      positionY.partHeightAbove = staff.top;\n    }\n\n    if (staff.specialY.tempoHeightAbove) {\n      staff.top += staff.specialY.tempoHeightAbove;\n      positionY.tempoHeightAbove = staff.top;\n    }\n\n    if (staff.specialY.lyricHeightBelow) {\n      positionY.lyricHeightBelow = staff.bottom;\n      staff.bottom -= staff.specialY.lyricHeightBelow;\n    }\n\n    if (staff.specialY.chordHeightBelow) {\n      positionY.chordHeightBelow = staff.bottom;\n      staff.bottom -= staff.specialY.chordHeightBelow;\n    }\n\n    if (staff.specialY.volumeHeightBelow && staff.specialY.dynamicHeightBelow) {\n      positionY.volumeHeightBelow = staff.bottom;\n      positionY.dynamicHeightBelow = staff.bottom;\n      staff.bottom -= Math.max(staff.specialY.volumeHeightBelow, staff.specialY.dynamicHeightBelow);\n    } else if (staff.specialY.volumeHeightBelow) {\n      positionY.volumeHeightBelow = staff.bottom;\n      staff.bottom -= staff.specialY.volumeHeightBelow;\n    } else if (staff.specialY.dynamicHeightBelow) {\n      positionY.dynamicHeightBelow = staff.bottom;\n      staff.bottom -= staff.specialY.dynamicHeightBelow;\n    }\n\n    if (\n    /*ABCJS.write.debugPlacement*/\n    false) staff.positionY = positionY; // This is just being stored for debugging purposes.\n\n    for (var j = 0; j < staff.voices.length; j++) {\n      var voice = this.voices[staff.voices[j]];\n      voice.setUpperAndLowerElements(positionY);\n    } // We might need a little space in between staves if the staves haven't been pushed far enough apart by notes or extra vertical stuff.\n    // Only try to put in extra space if this isn't the top staff.\n\n\n    if (lastStaffBottom !== undefined) {\n      var thisStaffTop = staff.top - 10;\n      var forcedSpacingBetween = lastStaffBottom + thisStaffTop;\n      var minSpacingInPitches = renderer.spacing.systemStaffSeparation / spacing.STEP;\n      var addedSpace = minSpacingInPitches - forcedSpacingBetween;\n      if (addedSpace > 0) staff.top += addedSpace;\n    }\n\n    lastStaffBottom = 2 - staff.bottom; // the staff starts at position 2 and the bottom variable is negative. Therefore to find out how large the bottom is, we reverse the sign of the bottom, and add the 2 in.\n    // Now we need a little margin on the top, so we'll just throw that in.\n    //staff.top += 4;\n    //console.log(\"Staff Y: \",i,heightInPitches,staff.top,staff.bottom);\n  } //console.log(\"Staff Height: \",heightInPitches,this.height);\n\n};\n\nStaffGroupElement.prototype.finished = function () {\n  for (var i = 0; i < this.voices.length; i++) {\n    if (!this.voices[i].layoutEnded()) return false;\n  }\n\n  return true;\n};\n\nfunction getLeftEdgeOfStaff(renderer, voices, brace) {\n  var x = renderer.padding.left; // find out how much space will be taken up by voice headers\n\n  var voiceheaderw = 0;\n\n  for (var i = 0; i < voices.length; i++) {\n    if (voices[i].header) {\n      var size = renderer.getTextSize(voices[i].header, 'voicefont', '');\n      voiceheaderw = Math.max(voiceheaderw, size.width);\n    }\n  }\n\n  if (voiceheaderw) {\n    // Give enough spacing to the right - we use the width of an A for the amount of spacing.\n    var sizeW = renderer.getTextSize(\"A\", 'voicefont', '');\n    voiceheaderw += sizeW.width;\n  }\n\n  x += voiceheaderw;\n\n  if (brace) {\n    brace.setLocation(x);\n    x += brace.getWidth();\n  }\n\n  return x;\n}\n\nStaffGroupElement.prototype.layout = function (spacing, renderer, debug) {\n  var epsilon = 0.0000001; // Fudging for inexactness of floating point math.\n\n  var spacingunits = 0; // number of times we will have ended up using the spacing distance (as opposed to fixed width distances)\n\n  var minspace = 1000; // a big number to start off with - used to find out what the smallest space between two notes is -- GD 2014.1.7\n\n  var x = getLeftEdgeOfStaff(renderer, this.voices, this.brace);\n  this.startx = x;\n  var i;\n  var currentduration = 0;\n  if (debug) console.log(\"init layout\", spacing);\n\n  for (i = 0; i < this.voices.length; i++) {\n    this.voices[i].beginLayout(x);\n  }\n\n  var spacingunit = 0; // number of spacingunits coming from the previously laid out element to this one\n\n  while (!this.finished()) {\n    // find first duration level to be laid out among candidates across voices\n    currentduration = null; // candidate smallest duration level\n\n    for (i = 0; i < this.voices.length; i++) {\n      if (!this.voices[i].layoutEnded() && (!currentduration || this.voices[i].getDurationIndex() < currentduration)) currentduration = this.voices[i].getDurationIndex();\n    } // isolate voices at current duration level\n\n\n    var currentvoices = [];\n    var othervoices = [];\n\n    for (i = 0; i < this.voices.length; i++) {\n      var durationIndex = this.voices[i].getDurationIndex(); // PER: Because of the inexactness of JS floating point math, we just get close.\n\n      if (durationIndex - currentduration > epsilon) {\n        othervoices.push(this.voices[i]); //console.log(\"out: voice \",i);\n      } else {\n        currentvoices.push(this.voices[i]); //if (debug) console.log(\"in: voice \",i);\n      }\n    } // among the current duration level find the one which needs starting furthest right\n\n\n    spacingunit = 0; // number of spacingunits coming from the previously laid out element to this one\n\n    var spacingduration = 0;\n\n    for (i = 0; i < currentvoices.length; i++) {\n      //console.log(\"greatest spacing unit\", x, currentvoices[i].getNextX(), currentvoices[i].getSpacingUnits(), currentvoices[i].spacingduration);\n      if (currentvoices[i].getNextX() > x) {\n        x = currentvoices[i].getNextX();\n        spacingunit = currentvoices[i].getSpacingUnits();\n        spacingduration = currentvoices[i].spacingduration;\n      }\n    }\n\n    spacingunits += spacingunit;\n    minspace = Math.min(minspace, spacingunit);\n    if (debug) console.log(\"currentduration: \", currentduration, spacingunits, minspace);\n\n    for (i = 0; i < currentvoices.length; i++) {\n      var voicechildx = currentvoices[i].layoutOneItem(x, spacing);\n      var dx = voicechildx - x;\n\n      if (dx > 0) {\n        x = voicechildx; //update x\n\n        for (var j = 0; j < i; j++) {\n          // shift over all previously laid out elements\n          currentvoices[j].shiftRight(dx);\n        }\n      }\n    } // remove the value of already counted spacing units in other voices (e.g. if a voice had planned to use up 5 spacing units but is not in line to be laid out at this duration level - where we've used 2 spacing units - then we must use up 3 spacing units, not 5)\n\n\n    for (i = 0; i < othervoices.length; i++) {\n      othervoices[i].spacingduration -= spacingduration;\n      othervoices[i].updateNextX(x, spacing); // adjust other voices expectations\n    } // update indexes of currently laid out elems\n\n\n    for (i = 0; i < currentvoices.length; i++) {\n      var voice = currentvoices[i];\n      voice.updateIndices();\n    }\n  } // finished laying out\n  // find the greatest remaining x as a base for the width\n\n\n  for (i = 0; i < this.voices.length; i++) {\n    if (this.voices[i].getNextX() > x) {\n      x = this.voices[i].getNextX();\n      spacingunit = this.voices[i].getSpacingUnits();\n    }\n  } //console.log(\"greatest remaining\",spacingunit,x);\n\n\n  spacingunits += spacingunit;\n  this.w = x;\n\n  for (i = 0; i < this.voices.length; i++) {\n    this.voices[i].w = this.w;\n  }\n\n  return {\n    spacingUnits: spacingunits,\n    minSpace: minspace\n  };\n};\n\nStaffGroupElement.prototype.calcHeight = function () {\n  // the height is calculated here in a parallel way to the drawing below in hopes that both of these functions will be modified together.\n  // TODO-PER: also add the space between staves. (That's systemStaffSeparation, which is the minimum distance between the staff LINES.)\n  var height = 0;\n\n  for (var i = 0; i < this.voices.length; i++) {\n    var staff = this.voices[i].staff;\n\n    if (!this.voices[i].duplicate) {\n      height += staff.top;\n      if (staff.bottom < 0) height += -staff.bottom;\n    }\n  }\n\n  return height;\n};\n\nStaffGroupElement.prototype.draw = function (renderer) {\n  // We enter this method with renderer.y pointing to the topmost coordinate that we're allowed to draw.\n  // All of the children that will be drawn have a relative \"pitch\" set, where zero is the first ledger line below the staff.\n  // renderer.y will be offset at the beginning of each staff by the amount required to make the relative pitch work.\n  // If there are multiple staves, then renderer.y will be incremented for each new staff.\n  var debugPrint;\n  var colorIndex;\n\n  if (\n  /*ABCJS.write.debugPlacement*/\n  false) {\n    var colors = [\"rgb(207,27,36)\", \"rgb(168,214,80)\", \"rgb(110,161,224)\", \"rgb(191,119,218)\", \"rgb(195,30,151)\", \"rgb(31,170,177)\", \"rgb(220,166,142)\"];\n\n    debugPrint = function debugPrint(staff, key) {\n      if (staff.positionY[key]) {\n        //renderer.printHorizontalLine(50, renderer.calcY(staff.positionY[key]), key.substr(0, 4) + \" \" + Math.round(staff.positionY[key]));\n        var height = staff.specialY[key] * spacing.STEP;\n        renderer.printShadedBox(renderer.padding.left, renderer.calcY(staff.positionY[key]), renderer.controller.width, height, colors[colorIndex], 0.4, key.substr(0, 4));\n        colorIndex += 1;\n        if (colorIndex > 6) colorIndex = 0;\n      }\n    };\n  } // An invisible marker is useful to be able to find where each system starts.\n\n\n  renderer.addInvisibleMarker(\"abcjs-top-of-system\");\n  var startY = renderer.y; // So that it can be restored after we're done.\n  // Set the absolute Y position for each staff here, so the voice drawing below can just use if.\n\n  for (var j = 0; j < this.staffs.length; j++) {\n    var staff1 = this.staffs[j]; //renderer.printHorizontalLine(50, renderer.y, \"start\");\n\n    renderer.moveY(spacing.STEP, staff1.top);\n    staff1.absoluteY = renderer.y;\n\n    if (\n    /*ABCJS.write.debugPlacement*/\n    false) {\n      colorIndex = 0;\n      renderer.printShadedBox(renderer.padding.left, renderer.calcY(staff1.originalTop), renderer.controller.width, renderer.calcY(staff1.originalBottom) - renderer.calcY(staff1.originalTop), \"#000000\", 0.1);\n      debugPrint(staff1, 'chordHeightAbove');\n      debugPrint(staff1, 'chordHeightBelow');\n      debugPrint(staff1, 'dynamicHeightAbove');\n      debugPrint(staff1, 'dynamicHeightBelow');\n      debugPrint(staff1, 'endingHeightAbove');\n      debugPrint(staff1, 'lyricHeightAbove');\n      debugPrint(staff1, 'lyricHeightBelow');\n      debugPrint(staff1, 'partHeightAbove');\n      debugPrint(staff1, 'tempoHeightAbove');\n      debugPrint(staff1, 'volumeHeightAbove');\n      debugPrint(staff1, 'volumeHeightBelow');\n    }\n\n    if (staff1.bottom < 0) renderer.moveY(spacing.STEP, -staff1.bottom);\n  }\n\n  var topLine; // these are to connect multiple staves. We need to remember where they are.\n\n  var bottomLine;\n  var bartop = 0;\n  renderer.measureNumber = null;\n  renderer.noteNumber = null;\n\n  for (var i = 0; i < this.voices.length; i++) {\n    var staff = this.voices[i].staff;\n    renderer.y = staff.absoluteY;\n    renderer.voiceNumber = i; //renderer.y = staff.y;\n    // offset for starting the counting at middle C\n\n    if (!this.voices[i].duplicate) {\n      //\t\t\trenderer.moveY(spacing.STEP, staff.top);\n      if (!topLine) topLine = renderer.calcY(10);\n      bottomLine = renderer.calcY(2);\n\n      if (staff.lines !== 0) {\n        renderer.measureNumber = null;\n        renderer.noteNumber = null;\n        renderer.printStave(this.startx, this.w, staff.lines);\n      }\n    }\n\n    this.voices[i].draw(renderer, bartop);\n    renderer.measureNumber = null;\n    renderer.noteNumber = null;\n\n    if (!this.voices[i].duplicate) {\n      bartop = renderer.calcY(2); // This connects the bar lines between two different staves.\n      //\t\t\tif (staff.bottom < 0)\n      //\t\t\t\trenderer.moveY(spacing.STEP, -staff.bottom);\n    }\n\n    if (this.brace) {\n      //Tony\n      if (i === this.brace.length - 1) {\n        if (this.brace) {\n          this.brace.draw(renderer, topLine, bottomLine); //tony\n        }\n      }\n    }\n  }\n\n  renderer.measureNumber = null;\n  renderer.noteNumber = null; // connect all the staves together with a vertical line\n\n  if (this.staffs.length > 1) {\n    renderer.printStem(this.startx, 0.6, topLine, bottomLine);\n  }\n\n  renderer.y = startY;\n};\n\nmodule.exports = StaffGroupElement;","//    abc_tempo_element.js: Definition of the TempoElement class.\n//    Copyright (C) 2014-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar AbsoluteElement = require('./abc_absolute_element');\n\nvar RelativeElement = require('./abc_relative_element');\n\nvar TempoElement;\n\n(function () {\n  \"use strict\";\n\n  var totalHeightInPitches = 5;\n\n  TempoElement = function TempoElement(tempo, tuneNumber, createNoteHead) {\n    this.tempo = tempo;\n    this.tuneNumber = tuneNumber;\n    this.tempoHeightAbove = totalHeightInPitches;\n    this.pitch = undefined; // This will be set later\n\n    if (this.tempo.duration && !this.tempo.suppressBpm) {\n      this.note = this.createNote(createNoteHead, tempo, tuneNumber);\n    }\n  };\n\n  TempoElement.prototype.setUpperAndLowerElements = function (positionY) {\n    // TODO-PER: This might not be called.\n    this.pitch = positionY.tempoHeightAbove;\n    this.top = positionY.tempoHeightAbove;\n    this.bottom = positionY.tempoHeightAbove;\n\n    if (this.note) {\n      var tempoPitch = this.pitch - totalHeightInPitches + 1; // The pitch we receive is the top of the allotted area: change that to practically the bottom.\n\n      this.note.top = tempoPitch;\n      this.note.bottom = tempoPitch;\n\n      for (var i = 0; i < this.note.children.length; i++) {\n        var child = this.note.children[i];\n        child.top += tempoPitch;\n        child.bottom += tempoPitch;\n        child.pitch += tempoPitch;\n        if (child.pitch2 !== undefined) child.pitch2 += tempoPitch;\n      }\n    }\n  };\n\n  TempoElement.prototype.setX = function (x) {\n    this.x = x;\n  };\n\n  TempoElement.prototype.createNote = function (createNoteHead, tempo, tuneNumber) {\n    var temposcale = 0.75;\n    var duration = tempo.duration[0]; // TODO when multiple durations\n\n    var absElem = new AbsoluteElement(tempo, duration, 1, 'tempo', tuneNumber); // There aren't an infinite number of note values, but we are passed a float, so just in case something is off upstream,\n    // merge all of the in between points.\n\n    var dot;\n    var flag;\n    var note;\n\n    if (duration <= 1 / 32) {\n      note = \"noteheads.quarter\";\n      flag = \"flags.u32nd\";\n      dot = 0;\n    } else if (duration <= 1 / 16) {\n      note = \"noteheads.quarter\";\n      flag = \"flags.u16th\";\n      dot = 0;\n    } else if (duration <= 3 / 32) {\n      note = \"noteheads.quarter\";\n      flag = \"flags.u16nd\";\n      dot = 1;\n    } else if (duration <= 1 / 8) {\n      note = \"noteheads.quarter\";\n      flag = \"flags.u8th\";\n      dot = 0;\n    } else if (duration <= 3 / 16) {\n      note = \"noteheads.quarter\";\n      flag = \"flags.u8th\";\n      dot = 1;\n    } else if (duration <= 1 / 4) {\n      note = \"noteheads.quarter\";\n      dot = 0;\n    } else if (duration <= 3 / 8) {\n      note = \"noteheads.quarter\";\n      dot = 1;\n    } else if (duration <= 1 / 2) {\n      note = \"noteheads.half\";\n      dot = 0;\n    } else if (duration <= 3 / 4) {\n      note = \"noteheads.half\";\n      dot = 1;\n    } else if (duration <= 1) {\n      note = \"noteheads.whole\";\n      dot = 0;\n    } else if (duration <= 1.5) {\n      note = \"noteheads.whole\";\n      dot = 1;\n    } else if (duration <= 2) {\n      note = \"noteheads.dbl\";\n      dot = 0;\n    } else {\n      note = \"noteheads.dbl\";\n      dot = 1;\n    }\n\n    var ret = createNoteHead(absElem, note, {\n      verticalPos: 0\n    }, // This is just temporary: we'll offset the vertical positioning when we get the actual vertical spot.\n    \"up\", 0, 0, flag, dot, 0, temposcale);\n    var tempoNote = ret.notehead;\n    absElem.addHead(tempoNote);\n    var stem;\n\n    if (note !== \"noteheads.whole\" && note !== \"noteheads.dbl\") {\n      var p1 = 1 / 3 * temposcale;\n      var p2 = 7 * temposcale;\n      var dx = tempoNote.dx + tempoNote.w;\n      var width = -0.6;\n      stem = new RelativeElement(null, dx, 0, p1, {\n        \"type\": \"stem\",\n        \"pitch2\": p2,\n        linewidth: width\n      });\n      absElem.addExtra(stem);\n    }\n\n    return absElem;\n  };\n\n  TempoElement.prototype.draw = function (renderer) {\n    var x = this.x;\n    if (this.pitch === undefined) window.console.error(\"Tempo Element y-coordinate not set.\");\n    var y = renderer.calcY(this.pitch);\n    var text;\n\n    if (this.tempo.preString) {\n      text = renderer.renderText(x, y, this.tempo.preString, 'tempofont', 'tempo', \"start\");\n      var preWidth = text.getBBox().width;\n      var charWidth = preWidth / this.tempo.preString.length; // Just get some average number to increase the spacing.\n\n      x += preWidth + charWidth;\n    }\n\n    if (this.note) {\n      if (this.note) this.note.setX(x);\n\n      for (var i = 0; i < this.note.children.length; i++) {\n        this.note.children[i].draw(renderer, x);\n      }\n\n      x += this.note.w + 5;\n      var str = \"= \" + this.tempo.bpm;\n      text = renderer.renderText(x, y, str, 'tempofont', 'tempo', \"start\");\n      var postWidth = text.getBBox().width;\n      var charWidth2 = postWidth / str.length; // Just get some average number to increase the spacing.\n\n      x += postWidth + charWidth2;\n    }\n\n    if (this.tempo.postString) {\n      renderer.renderText(x, y, this.tempo.postString, 'tempofont', 'tempo', \"start\");\n    }\n  };\n})();\n\nmodule.exports = TempoElement;","//    abc_triplet_element.js: Definition of the TripletElem class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar sprintf = require('./sprintf');\n\nvar TripletElem;\n\n(function () {\n  \"use strict\";\n\n  TripletElem = function TripletElem(number, anchor1, options) {\n    this.anchor1 = anchor1; // must have a .x and a .parent property or be null (means starts at the \"beginning\" of the line - after key signature)\n\n    this.number = number;\n    this.duration = ('' + anchor1.parent.durationClass).replace(/\\./, '-');\n    this.middleElems = []; // This is to calculate the highest interior pitch. It is used to make sure that the drawn bracket never crosses a really high middle note.\n\n    this.flatBeams = options.flatBeams;\n  };\n\n  TripletElem.prototype.isClosed = function () {\n    return this.anchor2;\n  };\n\n  TripletElem.prototype.middleNote = function (elem) {\n    this.middleElems.push(elem);\n  };\n\n  TripletElem.prototype.setCloseAnchor = function (anchor2) {\n    this.anchor2 = anchor2; // TODO-PER: Unfortunately, I don't know if there is a beam above until after the vertical positioning is done,\n    // so I don't know whether to leave room for the number above. Therefore, If there is a beam on the first note, I'll leave room just in case.\n\n    if (this.anchor1.parent.beam) this.endingHeightAbove = 4;\n  };\n\n  TripletElem.prototype.setUpperAndLowerElements = function ()\n  /*positionY*/\n  {};\n\n  TripletElem.prototype.layout = function () {\n    // TODO end and beginning of line (PER: P.S. I'm not sure this can happen: I think the parser will always specify both the start and end points.)\n    if (this.anchor1 && this.anchor2) {\n      this.hasBeam = this.anchor1.parent.beam && this.anchor1.parent.beam === this.anchor2.parent.beam;\n\n      if (this.hasBeam) {\n        // If there is a beam then we don't need to draw anything except the text. The beam could either be above or below.\n        var beam = this.anchor1.parent.beam;\n        var left = beam.isAbove() ? this.anchor1.x + this.anchor1.w : this.anchor1.x;\n        this.yTextPos = beam.heightAtMidpoint(left, this.anchor2.x);\n        this.yTextPos += beam.isAbove() ? 4 : -4; // This creates some space between the beam and the number.\n\n        if (beam.isAbove()) this.endingHeightAbove = 4;\n      } else {\n        // If there isn't a beam, then we need to draw the bracket and the text. The bracket is always above.\n        // The bracket is never lower than the 'a' line, but is 4 pitches above the first and last notes. If there is\n        // a tall note in the middle, the bracket is horizontal and above the highest note.\n        this.startNote = Math.max(this.anchor1.parent.top, 9) + 4;\n        this.endNote = Math.max(this.anchor2.parent.top, 9) + 4; // If it starts or ends on a rest, make the beam horizontal\n\n        if (this.anchor1.parent.type === \"rest\" && this.anchor2.parent.type !== \"rest\") this.startNote = this.endNote;else if (this.anchor2.parent.type === \"rest\" && this.anchor1.parent.type !== \"rest\") this.endNote = this.startNote; // See if the middle note is really high.\n\n        var max = 0;\n\n        for (var i = 0; i < this.middleElems.length; i++) {\n          max = Math.max(max, this.middleElems[i].top);\n        }\n\n        max += 4;\n\n        if (max > this.startNote || max > this.endNote) {\n          this.startNote = max;\n          this.endNote = max;\n        }\n\n        if (this.flatBeams) {\n          this.startNote = Math.max(this.startNote, this.endNote);\n          this.endNote = Math.max(this.startNote, this.endNote);\n        }\n\n        this.yTextPos = this.startNote + (this.endNote - this.startNote) / 2;\n      }\n    }\n\n    delete this.middleElems;\n    delete this.flatBeams;\n  };\n\n  TripletElem.prototype.draw = function (renderer) {\n    var xTextPos;\n\n    if (this.hasBeam) {\n      var left = this.anchor1.parent.beam.isAbove() ? this.anchor1.x + this.anchor1.w : this.anchor1.x;\n      xTextPos = this.anchor1.parent.beam.xAtMidpoint(left, this.anchor2.x);\n    } else {\n      xTextPos = this.anchor1.x + (this.anchor2.x + this.anchor2.w - this.anchor1.x) / 2;\n      drawBracket(renderer, this.anchor1.x, this.startNote, this.anchor2.x + this.anchor2.w, this.endNote, this.duration);\n    }\n\n    renderer.renderText(xTextPos, renderer.calcY(this.yTextPos), \"\" + this.number, 'tripletfont', renderer.addClasses('triplet d' + this.duration), \"middle\", true);\n  };\n\n  function drawLine(renderer, l, t, r, b, duration) {\n    var pathString = sprintf(\"M %f %f L %f %f\", l, t, r, b);\n    renderer.printPath({\n      path: pathString,\n      stroke: \"#000000\",\n      'class': renderer.addClasses('triplet d' + duration)\n    });\n  }\n\n  function drawBracket(renderer, x1, y1, x2, y2, duration) {\n    y1 = renderer.calcY(y1);\n    y2 = renderer.calcY(y2);\n    var bracketHeight = 5; // Draw vertical lines at the beginning and end\n\n    drawLine(renderer, x1, y1, x1, y1 + bracketHeight, duration);\n    drawLine(renderer, x2, y2, x2, y2 + bracketHeight, duration); // figure out midpoints to draw the broken line.\n\n    var midX = x1 + (x2 - x1) / 2; //var midY = y1 + (y2-y1)/2;\n\n    var gapWidth = 8;\n    var slope = (y2 - y1) / (x2 - x1);\n    var leftEndX = midX - gapWidth;\n    var leftEndY = y1 + (leftEndX - x1) * slope;\n    drawLine(renderer, x1, y1, leftEndX, leftEndY, duration);\n    var rightStartX = midX + gapWidth;\n    var rightStartY = y1 + (rightStartX - x1) * slope;\n    drawLine(renderer, rightStartX, rightStartY, x2, y2, duration);\n  }\n})();\n\nmodule.exports = TripletElem;","//    abc_voice_element.js: Definition of the VoiceElement class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar parseCommon = require('../parse/abc_common');\n\nvar VoiceElement = function VoiceElement(voicenumber, voicetotal) {\n  this.children = [];\n  this.beams = [];\n  this.otherchildren = []; // ties, slurs, triplets\n\n  this.w = 0;\n  this.duplicate = false;\n  this.voicenumber = voicenumber; //number of the voice on a given stave (not staffgroup)\n\n  this.voicetotal = voicetotal;\n  this.bottom = 7;\n  this.top = 7;\n  this.specialY = {\n    tempoHeightAbove: 0,\n    partHeightAbove: 0,\n    volumeHeightAbove: 0,\n    dynamicHeightAbove: 0,\n    endingHeightAbove: 0,\n    chordHeightAbove: 0,\n    lyricHeightAbove: 0,\n    lyricHeightBelow: 0,\n    chordHeightBelow: 0,\n    volumeHeightBelow: 0,\n    dynamicHeightBelow: 0\n  };\n};\n\nVoiceElement.prototype.addChild = function (child) {\n  if (child.type === 'bar') {\n    var firstItem = true;\n\n    for (var i = 0; firstItem && i < this.children.length; i++) {\n      if (this.children[i].type !== \"staff-extra\") firstItem = false;\n    }\n\n    if (!firstItem) {\n      this.beams.push(\"bar\");\n      this.otherchildren.push(\"bar\");\n    }\n  }\n\n  this.children[this.children.length] = child;\n  this.setRange(child);\n};\n\nVoiceElement.prototype.setLimit = function (member, child) {\n  // Sometimes we get an absolute element in here and sometimes we get some type of relative element.\n  // If there is a \"specialY\" element, then assume it is an absolute element. If that doesn't exist, look for the\n  // same members at the top level, because that's where they are in relative elements.\n  var specialY = child.specialY;\n  if (!specialY) specialY = child;\n  if (!specialY[member]) return;\n  if (!this.specialY[member]) this.specialY[member] = specialY[member];else this.specialY[member] = Math.max(this.specialY[member], specialY[member]);\n};\n\nVoiceElement.prototype.moveDecorations = function (beam) {\n  var padding = 1.5; // This is the vertical padding between elements, in pitches.\n\n  for (var ch = 0; ch < beam.elems.length; ch++) {\n    var child = beam.elems[ch];\n\n    if (child.top) {\n      // We now know where the ornaments should have been placed, so move them if they would overlap.\n      var top = beam.yAtNote(child);\n\n      for (var i = 0; i < child.children.length; i++) {\n        var el = child.children[i];\n\n        if (el.klass === 'ornament') {\n          if (el.bottom - padding < top) {\n            var distance = top - el.bottom + padding; // Find the distance that it needs to move and add a little margin so the element doesn't touch the beam.\n\n            el.bottom += distance;\n            el.top += distance;\n            el.pitch += distance;\n            top = child.top = el.top;\n          }\n        }\n      }\n    }\n  }\n};\n\nVoiceElement.prototype.adjustRange = function (child) {\n  if (child.bottom !== undefined) this.bottom = Math.min(this.bottom, child.bottom);\n  if (child.top !== undefined) this.top = Math.max(this.top, child.top);\n};\n\nVoiceElement.prototype.setRange = function (child) {\n  this.adjustRange(child);\n  this.setLimit('tempoHeightAbove', child);\n  this.setLimit('partHeightAbove', child);\n  this.setLimit('volumeHeightAbove', child);\n  this.setLimit('dynamicHeightAbove', child);\n  this.setLimit('endingHeightAbove', child);\n  this.setLimit('chordHeightAbove', child);\n  this.setLimit('lyricHeightAbove', child);\n  this.setLimit('lyricHeightBelow', child);\n  this.setLimit('chordHeightBelow', child);\n  this.setLimit('volumeHeightBelow', child);\n  this.setLimit('dynamicHeightBelow', child);\n};\n\nVoiceElement.prototype.setUpperAndLowerElements = function (positionY) {\n  var i;\n\n  for (i = 0; i < this.children.length; i++) {\n    var abselem = this.children[i];\n    abselem.setUpperAndLowerElements(positionY);\n  }\n\n  for (i = 0; i < this.otherchildren.length; i++) {\n    var abselem = this.otherchildren[i];\n    if (typeof abselem !== 'string') abselem.setUpperAndLowerElements(positionY);\n  }\n};\n\nVoiceElement.prototype.addOther = function (child) {\n  this.otherchildren.push(child);\n  this.setRange(child);\n};\n\nVoiceElement.prototype.addBeam = function (child) {\n  this.beams.push(child);\n};\n\nVoiceElement.prototype.updateIndices = function () {\n  if (!this.layoutEnded()) {\n    this.durationindex += this.children[this.i].duration;\n    if (this.children[this.i].duration === 0) this.durationindex = Math.round(this.durationindex * 64) / 64; // everytime we meet a barline, do rounding to nearest 64th\n\n    this.i++;\n  }\n};\n\nVoiceElement.prototype.layoutEnded = function () {\n  return this.i >= this.children.length;\n};\n\nVoiceElement.prototype.getDurationIndex = function () {\n  return this.durationindex - (this.children[this.i] && this.children[this.i].duration > 0 ? 0 : 0.0000005); // if the ith element doesn't have a duration (is not a note), its duration index is fractionally before. This enables CLEF KEYSIG TIMESIG PART, etc. to be laid out before we get to the first note of other voices\n}; // number of spacing units expected for next positioning\n\n\nVoiceElement.prototype.getSpacingUnits = function () {\n  return Math.sqrt(this.spacingduration * 8); // TODO-PER: On short lines, this would never trigger, so the spacing was wrong. I just changed this line empirically, though, so I don't know if there are other ramifications.\n  //return (this.minx<this.nextx) ? Math.sqrt(this.spacingduration*8) : 0; // we haven't used any spacing units if we end up using minx\n}; //\n\n\nVoiceElement.prototype.getNextX = function () {\n  return Math.max(this.minx, this.nextx);\n};\n\nVoiceElement.prototype.beginLayout = function (startx) {\n  this.i = 0;\n  this.durationindex = 0; //this.ii=this.children.length;\n\n  this.startx = startx;\n  this.minx = startx; // furthest left to where negatively positioned elements are allowed to go\n\n  this.nextx = startx; // x position where the next element of this voice should be placed assuming no other voices and no fixed width constraints\n\n  this.spacingduration = 0; // duration left to be laid out in current iteration (omitting additional spacing due to other aspects, such as bars, dots, sharps and flats)\n}; // Try to layout the element at index this.i\n// x - position to try to layout the element at\n// spacing - base spacing\n// can't call this function more than once per iteration\n\n\nVoiceElement.prototype.layoutOneItem = function (x, spacing) {\n  var child = this.children[this.i];\n  if (!child) return 0;\n  var er = x - this.minx; // available extrawidth to the left\n\n  if (er < child.getExtraWidth()) {\n    // shift right by needed amount\n    x += child.getExtraWidth() - er;\n  }\n\n  child.setX(x);\n  this.spacingduration = child.duration; //update minx\n\n  this.minx = x + child.getMinWidth(); // add necessary layout space\n\n  if (this.i !== this.children.length - 1) this.minx += child.minspacing; // add minimumspacing except on last elem\n\n  this.updateNextX(x, spacing); // contribute to staff y position\n  //this.staff.top = Math.max(child.top,this.staff.top);\n  //this.staff.bottom = Math.min(child.bottom,this.staff.bottom);\n\n  return x; // where we end up having placed the child\n}; // call when spacingduration has been updated\n\n\nVoiceElement.prototype.updateNextX = function (x, spacing) {\n  this.nextx = x + spacing * Math.sqrt(this.spacingduration * 8);\n};\n\nVoiceElement.prototype.shiftRight = function (dx) {\n  var child = this.children[this.i];\n  if (!child) return;\n  child.setX(child.x + dx);\n  this.minx += dx;\n  this.nextx += dx;\n};\n\nfunction isNonSpacerRest(elem) {\n  if (elem.type !== 'rest') return false;\n  if (elem.abcelem && elem.abcelem.rest && elem.abcelem.rest.type !== 'spacer') return true;\n  return false;\n}\n\nVoiceElement.prototype.draw = function (renderer, bartop) {\n  var width = this.w - 1;\n  renderer.staffbottom = this.staff.bottom; //this.barbottom = renderer.calcY(2);\n\n  renderer.measureNumber = null;\n  renderer.noteNumber = null;\n\n  if (this.header) {\n    // print voice name\n    var textpitch = 14 - (this.voicenumber + 1) * (12 / (this.voicetotal + 1));\n    renderer.renderText(renderer.padding.left, renderer.calcY(textpitch), this.header, 'voicefont', 'staff-extra voice-name', 'start');\n  }\n\n  for (var i = 0, ii = this.children.length; i < ii; i++) {\n    var child = this.children[i];\n    var justInitializedMeasureNumber = false;\n\n    if (child.type !== 'staff-extra' && renderer.measureNumber === null) {\n      renderer.measureNumber = 0;\n      renderer.noteNumber = 0;\n      justInitializedMeasureNumber = true;\n    }\n\n    child.draw(renderer, this.barto || i === ii - 1 ? bartop : 0);\n    if (child.type === 'note' || isNonSpacerRest(child)) renderer.noteNumber++;\n\n    if (child.type === 'bar' && !justInitializedMeasureNumber) {\n      renderer.measureNumber++;\n      renderer.noteNumber = 0;\n    }\n  }\n\n  renderer.measureNumber = 0;\n  renderer.noteNumber = 0;\n  parseCommon.each(this.beams, function (beam) {\n    if (beam === 'bar') {\n      renderer.measureNumber++;\n      renderer.noteNumber = 0;\n    } else beam.draw(renderer); // beams must be drawn first for proper printing of triplets, slurs and ties.\n\n  });\n  renderer.measureNumber = 0;\n  renderer.noteNumber = 0;\n  var self = this;\n  parseCommon.each(this.otherchildren, function (child) {\n    if (child === 'bar') {\n      renderer.measureNumber++;\n      renderer.noteNumber = 0;\n    } else child.draw(renderer, self.startx + 10, width);\n  });\n};\n\nVoiceElement.prototype.layoutBeams = function () {\n  for (var i = 0; i < this.beams.length; i++) {\n    if (this.beams[i].layout) {\n      this.beams[i].layout();\n      this.moveDecorations(this.beams[i]); // The above will change the top and bottom of the abselem children, so see if we need to expand our range.\n\n      for (var j = 0; j < this.beams[i].elems.length; j++) {\n        this.adjustRange(this.beams[i].elems[j]);\n      }\n    }\n  } // Now we can layout the triplets\n\n\n  for (i = 0; i < this.otherchildren.length; i++) {\n    var child = this.otherchildren[i];\n    if (child.layout) child.layout();\n  }\n\n  this.staff.top = Math.max(this.staff.top, this.top);\n  this.staff.bottom = Math.min(this.staff.bottom, this.bottom);\n};\n\nmodule.exports = VoiceElement;","//    abc_renderer.js: API to render to SVG/Raphael/whatever rendering engine\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*global Math, console */\nvar glyphs = require('./abc_glyphs');\n\nvar spacing = require('./abc_spacing');\n\nvar sprintf = require('./sprintf');\n\nvar Svg = require('./svg');\n/**\n * Implements the API for rendering ABCJS Abstract Rendering Structure to a canvas/paper (e.g. SVG, Raphael, etc)\n * @param {Object} paper\n * @param {bool} doRegression\n */\n\n\nvar Renderer = function Renderer(paper, doRegression, shouldAddClasses) {\n  this.paper = new Svg(paper);\n  this.controller = null; //TODO-GD only used when drawing the ABCJS ARS to connect the controller with the elements for highlighting\n\n  this.space = 3 * spacing.SPACE;\n  this.padding = {}; // renderer's padding is managed by the controller\n\n  this.doRegression = doRegression;\n  this.shouldAddClasses = shouldAddClasses;\n  if (this.doRegression) this.regressionLines = [];\n  this.reset();\n};\n\nRenderer.prototype.reset = function () {\n  this.paper.clear();\n  this.y = 0;\n  this.abctune = null;\n  this.lastM = null;\n  this.ingroup = false;\n  this.path = null;\n  this.isPrint = false;\n  this.initVerticalSpace();\n  if (this.doRegression) this.regressionLines = []; // HACK-PER: There was a problem in Raphael where every path string that was sent to it was cached.\n  // That was causing the browser's memory to steadily grow until the browser went slower and slower until\n  // it crashed. The fix to that was a patch to Raphael, so it is only patched on the versions of this library that\n  // bundle Raphael with it. Also, if Raphael gets an update, then that patch will be lost. On version 2.1.2 of Raphael,\n  // the patch is on line 1542 and 1545 and it is:\n  //             p[ps].sleep = 1;\n};\n\nRenderer.prototype.newTune = function (abcTune) {\n  this.abctune = abcTune; // TODO-PER: this is just to get the font info.\n\n  this.setVerticalSpace(abcTune.formatting);\n  this.measureNumber = null;\n  this.noteNumber = null;\n  this.setPrintMode(abcTune.media === 'print');\n  this.setPadding(abcTune);\n};\n\nRenderer.prototype.createElemSet = function () {\n  return this.paper.openGroup();\n};\n\nRenderer.prototype.closeElemSet = function () {\n  return this.paper.closeGroup();\n};\n/**\n * Set whether we are formatting this for the screen, or as a preview for creating a PDF version.\n * @param {bool} isPrint\n */\n\n\nRenderer.prototype.setPrintMode = function (isPrint) {\n  this.isPrint = isPrint;\n};\n/**\n * Set the size of the canvas.\n * @param {object} maxwidth\n * @param {object} scale\n */\n\n\nRenderer.prototype.setPaperSize = function (maxwidth, scale, responsive) {\n  var w = (maxwidth + this.padding.right) * scale;\n  var h = (this.y + this.padding.bottom) * scale;\n  if (this.isPrint) h = Math.max(h, 1056); // 11in x 72pt/in x 1.33px/pt\n  // TODO-PER: We are letting the page get as long as it needs now, but eventually that should go to a second page.\n\n  if (this.doRegression) this.regressionLines.push(\"PAPER SIZE: (\" + w + \",\" + h + \")\"); // for accessibility\n\n  var text = \"Sheet Music\";\n  if (this.abctune && this.abctune.metaText && this.abctune.metaText.title) text += \" for \\\"\" + this.abctune.metaText.title + '\"';\n  this.paper.setTitle(text);\n  var parentStyles = {\n    overflow: \"hidden\"\n  };\n\n  if (responsive === 'resize') {\n    this.paper.setResponsiveWidth(w, h);\n  } else {\n    parentStyles.width = \"\";\n    parentStyles.height = h + \"px\";\n\n    if (scale < 1) {\n      parentStyles.width = w + \"px\";\n      this.paper.setSize(w / scale, h / scale);\n    } else this.paper.setSize(w, h);\n  }\n\n  this.paper.setScale(scale);\n  this.paper.setParentStyles(parentStyles);\n};\n/**\n * Set the padding\n * @param {object} params\n */\n\n\nRenderer.prototype.setPaddingOverride = function (params) {\n  this.paddingOverride = {\n    top: params.paddingtop,\n    bottom: params.paddingbottom,\n    right: params.paddingright,\n    left: params.paddingleft\n  };\n};\n/**\n * Set the padding\n * @param {object} params\n */\n\n\nRenderer.prototype.setPadding = function (abctune) {\n  // If the padding is set in the tune, then use that.\n  // Otherwise, if the padding is set in the override, use that.\n  // Otherwise, use the defaults (there are a different set of defaults for screen and print.)\n  function setPaddingVariable(self, paddingKey, formattingKey, printDefault, screenDefault) {\n    if (abctune.formatting[formattingKey] !== undefined) self.padding[paddingKey] = abctune.formatting[formattingKey];else if (self.paddingOverride[paddingKey] !== undefined) self.padding[paddingKey] = self.paddingOverride[paddingKey];else if (self.isPrint) self.padding[paddingKey] = printDefault;else self.padding[paddingKey] = screenDefault;\n  } // 1cm x 0.393701in/cm x 72pt/in x 1.33px/pt = 38px\n  // 1.8cm x 0.393701in/cm x 72pt/in x 1.33px/pt = 68px\n\n\n  setPaddingVariable(this, 'top', 'topmargin', 38, 15);\n  setPaddingVariable(this, 'bottom', 'botmargin', 38, 15);\n  setPaddingVariable(this, 'left', 'leftmargin', 68, 15);\n  setPaddingVariable(this, 'right', 'rightmargin', 68, 15);\n};\n/**\n * Some of the items on the page are not scaled, so adjust them in the opposite direction of scaling to cancel out the scaling.\n * @param {float} scale\n */\n\n\nRenderer.prototype.adjustNonScaledItems = function (scale) {\n  this.padding.top /= scale;\n  this.padding.bottom /= scale;\n  this.padding.left /= scale;\n  this.padding.right /= scale;\n  this.abctune.formatting.headerfont.size /= scale;\n  this.abctune.formatting.footerfont.size /= scale;\n};\n/**\n * Set the the values for all the configurable vertical space options.\n */\n\n\nRenderer.prototype.initVerticalSpace = function () {\n  // conversion: 37.7953 = conversion factor for cm to px.\n  // All of the following values are in px.\n  this.spacing = {\n    composer: 7.56,\n    // Set the vertical space above the composer.\n    graceBefore: 8.67,\n    // Define the space before, inside and after the grace notes.\n    graceInside: 10.67,\n    graceAfter: 16,\n    info: 0,\n    // Set the vertical space above the infoline.\n    lineSkipFactor: 1.1,\n    // Set the factor for spacing between lines of text. (multiply this by the font size)\n    music: 7.56,\n    // Set the vertical space above the first staff.\n    paragraphSkipFactor: 0.4,\n    // Set the factor for spacing between text paragraphs. (multiply this by the font size)\n    parts: 11.33,\n    // Set the vertical space above a new part.\n    slurHeight: 1.0,\n    // Set the slur height factor.\n    staffSeparation: 61.33,\n    // Do not put a staff system closer than <unit> from the previous system.\n    stemHeight: 26.67 + 10,\n    // Set the stem height.\n    subtitle: 3.78,\n    // Set the vertical space above the subtitle.\n    systemStaffSeparation: 48,\n    // Do not place the staves closer than <unit> inside a system. * This values applies to all staves when in the tune header. Otherwise, it applies to the next staff\n    text: 18.9,\n    // Set the vertical space above the history.\n    title: 7.56,\n    // Set the vertical space above the title.\n    top: 30.24,\n    //Set the vertical space above the tunes and on the top of the continuation pages.\n    vocal: 30.67,\n    // Set the vertical space above the lyrics under the staves.\n    words: 0 // Set the vertical space above the lyrics at the end of the tune.\n\n  };\n  /*\n  TODO-PER: Handle the x-coordinate spacing items, too.\n  maxshrink <float>Default: 0.65\n  Set how much to compress horizontally when music line breaks\n  are automatic.\n  <float> must be between 0 (natural spacing)\n  and 1 (max shrinking).\n  // This next value is used to compute the natural spacing of\n  // the notes. The base spacing of the crotchet is always\n  // 40 pts. When the duration of a note type is twice the\n  // duration of an other note type, its spacing is multiplied\n  // by this factor.\n  // The default value causes the note spacing to be multiplied\n  // by 2 when its duration is multiplied by 4, i.e. the\n  // space of the semibreve is 80 pts and the space of the\n  // semiquaver is 20 pts.\n  // Setting this value to 1 sets all note spacing to 40 pts.\n  noteSpacingFactor: 1.414, // Set the note spacing factor to <float> (range 1..2).\n  scale <float> Default: 0.75 Set the page scale factor. Note that the header and footer are not scaled.\n  stretchlast <float>Default: 0.8\n  Stretch the last music line of a tune when it exceeds\n  the <float> fraction of the page width.\n  <float> range is 0.0 to 1.0.\n   */\n};\n\nRenderer.prototype.setVerticalSpace = function (formatting) {\n  // conversion from pts to px 4/3\n  if (formatting.staffsep !== undefined) this.spacing.staffSeparation = formatting.staffsep * 4 / 3;\n  if (formatting.composerspace !== undefined) this.spacing.composer = formatting.composerspace * 4 / 3;\n  if (formatting.partsspace !== undefined) this.spacing.parts = formatting.partsspace * 4 / 3;\n  if (formatting.textspace !== undefined) this.spacing.text = formatting.textspace * 4 / 3;\n  if (formatting.musicspace !== undefined) this.spacing.music = formatting.musicspace * 4 / 3;\n  if (formatting.titlespace !== undefined) this.spacing.title = formatting.titlespace * 4 / 3;\n  if (formatting.sysstaffsep !== undefined) this.spacing.systemStaffSeparation = formatting.sysstaffsep * 4 / 3;\n  if (formatting.subtitlespace !== undefined) this.spacing.subtitle = formatting.subtitlespace * 4 / 3;\n  if (formatting.topspace !== undefined) this.spacing.top = formatting.topspace * 4 / 3;\n  if (formatting.vocalspace !== undefined) this.spacing.vocal = formatting.vocalspace * 4 / 3;\n  if (formatting.wordsspace !== undefined) this.spacing.words = formatting.wordsspace * 4 / 3;\n};\n/**\n * Leave space at the top of the paper\n * @param {object} abctune\n */\n\n\nRenderer.prototype.topMargin = function (abctune) {\n  this.moveY(this.padding.top);\n};\n/**\n * Leave space before printing the music\n */\n\n\nRenderer.prototype.addMusicPadding = function () {\n  this.moveY(this.spacing.music);\n};\n/**\n * Leave space before printing a staff system\n */\n\n\nRenderer.prototype.addStaffPadding = function (lastStaffGroup, thisStaffGroup) {\n  var lastStaff = lastStaffGroup.staffs[lastStaffGroup.staffs.length - 1];\n  var lastBottomLine = -(lastStaff.bottom - 2); // The 2 is because the scale goes to 2 below the last line.\n\n  var nextTopLine = thisStaffGroup.staffs[0].top - 10; // Because 10 represents the top line.\n\n  var naturalSeparation = nextTopLine + lastBottomLine; // This is how far apart they'd be without extra spacing\n\n  var separationInPixels = naturalSeparation * spacing.STEP;\n  if (separationInPixels < this.spacing.staffSeparation) this.moveY(this.spacing.staffSeparation - separationInPixels);\n};\n/**\n * Text that goes above the score\n * @param {number} width\n * @param {object} abctune\n */\n\n\nRenderer.prototype.engraveTopText = function (width, abctune) {\n  if (abctune.metaText.header && this.isPrint) {\n    // Note: whether there is a header or not doesn't change any other positioning, so this doesn't change the Y-coordinate.\n    // This text goes above the margin, so we'll temporarily move up.\n    var headerTextHeight = this.getTextSize(\"XXXX\", \"headerfont\", 'abcjs-header abcjs-meta-top').height;\n    this.y -= headerTextHeight;\n    this.outputTextIf(this.padding.left, abctune.metaText.header.left, 'headerfont', 'header meta-top', 0, null, 'start');\n    this.outputTextIf(this.padding.left + width / 2, abctune.metaText.header.center, 'headerfont', 'header meta-top', 0, null, 'middle');\n    this.outputTextIf(this.padding.left + width, abctune.metaText.header.right, 'headerfont', 'header meta-top', 0, null, 'end');\n    this.y += headerTextHeight;\n  }\n\n  if (this.isPrint) this.moveY(this.spacing.top);\n  this.outputTextIf(this.padding.left + width / 2, abctune.metaText.title, 'titlefont', 'title meta-top', this.spacing.title, 0, 'middle');\n  if (abctune.lines[0]) this.outputTextIf(this.padding.left + width / 2, abctune.lines[0].subtitle, 'subtitlefont', 'text meta-top', this.spacing.subtitle, 0, 'middle');\n\n  if (abctune.metaText.rhythm || abctune.metaText.origin || abctune.metaText.composer) {\n    this.moveY(this.spacing.composer);\n    var rSpace = this.outputTextIf(this.padding.left, abctune.metaText.rhythm, 'infofont', 'meta-top', 0, null, \"start\");\n    var composerLine = \"\";\n    if (abctune.metaText.composer) composerLine += abctune.metaText.composer;\n    if (abctune.metaText.origin) composerLine += ' (' + abctune.metaText.origin + ')';\n\n    if (composerLine.length > 0) {\n      var space = this.outputTextIf(this.padding.left + width, composerLine, 'composerfont', 'meta-top', 0, null, \"end\");\n      this.moveY(space[1]);\n    } else {\n      this.moveY(rSpace[1]);\n    } // TODO-PER: The following is a hack to make the elements line up with abcm2ps. Don't know where the extra space is coming from.\n\n\n    this.moveY(-6); //} else if (this.isPrint) {\n    //\t// abcm2ps adds this space whether there is anything to write or not.\n    //\tthis.moveY(this.spacing.composer);\n    //\tvar space2 = this.getTextSize(\"M\", 'composerfont', 'meta-top');\n    //\tthis.moveY(space2.height);\n  }\n\n  this.outputTextIf(this.padding.left + width, abctune.metaText.author, 'composerfont', 'meta-top', 0, 0, \"end\"); //this.skipSpaceY();\n\n  this.outputTextIf(this.padding.left, abctune.metaText.partOrder, 'partsfont', 'meta-bottom', 0, 0, \"start\");\n};\n/**\n * Text that goes below the score\n * @param {number} width\n * @param {object} abctune\n */\n\n\nRenderer.prototype.engraveExtraText = function (width, abctune) {\n  this.lineNumber = null;\n  this.measureNumber = null;\n  this.noteNumber = null;\n  this.voiceNumber = null;\n\n  if (abctune.metaText.unalignedWords) {\n    var hash = this.getFontAndAttr(\"wordsfont\", 'meta-bottom');\n    var space = this.getTextSize(\"i\", 'wordsfont', 'meta-bottom');\n    if (abctune.metaText.unalignedWords.length > 0) this.moveY(this.spacing.words, 1);\n\n    for (var j = 0; j < abctune.metaText.unalignedWords.length; j++) {\n      if (typeof abctune.metaText.unalignedWords[j] === 'string') {\n        this.outputTextIf(this.padding.left + spacing.INDENT, abctune.metaText.unalignedWords[j], 'wordsfont', 'meta-bottom', 0, 0, \"start\");\n      } else {\n        var largestY = 0;\n        var offsetX = 0;\n\n        for (var k = 0; k < abctune.metaText.unalignedWords[j].length; k++) {\n          var type = abctune.metaText.unalignedWords[j][k].font ? abctune.metaText.unalignedWords[j][k].font : \"wordsfont\";\n          var el = this.renderText(this.padding.left + spacing.INDENT + offsetX, this.y, abctune.metaText.unalignedWords[j][k].text, type, 'meta-bottom', false);\n          var size = el.getBBox();\n          largestY = Math.max(largestY, size.height);\n          offsetX += size.width; // If the phrase ends in a space, then that is not counted in the width, so we need to add that in ourselves.\n\n          if (abctune.metaText.unalignedWords[j][k].text[abctune.metaText.unalignedWords[j][k].text.length - 1] === ' ') {\n            offsetX += space.width;\n          }\n        }\n\n        this.moveY(largestY, 1);\n      }\n    }\n\n    if (abctune.metaText.unalignedWords.length > 0) this.moveY(hash.font.size, 2);\n  }\n\n  var extraText = \"\";\n  if (abctune.metaText.book) extraText += \"Book: \" + abctune.metaText.book + \"\\n\";\n  if (abctune.metaText.source) extraText += \"Source: \" + abctune.metaText.source + \"\\n\";\n  if (abctune.metaText.discography) extraText += \"Discography: \" + abctune.metaText.discography + \"\\n\";\n  if (abctune.metaText.notes) extraText += \"Notes: \" + abctune.metaText.notes + \"\\n\";\n  if (abctune.metaText.transcription) extraText += \"Transcription: \" + abctune.metaText.transcription + \"\\n\";\n  if (abctune.metaText.history) extraText += \"History: \" + abctune.metaText.history + \"\\n\";\n  if (abctune.metaText['abc-copyright']) extraText += \"Copyright: \" + abctune.metaText['abc-copyright'] + \"\\n\";\n  if (abctune.metaText['abc-creator']) extraText += \"Creator: \" + abctune.metaText['abc-creator'] + \"\\n\";\n  if (abctune.metaText['abc-edited-by']) extraText += \"Edited By: \" + abctune.metaText['abc-edited-by'] + \"\\n\";\n  this.outputTextIf(this.padding.left, extraText, 'historyfont', 'meta-bottom', this.spacing.info, 0, \"start\");\n\n  if (abctune.metaText.footer && this.isPrint) {\n    // Note: whether there is a footer or not doesn't change any other positioning, so this doesn't change the Y-coordinate.\n    this.outputTextIf(this.padding.left, abctune.metaText.footer.left, 'footerfont', 'header meta-bottom', 0, null, 'start');\n    this.outputTextIf(this.padding.left + width / 2, abctune.metaText.footer.center, 'footerfont', 'header meta-bottom', 0, null, 'middle');\n    this.outputTextIf(this.padding.left + width, abctune.metaText.footer.right, 'footerfont', 'header meta-bottom', 0, null, 'end');\n  }\n};\n/**\n * Output text defined with %%text.\n * @param {array or string} text\n */\n\n\nRenderer.prototype.outputFreeText = function (text, vskip) {\n  if (vskip) this.moveY(vskip);\n\n  if (text === \"\") {\n    // we do want to print out blank lines if they have been specified.\n    var hash = this.getFontAndAttr('textfont', 'defined-text');\n    this.moveY(hash.attr['font-size'] * 2); // move the distance of the line, plus the distance of the margin, which is also one line.\n  } else if (typeof text === 'string') this.outputTextIf(this.padding.left, text, 'textfont', 'defined-text', 0, 1, \"start\");else {\n    var str = \"\";\n    var isCentered = false; // The structure is wrong here: it requires an array to do centering, but it shouldn't have.\n\n    for (var i = 0; i < text.length; i++) {\n      if (text[i].font) str += \"FONT(\" + text[i].font + \")\";\n      str += text[i].text;\n      if (text[i].center) isCentered = true;\n    }\n\n    var alignment = isCentered ? 'middle' : 'start';\n    var x = isCentered ? this.controller.width / 2 : this.padding.left;\n    this.outputTextIf(x, str, 'textfont', 'defined-text', 0, 1, alignment);\n  }\n};\n\nRenderer.prototype.outputSeparator = function (separator) {\n  if (!separator.lineLength) return;\n  this.moveY(separator.spaceAbove);\n  this.printSeparator(separator.lineLength);\n  this.moveY(separator.spaceBelow);\n};\n/**\n * Output an extra subtitle that is defined later in the tune.\n */\n\n\nRenderer.prototype.outputSubtitle = function (width, subtitle) {\n  this.outputTextIf(this.padding.left + width / 2, subtitle, 'subtitlefont', 'text meta-top', this.spacing.subtitle, 0, 'middle');\n};\n/**\n * Begin a group of glyphs that will always be moved, scaled and highlighted together\n */\n\n\nRenderer.prototype.beginGroup = function () {\n  this.path = [];\n  this.lastM = [0, 0];\n  this.ingroup = true;\n};\n/**\n * Add a path to the current group\n * @param {Array} path\n * @private\n */\n\n\nRenderer.prototype.addPath = function (path) {\n  path = path || [];\n  if (path.length === 0) return;\n  path[0][0] = \"m\";\n  path[0][1] -= this.lastM[0];\n  path[0][2] -= this.lastM[1];\n  this.lastM[0] += path[0][1];\n  this.lastM[1] += path[0][2];\n  this.path.push(path[0]);\n\n  for (var i = 1, ii = path.length; i < ii; i++) {\n    if (path[i][0] === \"m\") {\n      this.lastM[0] += path[i][1];\n      this.lastM[1] += path[i][2];\n    }\n\n    this.path.push(path[i]);\n  }\n};\n/**\n * End a group of glyphs that will always be moved, scaled and highlighted together\n */\n\n\nRenderer.prototype.endGroup = function (klass) {\n  this.ingroup = false;\n  if (this.path.length === 0) return null;\n  var path = \"\";\n\n  for (var i = 0; i < this.path.length; i++) {\n    path += this.path[i].join(\" \");\n  }\n\n  var ret = this.paper.path({\n    path: path,\n    stroke: \"none\",\n    fill: \"#000000\",\n    'class': this.addClasses(klass)\n  });\n  this.path = [];\n  if (this.doRegression) this.addToRegression(ret);\n  return ret;\n};\n/**\n * gets scaled\n * @param {number} x1 start x\n * @param {number} x2 end x\n * @param {number} pitch pitch the stave line is drawn at\n */\n\n\nRenderer.prototype.printStaveLine = function (x1, x2, pitch, klass) {\n  var extraClass = \"staff\";\n  if (klass !== undefined) extraClass += \" \" + klass;\n  var isIE =\n  /*@cc_on!@*/\n  false; //IE detector\n\n  var dy = 0.35;\n  var fill = \"#000000\";\n\n  if (isIE) {\n    dy = 1;\n    fill = \"#666666\";\n  }\n\n  var y = this.calcY(pitch);\n  var pathString = sprintf(\"M %f %f L %f %f L %f %f L %f %f z\", x1, y - dy, x2, y - dy, x2, y + dy, x1, y + dy);\n  var ret = this.paper.pathToBack({\n    path: pathString,\n    stroke: \"none\",\n    fill: fill,\n    'class': this.addClasses(extraClass)\n  });\n  if (this.doRegression) this.addToRegression(ret);\n  return ret;\n};\n/**\n * gets scaled if not in a group\n * @param {number} x x coordinate of the stem\n * @param {number} dx stem width\n * @param {number} y1 y coordinate of the stem bottom\n * @param {number} y2 y coordinate of the stem top\n */\n\n\nRenderer.prototype.printStem = function (x, dx, y1, y2) {\n  if (dx < 0) {\n    // correct path \"handedness\" for intersection with other elements\n    var tmp = y2;\n    y2 = y1;\n    y1 = tmp;\n  }\n\n  var isIE =\n  /*@cc_on!@*/\n  false; //IE detector\n\n  var fill = \"#000000\";\n\n  if (isIE && dx < 1) {\n    dx = 1;\n    fill = \"#666666\";\n  }\n\n  if (~~x === x) x += 0.05; // raphael does weird rounding (for VML)\n\n  var pathArray = [[\"M\", x, y1], [\"L\", x, y2], [\"L\", x + dx, y2], [\"L\", x + dx, y1], [\"z\"]];\n\n  if (!isIE && this.ingroup) {\n    this.addPath(pathArray);\n  } else {\n    var path = \"\";\n\n    for (var i = 0; i < pathArray.length; i++) {\n      path += pathArray[i].join(\" \");\n    }\n\n    var ret = this.paper.pathToBack({\n      path: path,\n      stroke: \"none\",\n      fill: fill,\n      'class': this.addClasses('stem')\n    });\n    if (this.doRegression) this.addToRegression(ret);\n    return ret;\n  }\n};\n\nfunction kernSymbols(lastSymbol, thisSymbol, lastSymbolWidth) {\n  // This is just some adjustments to make it look better.\n  var width = lastSymbolWidth;\n  if (lastSymbol === 'f' && thisSymbol === 'f') width = width * 2 / 3;\n  if (lastSymbol === 'p' && thisSymbol === 'p') width = width * 5 / 6;\n  if (lastSymbol === 'f' && thisSymbol === 'z') width = width * 5 / 8;\n  return width;\n}\n/**\n * assumes this.y is set appropriately\n * if symbol is a multichar string without a . (as in scripts.staccato) 1 symbol per char is assumed\n * not scaled if not in printgroup\n */\n\n\nRenderer.prototype.printSymbol = function (x, offset, symbol, scalex, scaley, klass) {\n  var el;\n  var ycorr;\n  if (!symbol) return null;\n\n  if (symbol.length > 1 && symbol.indexOf(\".\") < 0) {\n    this.paper.openGroup();\n    var dx = 0;\n\n    for (var i = 0; i < symbol.length; i++) {\n      var s = symbol.charAt(i);\n      ycorr = glyphs.getYCorr(s);\n      el = glyphs.printSymbol(x + dx, this.calcY(offset + ycorr), s, this.paper, klass);\n\n      if (el) {\n        if (this.doRegression) this.addToRegression(el); //elemset.push(el);\n\n        if (i < symbol.length - 1) dx += kernSymbols(s, symbol.charAt(i + 1), glyphs.getSymbolWidth(s));\n      } else {\n        this.renderText(x, this.y, \"no symbol:\" + symbol, \"debugfont\", 'debug-msg', 'start');\n      }\n    }\n\n    return this.paper.closeGroup();\n  } else {\n    ycorr = glyphs.getYCorr(symbol);\n\n    if (this.ingroup) {\n      this.addPath(glyphs.getPathForSymbol(x, this.calcY(offset + ycorr), symbol, scalex, scaley));\n    } else {\n      el = glyphs.printSymbol(x, this.calcY(offset + ycorr), symbol, this.paper, klass);\n\n      if (el) {\n        if (this.doRegression) this.addToRegression(el);\n        return el;\n      } else this.renderText(x, this.y, \"no symbol:\" + symbol, \"debugfont\", 'debug-msg', 'start');\n    }\n\n    return null;\n  }\n};\n\nRenderer.prototype.scaleExistingElem = function (elem, scaleX, scaleY, x, y) {\n  this.paper.setAttributeOnElement(elem, {\n    style: \"transform:scale(\" + scaleX + \",\" + scaleY + \");transform-origin:\" + x + \"px \" + y + \"px;\"\n  });\n};\n\nRenderer.prototype.printPath = function (attrs) {\n  var ret = this.paper.path(attrs);\n  if (this.doRegression) this.addToRegression(ret);\n  return ret;\n};\n\nRenderer.prototype.drawBrace = function (xLeft, yTop, yBottom) {\n  //Tony\n  var yHeight = yBottom - yTop;\n  var xCurve = [7.5, -8, 21, 0, 18.5, -10.5, 7.5];\n  var yCurve = [0, yHeight / 5.5, yHeight / 3.14, yHeight / 2, yHeight / 2.93, yHeight / 4.88, 0];\n  var pathString = sprintf(\"M %f %f C %f %f %f %f %f %f C %f %f %f %f %f %f z\", xLeft + xCurve[0], yTop + yCurve[0], xLeft + xCurve[1], yTop + yCurve[1], xLeft + xCurve[2], yTop + yCurve[2], xLeft + xCurve[3], yTop + yCurve[3], xLeft + xCurve[4], yTop + yCurve[4], xLeft + xCurve[5], yTop + yCurve[5], xLeft + xCurve[6], yTop + yCurve[6]);\n  var ret1 = this.paper.path({\n    path: pathString,\n    stroke: \"#000000\",\n    fill: \"#000000\",\n    'class': this.addClasses('brace')\n  });\n  xCurve = [0, 17.5, -7.5, 6.6, -5, 20, 0];\n  yCurve = [yHeight / 2, yHeight / 1.46, yHeight / 1.22, yHeight, yHeight / 1.19, yHeight / 1.42, yHeight / 2];\n  pathString = sprintf(\"M %f %f C %f %f %f %f %f %f C %f %f %f %f %f %f z\", xLeft + xCurve[0], yTop + yCurve[0], xLeft + xCurve[1], yTop + yCurve[1], xLeft + xCurve[2], yTop + yCurve[2], xLeft + xCurve[3], yTop + yCurve[3], xLeft + xCurve[4], yTop + yCurve[4], xLeft + xCurve[5], yTop + yCurve[5], xLeft + xCurve[6], yTop + yCurve[6]);\n  var ret2 = this.paper.path({\n    path: pathString,\n    stroke: \"#000000\",\n    fill: \"#000000\",\n    'class': this.addClasses('brace')\n  });\n\n  if (this.doRegression) {\n    this.addToRegression(ret1);\n    this.addToRegression(ret2);\n  }\n\n  return ret1 + ret2;\n};\n\nRenderer.prototype.drawArc = function (x1, x2, pitch1, pitch2, above, klass, isTie) {\n  // If it is a tie vs. a slur, draw it shallower.\n  var spacing = isTie ? 1.2 : 1.5;\n  x1 = x1 + 6;\n  x2 = x2 + 4;\n  pitch1 = pitch1 + (above ? spacing : -spacing);\n  pitch2 = pitch2 + (above ? spacing : -spacing);\n  var y1 = this.calcY(pitch1);\n  var y2 = this.calcY(pitch2); //unit direction vector\n\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var norm = Math.sqrt(dx * dx + dy * dy);\n  var ux = dx / norm;\n  var uy = dy / norm;\n  var flatten = norm / 3.5;\n  var maxFlatten = isTie ? 10 : 25; // If it is a tie vs. a slur, draw it shallower.\n\n  var curve = (above ? -1 : 1) * Math.min(maxFlatten, Math.max(4, flatten));\n  var controlx1 = x1 + flatten * ux - curve * uy;\n  var controly1 = y1 + flatten * uy + curve * ux;\n  var controlx2 = x2 - flatten * ux - curve * uy;\n  var controly2 = y2 - flatten * uy + curve * ux;\n  var thickness = 2;\n  var pathString = sprintf(\"M %f %f C %f %f %f %f %f %f C %f %f %f %f %f %f z\", x1, y1, controlx1, controly1, controlx2, controly2, x2, y2, controlx2 - thickness * uy, controly2 + thickness * ux, controlx1 - thickness * uy, controly1 + thickness * ux, x1, y1);\n  if (klass) klass += ' slur';else klass = 'slur';\n  var ret = this.paper.path({\n    path: pathString,\n    stroke: \"none\",\n    fill: \"#000000\",\n    'class': this.addClasses(klass)\n  });\n  if (this.doRegression) this.addToRegression(ret);\n  return ret;\n};\n/**\n * Calculates the y for a given pitch value (relative to the stave the renderer is currently printing)\n * @param {number} ofs pitch value (bottom C on a G clef = 0, D=1, etc.)\n */\n\n\nRenderer.prototype.calcY = function (ofs) {\n  return this.y - ofs * spacing.STEP;\n};\n/**\n * Print @param {number} numLines. If there is 1 line it is the B line. Otherwise the bottom line is the E line.\n */\n\n\nRenderer.prototype.printStave = function (startx, endx, numLines) {\n  var klass = \"top-line\";\n  this.paper.openGroup({\n    prepend: true\n  }); // If there is one line, it is the B line. Otherwise, the bottom line is the E line.\n\n  if (numLines === 1) {\n    this.printStaveLine(startx, endx, 6, klass);\n    return;\n  }\n\n  for (var i = numLines - 1; i >= 0; i--) {\n    this.printStaveLine(startx, endx, (i + 1) * 2, klass);\n    klass = undefined;\n  }\n\n  this.paper.closeGroup();\n};\n/**\n *\n * @private\n */\n\n\nRenderer.prototype.addClasses = function (c, isNote) {\n  if (!this.shouldAddClasses) return \"\";\n  var ret = [];\n  if (c.length > 0) ret.push(c);\n  if (this.lineNumber !== null && this.lineNumber !== undefined) ret.push(\"l\" + this.lineNumber);\n  if (this.measureNumber !== null && this.measureNumber !== undefined) ret.push(\"m\" + this.measureNumber);\n  if (this.voiceNumber !== null && this.voiceNumber !== undefined) ret.push(\"v\" + this.voiceNumber);\n  if ((c.indexOf('note') >= 0 || c.indexOf('rest') >= 0) && this.noteNumber !== null && this.noteNumber !== undefined) ret.push(\"n\" + this.noteNumber); // add a prefix to all classes that abcjs adds.\n\n  if (ret.length > 0) {\n    ret = ret.join(' '); // Some strings are compound classes - that is, specify more than one class in a string.\n\n    ret = ret.split(' ');\n\n    for (var i = 0; i < ret.length; i++) {\n      if (ret[i].indexOf('abcjs-') !== 0 && ret[i].length > 0) // if the prefix doesn't already exist and the class is not blank.\n        ret[i] = 'abcjs-' + ret[i];\n    }\n  }\n\n  return ret.join(' ');\n};\n\nRenderer.prototype.getFontAndAttr = function (type, klass) {\n  var font;\n\n  if (typeof type === 'string') {\n    font = this.abctune.formatting[type]; // Raphael deliberately changes the font units to pixels for some reason, so we need to change points to pixels here.\n\n    if (font) font = {\n      face: font.face,\n      size: font.size * 4 / 3,\n      decoration: font.decoration,\n      style: font.style,\n      weight: font.weight,\n      box: font.box\n    };else font = {\n      face: \"Arial\",\n      size: 12 * 4 / 3,\n      decoration: \"underline\",\n      style: \"normal\",\n      weight: \"normal\"\n    };\n  } else font = {\n    face: type.face,\n    size: type.size * 4 / 3,\n    decoration: type.decoration,\n    style: type.style,\n    weight: type.weight,\n    box: type.box\n  };\n\n  var attr = {\n    \"font-size\": font.size,\n    'font-style': font.style,\n    \"font-family\": font.face,\n    'font-weight': font.weight,\n    'text-decoration': font.decoration,\n    'class': this.addClasses(klass)\n  };\n  attr.font = \"\"; // There is a spurious font definition that is put on all text elements. This overwrites it.\n\n  return {\n    font: font,\n    attr: attr\n  };\n};\n\nRenderer.prototype.getTextSize = function (text, type, klass) {\n  var hash = this.getFontAndAttr(type, klass);\n  var size = this.paper.getTextSize(text, hash.attr);\n\n  if (hash.font.box) {\n    size.height += 8;\n    size.width += 8;\n  }\n\n  return size;\n};\n\nRenderer.prototype.renderText = function (x, y, text, type, klass, anchor, centerVertically) {\n  var hash = this.getFontAndAttr(type, klass);\n  if (anchor) hash.attr[\"text-anchor\"] = anchor;\n  hash.attr.x = x;\n  hash.attr.y = y + 7; // TODO-PER: Not sure why the text appears to be 7 pixels off.\n\n  if (!centerVertically) hash.attr.dy = \"0.5em\";\n\n  if (type === 'debugfont') {\n    console.log(\"Debug msg: \" + text);\n    hash.attr.stroke = \"#ff0000\";\n  }\n\n  text = text.replace(/\\n\\n/g, \"\\n \\n\");\n  text = text.replace(/^\\n/, \"\\xA0\\n\");\n\n  if (hash.font.box) {\n    hash.attr.x += 2;\n    hash.attr.y += 4;\n  }\n\n  var el = this.paper.text(text, hash.attr);\n\n  if (hash.font.box) {\n    var size = el.getBBox();\n    var padding = 2;\n    var margin = 2;\n    this.paper.rect({\n      x: size.x - padding,\n      y: size.y,\n      width: size.width + padding * 2,\n      height: size.height + padding * 2 - margin,\n      stroke: \"#888888\",\n      fill: \"transparent\"\n    }); //size.height += 8;\n  }\n\n  if (this.doRegression) this.addToRegression(el);\n  return el;\n};\n\nRenderer.prototype.moveY = function (em, numLines) {\n  if (numLines === undefined) numLines = 1;\n  this.y += em * numLines;\n};\n\nRenderer.prototype.skipSpaceY = function () {\n  this.y += this.space;\n}; // Call with 'kind' being the font type to use,\n// if marginBottom === null then don't increment the Y after printing, otherwise that is the extra number of em's to leave below the line.\n// and alignment being \"start\", \"middle\", or \"end\".\n\n\nRenderer.prototype.outputTextIf = function (x, str, kind, klass, marginTop, marginBottom, alignment) {\n  if (str) {\n    if (marginTop) this.moveY(marginTop);\n    var el = this.renderText(x, this.y, str, kind, klass, alignment);\n    var bb = el.getBBox(); // This can return NaN if the element isn't visible.\n\n    var width = isNaN(bb.width) ? 0 : bb.width;\n    var height = isNaN(bb.height) ? 0 : bb.height;\n    var hash = this.getFontAndAttr(kind, klass);\n\n    if (hash.font.box) {\n      width += 8;\n      height += 8;\n    }\n\n    if (marginBottom !== null) {\n      var numLines = str.split(\"\\n\").length;\n      if (!isNaN(bb.height)) this.moveY(height / numLines, numLines + marginBottom);\n    }\n\n    return [width, height];\n  }\n\n  return [0, 0];\n};\n\nRenderer.prototype.addInvisibleMarker = function (className) {\n  var dy = 0.35;\n  var fill = \"rgba(0,0,0,0)\";\n  var y = this.y;\n  y = Math.round(y);\n  var x1 = 0;\n  var x2 = 100;\n  var pathString = sprintf(\"M %f %f L %f %f L %f %f L %f %f z\", x1, y - dy, x1 + x2, y - dy, x2, y + dy, x1, y + dy);\n  this.paper.pathToBack({\n    path: pathString,\n    stroke: \"none\",\n    fill: fill,\n    \"fill-opacity\": 0,\n    'class': this.addClasses(className),\n    'data-vertical': y\n  });\n};\n\nRenderer.prototype.printSeparator = function (width) {\n  var fill = \"rgba(0,0,0,255)\";\n  var stroke = \"rgba(0,0,0,0)\";\n  var y = Math.round(this.y);\n  var staffWidth = this.controller.width;\n  var x1 = (staffWidth - width) / 2;\n  var x2 = x1 + width;\n  var pathString = 'M ' + x1 + ' ' + y + ' L ' + x2 + ' ' + y + ' L ' + x2 + ' ' + (y + 1) + ' L ' + x1 + ' ' + (y + 1) + ' L ' + x1 + ' ' + y + ' z';\n  this.paper.pathToBack({\n    path: pathString,\n    stroke: stroke,\n    fill: fill,\n    'class': this.addClasses('defined-text')\n  });\n}; // For debugging, it is sometimes useful to know where you are vertically.\n\n\nRenderer.prototype.printHorizontalLine = function (width, vertical, comment) {\n  var dy = 0.35;\n  var fill = \"rgba(0,0,255,.4)\";\n  var y = this.y;\n  if (vertical) y = vertical;\n  y = Math.round(y);\n  this.paper.text(\"\" + Math.round(y), {\n    x: 10,\n    y: y,\n    \"text-anchor\": \"start\",\n    \"font-size\": \"18px\",\n    fill: fill,\n    stroke: fill\n  });\n  var x1 = 50;\n  var x2 = width;\n  var pathString = sprintf(\"M %f %f L %f %f L %f %f L %f %f z\", x1, y - dy, x1 + x2, y - dy, x2, y + dy, x1, y + dy);\n  this.paper.pathToBack({\n    path: pathString,\n    stroke: \"none\",\n    fill: fill,\n    'class': this.addClasses('staff')\n  });\n\n  for (var i = 1; i < width / 100; i++) {\n    pathString = sprintf(\"M %f %f L %f %f L %f %f L %f %f z\", i * 100 - dy, y - 5, i * 100 - dy, y + 5, i * 100 + dy, y - 5, i * 100 + dy, y + 5);\n    this.paper.pathToBack({\n      path: pathString,\n      stroke: \"none\",\n      fill: fill,\n      'class': this.addClasses('staff')\n    });\n  }\n\n  if (comment) this.paper.text(comment, {\n    x: width + 70,\n    y: y,\n    \"text-anchor\": \"start\",\n    \"font-size\": \"18px\",\n    fill: fill,\n    stroke: fill\n  });\n};\n\nRenderer.prototype.printShadedBox = function (x, y, width, height, color, opacity, comment) {\n  var box = this.paper.rect({\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    fill: color,\n    stroke: color,\n    \"fill-opacity\": opacity,\n    \"stroke-opacity\": opacity\n  });\n  if (comment) this.paper.text(comment, {\n    x: 0,\n    y: y + 7,\n    \"text-anchor\": \"start\",\n    \"font-size\": \"14px\",\n    fill: \"rgba(0,0,255,.4)\",\n    stroke: \"rgba(0,0,255,.4)\"\n  });\n  return box;\n};\n\nRenderer.prototype.printVerticalLine = function (x, y1, y2) {\n  var dy = 0.35;\n  var fill = \"#00aaaa\";\n  var pathString = sprintf(\"M %f %f L %f %f L %f %f L %f %f z\", x - dy, y1, x - dy, y2, x + dy, y1, x + dy, y2);\n  this.paper.pathToBack({\n    path: pathString,\n    stroke: \"none\",\n    fill: fill,\n    'class': this.addClasses('staff')\n  });\n  pathString = sprintf(\"M %f %f L %f %f L %f %f L %f %f z\", x - 20, y1, x - 20, y1 + 3, x, y1, x, y1 + 3);\n  this.paper.pathToBack({\n    path: pathString,\n    stroke: \"none\",\n    fill: fill,\n    'class': this.addClasses('staff')\n  });\n  pathString = sprintf(\"M %f %f L %f %f L %f %f L %f %f z\", x + 20, y2, x + 20, y2 + 3, x, y2, x, y2 + 3);\n  this.paper.pathToBack({\n    path: pathString,\n    stroke: \"none\",\n    fill: fill,\n    'class': this.addClasses('staff')\n  });\n};\n/**\n * @private\n */\n\n\nRenderer.prototype.addToRegression = function (el) {\n  var box = el.getBBox(); //var str = \"(\"+box.x+\",\"+box.y+\")[\"+box.width+\",\"+box.height+\"] \"\n\n  var str = el.type + ' ' + box.toString() + ' ';\n  var attrs = [];\n\n  for (var key in el.attrs) {\n    if (el.attrs.hasOwnProperty(key)) {\n      if (key === 'class') str = el.attrs[key] + \" \" + str;else attrs.push(key + \": \" + el.attrs[key]);\n    }\n  }\n\n  attrs.sort();\n  str += \"{ \" + attrs.join(\" \") + \" }\";\n  this.regressionLines.push(str);\n};\n\nmodule.exports = Renderer;","//    abc_voice_element.js: Definition of the VoiceElement class.\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com) and Paul Rosen\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n/*global module */\nvar svgNS = \"http://www.w3.org/2000/svg\";\n\nfunction Svg(wrapper) {\n  this.svg = createSvg();\n  wrapper.appendChild(this.svg);\n}\n\nSvg.prototype.clear = function () {\n  if (this.svg) {\n    var wrapper = this.svg.parentNode;\n    this.svg = createSvg();\n\n    if (wrapper) {\n      // TODO-PER: If the wrapper is not present, then the underlying div was pulled out from under this instance. It's possible that is still useful (for creating the music off page?)\n      wrapper.innerHTML = \"\";\n      wrapper.appendChild(this.svg);\n    }\n  }\n};\n\nSvg.prototype.setTitle = function (title) {\n  var titleEl = document.createElement(\"title\");\n  var titleNode = document.createTextNode(title);\n  titleEl.appendChild(titleNode);\n  this.svg.insertBefore(titleEl, this.svg.firstChild);\n};\n\nSvg.prototype.setResponsiveWidth = function (w, h) {\n  // this technique is from: http://thenewcode.com/744/Make-SVG-Responsive, thx to https://github.com/iantresman\n  this.svg.setAttribute(\"viewBox\", \"0 0 \" + w + \" \" + h);\n  this.svg.setAttribute(\"preserveAspectRatio\", \"xMinYMin meet\");\n  this.svg.removeAttribute(\"height\");\n  this.svg.removeAttribute(\"width\");\n  this.svg.style['display'] = \"inline-block\";\n  this.svg.style['position'] = \"absolute\";\n  this.svg.style['top'] = \"0\";\n  this.svg.style['left'] = \"0\";\n\n  if (this.svg.parentNode) {\n    var cls = this.svg.parentNode.getAttribute(\"class\");\n    if (!cls) this.svg.parentNode.setAttribute(\"class\", \"abcjs-container\");else if (cls.indexOf(\"abcjs-container\") < 0) this.svg.parentNode.setAttribute(\"class\", cls + \" abcjs-container\");\n    this.svg.parentNode.style['display'] = \"inline-block\";\n    this.svg.parentNode.style['position'] = \"relative\";\n    this.svg.parentNode.style['width'] = \"100%\"; // PER: I changed the padding from 100% to this through trial and error.\n    // The example was using a square image, but this music might be either wider or taller.\n\n    var padding = h / w * 100;\n    this.svg.parentNode.style['padding-bottom'] = padding + \"%\";\n    this.svg.parentNode.style['vertical-align'] = \"middle\";\n    this.svg.parentNode.style['overflow'] = \"hidden\";\n  }\n};\n\nSvg.prototype.setSize = function (w, h) {\n  this.svg.setAttribute('width', w);\n  this.svg.setAttribute('height', h); // TODO-PER: Is this hack still needed?\n  // Correct for IE problem in calculating height\n  // var isIE = /*@cc_on!@*/false;//IE detector\n  // if (isIE) {\n  // \tthis.paper.canvas.parentNode.style.width = w + \"px\";\n  // \tthis.paper.canvas.parentNode.style.height = \"\" + h + \"px\";\n  // } else\n  // \tthis.paper.canvas.parentNode.setAttribute(\"style\", \"width:\" + w + \"px\");\n};\n\nSvg.prototype.setScale = function (scale) {\n  if (scale !== 1) {\n    this.svg.style.transform = \"scale(\" + scale + \",\" + scale + \")\";\n    this.svg.style['-ms-transform'] = \"scale(\" + scale + \",\" + scale + \")\";\n    this.svg.style['-webkit-transform'] = \"scale(\" + scale + \",\" + scale + \")\";\n    this.svg.style['transform-origin'] = \"0 0\";\n    this.svg.style['-ms-transform-origin-x'] = \"0\";\n    this.svg.style['-ms-transform-origin-y'] = \"0\";\n    this.svg.style['-webkit-transform-origin-x'] = \"0\";\n    this.svg.style['-webkit-transform-origin-y'] = \"0\";\n  } else {\n    this.svg.style.transform = \"\";\n    this.svg.style['-ms-transform'] = \"\";\n    this.svg.style['-webkit-transform'] = \"\";\n  }\n};\n\nSvg.prototype.setParentStyles = function (attr) {\n  // This is needed to get the size right when there is scaling involved.\n  for (var key in attr) {\n    if (attr.hasOwnProperty(key)) {\n      if (this.svg.parentNode) this.svg.parentNode.style[key] = attr[key];\n    }\n  }\n};\n\nSvg.prototype.rect = function (attr) {\n  var el = document.createElementNS(svgNS, \"rect\");\n\n  for (var key in attr) {\n    if (attr.hasOwnProperty(key)) {\n      var tmp = \"\" + attr[key];\n      if (tmp.indexOf(\"NaN\") >= 0) debugger;\n      el.setAttributeNS(null, key, attr[key]);\n    }\n  }\n\n  this.append(el);\n  return el;\n};\n\nSvg.prototype.text = function (text, attr) {\n  var el = document.createElementNS(svgNS, 'text');\n\n  for (var key in attr) {\n    if (attr.hasOwnProperty(key)) {\n      el.setAttribute(key, attr[key]);\n    }\n  }\n\n  var lines = (\"\" + text).split(\"\\n\");\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = document.createElementNS(svgNS, 'tspan');\n    line.textContent = lines[i];\n    line.setAttribute(\"x\", attr.x ? attr.x : 0);\n    if (i !== 0) line.setAttribute(\"dy\", \"1.2em\");\n    el.appendChild(line);\n  }\n\n  this.append(el);\n  return el;\n};\n\nSvg.prototype.getTextSize = function (text, attr) {\n  var el = this.text(text, attr);\n  var size = el.getBBox();\n  if (isNaN(size.height)) // This can happen if the element isn't visible.\n    size = {\n      width: 0,\n      height: 0\n    };else size = {\n    width: size.width,\n    height: size.height\n  }; // TODO-PER: can the size be gotten without inserting and deleting the element?\n\n  if (this.currentGroup) this.currentGroup.removeChild(el);else this.svg.removeChild(el);\n  return size;\n};\n\nSvg.prototype.openGroup = function (options) {\n  options = options ? options : {};\n  var el = document.createElementNS(svgNS, \"g\");\n  if (options.prepend) this.svg.insertBefore(el, this.svg.firstChild);else this.svg.appendChild(el);\n  this.currentGroup = el;\n  return el;\n};\n\nSvg.prototype.closeGroup = function () {\n  var g = this.currentGroup;\n  this.currentGroup = null;\n  return g;\n};\n\nSvg.prototype.path = function (attr) {\n  var el = document.createElementNS(svgNS, \"path\");\n\n  for (var key in attr) {\n    if (attr.hasOwnProperty(key)) {\n      if (key === 'path') el.setAttributeNS(null, 'd', attr.path);else el.setAttributeNS(null, key, attr[key]);\n    }\n  }\n\n  this.append(el);\n  return el;\n};\n\nSvg.prototype.pathToBack = function (attr) {\n  var el = document.createElementNS(svgNS, \"path\");\n\n  for (var key in attr) {\n    if (attr.hasOwnProperty(key)) {\n      if (key === 'path') el.setAttributeNS(null, 'd', attr.path);else el.setAttributeNS(null, key, attr[key]);\n    }\n  }\n\n  this.prepend(el);\n  return el;\n};\n\nSvg.prototype.append = function (el) {\n  if (this.currentGroup) this.currentGroup.appendChild(el);else this.svg.appendChild(el);\n};\n\nSvg.prototype.prepend = function (el) {\n  // The entire group is prepended, so don't prepend the individual elements.\n  if (this.currentGroup) this.currentGroup.appendChild(el);else this.svg.insertBefore(el, this.svg.firstChild);\n};\n\nSvg.prototype.setAttributeOnElement = function (el, attr) {\n  for (var key in attr) {\n    if (attr.hasOwnProperty(key)) {\n      el.setAttributeNS(null, key, attr[key]);\n    }\n  }\n};\n\nfunction createSvg() {\n  var svg = document.createElementNS(svgNS, \"svg\");\n  svg.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n  svg.setAttribute('role', 'img'); // for accessibility\n\n  return svg;\n}\n\nmodule.exports = Svg;","// abc_editor.js\n// window.ABCJS.Editor is the interface class for the area that contains the ABC text. It is responsible for\n// holding the text of the tune and calling the parser and the rendering engines.\n//\n// EditArea is an example of using a textarea as the control that is shown to the user. As long as\n// the same interface is used, window.ABCJS.Editor can use a different type of object.\n//\n// EditArea:\n// - constructor(textareaid)\n//\t\tThis contains the id of a textarea control that will be used.\n// - addSelectionListener(listener)\n//\t\tA callback class that contains the entry point fireSelectionChanged()\n// - addChangeListener(listener)\n//\t\tA callback class that contains the entry point fireChanged()\n// - getSelection()\n//\t\treturns the object { start: , end: } with the current selection in characters\n// - setSelection(start, end)\n//\t\tstart and end are the character positions that should be selected.\n// - getString()\n//\t\treturns the ABC text that is currently displayed.\n// - setString(str)\n//\t\tsets the ABC text that is currently displayed, and resets the initialText variable\n// - getElem()\n//\t\treturns the textarea element\n// - string initialText\n//\t\tContains the starting text. This can be compared against the current text to see if anything changed.\n//\n\n/*global document, window, clearTimeout, setTimeout */\nvar TuneBook = require('../api/abc_tunebook').TuneBook;\n\nvar parseCommon = require('../parse/abc_common');\n\nvar Parse = require('../parse/abc_parse');\n\nvar TextPrinter = require('../transform/abc2abc_write');\n\nvar EngraverController = require('../write/abc_engraver_controller'); // Polyfill for CustomEvent for old IE versions\n\n\nif (typeof window.CustomEvent !== \"function\") {\n  var CustomEvent = function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n    var evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent;\n}\n\nvar EditArea = function EditArea(textareaid) {\n  this.textarea = document.getElementById(textareaid);\n  this.initialText = this.textarea.value;\n  this.isDragging = false;\n};\n\nEditArea.prototype.addSelectionListener = function (listener) {\n  this.textarea.onmousemove = function (ev) {\n    if (this.isDragging) listener.fireSelectionChanged();\n  };\n};\n\nEditArea.prototype.addChangeListener = function (listener) {\n  this.changelistener = listener;\n\n  this.textarea.onkeyup = function () {\n    listener.fireChanged();\n  };\n\n  this.textarea.onmousedown = function () {\n    this.isDragging = true;\n    listener.fireSelectionChanged();\n  };\n\n  this.textarea.onmouseup = function () {\n    this.isDragging = false;\n    listener.fireChanged();\n  };\n\n  this.textarea.onchange = function () {\n    listener.fireChanged();\n  };\n}; //TODO won't work under IE?\n\n\nEditArea.prototype.getSelection = function () {\n  return {\n    start: this.textarea.selectionStart,\n    end: this.textarea.selectionEnd\n  };\n};\n\nEditArea.prototype.setSelection = function (start, end) {\n  if (this.textarea.setSelectionRange) this.textarea.setSelectionRange(start, end);else if (this.textarea.createTextRange) {\n    // For IE8\n    var e = this.textarea.createTextRange();\n    e.collapse(true);\n    e.moveEnd('character', end);\n    e.moveStart('character', start);\n    e.select();\n  }\n  this.textarea.focus();\n};\n\nEditArea.prototype.getString = function () {\n  return this.textarea.value;\n};\n\nEditArea.prototype.setString = function (str) {\n  this.textarea.value = str;\n  this.initialText = this.getString();\n\n  if (this.changelistener) {\n    this.changelistener.fireChanged();\n  }\n};\n\nEditArea.prototype.getElem = function () {\n  return this.textarea;\n}; //\n// window.ABCJS.Editor:\n//\n// constructor(editarea, params)\n//\t\tif editarea is a string, then it is an HTML id of a textarea control.\n//\t\tOtherwise, it should be an instantiation of an object that expresses the EditArea interface.\n//\n//\t\tparams is a hash of:\n//\t\tcanvas_id: or paper_id: HTML id to draw in. If not present, then the drawing happens just below the editor.\n//\t\tgenerate_midi: if present, then midi is generated.\n//\t\tmidi_id: if present, the HTML id to place the midi control. Otherwise it is placed in the same div as the paper.\n//\t\tmidi_download_id: if present, the HTML id to place the midi download link. Otherwise it is placed in the same div as the paper.\n//\t\tgenerate_warnings: if present, then parser warnings are displayed on the page.\n//\t\twarnings_id: if present, the HTML id to place the warnings. Otherwise they are placed in the same div as the paper.\n//\t\tonchange: if present, the callback function to call whenever there has been a change.\n//\t\tgui: if present, the paper can send changes back to the editor (presumably because the user changed something directly.)\n//\t\tparser_options: options to send to the parser engine.\n//\t\tmidi_options: options to send to the midi engine.\n//\t\trender_options: options to send to the render engine.\n//\t\tindicate_changed: the dirty flag is set if this is true.\n//\n// - setReadOnly(bool)\n//\t\tadds or removes the class abc_textarea_readonly, and adds or removes the attribute readonly=yes\n// - setDirtyStyle(bool)\n//\t\tadds or removes the class abc_textarea_dirty\n// - renderTune(abc, parserparams, div)\n//\t\tImmediately renders the tune. (Useful for creating the SVG output behind the scenes, if div is hidden)\n//\t\tstring abc: the ABC text\n//\t\tparserparams: params to send to the parser\n//\t\tdiv: the HTML id to render to.\n// - modelChanged()\n//\t\tCalled when the model has been changed to trigger re-rendering\n// - parseABC()\n//\t\tCalled internally by fireChanged()\n//\t\treturns true if there has been a change since last call.\n// - updateSelection()\n//\t\tCalled when the user has changed the selection. This calls the engraver_controller to show the selection.\n// - fireSelectionChanged()\n//\t\tCalled by the textarea object when the user has changed the selection.\n// - paramChanged(engraverparams)\n//\t\tCalled to signal that the engraver params have changed, so re-rendering should occur.\n// - fireChanged()\n//\t\tCalled by the textarea object when the user has changed something.\n// - setNotDirty()\n//\t\tCalled by the client app to reset the dirty flag\n// - isDirty()\n//\t\tReturns true or false, whether the textarea contains the same text that it started with.\n// - highlight(abcelem)\n//\t\tCalled by the engraver_controller to highlight an area.\n// - pause(bool)\n//\t\tStops the automatic rendering when the user is typing.\n//\n\n\nvar Editor = function Editor(editarea, params) {\n  // Copy all the options that will be passed through\n  this.abcjsParams = {};\n  var key;\n\n  if (params.abcjsParams) {\n    for (key in params.abcjsParams) {\n      if (params.abcjsParams.hasOwnProperty(key)) {\n        this.abcjsParams[key] = params.abcjsParams[key];\n      }\n    }\n  }\n\n  if (params.midi_options) {\n    for (key in params.midi_options) {\n      if (params.midi_options.hasOwnProperty(key)) {\n        this.abcjsParams[key] = params.midi_options[key];\n      }\n    }\n  }\n\n  if (params.parser_options) {\n    for (key in params.parser_options) {\n      if (params.parser_options.hasOwnProperty(key)) {\n        this.abcjsParams[key] = params.parser_options[key];\n      }\n    }\n  }\n\n  if (params.render_options) {\n    for (key in params.render_options) {\n      if (params.render_options.hasOwnProperty(key)) {\n        this.abcjsParams[key] = params.render_options[key];\n      }\n    }\n  }\n\n  if (params.indicate_changed) this.indicate_changed = true;\n\n  if (typeof editarea === \"string\") {\n    this.editarea = new EditArea(editarea);\n  } else {\n    this.editarea = editarea;\n  }\n\n  this.editarea.addSelectionListener(this);\n  this.editarea.addChangeListener(this);\n\n  if (params.canvas_id) {\n    this.div = document.getElementById(params.canvas_id);\n  } else if (params.paper_id) {\n    this.div = document.getElementById(params.paper_id);\n  } else {\n    this.div = document.createElement(\"DIV\");\n    this.editarea.getElem().parentNode.insertBefore(this.div, this.editarea.getElem());\n  } // If the user wants midi, then store the elements that it will be written to. The element could either be passed in as an id,\n  // an element, or nothing. If nothing is passed in, then just put the midi on top of the generated music.\n\n\n  if (params.generate_midi) {\n    this.generate_midi = params.generate_midi;\n\n    if (this.abcjsParams.generateDownload) {\n      if (typeof params.midi_download_id === 'string') this.downloadMidi = document.getElementById(params.midi_download_id);else if (params.midi_download_id) // assume, if the var is not a string it is an element. If not, it will crash soon enough.\n        this.downloadMidi = params.midi_download_id;\n    }\n\n    if (this.abcjsParams.generateInline !== false) {\n      // The default for this is true, so undefined is also true.\n      if (typeof params.midi_id === 'string') this.inlineMidi = document.getElementById(params.midi_id);else if (params.midi_id) // assume, if the var is not a string it is an element. If not, it will crash soon enough.\n        this.inlineMidi = params.midi_id;\n    }\n  }\n\n  if (params.generate_warnings || params.warnings_id) {\n    if (params.warnings_id) {\n      this.warningsdiv = document.getElementById(params.warnings_id);\n    } else {\n      this.warningsdiv = this.div;\n    }\n  }\n\n  this.onchangeCallback = params.onchange;\n\n  if (params.gui) {\n    this.target = document.getElementById(editarea);\n    this.abcjsParams.editable = true;\n  }\n\n  this.oldt = \"\";\n  this.bReentry = false;\n  this.parseABC();\n  this.modelChanged();\n\n  this.addClassName = function (element, className) {\n    var hasClassName = function hasClassName(element, className) {\n      var elementClassName = element.className;\n      return elementClassName.length > 0 && (elementClassName === className || new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(elementClassName));\n    };\n\n    if (!hasClassName(element, className)) element.className += (element.className ? ' ' : '') + className;\n    return element;\n  };\n\n  this.removeClassName = function (element, className) {\n    element.className = parseCommon.strip(element.className.replace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), ' '));\n    return element;\n  };\n\n  this.setReadOnly = function (readOnly) {\n    var readonlyClass = 'abc_textarea_readonly';\n    var el = this.editarea.getElem();\n\n    if (readOnly) {\n      el.setAttribute('readonly', 'yes');\n      this.addClassName(el, readonlyClass);\n    } else {\n      el.removeAttribute('readonly');\n      this.removeClassName(el, readonlyClass);\n    }\n  };\n};\n\nEditor.prototype.renderTune = function (abc, params, div) {\n  var tunebook = new TuneBook(abc);\n  var abcParser = Parse();\n  abcParser.parse(tunebook.tunes[0].abc, params); //TODO handle multiple tunes\n\n  var tune = abcParser.getTune();\n  var engraver_controller = new EngraverController(div, this.abcjsParams);\n  engraver_controller.engraveABC(tune);\n};\n\nEditor.prototype.redrawMidi = function () {\n  if (this.generate_midi && !this.midiPause) {\n    var event = new window.CustomEvent(\"generateMidi\", {\n      detail: {\n        tunes: this.tunes,\n        abcjsParams: this.abcjsParams,\n        downloadMidiEl: this.downloadMidi,\n        inlineMidiEl: this.inlineMidi,\n        engravingEl: this.div\n      }\n    });\n    window.dispatchEvent(event);\n  }\n};\n\nEditor.prototype.modelChanged = function () {\n  if (this.tunes === undefined) {\n    if (this.downloadMidi !== undefined) this.downloadMidi.innerHTML = \"\";\n    if (this.inlineMidi !== undefined) this.inlineMidi.innerHTML = \"\";\n    this.div.innerHTML = \"\";\n    return;\n  }\n\n  if (this.bReentry) return; // TODO is this likely? maybe, if we rewrite abc immediately w/ abc2abc\n\n  this.bReentry = true;\n  this.timerId = null;\n  this.div.innerHTML = \"\";\n  this.engraver_controller = new EngraverController(this.div, this.abcjsParams);\n  this.engraver_controller.engraveABC(this.tunes);\n  this.tunes[0].engraver = this.engraver_controller; // TODO-PER: We actually want an output object for each tune, not the entire controller. When refactoring, don't save data in the controller.\n\n  this.redrawMidi();\n\n  if (this.warningsdiv) {\n    this.warningsdiv.innerHTML = this.warnings ? this.warnings.join(\"<br />\") : \"No errors\";\n  }\n\n  if (this.target) {\n    var textprinter = new TextPrinter(this.target, true);\n    textprinter.printABC(this.tunes[0]); //TODO handle multiple tunes\n  }\n\n  this.engraver_controller.addSelectListener(this.highlight.bind(this));\n  this.updateSelection();\n  this.bReentry = false;\n}; // Call this to reparse in response to the printing parameters changing\n\n\nEditor.prototype.paramChanged = function (engraverParams) {\n  if (engraverParams) {\n    for (var key in engraverParams) {\n      if (engraverParams.hasOwnProperty(key)) {\n        this.abcjsParams[key] = engraverParams[key];\n      }\n    }\n  }\n\n  this.oldt = \"\";\n  this.fireChanged();\n}; // return true if the model has changed\n\n\nEditor.prototype.parseABC = function () {\n  var t = this.editarea.getString();\n\n  if (t === this.oldt) {\n    this.updateSelection();\n    return false;\n  }\n\n  this.oldt = t;\n\n  if (t === \"\") {\n    this.tunes = undefined;\n    this.warnings = \"\";\n    return true;\n  }\n\n  var tunebook = new TuneBook(t);\n  this.tunes = [];\n  this.startPos = [];\n  this.warnings = [];\n\n  for (var i = 0; i < tunebook.tunes.length; i++) {\n    var abcParser = new Parse();\n    abcParser.parse(tunebook.tunes[i].abc, this.abcjsParams);\n    this.tunes[i] = abcParser.getTune();\n    this.startPos[i] = tunebook.tunes[i].startPos;\n    var warnings = abcParser.getWarnings() || [];\n\n    for (var j = 0; j < warnings.length; j++) {\n      this.warnings.push(warnings[j]);\n    }\n  }\n\n  return true;\n};\n\nEditor.prototype.updateSelection = function () {\n  var selection = this.editarea.getSelection();\n\n  try {\n    this.engraver_controller.rangeHighlight(selection.start, selection.end);\n  } catch (e) {} // maybe printer isn't defined yet?\n\n};\n\nEditor.prototype.fireSelectionChanged = function () {\n  this.updateSelection();\n};\n\nEditor.prototype.setDirtyStyle = function (isDirty) {\n  if (this.indicate_changed === undefined) return;\n\n  var addClassName = function addClassName(element, className) {\n    var hasClassName = function hasClassName(element, className) {\n      var elementClassName = element.className;\n      return elementClassName.length > 0 && (elementClassName === className || new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(elementClassName));\n    };\n\n    if (!hasClassName(element, className)) element.className += (element.className ? ' ' : '') + className;\n    return element;\n  };\n\n  var removeClassName = function removeClassName(element, className) {\n    element.className = parseCommon.strip(element.className.replace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), ' '));\n    return element;\n  };\n\n  var readonlyClass = 'abc_textarea_dirty';\n  var el = this.editarea.getElem();\n\n  if (isDirty) {\n    addClassName(el, readonlyClass);\n  } else {\n    removeClassName(el, readonlyClass);\n  }\n}; // call when abc text is changed and needs re-parsing\n\n\nEditor.prototype.fireChanged = function () {\n  if (this.bIsPaused) return;\n\n  if (this.parseABC()) {\n    var self = this;\n    if (this.timerId) // If the user is still typing, cancel the update\n      clearTimeout(this.timerId);\n    this.timerId = setTimeout(function () {\n      self.modelChanged();\n    }, 300); // Is this a good compromise between responsiveness and not redrawing too much?\n\n    var isDirty = this.isDirty();\n\n    if (this.wasDirty !== isDirty) {\n      this.wasDirty = isDirty;\n      this.setDirtyStyle(isDirty);\n    }\n\n    if (this.onchangeCallback) this.onchangeCallback(this);\n  }\n};\n\nEditor.prototype.setNotDirty = function () {\n  this.editarea.initialText = this.editarea.getString();\n  this.wasDirty = false;\n  this.setDirtyStyle(false);\n};\n\nEditor.prototype.isDirty = function () {\n  if (this.indicate_changed === undefined) return false;\n  return this.editarea.initialText !== this.editarea.getString();\n};\n\nEditor.prototype.highlight = function (abcelem, tuneNumber, classes) {\n  // TODO-PER: The marker appears to get off by one for each tune parsed. I'm not sure why, but adding the tuneNumber in corrects it for the time being.\n  var offset = tuneNumber !== undefined ? this.startPos[tuneNumber] + tuneNumber : 0;\n  this.editarea.setSelection(offset + abcelem.startChar, offset + abcelem.endChar);\n};\n\nEditor.prototype.pause = function (shouldPause) {\n  this.bIsPaused = shouldPause;\n  if (!shouldPause) this.fireChanged();\n};\n\nEditor.prototype.pauseMidi = function (shouldPause) {\n  this.midiPause = shouldPause;\n  if (!shouldPause) this.redrawMidi();\n};\n\nmodule.exports = Editor;","//    abc2abc_write.js: Prints an abc file in text format parsed by abc_parse.js\n//    Copyright (C) 2010-2018 Gregory Dyke (gregdyke at gmail dot com)\n//\n//    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n//    documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n//    the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n//    to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n//\n//    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n//\n//    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\n//    BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n//    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//    DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar TextPrinter = function TextPrinter(elem, reposition) {\n  this.elem = elem;\n  this.text = \"\";\n  this.l = 1 / 8;\n  this.reposition = reposition || false;\n};\n\nTextPrinter.prototype.printString = function (str, elem) {\n  if (this.reposition && elem) elem.startChar = this.text.length;\n  this.text += str;\n  if (this.reposition && elem) elem.endChar = this.text.length;\n};\n\nTextPrinter.prototype.printNewLine = function () {\n  this.text += \"\\n\";\n};\n\nTextPrinter.prototype.printSpace = function () {\n  if (this.text[this.text.length - 1].match(/\\s/)) return; //TODO match whitespace\n\n  this.text += \" \";\n};\n\nTextPrinter.prototype.printABC = function (abctune) {\n  this.text = \"\";\n  this.abctune = abctune; //TODO formatting\n\n  this.printHeader();\n  this.printBody();\n  this.elem.value = this.text;\n};\n\nTextPrinter.prototype.printHeader = function () {\n  // much of this info is duplicated in metaTextHEaders in abc_parse_header.js\n  this.printHeaderLine(\"x\", \"X\", \"1\");\n  this.printHeaderLine(\"title\", \"T\");\n  this.printHeaderLine(\"composer\", \"C\");\n  this.printHeaderLine(\"history\", \"H\");\n  this.printHeaderLine(\"author\", \"A\");\n  this.printHeaderLine(\"book\", \"B\");\n  this.printHeaderLine(\"discography\", \"D\");\n  this.printHeaderLine(\"url\", \"F\");\n  this.printHeaderLine(\"group\", \"G\");\n  this.printHeaderLine(\"instruction\", \"I\");\n  this.printHeaderLine(\"notes\", \"N\");\n  this.printHeaderLine(\"origin\", \"O\");\n  this.printHeaderLine(\"rhythm\", \"R\");\n  this.printHeaderLine(\"source\", \"S\");\n  this.printHeaderLine(\"unalignedwords\", \"W\");\n  this.printHeaderLine(\"transcription\", \"Z\"); //TODO part order\n  //TODO Q tempo\n  //TODO textBlock\n\n  this.printHeaderLine(\"NULL\", \"L\", \"1/8\"); //TODO L\n\n  this.printHeaderLine(\"NULL\", \"M\", this.getMeterString(this.abctune.lines[0].staff[0].meter));\n  this.printHeaderLine(\"NULL\", \"K\", this.getKeyString(this.abctune.lines[0].staff[0].key)); //TODO K\n};\n\nTextPrinter.prototype.getKeyString = function (key) {\n  return key.root + key.acc + key.mode;\n};\n\nTextPrinter.prototype.getMeterString = function (meter) {\n  switch (meter.type) {\n    case \"cut_time\":\n      return \"C|\";\n\n    case \"common_time\":\n      return \"C\";\n\n    case \"specified\":\n      if (meter.value[0].den) return meter.value[0].num + \"/\" + meter.value[0].den;else return meter.value[0].num;\n  }\n\n  return \"\";\n};\n\nTextPrinter.prototype.printHeaderLine = function (fieldname, abcfield, defaut) {\n  var val = this.abctune.metaText[fieldname] || defaut;\n\n  if (val !== undefined) {\n    var valarray = val.split(\"\\n\");\n\n    for (var i = 0; i < valarray.length; i++) {\n      this.printString(abcfield + \": \" + valarray[i]);\n      this.printNewLine();\n    }\n  }\n};\n\nTextPrinter.prototype.getElem = function () {\n  if (this.abcline.length <= this.pos) return null;\n  return this.abcline[this.pos];\n};\n\nTextPrinter.prototype.getNextElem = function () {\n  if (this.abcline.length <= this.pos + 1) return null;\n  return this.abcline[this.pos + 1];\n};\n\nTextPrinter.prototype.printBody = function () {\n  for (var line = 0; line < this.abctune.lines.length; line++) {\n    var abcline = this.abctune.lines[line];\n\n    if (abcline.staff) {\n      this.printABCLine(abcline.staff);\n    } else if (abcline.subtitle && line !== 0) {//TODO\n    } else if (abcline.text) {//TODO\n    }\n  }\n};\n\nTextPrinter.prototype.printABCLine = function (staffs) {\n  for (this.s = 0; this.s < staffs.length; this.s++) {\n    this.printABCStaff(staffs[this.s]);\n  }\n};\n\nTextPrinter.prototype.printABCStaff = function (abcstaff) {\n  // TODO if (abcstaff.bracket) header += \"bracket \"+abcstaff.bracket+\" \";\n  // TODO if (abcstaff.brace) header += \"brace \"+abcstaff.brace+\" \";\n  for (this.v = 0; this.v < abcstaff.voices.length; this.v++) {\n    // TODO stuff about voices\n    // TODO this is where key sig is this.voice.addChild(this.printClef(abcstaff.clef));\n    // this.voice.addChild(this.printKeySignature(abcstaff.key));\n    // if (abcstaff.meter) this.voice.addChild(this.printTimeSignature(abcstaff.meter));\n    this.printABCVoice(abcstaff.voices[this.v]);\n  }\n};\n\nTextPrinter.prototype.printABCVoice = function (abcline) {\n  this.abcline = abcline;\n\n  for (this.pos = 0; this.pos < this.abcline.length; this.pos++) {\n    this.printABCElement();\n  }\n\n  this.printNewLine();\n};\n\nTextPrinter.prototype.printABCElement = function () {\n  var elem = this.getElem();\n\n  switch (elem.el_type) {\n    case \"note\":\n      this.printBeam();\n      break;\n\n    case \"bar\":\n      this.printBarLine(elem);\n      break;\n\n    case \"meter\":\n      //TODO this.printTimeSignature(elem);\n      break;\n\n    case \"clef\":\n      //TODO this.printClef(elem);\n      break;\n\n    case \"key\": //TODO this.printKeySignature(elem);\n\n    case \"stem\":\n      //TODO do nothing?\n      break;\n\n    case \"part\":\n      //TODO print part\n      break;\n\n    default: //TODO show we're missing something\n\n  }\n};\n\nTextPrinter.prototype.printBeam = function () {\n  this.printSpace();\n\n  if (this.getElem().startBeam && !this.getElem().endBeam) {\n    while (this.getElem()) {\n      this.printNote(this.getElem());\n\n      if (this.getElem().endBeam) {\n        break;\n      }\n\n      this.pos++;\n    }\n  } else {\n    this.printNote(this.getElem());\n  }\n\n  this.printSpace();\n};\n\nTextPrinter.prototype.printNote = function (elem) {\n  var str = \"\";\n  var i;\n\n  if (elem.chord !== undefined) {\n    for (i = 0; i < elem.chord.length; i++) {\n      str += '\"' + elem.chord[i].name + '\"';\n    }\n  } //TODO unify map between names and symbols (to be used with abcparse?)\n\n\n  var decorations = {\n    \"staccato\": \".\",\n    \"upbow\": \"u\",\n    \"downbow\": \"v\",\n    \"roll\": \"~\",\n    \"fermata\": \"H\",\n    \"slide\": \"J\",\n    \"accent\": \"L\",\n    \"mordent\": \"M\",\n    \"pralltriller\": \"P\",\n    \"trill\": \"T\",\n    \"lower\": \".\"\n  };\n\n  if (elem.decoration !== undefined) {\n    for (i = 0; i < elem.decoration.length; i++) {\n      var dec = elem.decoration[i];\n\n      if (decorations[dec]) {\n        str += decorations[dec];\n      } else {\n        str += \"!\"; //TODO hardcoded\n\n        str += dec;\n        str += \"!\"; //TODO hardcoded\n      }\n    }\n  }\n\n  if (elem.gracenotes !== undefined) {\n    str += \"{\";\n\n    for (i = 0; i < elem.gracenotes.length; i++) {\n      str += this.getNoteString(elem.gracenotes[i]);\n    }\n\n    str += \"}\";\n  }\n\n  var ignoreslur = false;\n\n  if (elem.pitches.length === 1 && elem.pitches[0].startSlur) {\n    ignoreslur = true;\n    str += this.multiplyString(\"(\", elem.pitches[0].startSlur.length);\n  }\n\n  if (elem.startSlur) {\n    str += this.multiplyString(\"(\", elem.startSlur.length);\n  }\n\n  if (elem.pitches.length === 1 && elem.pitches[0].endSlur || elem.endSlur) {\n    ignoreslur = true;\n  }\n\n  if (elem.startTriplet) {\n    str += \"(3\";\n  }\n\n  if (elem.pitches) {\n    if (elem.pitches.length > 1) str += \"[\";\n\n    for (i = 0; i < elem.pitches.length; i++) {\n      elem.pitches[i].duration = elem.duration;\n      str += this.getNoteString(elem.pitches[i], ignoreslur);\n    }\n\n    if (elem.pitches.length > 1) str += \"]\";\n  }\n\n  if (elem.pitches.length === 1 && elem.pitches[0].endSlur) {\n    str += this.multiplyString(\")\", elem.pitches[0].endSlur.length);\n  }\n\n  if (elem.endSlur) {\n    str += this.multiplyString(\")\", elem.endSlur.length);\n  }\n\n  this.printString(str, elem);\n}; // accidentals, ties and sometimes slurs, sometimes duration\n\n\nTextPrinter.prototype.getNoteString = function (pitchelem, ignoreslur) {\n  var str = \"\";\n\n  if (!ignoreslur && pitchelem.startSlur) {\n    str += \"(\";\n  }\n\n  var symb = \"\";\n\n  switch (pitchelem.accidental) {\n    case \"quartersharp\":\n      symb = \"^/\";\n      break;\n\n    case \"dblsharp\":\n      symb = \"^^\";\n      break;\n\n    case \"sharp\":\n      symb = \"^\";\n      break;\n\n    case \"quarterflat\":\n      symb = \"_/\";\n      break;\n\n    case \"flat\":\n      symb = \"_\";\n      break;\n\n    case \"dblflat\":\n      symb = \"__\";\n      break;\n\n    case \"natural\":\n      symb = \"=\";\n  }\n\n  str += symb;\n  var pitches = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n  var pitchstr = pitches[this.extractNote(pitchelem.pitch)];\n  var octave = this.extractOctave(pitchelem.pitch);\n\n  if (octave > 0) {\n    pitchstr = pitchstr.toLowerCase();\n    octave--;\n\n    while (octave > 0) {\n      pitchstr += \"'\";\n      octave--;\n    }\n  } else {\n    while (octave < 0) {\n      pitchstr += \",\";\n      octave++;\n    }\n  }\n\n  str += pitchstr;\n\n  if (pitchelem.duration) {\n    str += this.getDurationString(pitchelem.duration);\n  }\n\n  if (!ignoreslur && pitchelem.endSlur) {\n    str += \")\";\n  }\n\n  if (pitchelem.startTie) {\n    str += \"-\";\n  }\n\n  return str;\n};\n\nTextPrinter.prototype.getDurationString = function (duration) {\n  //TODO detect crooked rhythm\n  if (duration / this.l > 1) {\n    return duration / this.l;\n  }\n\n  var ret = \"\";\n\n  if (this.l / duration > 1) {\n    ret += \"/\";\n\n    if (this.l / duration > 2) {\n      ret += this.l / duration;\n    }\n  }\n\n  return ret;\n};\n\nTextPrinter.prototype.extractNote = function (pitch) {\n  var pitch2 = pitch % 7;\n  if (pitch2 < 0) pitch2 += 7;\n  return pitch2;\n};\n\nTextPrinter.prototype.extractOctave = function (pitch) {\n  return Math.floor(pitch / 7);\n};\n\nTextPrinter.prototype.printBarLine = function (elem) {\n  var barstr = \"\";\n\n  switch (elem.type) {\n    case \"bar_thin\":\n      barstr += \"|\";\n      break;\n\n    case \"bar_thin_thick\":\n      barstr += \"|]\";\n      break;\n\n    case \"bar_thin_thin\":\n      barstr += \"||\";\n      break;\n\n    case \"bar_thick_thin\":\n      barstr += \"[|\";\n      break;\n\n    case \"bar_dbl_repeat\":\n      barstr += \":||:\";\n      break;\n\n    case \"bar_left_repeat\":\n      barstr += \"|:\";\n      break;\n\n    case \"bar_right_repeat\":\n      barstr += \":|\";\n      break;\n\n    case \"bar_invisible\":\n      barstr += \"\";\n      break;\n  }\n\n  this.printString(barstr, elem);\n};\n\nTextPrinter.prototype.multiplyString = function (s, n) {\n  var ret = \"\";\n\n  for (; n > 0; n--) {\n    ret += s;\n  }\n\n  return ret;\n};\n\nmodule.exports = TextPrinter;","'use strict';\n\nvar _classCallCheck = require(\"/home/travis/build/music-markdown/music-markdown/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/travis/build/music-markdown/music-markdown/node_modules/@babel/runtime/helpers/createClass\");\n\nvar parseVerse = require('../parsers/verse.js')['parseVerse'];\n\nvar randomColor = require('randomcolor');\n\nvar VoiceColors =\n/*#__PURE__*/\nfunction () {\n  function VoiceColors() {\n    _classCallCheck(this, VoiceColors);\n\n    this.colors = ['blue', 'black', 'red', 'green', 'purple', 'teal'];\n    this.voiceColorMap = {};\n  }\n\n  _createClass(VoiceColors, [{\n    key: \"getUnusedColor\",\n    value: function getUnusedColor() {\n      return this.colors.length > 0 ? this.colors.shift() : randomColor({\n        seed: 42\n      });\n    }\n  }, {\n    key: \"getVoiceColor\",\n    value: function getVoiceColor(voice) {\n      if (!(voice in this.voiceColorMap)) {\n        this.voiceColorMap[voice] = this.getUnusedColor();\n      }\n\n      return this.voiceColorMap[voice];\n    }\n  }]);\n\n  return VoiceColors;\n}();\n\nfunction createHtmlChordChart(verse, opts) {\n  var chordChartHtml = document.createElement('div');\n  chordChartHtml.className = 'chart';\n  var voiceColors = new VoiceColors();\n  verse.forEach(function (phrase) {\n    var verseDiv = document.createElement('div');\n    verseDiv.className = 'verse';\n    createListOfWrappedVoices(phrase, opts ? opts.transpose : undefined, voiceColors).forEach(function (event) {\n      verseDiv.appendChild(event);\n    });\n    chordChartHtml.appendChild(verseDiv);\n  });\n  return chordChartHtml;\n}\n\nfunction createListOfWrappedVoices(phrase, transposeAmount, voiceColors) {\n  // Assumes voices are sorted by index and grouped by voice.\n  var voiceElements = new Map();\n  phrase.forEach(function (events, voiceName) {\n    if (!voiceElements.has(voiceName)) {\n      voiceElements.set(voiceName, new Map([['index', 0], ['parentElement', document.createElement('div')]]));\n    }\n\n    var color = voiceColors.getVoiceColor(voiceName);\n    events.forEach(function (event) {\n      if (transposeAmount && voiceName.startsWith('c') && typeof event.content.transpose === 'function') {\n        event.content = event.content.transpose(transposeAmount);\n      }\n\n      var voice = voiceElements.get(voiceName);\n      voice.get('parentElement').className = 'voice';\n      voice.get('parentElement').style.color = color;\n      appendVoiceContentDiv(voice.get('parentElement'), event.content, event.index - voice.get('index'), voiceName);\n      voice.set('index', event.index + event.content.toString().length);\n    });\n  });\n  var voiceElementsList = []; // voiceElements map is ordered by key insertion, which is provided by parsed+ordered json.\n  // This means converting the map to a flat list will be the order we want to append all voice divs.\n\n  voiceElements.forEach(function (voice) {\n    voiceElementsList.push(voice.get('parentElement'));\n  });\n  return voiceElementsList;\n}\n\nfunction appendVoiceContentDiv(parentVoice, text, whitespace, className) {\n  if (whitespace) {\n    var whitespaceDiv = document.createElement('div');\n    whitespaceDiv.innerHTML = ' '.repeat(whitespace);\n    parentVoice.appendChild(whitespaceDiv);\n  }\n\n  var textDiv = document.createElement('div');\n  textDiv.innerHTML = text.toString();\n  textDiv.className = className;\n  parentVoice.appendChild(textDiv);\n}\n\nfunction renderChords(str, opts) {\n  var verse = parseVerse(str);\n  var htmlChart = createHtmlChordChart(verse, opts);\n  return htmlChart.outerHTML;\n}\n\nmodule.exports = {\n  'lang': 'chords',\n  'callback': renderChords\n};","'use strict';\n\nvar Chord = require('./chord');\n\nvar voicePattern = /^([a-zA-Z-_]+)([0-9]*):\\s(.*)/;\n\nfunction tokenize(instrument, data) {\n  var re = /[^\\s]+/g;\n  var events = [];\n  var match;\n\n  while (match = re.exec(data)) {\n    events.push({\n      index: match.index,\n      content: instrument == 'c' ? Chord.parse(match[0]) : match[0]\n    });\n  }\n\n  return events;\n}\n\nfunction parseVoice(voice) {\n  if (!voice) {\n    return;\n  }\n\n  var match = voice.match(voicePattern);\n\n  if (!match) {\n    throw new Error(\"Voice doesn't match \".concat(voicePattern, \": \").concat(voice));\n  }\n\n  var instrument = match[1];\n  var data = match[3];\n  return tokenize(instrument, data);\n}\n\nfunction parsePhrase(phrase) {\n  return phrase.split(/\\n/).reduce(function (phrase, voice) {\n    if (voice) {\n      var match = voice.match(voicePattern);\n      var voiceName = \"\".concat(match[1]).concat(match[2] || '1');\n      phrase.set(voiceName, parseVoice(voice));\n    }\n\n    return phrase;\n  }, new Map());\n}\n\nfunction parseVerse(verse) {\n  return verse.split(/[\\n]{2,}/).map(function (phrase) {\n    return parsePhrase(phrase);\n  });\n}\n\nmodule.exports = {\n  parseVerse: parseVerse\n};","'use strict';\n\nvar _classCallCheck = require(\"/home/travis/build/music-markdown/music-markdown/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/travis/build/music-markdown/music-markdown/node_modules/@babel/runtime/helpers/createClass\");\n\nvar chordPattern = new RegExp(['^', '([CDEFGAB](?:#|b)?)', '(', 'maj|maj7|maj9|maj11|maj13|maj9#11|maj13#11|add9|maj7b5|maj7#5|', 'm|m7|m9|m11|m13|m6|', 'madd9|m\\\\(add9\\\\)|m6add9|m6\\\\(add9\\\\)|m7add9|m7\\\\(add9\\\\)|', 'mmaj7|m\\\\(maj7\\\\)|mmaj9|m\\\\(maj9\\\\)|m7b5|m7#5|', '5|', '6|6/9|', '7|7sus4|7b5|7#5|7b9|7#9|7b5b9|7b5#9|7#5b9|7+5|7+9|7-5|7-9|', '7aug|7aug5|7dim5|7dim9|7sus2|7sus4|', '9|9#5|9aug5|9dim5|9sus|9sus4|', '11|11b9|11dim9|', '13|13#11|13b9|13dim9|13dim11|', 'add2|add4|add9|', 'aug|', 'dim|dim7|dim11|dim13|', 'sus|sus4|sus2|sus2sus4|', '-5', ')?', '(?:/([CDEFGAB](?:#|b)?))?', '$'].join(''));\nvar chordSequenceSharp = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\nvar chordSequenceFlat = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\n\nfunction _transpose(note, amount) {\n  if (note == '') {\n    return '';\n  }\n\n  var chordSequence = chordSequenceSharp;\n  var index = chordSequence.indexOf(note);\n\n  if (index == -1) {\n    chordSequence = chordSequenceFlat;\n    index = chordSequence.indexOf(note);\n  }\n\n  var nextIndex = mod(index + amount, chordSequence.length);\n  return chordSequence[nextIndex];\n}\n\nfunction mod(n, m) {\n  return (n % m + m) % m;\n}\n\nvar Chord =\n/*#__PURE__*/\nfunction () {\n  function Chord(root, quality, bass) {\n    _classCallCheck(this, Chord);\n\n    this.root = root;\n    this.quality = quality || '';\n    this.bass = bass || '';\n  }\n\n  _createClass(Chord, [{\n    key: \"toString\",\n    value: function toString() {\n      var result = this.root + this.quality;\n\n      if (this.bass) {\n        result += '/' + this.bass;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"transpose\",\n    value: function transpose(amount) {\n      return new Chord(_transpose(this.root, amount), this.quality, _transpose(this.bass, amount));\n    }\n  }], [{\n    key: \"isChord\",\n    value: function isChord(str) {\n      return str.match(chordPattern) ? true : false;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(str) {\n      var tokens = str.match(chordPattern);\n      return new Chord(tokens[1], tokens[2], tokens[3]);\n    }\n  }]);\n\n  return Chord;\n}();\n\nmodule.exports = Chord;","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n;\n\n(function (root, factory) {\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory(); // Support NodeJS & Component, which allow module.exports to be a function\n\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    } // Support CommonJS 1.1.1 spec\n\n\n    exports.randomColor = randomColor; // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory); // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n})(this, function () {\n  // Seed to get repeatable colors\n  var seed = null; // Shared color dictionary\n\n  var colorDictionary = {}; // Populate the color dictionary\n\n  loadColorBounds(); // check if a range is taken\n\n  var colorRanges = [];\n\n  var randomColor = function randomColor(options) {\n    options = options || {}; // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed; // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed); // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string'); // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H, S, B; // Check if we need to generate multiple colors\n\n    if (options.count !== null && options.count !== undefined) {\n      var totalColors = options.count,\n          colors = []; // Value false at index i means the range i is not taken yet.\n\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false);\n      }\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n      return colors;\n    } // First we pick a hue (H)\n\n\n    H = pickHue(options); // Then use H to determine saturation (S)\n\n    S = pickSaturation(H, options); // Then use S and H to determine brightness (B).\n\n    B = pickBrightness(H, S, options); // Then we return the HSB color in the desired format\n\n    return setFormat([H, S, B], options);\n  };\n\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue);\n      var hue = randomWithin(hueRange); //Each of colorRanges.length ranges has a length equal approximatelly one step\n\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length;\n      var j = parseInt((hue - hueRange[0]) / step); //Check if the range j is taken\n\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length;\n      } else {\n        colorRanges[j] = true;\n      }\n\n      var min = (hueRange[0] + j * step) % 359,\n          max = (hueRange[0] + (j + 1) * step) % 359;\n      hueRange = [min, max];\n      hue = randomWithin(hueRange);\n\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    } else {\n      var hueRange = getHueRange(options.hue);\n      hue = randomWithin(hueRange); // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    }\n  }\n\n  function pickSaturation(hue, options) {\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0, 100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n    }\n\n    return randomWithin([sMin, sMax]);\n  }\n\n  function pickBrightness(H, S, options) {\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin) / 2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat(hsv, options) {\n    switch (options.format) {\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl(' + hsl[0] + ', ' + hsl[1] + '%, ' + hsl[2] + '%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla(' + hslColor[0] + ', ' + hslColor[1] + '%, ' + hslColor[2] + '%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n  }\n\n  function getMinimumBrightness(H, S) {\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n      var s2 = lowerBounds[i + 1][0],\n          v2 = lowerBounds[i + 1][1];\n\n      if (S >= s1 && S <= s2) {\n        var m = (v2 - v1) / (s2 - s1),\n            b = v1 - m * s1;\n        return m * S + b;\n      }\n    }\n\n    return 0;\n  }\n\n  function getHueRange(colorInput) {\n    if (typeof parseInt(colorInput) === 'number') {\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n    }\n\n    if (typeof colorInput === 'string') {\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n\n        if (color.hueRange) {\n          return color.hueRange;\n        }\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [hue, hue];\n      }\n    }\n\n    return [0, 360];\n  }\n\n  function getSaturationRange(hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo(hue) {\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue -= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n      var color = colorDictionary[colorName];\n\n      if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {\n        return colorDictionary[colorName];\n      }\n    }\n\n    return 'Color not found';\n  }\n\n  function randomWithin(range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895;\n      var r = Math.random();\n      r += golden_ratio;\n      r %= 1;\n      return Math.floor(range[0] + r * (range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex(hsv) {\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n      var hex = c.toString(16);\n      return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n    return hex;\n  }\n\n  function defineColor(name, hueRange, lowerBounds) {\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n  }\n\n  function loadColorBounds() {\n    defineColor('monochrome', null, [[0, 0], [100, 0]]);\n    defineColor('red', [-26, 18], [[20, 100], [30, 92], [40, 89], [50, 85], [60, 78], [70, 70], [80, 60], [90, 55], [100, 50]]);\n    defineColor('orange', [19, 46], [[20, 100], [30, 93], [40, 88], [50, 86], [60, 85], [70, 70], [100, 70]]);\n    defineColor('yellow', [47, 62], [[25, 100], [40, 94], [50, 89], [60, 86], [70, 84], [80, 82], [90, 80], [100, 75]]);\n    defineColor('green', [63, 178], [[30, 100], [40, 90], [50, 85], [60, 81], [70, 74], [80, 64], [90, 50], [100, 40]]);\n    defineColor('blue', [179, 257], [[20, 100], [30, 86], [40, 80], [50, 74], [60, 60], [70, 52], [80, 44], [90, 39], [100, 35]]);\n    defineColor('purple', [258, 282], [[20, 100], [30, 87], [40, 79], [50, 70], [60, 65], [70, 59], [80, 52], [90, 45], [100, 42]]);\n    defineColor('pink', [283, 334], [[20, 100], [30, 90], [40, 86], [60, 84], [80, 80], [90, 75], [100, 73]]);\n  }\n\n  function HSVtoRGB(hsv) {\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n\n    if (h === 0) {\n      h = 1;\n    }\n\n    if (h === 360) {\n      h = 359;\n    } // Rebase the h,s,v values\n\n\n    h = h / 360;\n    var s = hsv[1] / 100,\n        v = hsv[2] / 100;\n    var h_i = Math.floor(h * 6),\n        f = h * 6 - h_i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        r = 256,\n        g = 256,\n        b = 256;\n\n    switch (h_i) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n\n    var result = [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n    return result;\n  }\n\n  function HexToHSB(hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n        green = parseInt(hex.substr(2, 2), 16) / 255,\n        blue = parseInt(hex.substr(4, 2), 16) / 255;\n    var cMax = Math.max(red, green, blue),\n        delta = cMax - Math.min(red, green, blue),\n        saturation = cMax ? delta / cMax : 0;\n\n    switch (cMax) {\n      case red:\n        return [60 * ((green - blue) / delta % 6) || 0, saturation, cMax];\n\n      case green:\n        return [60 * ((blue - red) / delta + 2) || 0, saturation, cMax];\n\n      case blue:\n        return [60 * ((red - green) / delta + 4) || 0, saturation, cMax];\n    }\n  }\n\n  function HSVtoHSL(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        k = (2 - s) * v;\n    return [h, Math.round(s * v / (k < 1 ? k : 2 - k) * 10000) / 100, k / 2 * 100];\n  }\n\n  function stringToInteger(string) {\n    var total = 0;\n\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i);\n    }\n\n    return total;\n  } // get The range of given hue when options.count!=0\n\n\n  function getRealHueRange(colorHue) {\n    if (!isNaN(colorHue)) {\n      var number = parseInt(colorHue);\n\n      if (number < 360 && number > 0) {\n        return getColorInfo(colorHue).hueRange;\n      }\n    } else if (typeof colorHue === 'string') {\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n\n        if (color.hueRange) {\n          return color.hueRange;\n        }\n      } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0];\n        return getColorInfo(hue).hueRange;\n      }\n    }\n\n    return [0, 360];\n  }\n\n  return randomColor;\n});","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","'use strict';\n\nmodule.exports = function (str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {\n    return \"%\".concat(x.charCodeAt(0).toString(16).toUpperCase());\n  });\n};","'use strict';\n\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n  try {\n    // Try to decode the entire string first\n    return decodeURIComponent(components.join(''));\n  } catch (err) {// Do nothing\n  }\n\n  if (components.length === 1) {\n    return components;\n  }\n\n  split = split || 1; // Split the array in 2 parts\n\n  var left = components.slice(0, split);\n  var right = components.slice(split);\n  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input);\n  } catch (err) {\n    var tokens = input.match(singleMatcher);\n\n    for (var i = 1; i < tokens.length; i++) {\n      input = decodeComponents(tokens, i).join('');\n      tokens = input.match(singleMatcher);\n    }\n\n    return input;\n  }\n}\n\nfunction customDecodeURIComponent(input) {\n  // Keep track of all the replacements and prefill the map with the `BOM`\n  var replaceMap = {\n    '%FE%FF': \"\\uFFFD\\uFFFD\",\n    '%FF%FE': \"\\uFFFD\\uFFFD\"\n  };\n  var match = multiMatcher.exec(input);\n\n  while (match) {\n    try {\n      // Decode as big chunks as possible\n      replaceMap[match[0]] = decodeURIComponent(match[0]);\n    } catch (err) {\n      var result = decode(match[0]);\n\n      if (result !== match[0]) {\n        replaceMap[match[0]] = result;\n      }\n    }\n\n    match = multiMatcher.exec(input);\n  } // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\n\n  replaceMap['%C2'] = \"\\uFFFD\";\n  var entries = Object.keys(replaceMap);\n\n  for (var i = 0; i < entries.length; i++) {\n    // Replace all decoded components\n    var key = entries[i];\n    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n  }\n\n  return input;\n}\n\nmodule.exports = function (encodedURI) {\n  if (typeof encodedURI !== 'string') {\n    throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n  }\n\n  try {\n    encodedURI = encodedURI.replace(/\\+/g, ' '); // Try the built in decoder first\n\n    return decodeURIComponent(encodedURI);\n  } catch (err) {\n    // Fallback to a more advanced decoder\n    return customDecodeURIComponent(encodedURI);\n  }\n};","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.createBootstrapComponent = createBootstrapComponent;\nexports.default = exports.ThemeConsumer = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _forwardRef = _interopRequireDefault(require(\"react-context-toolbox/forwardRef\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _React$createContext = _react.default.createContext(new Map()),\n    Provider = _React$createContext.Provider,\n    Consumer = _React$createContext.Consumer;\n\nexports.ThemeConsumer = Consumer;\n\nvar ThemeProvider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(ThemeProvider, _React$Component);\n\n  function ThemeProvider() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.prefixes = new Map();\n    Object.keys(_this.props.prefixes).forEach(function (key) {\n      _this.prefixes.set(key, _this.props.prefixes[key]);\n    });\n    return _this;\n  }\n\n  var _proto = ThemeProvider.prototype;\n\n  _proto.render = function render() {\n    return _react.default.createElement(Provider, {\n      value: this.prefixes\n    }, this.props.children);\n  };\n\n  return ThemeProvider;\n}(_react.default.Component);\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  var isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  var _opts = opts,\n      prefix = _opts.prefix,\n      _opts$forwardRefAs = _opts.forwardRefAs,\n      forwardRefAs = _opts$forwardRefAs === void 0 ? isClassy ? 'ref' : 'innerRef' : _opts$forwardRefAs;\n  return (0, _forwardRef.default)(function (_ref, ref) {\n    var props = (0, _extends2.default)({}, _ref);\n    props[forwardRefAs] = ref;\n    return _react.default.createElement(Consumer, null, function (prefixes) {\n      return _react.default.createElement(Component, (0, _extends2.default)({}, props, {\n        bsPrefix: props.bsPrefix || prefixes.get(prefix) || prefix\n      }));\n    });\n  }, {\n    displayName: \"Bootstrap(\" + (Component.displayName || Component.name) + \")\"\n  });\n}\n\nvar _default = ThemeProvider;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = forwardRef;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction forwardRef(renderFn, _ref) {\n  var displayName = _ref.displayName,\n      propTypes = _ref.propTypes,\n      defaultProps = _ref.defaultProps,\n      _ref$allowFallback = _ref.allowFallback,\n      allowFallback = _ref$allowFallback === void 0 ? false : _ref$allowFallback;\n\n  var render = function render(props, ref) {\n    return renderFn(props, ref);\n  };\n\n  Object.assign(render, {\n    displayName: displayName\n  });\n  if (_react.default.forwardRef || !allowFallback) return Object.assign(_react.default.forwardRef(render), {\n    propTypes: propTypes,\n    defaultProps: defaultProps\n  });\n  return Object.assign(function (props) {\n    return render(props, null);\n  }, {\n    displayName: displayName,\n    propTypes: propTypes,\n    defaultProps: defaultProps\n  });\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n\n  ;\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n\n  ; // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nmodule.exports = ReactPropTypesSecret;","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n    var history = this.context.router.history;\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, {\n      onClick: this.handleClick,\n      href: href,\n      ref: innerRef\n    }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default Link;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n/**\n * The public API for putting history on context.\n */\n\nvar Router = function (_React$Component) {\n  _inherits(Router, _React$Component);\n\n  function Router() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Router);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      match: _this.computeMatch(_this.props.history.location.pathname)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Router.prototype.getChildContext = function getChildContext() {\n    return {\n      router: _extends({}, this.context.router, {\n        history: this.props.history,\n        route: {\n          location: this.props.history.location,\n          match: this.state.match\n        }\n      })\n    };\n  };\n\n  Router.prototype.computeMatch = function computeMatch(pathname) {\n    return {\n      path: \"/\",\n      url: \"/\",\n      params: {},\n      isExact: pathname === \"/\"\n    };\n  };\n\n  Router.prototype.componentWillMount = function componentWillMount() {\n    var _this2 = this;\n\n    var _props = this.props,\n        children = _props.children,\n        history = _props.history;\n    invariant(children == null || React.Children.count(children) === 1, \"A <Router> may have only one child element\"); // Do this here so we can setState when a <Redirect> changes the\n    // location in componentWillMount. This happens e.g. when doing\n    // server rendering using a <StaticRouter>.\n\n    this.unlisten = history.listen(function () {\n      _this2.setState({\n        match: _this2.computeMatch(history.location.pathname)\n      });\n    });\n  };\n\n  Router.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    warning(this.props.history === nextProps.history, \"You cannot change <Router history>\");\n  };\n\n  Router.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unlisten();\n  };\n\n  Router.prototype.render = function render() {\n    var children = this.props.children;\n    return children ? React.Children.only(children) : null;\n  };\n\n  return Router;\n}(React.Component);\n\nRouter.propTypes = {\n  history: PropTypes.object.isRequired,\n  children: PropTypes.node\n};\nRouter.contextTypes = {\n  router: PropTypes.object\n};\nRouter.childContextTypes = {\n  router: PropTypes.object.isRequired\n};\nexport default Router;","// Written in this round about way for babel-transform-imports\nimport Router from \"react-router/es/Router\";\nexport default Router;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport warning from \"warning\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createHashHistory as createHistory } from \"history\";\nimport Router from \"./Router\";\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\nvar HashRouter = function (_React$Component) {\n  _inherits(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, HashRouter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.history = createHistory(_this.props), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  HashRouter.prototype.componentWillMount = function componentWillMount() {\n    warning(!this.props.history, \"<HashRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { HashRouter as Router }`.\");\n  };\n\n  HashRouter.prototype.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return HashRouter;\n}(React.Component);\n\nHashRouter.propTypes = {\n  basename: PropTypes.string,\n  getUserConfirmation: PropTypes.func,\n  hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"]),\n  children: PropTypes.node\n};\nexport default HashRouter;","import pathToRegexp from \"path-to-regexp\";\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compilePath = function compilePath(pattern, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n  if (cache[pattern]) return cache[pattern];\n  var keys = [];\n  var re = pathToRegexp(pattern, keys, options);\n  var compiledPattern = {\n    re: re,\n    keys: keys\n  };\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledPattern;\n    cacheCount++;\n  }\n\n  return compiledPattern;\n};\n/**\n * Public API for matching a URL pathname to a path pattern.\n */\n\n\nvar matchPath = function matchPath(pathname) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var parent = arguments[2];\n  if (typeof options === \"string\") options = {\n    path: options\n  };\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === undefined ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === undefined ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === undefined ? false : _options$sensitive;\n  if (path == null) return parent;\n\n  var _compilePath = compilePath(path, {\n    end: exact,\n    strict: strict,\n    sensitive: sensitive\n  }),\n      re = _compilePath.re,\n      keys = _compilePath.keys;\n\n  var match = re.exec(pathname);\n  if (!match) return null;\n  var url = match[0],\n      values = match.slice(1);\n  var isExact = pathname === url;\n  if (exact && !isExact) return null;\n  return {\n    path: path,\n    // the path pattern used to match\n    url: path === \"/\" && url === \"\" ? \"/\" : url,\n    // the matched portion of the URL\n    isExact: isExact,\n    // whether or not we matched exactly\n    params: keys.reduce(function (memo, key, index) {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n};\n\nexport default matchPath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport matchPath from \"./matchPath\";\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n};\n/**\n * The public API for matching a single path and rendering.\n */\n\n\nvar Route = function (_React$Component) {\n  _inherits(Route, _React$Component);\n\n  function Route() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Route);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      match: _this.computeMatch(_this.props, _this.context.router)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Route.prototype.getChildContext = function getChildContext() {\n    return {\n      router: _extends({}, this.context.router, {\n        route: {\n          location: this.props.location || this.context.router.route.location,\n          match: this.state.match\n        }\n      })\n    };\n  };\n\n  Route.prototype.computeMatch = function computeMatch(_ref, router) {\n    var computedMatch = _ref.computedMatch,\n        location = _ref.location,\n        path = _ref.path,\n        strict = _ref.strict,\n        exact = _ref.exact,\n        sensitive = _ref.sensitive;\n    if (computedMatch) return computedMatch; // <Switch> already computed the match for us\n\n    invariant(router, \"You should not use <Route> or withRouter() outside a <Router>\");\n    var route = router.route;\n    var pathname = (location || route.location).pathname;\n    return matchPath(pathname, {\n      path: path,\n      strict: strict,\n      exact: exact,\n      sensitive: sensitive\n    }, route.match);\n  };\n\n  Route.prototype.componentWillMount = function componentWillMount() {\n    warning(!(this.props.component && this.props.render), \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\");\n    warning(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), \"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored\");\n    warning(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), \"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored\");\n  };\n\n  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {\n    warning(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.');\n    warning(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.');\n    this.setState({\n      match: this.computeMatch(nextProps, nextContext.router)\n    });\n  };\n\n  Route.prototype.render = function render() {\n    var match = this.state.match;\n    var _props = this.props,\n        children = _props.children,\n        component = _props.component,\n        render = _props.render;\n    var _context$router = this.context.router,\n        history = _context$router.history,\n        route = _context$router.route,\n        staticContext = _context$router.staticContext;\n    var location = this.props.location || route.location;\n    var props = {\n      match: match,\n      location: location,\n      history: history,\n      staticContext: staticContext\n    };\n    if (component) return match ? React.createElement(component, props) : null;\n    if (render) return match ? render(props) : null;\n    if (typeof children === \"function\") return children(props);\n    if (children && !isEmptyChildren(children)) return React.Children.only(children);\n    return null;\n  };\n\n  return Route;\n}(React.Component);\n\nRoute.propTypes = {\n  computedMatch: PropTypes.object,\n  // private, from <Switch>\n  path: PropTypes.string,\n  exact: PropTypes.bool,\n  strict: PropTypes.bool,\n  sensitive: PropTypes.bool,\n  component: PropTypes.func,\n  render: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  location: PropTypes.object\n};\nRoute.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.object.isRequired,\n    route: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  })\n};\nRoute.childContextTypes = {\n  router: PropTypes.object.isRequired\n};\nexport default Route;","// Written in this round about way for babel-transform-imports\nimport Route from \"react-router/es/Route\";\nexport default Route;"],"sourceRoot":""}