{"version":3,"sources":["registerServiceWorker.js","redux/actions.js","components/MarkdownMusic.js","redux/actionTypes.js","lib/constants.js","lib/github.js","components/MarkdownMusicSourceFetcher.js","components/YouTube.js","components/MusicToolbar.js","components/MusicMarkdownNavbar.js","components/ResponsiveContainer.js","components/AddRepository.js","components/RepositoryEditor.js","components/NavigationListItem.js","components/RouterBreadcrumbs.js","components/RepositoryNavigation.js","components/BranchNavigation.js","components/Sandbox.js","redux/reducers/updateColumnCount.js","redux/reducers/updateFontSize.js","redux/reducers/transpose.js","redux/reducers/youTubeId.js","redux/reducers/index.js","redux/store.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","transposeAmount","columnCount","fontSize","MusicMarkdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","md","MarkdownIt","use","MarkdownItMusic","updateYouTubeId","meta","youTubeId","setTranspose","setColumnCount","setFontSize","setMaxWidth","width","html","render","source","_this$props","classes","theme","jss","create","nested","sheet","createStyleSheet","musicMarkdownTheme","& path","fill","palette","text","primary","& text","attach","react_default","a","createElement","dangerouslySetInnerHTML","__html","className","concat","markdownBody","React","Component","connect","youtubeId","type","payload","withStyles","backgroundColor","background","default","color","withTheme","REPOS_LOCAL_STORAGE_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","GITHUB_API_URL","getContents","_x","_x2","_x3","_getContents","apply","arguments","_callee","repo","path","branch","apiUrl","response","regenerator_default","wrap","_context","prev","next","undefined","length","getApiUrl","fetch","sent","abrupt","json","stop","getRepositories","repoListStr","localStorage","getItem","JSON","parse","verifyRepoExists","_callee2","_context2","status","Error","verifyRepoUnregistered","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","err","return","addRepository","_x5","_addRepository","_callee3","repos","_context3","push","setItem","stringify","getBranches","_x6","_getBranches","_callee4","_context4","url","URL","githubToken","searchParams","set","MarkdownMusicSourceFetcher","queryParams","queryString","search","parseInt","transpose","isLoaded","markdown","params","setState","atob","content","_this$state","MarkdownMusic","newTransposeAmount","newColumnCount","newFontSize","YouTubePlayer","_ref","title","src","allow","allowFullScreen","YouTubeToggle","visible","anchorEl","handleToggle","bind","assertThisInitialized","_this2","Fragment","IconButton_default","onClick","buttonRef","node","PlayArrow_default","Popper_default","id","open","placement","disablePortal","modifiers","flip","enabled","YouTube_YouTubePlayer","ConnectedYouTubeToggle","MusicToolbar","handleTransposeClick","handleColumnClick","handleFontClick","increase","decrease","event","target","textContent","updateColumnCount","updateFontSize","Toolbar_default","Grid_default","container","direction","justify","alignItems","spacing","name","clickCallback","map","key","item","Typography_default","variant","Button_default","isIncreaseTransposeAmount","isIncreaseColumnCount","isIncreaseFontSize","MusicMarkdownNavbar","handleDrawerClose","handleDrawerOpen","AppBar_default","position","reactRouterHoverInherit","component","Link","to","MusicMarkdownNavbar_RepositoriesNavDropdown","NavLink","grow","Drawer_default","anchor","Divider_default","components_MusicToolbar","RepositoriesNavDropdown","handleClick","handleClose","_this3","repoDropdownItems","repoList","forEach","MenuItem_default","Menu_default","onClose","flexGrow","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","children","StyledErrorSnackbar","dark","icon","iconVariant","opacity","marginRight","unit","message","display","margin","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent_default","aria-describedby","Error_default","classNames","action","aria-label","close","Close_default","AddRepository","owner","handleDialogOpen","handleDialogClose","handleShowError","handleClearError","reason","handleDialogAdd","handleAddRepository","t0","handleUpdateOwner","handleUpdateName","Add_default","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","TextField_default","autoFocus","label","onChange","e","fullWidth","DialogActions_default","ListRepositories","loadRepositories","handleDeleteRepository","filter","r","deleteRepository","componentDidMount","List_default","ListItem_default","button","ListItemAvatar_default","Avatar_default","Book_default","ListItemText_default","ListItemSecondaryAction_default","Delete_default","components_AddRepository","RepositoryEditor","RepositoryEditor_ListRepositories","NavigationListItem","itemName","paper","padding","pathname","breadcrumbItems","previousPath","ignoreIndex","currDir","i","directory","indexOf","Link_default","RouterLink","buildBreadcrumb","split","Paper_default","Breadcrumbs_default","RepositoryNavigation","contents","prevProps","prevRepo","prevPath","prevBranch","listGroupItems","_this2$props$match$pa","viewType","itemJsx","linkToContent","components_NavigationListItem","components_RouterBreadcrumbs","BranchNavigation","branches","MarkdownEditor","handleChange","editorStyles","minHeight","style","AllChords","Array","from","guitarChordLibrary","keys","chord","index","align","get","renderChordDiagram","Sandbox","Sandbox_MarkdownEditor","parseVoicing","Sandbox_AllChords","combineReducers","store","createStore","rootReducer","REPO_REGEX","createMuiTheme","typography","useNextVariants","&:hover","HomeRouter","es","HashRouter","Route","exact","Navigation","excat","App","MuiThemeProvider_default","CssBaseline_default","components_ResponsiveContainer","ReactDOM","src_components_App","document","getElementById","process","origin","addEventListener","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.21ad34eb.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  TRANSPOSE,\n  UPDATE_COLUMN_COUNT,\n  UPDATE_FONT_SIZE,\n  UPDATE_YOUTUBE_ID\n} from './actionTypes';\n\nlet transposeAmount = 0;\nlet columnCount = 1;\nlet fontSize = 13;\n\nexport const updateYouTubeId = (youtubeId) => ({\n  type: UPDATE_YOUTUBE_ID,\n  payload: {\n    youtubeId\n  }\n});\n\nexport const transpose = (isIncreaseTransposeAmount) => ({\n  type: TRANSPOSE,\n  payload: {\n    transposeAmount: isIncreaseTransposeAmount ? ++transposeAmount : --transposeAmount\n  }\n});\n\nexport const updateColumnCount = (isIncreaseColumnCount) => ({\n  type: UPDATE_COLUMN_COUNT,\n  payload: {\n    columnCount: isIncreaseColumnCount ? ++columnCount : --columnCount\n  }\n});\n\nexport const updateFontSize = (isIncreaseFontSize) => ({\n  type: UPDATE_FONT_SIZE,\n  payload: {\n    fontSize: isIncreaseFontSize ? ++fontSize : --fontSize\n  }\n});\n\nexport const setTranspose = (newTransposeAmount) => {\n  transposeAmount = newTransposeAmount;\n\n  return {\n    type: TRANSPOSE,\n    payload: {\n      transposeAmount\n    }\n  };\n};\n\nexport const setColumnCount = (newColumnCount) => {\n  columnCount = newColumnCount;\n\n  return {\n    type: UPDATE_COLUMN_COUNT,\n    payload: {\n      columnCount\n    }\n  };\n};\n\nexport const setFontSize = (newFontSize) => {\n  fontSize = newFontSize;\n\n  return {\n    type: UPDATE_FONT_SIZE,\n    payload: {\n      fontSize\n    }\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { create } from 'jss';\nimport nested from 'jss-nested';\n\nimport { updateYouTubeId } from '../redux/actions';\n\nconst styles = (theme) => ({\n  markdownBody: {\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary\n  },\n});\n\nclass MusicMarkdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.md = new MarkdownIt()\n      .use(MarkdownItMusic);\n  }\n\n  componentDidMount() {\n    this.props.updateYouTubeId(this.md.meta.youTubeId);\n  }\n\n  render() {\n    this.md.setTranspose(this.props.transposeAmount);\n    this.md.setColumnCount(this.props.columnCount);\n    this.md.setFontSize(this.props.fontSize);\n    this.md.setMaxWidth(this.props.width);\n    const html = this.md.render(this.props.source);\n\n    const { classes, theme } = this.props;\n\n    // Create a style sheet for <path> and <text> tags, so that abcjs color will render in dark/light theme.\n    const jss = create();\n    jss.use(nested());\n    const sheet = jss.createStyleSheet({\n      musicMarkdownTheme: {\n        '& path': { fill: theme.palette.text.primary },\n        '& text': { fill: theme.palette.text.primary }\n      }\n    });\n    sheet.attach();\n\n    return (\n      <div dangerouslySetInnerHTML={{ __html: html }}\n        className={`${classes.markdownBody} ${sheet.classes.musicMarkdownTheme}`}/>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { transposeAmount, columnCount, fontSize } = state;\n  return { transposeAmount, columnCount, fontSize };\n}\n\nexport default connect(mapStateToProps, { updateYouTubeId })(withStyles(styles, { withTheme: true })(MusicMarkdown));\n","export const TRANSPOSE = 'TRANSPOSE';\nexport const UPDATE_COLUMN_COUNT = 'UPDATE_COLUMN_COUNT';\nexport const UPDATE_FONT_SIZE = 'UPDATE_FONT_SIZE';\nexport const UPDATE_YOUTUBE_ID = 'UPDATE_YOUTUBE_ID';\n","/* Local Storage */\n\n/** Key namespace for music-markdown when storing app specific values in localStorage */\nexport const MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE = 'music-markdown';\n/** Key for markdown-music repositories specific localStorage values*/\nexport const REPOS_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:repositories`;\nexport const GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:github_token`;\nexport const GITHUB_API_URL = 'https://api.github.com';\n","import { REPOS_LOCAL_STORAGE_KEY, GITHUB_TOKEN_LOCAL_STORAGE_KEY, GITHUB_API_URL } from './constants';\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} repo The owner and repo in the form :owner/:repo\n * @param {string} path The directory or file to retrieve\n * @param {string} branch The branch to retrive contents from\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(repo, path, branch) {\n  if (path === undefined || path.length === 0) {\n    path = '';\n  }\n  const apiUrl = getApiUrl(`/repos/${repo}/contents/${path}`, branch);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\nasync function verifyRepoExists(repo) {\n  const apiUrl = getApiUrl(`/repos/${repo}`);\n  const response = await fetch(apiUrl);\n  if (response.status === 404) {\n    throw new Error(`\"${repo}\" not found on GitHub.`);\n  }\n}\n\nfunction verifyRepoUnregistered(repo) {\n  for (const r of getRepositories()) {\n    if (r === repo) {\n      throw new Error(`\"${repo}\" is already registered.`);\n    }\n  }\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function addRepository(repo) {\n  verifyRepoUnregistered(repo);\n  await verifyRepoExists(repo);\n  const repos = getRepositories();\n  repos.push(repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Returns a promise of a list of branches for the given repository.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function getBranches(repo) {\n  const apiUrl = getApiUrl(`/repos/${repo}/branches`);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Removes a GitHub repo from localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport function deleteRepository(repo) {\n  const repos = getRepositories().filter((r) => r !== repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Composes the GitHub API url for the given url, attaching the user's GitHub\n * access token if it exists.\n * @param {string} url The path and search params\n * @param {string} branch The branch to get from\n * @return {URL} Composed GitHub API url with user's personal access token\n */\nexport function getApiUrl(url, branch) {\n  url = new URL(url, GITHUB_API_URL);\n\n  const githubToken = localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    url.searchParams.set('access_token', githubToken);\n  }\n\n  if (branch) {\n    url.searchParams.set('ref', branch);\n  }\n\n  return url;\n}\n","import React from 'react';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\n\nimport MarkdownMusic from './MarkdownMusic';\nimport { getContents } from '../lib/github';\nimport { setTranspose, setColumnCount, setFontSize } from '../redux/actions';\n\n// TODO: Decouple retrieval of source markdown and controlling arguments to MarkdownMusic.\n// https://github.com/music-markdown/music-markdown/pull/25#discussion_r259598474\nclass MarkdownMusicSourceFetcher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.props.setTranspose(parseInt(this.queryParams.transpose, 10) || 0);\n    this.props.setColumnCount(parseInt(this.queryParams.columnCount, 10) || 1);\n    this.props.setFontSize(parseInt(this.queryParams.fontSize, 10) || 13);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n    };\n  }\n\n  async componentDidMount() {\n    const { repo, path } = this.props.match.params;\n\n    const json = await getContents(repo, path);\n    this.setState({\n      isLoaded: true,\n      markdown: atob(json.content)\n    });\n  }\n\n  // TODO: Separate the UI component with the fetch logic, we don't necessarily need the fetcher\n  // to be a React Component\n  render() {\n    const { isLoaded, markdown } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"Markdown\">\n          <MarkdownMusic source={markdown} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(\n  undefined,\n  { setTranspose, setColumnCount, setFontSize }\n)(MarkdownMusicSourceFetcher);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Popper from '@material-ui/core/Popper';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nconst YouTubePlayer = ({ youTubeId }) => (\n  <div className=\"embed-responsive embed-responsive-16by9\">\n    <iframe\n      title={youTubeId}\n      className='embed-responsive-item'\n      src={`https://www.youtube.com/embed/${youTubeId}`}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen>\n    </iframe>\n  </div>\n);\n\nclass YouTubeToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.anchorEl = undefined;\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    this.setState((state) => ({\n      visible: !state.visible\n    }));\n  }\n\n  render() {\n    if (!this.props.youTubeId) {\n      return <div></div>;\n    }\n\n    return (\n      <>\n        <IconButton onClick={this.handleToggle} buttonRef={(node) => {\n          this.anchorEl = node;\n        }}>\n          <PlayArrowIcon />\n        </IconButton>\n        <Popper\n          id='youtube-player'\n          open={this.state.visible}\n          anchorEl={this.anchorEl}\n          placement='top'\n          disablePortal={false}\n          modifiers={{\n            flip: {\n              enabled: true,\n            }\n          }}\n        >\n          <YouTubePlayer youTubeId={this.props.youTubeId} />\n        </Popper>\n      </>\n    );\n  }\n}\n\nconst ConnectedYouTubeToggle = connect((state) => ({ youTubeId: state.youTubeId }))(YouTubeToggle);\n\nexport {\n  YouTubePlayer,\n  ConnectedYouTubeToggle as YouTubeToggle\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\n\nimport { transpose } from '../redux/actions';\nimport { updateColumnCount } from '../redux/actions';\nimport { updateFontSize } from '../redux/actions';\nimport { YouTubeToggle } from './YouTube';\n\nclass MusicToolbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTransposeClick = this.handleTransposeClick.bind(this);\n    this.handleColumnClick = this.handleColumnClick.bind(this);\n    this.handleFontClick = this.handleFontClick.bind(this);\n\n    this.increase = '+1';\n    this.decrease = '-1';\n  }\n\n  handleTransposeClick(event) {\n    // TODO: Update history with new transposeAmount\n    this.props.transpose(event.target.textContent === this.increase);\n  }\n\n  handleColumnClick(event) {\n    // TODO: Update history with new columnCount\n    this.props.updateColumnCount(event.target.textContent === this.increase);\n  }\n\n  handleFontClick(event) {\n    // TODO: Update history with new fontSize\n    this.props.updateFontSize(event.target.textContent === this.increase);\n  }\n\n  render() {\n    // TODO: Move dark theme to redux store.\n    return (\n      <Toolbar>\n        <Grid container direction='row' justify='center' alignItems='center' spacing={16}>\n          {[{ name: 'Transpose', clickCallback: this.handleTransposeClick },\n            { name: 'Column Count', clickCallback: this.handleColumnClick },\n            { name: 'Font Size', clickCallback: this.handleFontClick }].map(({ name, clickCallback }) => (\n            <React.Fragment key={name}>\n              <Grid item>\n                <Typography variant='h6'>{name}</Typography>\n              </Grid>\n              <Grid item>\n                <Button onClick={clickCallback}>\n                  <Typography>{this.decrease}</Typography>\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button onClick={clickCallback}>\n                  <Typography>{this.increase}</Typography>\n                </Button>\n              </Grid>\n            </React.Fragment>\n          ))}\n          <Grid item>\n            <YouTubeToggle youTubeId={this.props.youTubeId} />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({ youTubeId: state.youTubeId }),\n  { transpose, updateColumnCount, updateFontSize }\n)(MusicToolbar);\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { getRepositories } from '../lib/github';\nimport MusicToolbar from './MusicToolbar';\n\nconst styles = (theme) => ({\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n  grow: {\n    flexGrow: 1\n  }\n});\n\nclass MusicMarkdownNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n\n    this.handleDrawerClose = this.handleDrawerClose.bind(this);\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n  }\n\n  handleDrawerOpen() {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleDrawerClose() {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { open } = this.state;\n\n    return (\n      <>\n        <AppBar position={'sticky'} key='top-navbar'>\n          <Toolbar>\n            <Button className={classes.reactRouterHoverInherit} component={Link} to='/'>\n              <Typography variant='h6'>\n                Music Markdown\n              </Typography>\n            </Button>\n            <RepositoriesNavDropdown {...this.props} />\n            <Button className={classes.reactRouterHoverInherit} component={NavLink} to='/sandbox'>\n              Sandbox\n            </Button>\n            <div className={classes.grow} />\n            <Button onClick={this.handleDrawerOpen}>\n              Toolbar\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Drawer open={open} variant={'persistent'} anchor={'bottom'}>\n          <Divider />\n          <MusicToolbar></MusicToolbar>\n        </Drawer>\n      </>\n    );\n  }\n};\n\n/**\n * For all added repositories, add it to the dropdown list\n */\n// TODO: List first x items, then put in dropdown item to expand full list\nclass RepositoriesNavDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick() {\n    this.setState((state) => ({\n      open: !state.open\n    }));\n  }\n\n  handleClose() {\n    this.setState(() => ({\n      open: false\n    }));\n  }\n\n  render() {\n    const repoDropdownItems = [];\n    const repoList = getRepositories();\n\n    if (repoList.length > 0) {\n      const { reactRouterHoverInherit } = this.props.classes;\n\n      repoList.forEach((repo) => {\n        repoDropdownItems.push(\n          <MenuItem component={NavLink}\n            to={`/repos/${repo}`}\n            key={`dropdown-item-${repo}`}\n            onClick={this.handleClose}\n            className={reactRouterHoverInherit}>\n            {repo}\n          </MenuItem>);\n      });\n    }\n\n    const { open } = this.state;\n\n    return (\n      <>\n        <Button onClick={this.handleClick} buttonRef={(node) => {\n          this.anchorEl = node;\n        }}>\n          Music Repositories\n        </Button>\n\n        <Menu id='dropdown-menu' anchorEl={this.anchorEl} open={open} onClose={this.handleClose}>\n          {repoDropdownItems}\n          <Divider />\n          <MenuItem component={NavLink}\n            to='/repos'\n            key='edit-repos'\n            onClick={this.handleClose}\n            className={this.props.classes.reactRouterHoverInherit}>\n            Edit Repositories\n          </MenuItem>\n        </Menu>\n      </>\n    );\n  }\n};\n\nexport default withStyles(styles)(MusicMarkdownNavbar);\n","import Grid from '@material-ui/core/Grid';\nimport React from 'react';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Grid key={RESPONSIVE_CONTAINER_KEY}>\n      {props.children}\n    </Grid>\n  );\n}\n\nexport default ResponsiveContainer;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Add from '@material-ui/icons/Add';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = (theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n});\n\nconst ErrorSnackbar = ({ open, handleClose, classes, message }) => (\n  <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n    open={open} autoHideDuration={6000} onClose={handleClose}>\n    <SnackbarContent\n      className={classes.error}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <ErrorIcon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={handleClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n    />\n  </Snackbar>\n);\n\nconst StyledErrorSnackbar = withStyles(styles)(ErrorSnackbar);\n\n\nclass AddRepository extends React.Component {\n  state = {\n    open: false,\n    name: '',\n    owner: '',\n    message: null,\n    error: false\n  };\n\n  handleDialogOpen = () => {\n    this.setState({ open: true });\n  }\n\n  handleDialogClose = () => {\n    this.setState({\n      open: false,\n      name: '',\n      owner: '',\n      error: false\n    });\n  }\n\n  handleShowError = (message) => {\n    this.setState({\n      message: message,\n      error: true\n    });\n  }\n\n  handleClearError = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ error: false });\n  }\n\n  handleDialogAdd = async () => {\n    try {\n      await this.props.handleAddRepository(`${this.state.owner}/${this.state.name}`);\n      this.handleDialogClose();\n    } catch (err) {\n      this.handleShowError(err.message);\n    }\n  }\n\n  handleUpdateOwner = (event) => {\n    this.setState({ owner: event.target.value });\n  }\n\n  handleUpdateName = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n  // TODO: style to add margin on right.\n  render = () => (\n    <>\n      <Grid container direction='row' justify='flex-end' alignItems='flex-end'>\n        <IconButton aria-label='Add' onClick={this.handleDialogOpen}>\n          <Add />\n        </IconButton>\n        <Dialog open={this.state.open} aria-labelledby='add-repository-dialog'>\n          <DialogTitle id='add-repository-dialog-title'>Add Repository</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin='dense'\n              id='owner'\n              label='Repository Owner'\n              value={this.state.owner}\n              onChange={(e) => this.handleUpdateOwner(e)}\n              fullWidth\n            />\n            <TextField\n              margin='dense'\n              id='name'\n              label='Repository Name'\n              value={this.state.name}\n              onChange={(e) => this.handleUpdateName(e)}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleDialogClose}>Cancel</Button>\n            <Button onClick={this.handleDialogAdd}>Add</Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n      <StyledErrorSnackbar\n        message={this.state.message}\n        open={this.state.error}\n        handleClose={this.handleClearError} />\n    </>\n  );\n}\n\nexport default AddRepository;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Book from '@material-ui/icons/Book';\nimport Delete from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport AddRepository from './AddRepository';\nimport { getRepositories, deleteRepository, addRepository } from '../lib/github';\n\n\nclass ListRepositories extends React.Component {\n  state = {\n    repos: [],\n  }\n\n  handleAddRepository = async (repo) => {\n    await addRepository(repo);\n    this.loadRepositories();\n  }\n\n  handleDeleteRepository = (repo) => {\n    deleteRepository(repo);\n    this.loadRepositories();\n  }\n\n  loadRepositories = () => {\n    this.setState({\n      repos: getRepositories()\n    });\n  }\n\n  componentDidMount = () => {\n    this.loadRepositories();\n  }\n\n  render = () => (\n    <>\n      <List>\n        {this.state.repos.map((repo) => (\n          <ListItem button key={`repo-item-${repo}`}>\n            <ListItemAvatar>\n              <Avatar>\n                <Book />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={repo} />\n            <ListItemSecondaryAction>\n              <IconButton aria-label=\"Delete\" onClick={() => this.handleDeleteRepository(repo)}>\n                <Delete />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      <AddRepository handleAddRepository={this.handleAddRepository} />\n    </>\n  );\n}\n\nconst RepositoryEditor = () => (\n  <ListRepositories />\n);\n\nexport default RepositoryEditor;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\n\nconst NavigationListItem = ({ to, itemName }) => (\n  <ListItem button component={Link} to={to}>\n    <ListItemText primary={itemName}></ListItemText>\n  </ListItem>\n);\n\nexport default NavigationListItem;\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/lab/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst styles = (theme) => ({\n  paper: {\n    padding: `${theme.spacing.unit}px`,\n  },\n  reactRouterHoverInherit: theme.reactRouterHoverInherit\n});\n\nfunction buildBreadcrumb(previousPath, classes) {\n  const breadcrumbItems = [];\n\n  // ignoreIndex matches the Route defined in App.js.\n  // Certain portions are not useful to user in the breadcrumb, so we remove them.\n  const ignoreIndex = [0/* /repos */, 3/* /:viewName(browser|viewer|editor) */];\n  const keyBase = 'breadcrumb-item-';\n\n  let currDir = '';\n  for (let i = 0; i < previousPath.length; i++) {\n    const directory = previousPath[i];\n    currDir = currDir.concat('/', directory);\n\n    if (ignoreIndex.indexOf(i) !== -1) {\n      continue;\n    }\n\n    if (i === previousPath.length - 1) {\n      // Last item should be active\n      breadcrumbItems.push(\n        <Typography color=\"textPrimary\" key={`${keyBase}${i}`}>\n          {directory}\n        </Typography>\n      );\n    } else {\n      breadcrumbItems.push(\n        <Link\n          component={RouterLink}\n          to={`${currDir}/`}\n          key={`${keyBase}${i}`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          {directory}\n        </Link>\n      );\n    }\n  };\n\n  return breadcrumbItems;\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {string} pathname current URI pathname\n * @return {Array} List of BreadcrumbItems\n */\nconst RouterBreadcrumbs = ({ pathname, classes }) => {\n  const keyBase = 'breadcrumb-item-';\n\n  const subDirectoriesArr = pathname.split('/').filter((value) => !!value);\n\n  const breadcrumbItems = buildBreadcrumb(subDirectoriesArr, classes);\n\n  return (\n    <Paper className={classes.paper}>\n      <Breadcrumbs>\n        <Link\n          component={RouterLink}\n          to={`/`}\n          key={`${keyBase}Home`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          Home\n        </Link>\n        {breadcrumbItems}\n      </Breadcrumbs>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(RouterBreadcrumbs);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationListItem from './NavigationListItem';\nimport RouterBreadcrumbs from './RouterBreadcrumbs';\nimport { getContents } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass RepositoryNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      contents: []\n    };\n  }\n\n  async componentDidMount() {\n    const { repo, path, branch } = this.props.match.params;\n\n    const contents = await getContents(repo, path, branch);\n    this.setState({\n      isLoaded: true,\n      contents\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Props before update\n   */\n  async componentDidUpdate(prevProps) {\n    const { repo: prevRepo, path: prevPath, branch: prevBranch } = prevProps.match.params;\n    const { repo, path, branch } = this.props.match.params;\n\n    if (prevRepo !== repo || prevPath !== path || prevBranch !== branch) {\n      const contents = await getContents(repo, path, branch);\n      this.setState({\n        isLoaded: true,\n        contents\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded, contents } = this.state;\n    if (!isLoaded) {\n      return <div className=\"Markdown\">Loading...</div>;\n    }\n\n    if (!contents.forEach) {\n      return <div>{contents.message}</div>;\n    }\n\n    const listGroupItems = [];\n\n    contents.forEach((item) => {\n      const key = `list-group-item-${item.name}`;\n\n      const { repo, branch } = this.props.match.params;\n\n      let viewType = 'error';\n      let itemJsx = <div>File type {item.type} not supported</div>;\n\n      if (item.type === 'dir') {\n        viewType = 'browser';\n        itemJsx = <i>{`/${item.name}`}</i>;\n      } else if (item.type === 'file') {\n        viewType = 'viewer';\n        itemJsx = item.name;\n      }\n\n      const linkToContent = `/repos/${repo}/${viewType}/${branch}/${item.path}`;\n\n      listGroupItems.push(<Divider key={`navigation-divider-${item.name}`}/>);\n      listGroupItems.push(<NavigationListItem to={linkToContent} key={key} action itemName={itemJsx} />);\n    });\n\n    return (\n      <>\n        <Typography variant='h3'>\n          Repository Contents\n        </Typography>\n        <RouterBreadcrumbs pathname={this.props.location.pathname} />\n        <List key={'repo-navigation-list'}>\n          {listGroupItems}\n          <Divider key={'end-of-list-divider'}/>\n        </List>\n      </>\n    );\n  }\n}\n\nexport default RepositoryNavigation;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationListItem from './NavigationListItem';\nimport RouterBreadcrumbs from './RouterBreadcrumbs';\nimport { getBranches } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass BranchNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      branches: []\n    };\n  }\n\n  /**\n   * When component first initializes, execute following lifecycle actions\n   */\n  async componentDidMount() {\n    const branches = await getBranches(this.props.match.params.repo);\n    this.setState({\n      isLoaded: true,\n      branches\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Updated query string\n   */\n  async componentDidUpdate(prevProps) {\n    if (prevProps.match.params.repo !== this.props.match.params.repo) {\n      const branches = await getBranches(this.props.match.params.repo);\n      this.setState({\n        isLoaded: true,\n        branches\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      const listGroupItems = [];\n      const { branches } = this.state;\n\n      if (!branches.forEach) {\n        return <div>{branches.message}</div>;\n      }\n\n      branches.forEach((item) => {\n        const key = `list-group-item-${item.name}`;\n        const linkToContent = `/repos/${this.props.match.params.repo}/browser/${item.name}`;\n        listGroupItems.push(<Divider key={`navigation-divider-${item.name}`}/>);\n        listGroupItems.push(<NavigationListItem to={linkToContent} key={key} itemName={item.name} action />);\n      });\n\n      return (\n        <>\n          <Typography variant='h3'>\n            Branches\n          </Typography>\n          <RouterBreadcrumbs pathname={this.props.location.pathname} />\n          <List>\n            {listGroupItems}\n            <Divider />\n          </List>\n        </>\n      );\n    }\n  }\n}\n\nexport default BranchNavigation;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport MarkdownMusic from './MarkdownMusic';\nimport { parseVoicing } from 'markdown-it-music/lib/voicing';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport { guitarChordLibrary } from 'markdown-it-music/renderers/chord_library';\n\nconst Sandbox = () => (\n  <div>\n    <Typography variant='h2'>Music Markdown Sandbox</Typography>\n    <Typography>\n      This page exercises various subcomponents of music-markdown and\n      markdown-it-music.\n    </Typography>\n\n    <Typography variant='h3'>Markdown Editor</Typography>\n    <MarkdownEditor/>\n\n    <Typography variant='h3'>\n      Chord Diagram Renderer\n    </Typography>\n    <Typography>\n      This section exercises the Chord Diagram Renderer.\n    </Typography>\n    <Typography variant='h4'>Esus4 (200x200)</Typography>\n    <div dangerouslySetInnerHTML={\n      { __html: renderChordDiagram(parseVoicing('o2 m1 m2 n3,2 n4,4 b5,6,5'), 200, 200) }\n    } />\n\n    <h2>Entire Chord Library</h2>\n    <AllChords/>\n  </div>\n);\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const value = '```chords\\n' +\n      'c1:                    Am     G  F          G      Esus4  E\\n' +\n      'v1: All the leaves are brown        and the sky is gray\\n\\n' +\n      'c1: F               C     E  Am       F        Esus4  E\\n' +\n      'v1: I\\'ve been for a walk         on a winter\\'s day\\n\\n' +\n      'c1:                 Am    G  F       G      Esus4  E\\n' +\n      'v1: I\\'d be safe and warm        if I was in L.A.\\n\\n' +\n      'c1:            Am        G  F     G               Esus4  E\\n' +\n      'v1: California dreamin\\'        on such a winter\\'s day\\n' +\n      '```';\n\n    this.state = {\n      value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const styles = { display: 'flex', width: '100%' };\n    const editorStyles = {\n      minHeight: '500px', width: '50%', marginRight: '20px'\n    };\n\n    return <div style={styles}>\n      <textarea value={this.state.value} onChange={this.handleChange} style={editorStyles}></textarea>\n      <div style={editorStyles}>\n        <MarkdownMusic source={this.state.value}></MarkdownMusic>\n      </div>\n    </div>;\n  }\n}\n\nconst AllChords = () => (\n  Array.from(guitarChordLibrary.keys()).map((chord, index) => (\n    <div key={index} align=\"center\" style={{ display: 'inline-block' }}>\n      {guitarChordLibrary.get(chord).map((value, index) => (\n        <span key={index} dangerouslySetInnerHTML={\n          { __html: renderChordDiagram(value) }\n        } />\n      ))}\n      <h5>{chord}</h5>\n    </div>\n  ))\n);\n\nexport default Sandbox;\n","import { UPDATE_COLUMN_COUNT } from '../actionTypes';\n\nconst columnCount = (state = 1, action) => {\n  switch (action.type) {\n  case UPDATE_COLUMN_COUNT: {\n    return action.payload.columnCount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default columnCount;\n","import { UPDATE_FONT_SIZE } from '../actionTypes';\n\nconst fontSize = (state = 13, action) => {\n  switch (action.type) {\n  case UPDATE_FONT_SIZE: {\n    return action.payload.fontSize;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default fontSize;\n","import { TRANSPOSE } from '../actionTypes';\n\nconst transposeAmount = (state = 0, action) => {\n  switch (action.type) {\n  case TRANSPOSE: {\n    return action.payload.transposeAmount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default transposeAmount;\n","import { UPDATE_YOUTUBE_ID } from '../actionTypes';\n\nconst youTubeId = (state = '', action) => {\n  switch (action.type) {\n  case UPDATE_YOUTUBE_ID: {\n    return action.payload.youtubeId || '';\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default youTubeId;\n","import { combineReducers } from 'redux';\nimport columnCount from './updateColumnCount';\nimport fontSize from './updateFontSize';\nimport transposeAmount from './transpose';\nimport youTubeId from './youTubeId';\n\nexport default combineReducers({ transposeAmount, columnCount, fontSize, youTubeId });\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nlet store = undefined;\nif (process.env.NODE_ENV === 'production') {\n  store = createStore(rootReducer);\n} else {\n  store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nexport default store;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nimport MarkdownMusicSourceFetcher from './MarkdownMusicSourceFetcher';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar';\nimport ResponsiveContainer from './ResponsiveContainer';\nimport RepositoryEditor from './RepositoryEditor';\nimport RepositoryNavigation from './RepositoryNavigation';\nimport BranchNavigation from './BranchNavigation';\nimport Sandbox from './Sandbox.js';\nimport store from '../redux/store';\nimport './App.scss';\n\nconst REPO_REGEX = '/repos/:repo([^/]+/[^/]+)';\n\n// TODO: Build button toggle for dark/light\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    type: 'light',\n  },\n  reactRouterHoverInherit: {\n    '&:hover': {\n      color: 'inherit'\n    },\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <ResponsiveContainer children={[HomeRouter()]} />\n  </MuiThemeProvider>\n);\n\nconst HomeRouter = () => (\n  <Provider key=\"home-provider\" store={store}>\n    <Router key=\"home-router\">\n      <div>\n        <Route component={MusicMarkdownNavbar} />\n        <Route exact path=\"/\" component={Navigation} />\n        <Route excat path='/sandbox' component={Sandbox} />\n        <Route exact path='/repos' component={RepositoryEditor} />\n        <Route exact path={REPO_REGEX} component={BranchNavigation} />\n        <Route exact path={`${REPO_REGEX}/:view(viewer)/:branch/:path+`} component={MarkdownMusicSourceFetcher} />\n        <Route exact path={`${REPO_REGEX}/:view(browser)/:branch/:path*`} component={RepositoryNavigation} />\n        {/* TODO: Add editor component */}\n        <Route exact path={`${REPO_REGEX}/:view(editor)/:branch/:path+`} component={Sandbox} />\n      </div>\n    </Router>\n  </Provider>\n);\n\nconst Navigation = () => (\n  <Typography variant='h2'>\n    Welcome to Music Markdown!\n  </Typography>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}