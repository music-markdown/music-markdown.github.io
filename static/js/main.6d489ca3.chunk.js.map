{"version":3,"sources":["registerServiceWorker.js","components/YouTube.js","components/MarkdownMusic.js","lib/constants.js","lib/github.js","redux/actionTypes.js","redux/actions.js","components/MarkdownMusicSourceFetcher.js","components/MusicToolbar.js","components/MusicMarkdownNavbar.js","components/ResponsiveContainer.js","components/NavigationListItem.js","components/RouterBreadcrumbs.js","components/RepositoryNavigation.js","components/BranchNavigation.js","components/Sandbox.js","redux/reducers/updateColumnCount.js","redux/reducers/updateFontSize.js","redux/reducers/transpose.js","redux/reducers/index.js","redux/store.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","YouTubePlayer","_ref","youTubeId","react_default","a","createElement","className","title","src","concat","allow","allowFullScreen","YouTubeToggle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","visible","handleToggle","bind","assertThisInitialized","setState","index_es","icon","faYoutube","size","onClick","YouTube_YouTubePlayer","React","Component","MarkdownMusicRender","md","MarkdownIt","use","MarkdownItMusic","setTranspose","transposeAmount","setColumnCount","columnCount","setFontSize","fontSize","setMaxWidth","width","html","render","source","YouTube_YouTubeToggle","meta","dangerouslySetInnerHTML","__html","ConnectMarkdownMusicRender","connect","MarkdownMusic","lib_default","REPOS_LOCAL_STORAGE_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","GITHUB_API_URL","getContents","_x","_x2","_x3","_x4","_getContents","apply","arguments","_callee","owner","repo","path","branch","apiUrl","response","regenerator_default","wrap","_context","prev","next","undefined","length","getApiUrl","fetch","sent","abrupt","json","stop","getRepositories","repoListStr","localStorage","getItem","JSON","parse","getBranches","_x5","_x6","_getBranches","_callee2","_context2","url","URL","githubToken","searchParams","set","MarkdownMusicSourceFetcher","queryParams","queryString","search","parseInt","transpose","isLoaded","markdown","params","atob","content","_this$state","components_MarkdownMusic","newTransposeAmount","type","payload","newColumnCount","newFontSize","MusicToolbar","handleTransposeClick","handleColumnClick","handleFontClick","increase","decrease","event","target","textContent","updateColumnCount","updateFontSize","_this2","Toolbar_default","Grid_default","container","direction","justify","alignItems","spacing","name","clickCallback","map","Fragment","key","item","Typography_default","variant","Button_default","isIncreaseTransposeAmount","isIncreaseColumnCount","isIncreaseFontSize","MusicMarkdownNavbar","open","handleDrawerClose","handleDrawerOpen","classes","repoMap","storedRepos","repoList","push","setItem","stringify","addRepository","AppBar_default","position","reactRouterHoverInherit","component","Link","to","MusicMarkdownNavbar_RepositoriesNavDropdown","NavLink","grow","Drawer_default","anchor","Divider_default","components_MusicToolbar","RepositoriesNavDropdown","handleClick","handleClose","_this3","repoDropdownItems","forEach","repoId","MenuItem_default","buttonRef","node","anchorEl","Menu_default","id","onClose","withStyles","theme","flexGrow","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","children","NavigationListItem","itemName","ListItem_default","button","ListItemText_default","primary","paper","padding","unit","pathname","breadcrumbItems","previousPath","ignoreIndex","currDir","i","directory","indexOf","color","Link_default","RouterLink","buildBreadcrumb","split","filter","value","Paper_default","Breadcrumbs_default","RepositoryNavigation","contents","prevProps","prevOwner","prevRepo","prevPath","prevBranch","message","listGroupItems","_this2$props$match$pa","viewType","itemJsx","linkToContent","components_NavigationListItem","action","components_RouterBreadcrumbs","List_default","BranchNavigation","branches","MarkdownEditor","handleChange","editorStyles","minHeight","marginRight","fontFamily","whiteSpace","style","display","onChange","AllChords","Array","from","guitarChordLibrary","keys","chord","index","align","get","renderChordDiagram","Sandbox","Sandbox_MarkdownEditor","parseVoicing","Sandbox_AllChords","combineReducers","store","createStore","rootReducer","createMuiTheme","typography","useNextVariants","palette","&:hover","HomeRouter","es","HashRouter","Route","exact","Navigation","excat","App","MuiThemeProvider_default","CssBaseline_default","components_ResponsiveContainer","ReactDOM","src_components_App","document","getElementById","process","origin","addEventListener","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6d489ca3.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\n\nconst YouTubePlayer = ({ youTubeId }) => (\n  <div className=\"embed-responsive embed-responsive-16by9\">\n    <iframe\n      title={youTubeId}\n      className='embed-responsive-item'\n      src={`https://www.youtube.com/embed/${youTubeId}`}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen>\n    </iframe>\n  </div>\n);\n\nclass YouTubeToggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    this.setState((state) => ({\n      visible: !state.visible\n    }));\n  }\n\n  render() {\n    if (!this.props.youTubeId) {\n      return <div></div>;\n    }\n\n    return (\n      <div>\n        <FontAwesomeIcon icon={faYoutube} size='2x' onClick={this.handleToggle} />\n        {this.state.visible ? <YouTubePlayer youTubeId={this.props.youTubeId} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport {\n  YouTubePlayer,\n  YouTubeToggle\n};\n","import ContainerDimensions from 'react-container-dimensions';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\n\nimport { YouTubeToggle } from './YouTube';\n\nclass MarkdownMusicRender extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.md = new MarkdownIt()\n      .use(MarkdownItMusic);\n  }\n\n  render() {\n    this.md.setTranspose(this.props.transposeAmount);\n    this.md.setColumnCount(this.props.columnCount);\n    this.md.setFontSize(this.props.fontSize);\n    this.md.setMaxWidth(this.props.width);\n    const html = this.md.render(this.props.source);\n\n    return (\n      <div>\n        <YouTubeToggle youTubeId={this.md.meta.youTubeId} />\n        <span dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { transposeAmount, columnCount, fontSize } = state;\n  return { transposeAmount, columnCount, fontSize };\n}\n\nconst ConnectMarkdownMusicRender = connect(mapStateToProps)(MarkdownMusicRender);\n\nconst MarkdownMusic = ({ source }) => (\n  <ContainerDimensions>\n    <ConnectMarkdownMusicRender source={source} />\n  </ContainerDimensions>\n);\n\nexport default MarkdownMusic;\n","/* Local Storage */\n\n/** Key namespace for music-markdown when storing app specific values in localStorage */\nexport const MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE = 'music-markdown';\n/** Key for markdown-music repositories specific localStorage values*/\nexport const REPOS_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:repositories`;\nexport const GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:github_token`;\nexport const GITHUB_API_URL = 'https://api.github.com';\n","import { REPOS_LOCAL_STORAGE_KEY, GITHUB_TOKEN_LOCAL_STORAGE_KEY, GITHUB_API_URL } from './constants';\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n * @param {string} path The directory or file to retrieve\n * @param {string} branch The branch to retrive contents from\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(owner, repo, path, branch) {\n  if (path === undefined || path.length === 0) {\n    path = '';\n  }\n  const apiUrl = getApiUrl(`/repos/${owner}/${repo}/contents/${path}`, branch);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\n/**\n * Returns a promise of a list of branches for the given repository.\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n */\nexport async function getBranches(owner, repo) {\n  const apiUrl = getApiUrl(`/repos/${owner}/${repo}/branches`);\n  const response = await fetch(apiUrl);\n\n  return response.json();\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} owner Repo owner\n * @param {string} repo Repo name\n * @param {string} path Subdirectory\n * @param {string} branch Branch name\n */\nexport function addRepository(owner, repo, path, branch) {\n  const repoMap = { owner, repo, path, branch };\n  const storedRepos = getRepositories();\n  const repoList = storedRepos.length > 0 ? storedRepos : [];\n  repoList.push(repoMap);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repoList));\n}\n\n/**\n * Composes the GitHub API url for the given url, attaching the user's GitHub\n * access token if it exists.\n * @param {string} url The path and search params\n * @param {string} branch The branch to get from\n * @return {URL} Composed GitHub API url with user's personal access token\n */\nexport function getApiUrl(url, branch) {\n  url = new URL(url, GITHUB_API_URL);\n\n  const githubToken = localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    url.searchParams.set('access_token', githubToken);\n  }\n\n  if (branch) {\n    url.searchParams.set('ref', branch);\n  }\n\n  return url;\n}\n","export const TRANSPOSE = 'TRANSPOSE';\nexport const UPDATE_COLUMN_COUNT = 'UPDATE_COLUMN_COUNT';\nexport const UPDATE_FONT_SIZE = 'UPDATE_FONT_SIZE';\n","import {\n  TRANSPOSE,\n  UPDATE_COLUMN_COUNT,\n  UPDATE_FONT_SIZE\n} from './actionTypes';\n\nlet transposeAmount = 0;\nlet columnCount = 1;\nlet fontSize = 13;\n\nexport const transpose = (isIncreaseTransposeAmount) => ({\n  type: TRANSPOSE,\n  payload: {\n    transposeAmount: isIncreaseTransposeAmount ? ++transposeAmount : --transposeAmount\n  }\n});\n\nexport const updateColumnCount = (isIncreaseColumnCount) => ({\n  type: UPDATE_COLUMN_COUNT,\n  payload: {\n    columnCount: isIncreaseColumnCount ? ++columnCount : --columnCount\n  }\n});\n\nexport const updateFontSize = (isIncreaseFontSize) => ({\n  type: UPDATE_FONT_SIZE,\n  payload: {\n    fontSize: isIncreaseFontSize ? ++fontSize : --fontSize\n  }\n});\n\nexport const setTranspose = (newTransposeAmount) => {\n  transposeAmount = newTransposeAmount;\n\n  return {\n    type: TRANSPOSE,\n    payload: {\n      transposeAmount\n    }\n  };\n};\n\nexport const setColumnCount = (newColumnCount) => {\n  columnCount = newColumnCount;\n\n  return {\n    type: UPDATE_COLUMN_COUNT,\n    payload: {\n      columnCount\n    }\n  };\n};\n\nexport const setFontSize = (newFontSize) => {\n  fontSize = newFontSize;\n\n  return {\n    type: UPDATE_FONT_SIZE,\n    payload: {\n      fontSize\n    }\n  };\n};\n","import React from 'react';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\n\nimport MarkdownMusic from './MarkdownMusic';\nimport { getContents } from '../lib/github';\nimport { setTranspose, setColumnCount, setFontSize } from '../redux/actions';\n\n// TODO: Decouple retrieval of source markdown and controlling arguments to MarkdownMusic.\n// https://github.com/music-markdown/music-markdown/pull/25#discussion_r259598474\nclass MarkdownMusicSourceFetcher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.props.setTranspose(parseInt(this.queryParams.transpose, 10) || 0);\n    this.props.setColumnCount(parseInt(this.queryParams.columnCount, 10) || 1);\n    this.props.setFontSize(parseInt(this.queryParams.fontSize, 10) || 13);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n    };\n  }\n\n  async componentDidMount() {\n    const { owner, repo, path } = this.props.match.params;\n\n    const json = await getContents(owner, repo, path);\n    this.setState({\n      isLoaded: true,\n      markdown: atob(json.content)\n    });\n  }\n\n  // TODO: Separate the UI component with the fetch logic, we don't necessarily need the fetcher\n  // to be a React Component\n  render() {\n    const { isLoaded, markdown } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"Markdown\">\n          <MarkdownMusic source={markdown} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(\n  undefined,\n  { setTranspose, setColumnCount, setFontSize }\n)(MarkdownMusicSourceFetcher);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\n\nimport { transpose } from '../redux/actions';\nimport { updateColumnCount } from '../redux/actions';\nimport { updateFontSize } from '../redux/actions';\n\nclass MusicToolbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTransposeClick = this.handleTransposeClick.bind(this);\n    this.handleColumnClick = this.handleColumnClick.bind(this);\n    this.handleFontClick = this.handleFontClick.bind(this);\n\n    this.increase = '+1';\n    this.decrease = '-1';\n  }\n\n  handleTransposeClick(event) {\n    // TODO: Update history with new transposeAmount\n    this.props.transpose(event.target.textContent === this.increase);\n  }\n\n  handleColumnClick(event) {\n    // TODO: Update history with new columnCount\n    this.props.updateColumnCount(event.target.textContent === this.increase);\n  }\n\n  handleFontClick(event) {\n    // TODO: Update history with new fontSize\n    this.props.updateFontSize(event.target.textContent === this.increase);\n  }\n\n  render() {\n    // TODO: Move dark theme to redux store.\n    return (\n      <Toolbar>\n        <Grid container direction='row' justify='center' alignItems='center' spacing={16}>\n          {[{ name: 'Transpose', clickCallback: this.handleTransposeClick },\n            { name: 'Column Count', clickCallback: this.handleColumnClick },\n            { name: 'Font Size', clickCallback: this.handleFontClick }].map(({ name, clickCallback }) => (\n            <React.Fragment key={name}>\n              <Grid item>\n                <Typography variant='h6'>{name}</Typography>\n              </Grid>\n              <Grid item>\n                <Button onClick={clickCallback}>\n                  <Typography>{this.decrease}</Typography>\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button onClick={clickCallback}>\n                  <Typography>{this.increase}</Typography>\n                </Button>\n              </Grid>\n            </React.Fragment>\n          ))}\n        </Grid>\n      </Toolbar>\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  { transpose, updateColumnCount, updateFontSize }\n)(MusicToolbar);\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { getRepositories, addRepository } from '../lib/github';\nimport { REPOS_LOCAL_STORAGE_KEY } from '../lib/constants';\nimport MusicToolbar from './MusicToolbar';\n\nconst styles = (theme) => ({\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n  grow: {\n    flexGrow: 1\n  }\n});\n\nclass MusicMarkdownNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n\n    this.handleDrawerClose = this.handleDrawerClose.bind(this);\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n  }\n\n  handleDrawerOpen() {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleDrawerClose() {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { open } = this.state;\n\n    if (!localStorage.getItem(REPOS_LOCAL_STORAGE_KEY)) {\n      // TODO: sanitize this input when storing\n      addRepository('music-markdown', 'almost-in-time', '/', 'master');\n    }\n\n    return (\n      <>\n        <AppBar position={'sticky'} key='top-navbar'>\n          <Toolbar>\n            <Button className={classes.reactRouterHoverInherit} component={Link} to='/'>\n              <Typography variant='h6'>\n                Music Markdown\n              </Typography>\n            </Button>\n            <RepositoriesNavDropdown {...this.props} />\n            <Button className={classes.reactRouterHoverInherit} component={NavLink} to='/sandbox'>\n              Sandbox\n            </Button>\n            <div className={classes.grow} />\n            <Button onClick={this.handleDrawerOpen}>\n              Toolbar\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Drawer open={open} variant={'persistent'} anchor={'bottom'}>\n          <Divider />\n          <MusicToolbar></MusicToolbar>\n        </Drawer>\n      </>\n    );\n  }\n};\n\n/**\n * For all added repositories, add it to the dropdown list\n */\n// TODO: List first x items, then put in dropdown item to expand full list\nclass RepositoriesNavDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick() {\n    this.setState((state) => ({\n      open: !state.open\n    }));\n  }\n\n  handleClose() {\n    this.setState(() => ({\n      open: false\n    }));\n  }\n\n  render() {\n    const repoDropdownItems = [];\n    const repoList = getRepositories();\n\n    if (repoList.length > 0) {\n      const { reactRouterHoverInherit } = this.props.classes;\n\n      repoList.forEach((repo) => {\n        const repoId = `${repo.owner}/${repo.repo}/${repo.branch}${repo.path}`;\n        repoDropdownItems.push(\n          <MenuItem component={NavLink}\n            to={`/repos/${repo.owner}/${repo.repo}/browser/${repo.branch}${repo.path}`}\n            key={`dropdown-item-${repoId}`}\n            onClick={this.handleClose}\n            className={reactRouterHoverInherit}>\n            {repoId}\n          </MenuItem>);\n      });\n    }\n\n    const { open } = this.state;\n\n    return (\n      <>\n        <Button onClick={this.handleClick} buttonRef={(node) => {\n          this.anchorEl = node;\n        }}>\n          Music Repositories\n        </Button>\n\n        <Menu id='dropdown-menu' anchorEl={this.anchorEl} open={open} onClose={this.handleClose}>\n          {repoDropdownItems}\n        </Menu>\n      </>\n    );\n  }\n};\n\nexport default withStyles(styles)(MusicMarkdownNavbar);\n","import Grid from '@material-ui/core/Grid';\nimport React from 'react';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Grid key={RESPONSIVE_CONTAINER_KEY}>\n      {props.children}\n    </Grid>\n  );\n}\n\nexport default ResponsiveContainer;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\n\nconst NavigationListItem = ({ to, itemName }) => (\n  <ListItem button component={Link} to={to}>\n    <ListItemText primary={itemName}></ListItemText>\n  </ListItem>\n);\n\nexport default NavigationListItem;\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/lab/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst styles = (theme) => ({\n  paper: {\n    padding: `${theme.spacing.unit}px`,\n  },\n  reactRouterHoverInherit: theme.reactRouterHoverInherit\n});\n\nfunction buildBreadcrumb(previousPath, classes) {\n  const breadcrumbItems = [];\n\n  // ignoreIndex matches the Route defined in App.js.\n  // Certain portions are not useful to user in the breadcrumb, so we remove them.\n  const ignoreIndex = [0/* /repos */, 3/* /:viewName(browser|viewer|editor) */];\n  const keyBase = 'breadcrumb-item-';\n\n  let currDir = '';\n  for (let i = 0; i < previousPath.length; i++) {\n    const directory = previousPath[i];\n    currDir = currDir.concat('/', directory);\n\n    if (ignoreIndex.indexOf(i) !== -1) {\n      continue;\n    }\n\n    if (i === previousPath.length - 1) {\n      // Last item should be active\n      breadcrumbItems.push(\n        <Typography color=\"textPrimary\" key={`${keyBase}${i}`}>\n          {directory}\n        </Typography>\n      );\n    } else {\n      breadcrumbItems.push(\n        <Link\n          component={RouterLink}\n          to={`${currDir}/`}\n          key={`${keyBase}${i}`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          {directory}\n        </Link>\n      );\n    }\n  };\n\n  return breadcrumbItems;\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {string} pathname current URI pathname\n * @return {Array} List of BreadcrumbItems\n */\nconst RouterBreadcrumbs = ({ pathname, classes }) => {\n  const keyBase = 'breadcrumb-item-';\n\n  const subDirectoriesArr = pathname.split('/').filter((value) => !!value);\n\n  const breadcrumbItems = buildBreadcrumb(subDirectoriesArr, classes);\n\n  return (\n    <Paper className={classes.paper}>\n      <Breadcrumbs>\n        <Link\n          component={RouterLink}\n          to={`/`}\n          key={`${keyBase}Home`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          Home\n        </Link>\n        {breadcrumbItems}\n      </Breadcrumbs>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(RouterBreadcrumbs);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationListItem from './NavigationListItem';\nimport RouterBreadcrumbs from './RouterBreadcrumbs';\nimport { getContents } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass RepositoryNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      contents: []\n    };\n  }\n\n  async componentDidMount() {\n    const { owner, repo, path, branch } = this.props.match.params;\n\n    const contents = await getContents(owner, repo, path, branch);\n    this.setState({\n      isLoaded: true,\n      contents\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Props before update\n   */\n  async componentDidUpdate(prevProps) {\n    const { owner: prevOwner, repo: prevRepo, path: prevPath, branch: prevBranch } = prevProps.match.params;\n    const { owner, repo, path, branch } = this.props.match.params;\n\n    if (prevOwner !== owner || prevRepo !== repo || prevPath !== path || prevBranch !== branch) {\n      const contents = await getContents(owner, repo, path, branch);\n      this.setState({\n        isLoaded: true,\n        contents\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded, contents } = this.state;\n    if (!isLoaded) {\n      return <div className=\"Markdown\">Loading...</div>;\n    }\n\n    if (!contents.forEach) {\n      return <div>{contents.message}</div>;\n    }\n\n    const listGroupItems = [];\n\n    contents.forEach((item) => {\n      const key = `list-group-item-${item.name}`;\n\n      const { owner, repo, branch } = this.props.match.params;\n\n      let viewType = 'error';\n      let itemJsx = <div>File type {item.type} not supported</div>;\n\n      if (item.type === 'dir') {\n        viewType = 'browser';\n        itemJsx = <i>{`/${item.name}`}</i>;\n      } else if (item.type === 'file') {\n        viewType = 'viewer';\n        itemJsx = item.name;\n      }\n\n      const linkToContent = `/repos/${owner}/${repo}/${viewType}/${branch}/${item.path}`;\n\n      listGroupItems.push(<Divider key={`navigation-divider-${item.name}`}/>);\n      listGroupItems.push(<NavigationListItem to={linkToContent} key={key} action itemName={itemJsx} />);\n    });\n\n    return (\n      <>\n        <Typography variant='h3'>\n          Repository Contents\n        </Typography>\n        <RouterBreadcrumbs pathname={this.props.location.pathname} />\n        <List key={'repo-navigation-list'}>\n          {listGroupItems}\n          <Divider key={'end-of-list-divider'}/>\n        </List>\n      </>\n    );\n  }\n}\n\nexport default RepositoryNavigation;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationListItem from './NavigationListItem';\nimport RouterBreadcrumbs from './RouterBreadcrumbs';\nimport { getBranches } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass BranchNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      branches: []\n    };\n  }\n\n  /**\n   * When component first initializes, execute following lifecycle actions\n   */\n  async componentDidMount() {\n    const { owner, repo } = this.props.match.params;\n\n    const branches = await getBranches(owner, repo);\n    this.setState({\n      isLoaded: true,\n      branches\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Updated query string\n   */\n  async componentDidUpdate(prevProps) {\n    const { owner: prevOwner, repo: prevRepo } = prevProps.match.params;\n    const { owner, repo } = this.props.match.params;\n\n    if (prevOwner !== owner || prevRepo !== repo) {\n      const branches = await getBranches(owner, repo);\n      this.setState({\n        isLoaded: true,\n        branches\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      const listGroupItems = [];\n      const { branches } = this.state;\n\n      if (!branches.forEach) {\n        return <div>{branches.message}</div>;\n      }\n\n      branches.forEach((item) => {\n        const key = `list-group-item-${item.name}`;\n\n        const { owner, repo } = this.props.match.params;\n\n        const linkToContent = `/repos/${owner}/${repo}/browser/${item.name}`;\n\n        listGroupItems.push(<Divider key={`navigation-divider-${item.name}`}/>);\n        listGroupItems.push(<NavigationListItem to={linkToContent} key={key} itemName={item.name} action />);\n      });\n\n      return (\n        <>\n          <Typography variant='h3'>\n            Branches\n          </Typography>\n          <RouterBreadcrumbs pathname={this.props.location.pathname} />\n          <List>\n            {listGroupItems}\n            <Divider />\n          </List>\n        </>\n      );\n    }\n  }\n}\n\nexport default BranchNavigation;\n","import React from 'react';\nimport MarkdownMusic from './MarkdownMusic';\nimport { parseVoicing } from 'markdown-it-music/lib/voicing';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport { guitarChordLibrary } from 'markdown-it-music/renderers/chord_library';\n\nconst Sandbox = () => (\n  <div>\n    <h1>Music Markdown Sandbox</h1>\n    <p>\n      This page exercises various subcomponents of music-markdown and\n      markdown-it-music.\n    </p>\n\n    <h2>Markdown Editor</h2>\n    <MarkdownEditor/>\n\n    <h2>Chord Diagram Renderer</h2>\n    <p>\n      This section exercises the Chord Diagram Renderer.\n    </p>\n    <h3>Esus4 (200x200)</h3>\n    <div dangerouslySetInnerHTML={\n      { __html: renderChordDiagram(parseVoicing('o2 m1 m2 n3,2 n4,4 b5,6,5'), 200, 200) }\n    } />\n\n    <h2>Entire Chord Library</h2>\n    <AllChords/>\n  </div>\n);\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const value = '```chords\\n' +\n      'c1:                    Am     G  F          G      Esus4  E\\n' +\n      'v1: All the leaves are brown        and the sky is gray\\n\\n' +\n      'c1: F               C     E  Am       F        Esus4  E\\n' +\n      'v1: I\\'ve been for a walk         on a winter\\'s day\\n\\n' +\n      'c1:                 Am    G  F       G      Esus4  E\\n' +\n      'v1: I\\'d be safe and warm        if I was in L.A.\\n\\n' +\n      'c1:            Am        G  F     G               Esus4  E\\n' +\n      'v1: California dreamin\\'        on such a winter\\'s day\\n' +\n      '```';\n\n    this.state = {\n      value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const styles = { display: 'flex', width: '100%' };\n    const editorStyles = {\n      minHeight: '500px', width: '50%', marginRight: '20px',\n      fontFamily: 'monospace', whiteSpace: 'pre'\n    };\n\n    return <div style={styles}>\n      <textarea value={this.state.value} onChange={this.handleChange} style={editorStyles}></textarea>\n      <div style={editorStyles}>\n        <MarkdownMusic source={this.state.value}></MarkdownMusic>\n      </div>\n    </div>;\n  }\n}\n\nconst AllChords = () => (\n  Array.from(guitarChordLibrary.keys()).map((chord, index) => (\n    <div key={index} align=\"center\" style={{ display: 'inline-block' }}>\n      {guitarChordLibrary.get(chord).map((value, index) => (\n        <span key={index} dangerouslySetInnerHTML={\n          { __html: renderChordDiagram(value) }\n        } />\n      ))}\n      <h5>{chord}</h5>\n    </div>\n  ))\n);\n\nexport default Sandbox;\n","import { UPDATE_COLUMN_COUNT } from '../actionTypes';\n\nconst columnCount = (state = 1, action) => {\n  switch (action.type) {\n  case UPDATE_COLUMN_COUNT: {\n    return action.payload.columnCount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default columnCount;\n","import { UPDATE_FONT_SIZE } from '../actionTypes';\n\nconst fontSize = (state = 13, action) => {\n  switch (action.type) {\n  case UPDATE_FONT_SIZE: {\n    return action.payload.fontSize;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default fontSize;\n","import { TRANSPOSE } from '../actionTypes';\n\nconst transposeAmount = (state = 0, action) => {\n  switch (action.type) {\n  case TRANSPOSE: {\n    return action.payload.transposeAmount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default transposeAmount;\n","import { combineReducers } from 'redux';\nimport columnCount from './updateColumnCount';\nimport fontSize from './updateFontSize';\nimport transposeAmount from './transpose';\n\nexport default combineReducers({ transposeAmount, columnCount, fontSize });\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nlet store = undefined;\nif (process.env.NODE_ENV === 'production') {\n  store = createStore(rootReducer);\n} else {\n  store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nexport default store;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nimport MarkdownMusicSourceFetcher from './MarkdownMusicSourceFetcher';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar';\nimport ResponsiveContainer from './ResponsiveContainer';\nimport RepositoryNavigation from './RepositoryNavigation';\nimport BranchNavigation from './BranchNavigation';\nimport Sandbox from './Sandbox.js';\nimport store from '../redux/store';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// TODO: Build button toggle for dark/light\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    type: 'light',\n  },\n  reactRouterHoverInherit: {\n    '&:hover': {\n      color: 'inherit'\n    },\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <ResponsiveContainer children={[HomeRouter()]} />\n  </MuiThemeProvider>\n);\n\nconst HomeRouter = () => (\n  <Provider key=\"home-provider\" store={store}>\n    <Router key=\"home-router\">\n      <div>\n        <Route component={MusicMarkdownNavbar} />\n        <Route exact path=\"/\" component={Navigation} />\n        <Route excat path='/sandbox' component={Sandbox} />\n        <Route exact path='/repos/:owner/:repo' component={BranchNavigation} />\n        <Route exact path='/repos/:owner/:repo/:view(viewer)/:branch/:path+' component={MarkdownMusicSourceFetcher} />\n        <Route exact path='/repos/:owner/:repo/:view(browser)/:branch/:path*' component={RepositoryNavigation} />\n        {/* TODO: Add editor component */}\n        <Route exact path='/repos/:owner/:repo/:view(editor)/:branch/:path+' component={Sandbox} />\n      </div>\n    </Router>\n  </Provider>\n);\n\nconst Navigation = () => (\n  <Typography variant='h2'>\n    Welcome to Music Markdown!\n  </Typography>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}