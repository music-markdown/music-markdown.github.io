{"version":3,"sources":["tools/asciitab.js","lib/constants.js","lib/github.js","components/GlobalState.js","components/RouterBreadcrumbs.js","components/BranchNavigation.js","components/ErrorSnackbar.js","components/MusicMarkdown.js","components/MarkdownEditor.js","lib/hooks.js","components/MarkdownViewer.js","components/GithubTokenDialog.js","components/YouTube.js","components/MusicToolbar.js","components/MusicMarkdownNavbar.js","components/AddRepository.js","components/RepositoryEditor.js","components/AddNewFile.js","components/RepositoryNavigation.js","components/ResponsiveContainer.js","components/Sandbox.js","components/App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["isChord","require","State","getMaybeHeading","line","endsWith","slice","startsWith","getMaybeChords","tokens","trim","split","token","asciiTabConvert","input","state","voiceIndex","lines","output","push","maybeHeading","maybeChords","join","read","stream","a","async","buffer","Buffer","alloc","chunk","concat","toString","console","process","stdin","log","module","main","COLUMN_COUNT_QUERY_KEY","LOCAL_STORAGE_NAMESPACE","REPO_REGEX","TRANSPOSE_QUERY_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","REPOS_LOCAL_STORAGE_KEY","GITHUB_API_URL","getContents","repo","path","branch","undefined","length","githubApiFetch","cache","response","json","content","Base64","decode","putContents","sha","body","message","encode","method","mode","JSON","stringify","getRepositories","repoListStr","localStorage","getItem","parse","verifyRepoExists","status","Error","verifyRepoUnregistered","addRepository","repos","setItem","getBranches","init","URL","searchParams","set","githubToken","getGithubToken","headers","Authorization","fetch","Request","isValidGithubToken","match","lightTheme","palette","type","darkTheme","initialTheme","window","GlobalStateContext","createContext","useGlobalStateContext","useContext","GlobalStateProvider","props","useState","theme","youTubeId","setState","Provider","value","data","setGithubToken","removeItem","isDarkTheme","toggleTheme","setYouTubeId","children","useStyles","makeStyles","paper","padding","spacing","reactRouterHoverInherit","DirectoryBreadcrumbs","pathname","classes","subDirectoriesArr","filter","breadcrumbItems","previousPath","ignoreIndex","keyBase","currDir","i","directory","indexOf","Typography","role","color","Link","component","RouterLink","to","className","buildBreadcrumb","Paper","Breadcrumbs","root","flexGrow","BranchNavigation","location","branches","setBranches","isLoaded","setIsLoaded","useEffect","params","fetchBranches","List","map","item","ListItem","button","name","ListItemAvatar","Avatar","ListItemText","primary","LinearProgress","error","backgroundColor","dark","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","margin","ErrorSnackbar","open","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","aria-describedby","id","classNames","action","IconButton","aria-label","close","onClick","MD","MarkdownIt","html","use","MarkdownItMusic","columns","columnGap","columnRuleWidth","columnRuleStyle","columnRuleColor","text","secondary","MusicMarkdownRender","source","width","columnCount","transposeAmount","useTheme","context","setHtml","setMessage","setError","setTranspose","render","meta","err","dangerouslySetInnerHTML","__html","event","reason","MusicMarkdown","style","fabProgress","green","position","top","left","zIndex","editor","marginLeft","height","fab","toolbar","buttonSuccess","MarkdownEditor","markdown","setMarkdown","debouncedMarkdown","delay","debounced","setDebounced","timer","setTimeout","clearTimeout","useDebounce","setSha","saving","setSaving","success","setSuccess","isDirty","setIsDirty","handleSave","fetchContents","buttonClassname","parts","viewerLink","githubParts","githubLink","Grid","container","xs","Tooltip","title","Fab","disabled","CircularProgress","size","href","target","maxLines","Infinity","onChange","editorProps","$blockScrolling","MarkdownViewer","queryString","search","Number","ExpansionPanelDetails","withStyles","AccordionDetails","GithubTokenInstructions","Accordion","AccordionSummary","expandIcon","GithubTokenDialog","setToken","isValidToken","handleCloseDialog","Dialog","DialogTitle","DialogContent","TextField","autoFocus","label","fullWidth","e","helperText","DialogActions","Button","bottom","right","cursor","YouTubePlayer","border","src","allow","allowFullScreen","YouTubeToggle","visible","setVisible","popper","slider","handleUpdateQuery","original","history","ColumnCountSelector","anchorEl","setAnchorEl","currentTarget","Badge","badgeContent","invisible","Popper","ClickAwayListener","onClickAway","contains","ToggleButtonGroup","exclusive","ToggleButton","TransposeSelector","transpose","Slider","min","max","step","marks","String","MusicToolbar","grow","borderRadius","shape","fade","common","white","marginTop","breakpoints","up","inputRoot","inputInput","BrowseButton","EditButton","ViewButton","SearchToolbar","searchOpen","setSearchOpen","handleSearchToggle","variant","buttonRef","placement","InputBase","placeholder","inputProps","MusicMarkdownNavbar","apiKeyDialogOpen","setApiKeyDialogOpen","settingsOpen","setSettingsOpen","settingsAnchorEl","setSettingsAnchorEl","handleSettingsToggle","AppBar","Toolbar","alt","MenuList","MenuItem","FormControlLabel","control","Switch","defaultChecked","grid","AddRepository","handleAddRepository","setOpen","setName","owner","setOwner","handleDialogClose","handleShowError","handleDialogAdd","direction","justify","aria-labelledby","RepositoryEditor","setRepos","reposFingerprint","loadRepositories","handleDeleteRepository","r","deleteRepository","ListItemSecondaryAction","whitespacePre","whiteSpace","fontFamily","AddNewFile","newFileName","setNewFileName","newFileOpen","setNewFileOpen","toEditor","setToEditor","handleAddNewFile","getNewFilePath","getTemplateContents","statusText","isValidFileName","Card","previewCard","CardContent","gutterBottom","InputProps","endAdornment","InputAdornment","sortDir","contents","sort","b","RepositoryNavigation","setContents","ResponsiveContainer","chordSourcePaper","chordCategoryPaper","textAlign","chordCategoryTypography","chordVariantPaper","chordVariantTypography","chordDiagram","Sandbox","url","allFeaturesSource","AllGuitarChords","roots","qualities","allChordsSource","category","index","ChordCategory","Array","from","guitarChordbook","keys","chord","get","renderChordDiagram","quality","ThemeProvider","createMuiTheme","CssBaseline","HomeRouter","App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.97ca7f44.chunk.js","sourcesContent":["const { isChord } = require(\"markdown-it-music/lib/chord\");\n\nconst State = {\n  DEFAULT: 1,\n  VERSE: 2,\n  FENCE: 3,\n};\n\nfunction getMaybeHeading(line) {\n  if (line.endsWith(\":\")) {\n    return `## ${line.slice(0, -1)}`;\n  }\n\n  if (line.startsWith(\"[\") && line.endsWith(\"]\")) {\n    return `## ${line.slice(1, -1)}`;\n  }\n\n  return null;\n}\n\nfunction getMaybeChords(line) {\n  const tokens = line.trim().split(/\\s+/);\n\n  for (const token of tokens) {\n    if (!isChord(token)) {\n      return null;\n    }\n  }\n\n  return `c1: ${line}`;\n}\n\nfunction asciiTabConvert(input) {\n  let state = State.DEFAULT;\n  let voiceIndex = 1;\n  const lines = input.split(/\\n/);\n  const output = [];\n\n  for (const line of lines) {\n    if (line.startsWith(\":::\")) {\n      state = State.FENCE;\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.DEFAULT) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        state = State.VERSE;\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.VERSE) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        state = State.DEFAULT;\n        output.push(\"\");\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        output.push(\"\");\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      if (line.trim() === \"\") {\n        continue;\n      }\n\n      output.push(`l${voiceIndex}: ${line}`);\n      voiceIndex += 1;\n      continue;\n    }\n\n    if (state === State.FENCE) {\n      if (line === \":::\") {\n        state = State.DEFAULT;\n      }\n\n      output.push(line);\n      continue;\n    }\n  }\n\n  return output.join(\"\\n\");\n}\n\nasync function read(stream) {\n  let buffer = Buffer.alloc(0);\n  for await (const chunk of stream) {\n    buffer = Buffer.concat([buffer, chunk]);\n  }\n  return buffer.toString(\"utf8\");\n}\n\nasync function main() {\n  console.log(asciiTabConvert(await read(process.stdin)));\n}\n\nif (typeof require !== \"undefined\" && require.main === module) {\n  main();\n}\n\nexport default asciiTabConvert;\n","export const COLUMN_COUNT_QUERY_KEY = \"columns\";\nexport const LOCAL_STORAGE_NAMESPACE = \"music-markdown\";\nexport const REPO_REGEX = \"/repos/:repo([^/]+/[^/]+)\";\nexport const TRANSPOSE_QUERY_KEY = \"transpose\";\n","import { Base64 } from \"js-base64\";\nimport { LOCAL_STORAGE_NAMESPACE } from \"./constants\";\n\nconst GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:github_token`;\nconst REPOS_LOCAL_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:repositories`;\nconst GITHUB_API_URL = \"https://api.github.com\";\nconst REPOS_CONTENTS_TREE_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:indexed-contents`;\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} repo The owner and repo in the form :owner/:repo\n * @param {string} path The directory or file to retrieve\n * @param {string} branch The branch to retrive contents from\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(repo, path, branch) {\n  if (path === undefined || path.length === 0) {\n    path = \"\";\n  }\n  const response = await githubApiFetch(\n    `/repos/${repo}/contents/${path}`,\n    { cache: \"no-cache\" },\n    branch\n  );\n  const json = await response.json();\n  json.content = json.content ? Base64.decode(json.content) : \"\";\n  return json;\n}\n\nexport async function putContents(repo, path, content, sha, branch) {\n  const body = {\n    message: `Music Markdown published ${path}`,\n    content: Base64.encode(content),\n    branch,\n  };\n\n  if (sha) {\n    body.sha = sha;\n  }\n\n  return githubApiFetch(`/repos/${repo}/contents/${path}`, {\n    method: \"PUT\",\n    mode: \"cors\",\n    body: JSON.stringify(body),\n  });\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\n/**\n * Indexes all contents from stored repositories for searching\n * TODO: Consider when a full refresh should be called. Currently, it's invoked when\n * a repository is first accessed. However, there should be a manual trigger to allow\n * a manual refresh of external repos.\n */\nexport async function refreshIndexedContents() {\n  let reposContents = [];\n  for (const repo of await getRepositories()) {\n    const repoContents = await getRepoContents(repo);\n    reposContents.push(repoContents);\n  }\n  localStorage.setItem(REPOS_CONTENTS_TREE_STORAGE_KEY, reposContents);\n}\n\n/**\n * Returns all file contents in a particular github repo for all branches\n * @param {string} repo The owner and repo in the form :owner/:repo\n * @return {string|Array} List of contents in a repo\n */\nexport async function getRepoContents(repo) {\n  let repoContents = [];\n  for (const branch of await getBranches(repo)) {\n    const branchContents = await getBranchContents(repo, \"/\", branch.name);\n    repoContents.push(branchContents);\n  }\n  return repoContents;\n}\n\n/**\n * Returns all file contents from a repo's specific branch\n * @param {string} repo The owner and repo in the form :owner/:repo\n * @param {string} path Subdirectory in repo to traverse\n * @param {string} branch Name of branch in repo to traverse\n * @return {Array<string>} Array of file contents paths\n */\nasync function getBranchContents(repo, path, branch) {\n  let branchContents = [];\n  for (const item of await getContents(repo, path, branch)) {\n    if (item.type === \"file\") {\n      branchContents.push(`${repo}/${branch}/${item.path}`);\n    } else if (item.type === \"dir\") {\n      branchContents.push(await getBranchContents(repo, item.path, branch));\n    }\n  }\n  return branchContents;\n}\n\nasync function verifyRepoExists(repo) {\n  const response = await githubApiFetch(`/repos/${repo}`);\n  if (response.status === 404) {\n    throw new Error(`\"${repo}\" not found on GitHub.`);\n  }\n}\n\nfunction verifyRepoUnregistered(repo) {\n  for (const r of getRepositories()) {\n    if (r === repo) {\n      throw new Error(`\"${repo}\" is already registered.`);\n    }\n  }\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function addRepository(repo) {\n  verifyRepoUnregistered(repo);\n  await verifyRepoExists(repo);\n  const repos = getRepositories();\n  repos.push(repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Returns a promise of a list of branches for the given repository.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function getBranches(repo) {\n  const response = await githubApiFetch(`/repos/${repo}/branches`);\n  return response.json();\n}\n\n/**\n * Removes a GitHub repo from localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport function deleteRepository(repo) {\n  const repos = getRepositories().filter((r) => r !== repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Performs a fetch to the GitHub API, attaching the user's GitHub access\n * token if it is set.\n */\nasync function githubApiFetch(path, init, branch) {\n  const input = new URL(path, GITHUB_API_URL);\n  if (branch) {\n    input.searchParams.set(\"ref\", branch);\n  }\n\n  const githubToken = getGithubToken();\n  if (githubToken) {\n    init = {\n      ...init,\n      ...{ headers: { Authorization: `token ${githubToken}` } },\n    };\n  }\n\n  return fetch(new Request(input, init));\n}\n\nexport function getGithubToken() {\n  return localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n}\n\nexport function isValidGithubToken(githubToken = getGithubToken()) {\n  return !!githubToken && !!githubToken.match(/^[0-9a-f]{40}$/);\n}\n\nexport function setGithubToken(githubToken) {\n  if (githubToken) {\n    localStorage.setItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY, githubToken);\n  } else {\n    localStorage.removeItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  }\n}\n","import { createContext, useContext, useState } from \"react\";\nimport {\n  getGithubToken,\n  isValidGithubToken,\n  setGithubToken,\n} from \"../lib/github\";\nimport { LOCAL_STORAGE_NAMESPACE } from \"../lib/constants\";\n\nconst lightTheme = {\n  palette: {\n    type: \"light\",\n  },\n};\n\nconst darkTheme = {\n  palette: {\n    type: \"dark\",\n  },\n};\n\nconst initialTheme =\n  window.localStorage.getItem(`${LOCAL_STORAGE_NAMESPACE}:palette-type`) ===\n  \"dark\"\n    ? darkTheme\n    : lightTheme;\n\nexport const GlobalStateContext = createContext();\n\nexport const useGlobalStateContext = () => useContext(GlobalStateContext);\n\nexport const GlobalStateProvider = (props) => {\n  const [state, setState] = useState({\n    githubToken: getGithubToken(),\n    theme: initialTheme,\n    youTubeId: null,\n  });\n\n  return (\n    <GlobalStateContext.Provider\n      value={{\n        data: state,\n        isValidGithubToken: () => isValidGithubToken(state.githubToken),\n        setGithubToken: (githubToken) => {\n          if (githubToken !== state.githubToken) {\n            setState({ ...state, githubToken });\n            setGithubToken(githubToken);\n          }\n        },\n        isDarkTheme: () => state.theme.palette.type === \"dark\",\n        toggleTheme: () => {\n          const theme =\n            state.theme.palette.type === \"dark\" ? lightTheme : darkTheme;\n          window.localStorage.setItem(\n            `${LOCAL_STORAGE_NAMESPACE}:palette-type`,\n            theme.palette.type\n          );\n          setState({ ...state, theme });\n        },\n        setYouTubeId: (youTubeId) => {\n          if (youTubeId !== state.youTubeId) {\n            setState({ ...state, youTubeId });\n          }\n        },\n      }}\n    >\n      {props.children}\n    </GlobalStateContext.Provider>\n  );\n};\n","import Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: `${theme.spacing(1)}px`,\n  },\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n}));\n\nfunction buildBreadcrumb(previousPath, classes) {\n  const breadcrumbItems = [];\n\n  // ignoreIndex matches the Route defined in App.js.\n  // Certain portions are not useful to user in the breadcrumb, so we remove them.\n  const ignoreIndex = [\n    0 /* /repos */,\n    3 /* /:viewName(browser|viewer|editor) */,\n  ];\n  const keyBase = \"breadcrumb-item-\";\n\n  let currDir = \"\";\n  for (let i = 0; i < previousPath.length; i++) {\n    const directory = previousPath[i];\n    currDir = currDir.concat(\"/\", directory);\n\n    if (ignoreIndex.indexOf(i) !== -1) {\n      continue;\n    }\n\n    if (i === previousPath.length - 1) {\n      // Last item should be active\n      breadcrumbItems.push(\n        <Typography\n          role=\"breadcrumb\"\n          color=\"textPrimary\"\n          key={`${keyBase}${i}`}\n        >\n          {directory}\n        </Typography>\n      );\n    } else {\n      breadcrumbItems.push(\n        <Link\n          role=\"breadcrumb\"\n          component={RouterLink}\n          to={`${currDir}/`}\n          key={`${keyBase}${i}`}\n          color=\"inherit\"\n          className={classes.reactRouterHoverInherit}\n        >\n          {directory}\n        </Link>\n      );\n    }\n  }\n\n  return breadcrumbItems;\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {string} pathname current URI pathname\n * @return {Array} List of BreadcrumbItems\n */\nexport default function DirectoryBreadcrumbs({ pathname }) {\n  const classes = useStyles();\n  const keyBase = \"breadcrumb-item-\";\n\n  const subDirectoriesArr = pathname.split(\"/\").filter((value) => !!value);\n  subDirectoriesArr[3] = \"browser\";\n\n  const breadcrumbItems = buildBreadcrumb(subDirectoriesArr, classes);\n\n  return (\n    <Paper className={classes.paper}>\n      <Breadcrumbs>\n        <Link\n          role=\"breadcrumb\"\n          component={RouterLink}\n          to={`/`}\n          key={`${keyBase}Home`}\n          color=\"inherit\"\n          className={classes.reactRouterHoverInherit}\n        >\n          Home\n        </Link>\n        {breadcrumbItems}\n      </Breadcrumbs>\n    </Paper>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CallSplitIcon from \"@material-ui/icons/CallSplit\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { getBranches } from \"../lib/github\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nexport default function BranchNavigation({ location, match }) {\n  const classes = useStyles();\n  const [branches, setBranches] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchBranches() {\n      const branches = await getBranches(match.params.repo);\n      setBranches(branches);\n      setIsLoaded(true);\n    }\n    fetchBranches();\n  }, [match.params.repo]);\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <List>\n          {branches.map((item) => (\n            <ListItem\n              button\n              component={Link}\n              key={`list-group-item-${item.name}`}\n              to={`/repos/${match.params.repo}/browser/${item.name}/`}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <CallSplitIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={item.name}></ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </>\n  );\n}\n","import CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ErrorSnackbar({ open, handleClose, message }) {\n  const classes = useStyles();\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <SnackbarContent\n        className={classes.error}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <ErrorIcon\n              className={classNames(classes.icon, classes.iconVariant)}\n            />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport MarkdownIt from \"markdown-it\";\nimport MarkdownItMusic from \"markdown-it-music\";\nimport { useGlobalStateContext } from \"./GlobalState\";\n\nconst COLUMN_GAP = 20;\nconst MD = new MarkdownIt({ html: true }).use(MarkdownItMusic);\n\nconst useStyles = makeStyles((theme) => ({\n  columns: {\n    columnGap: `${COLUMN_GAP}px`,\n    columnRuleWidth: \"1px\",\n    columnRuleStyle: \"dashed\",\n    columnRuleColor: theme.palette.text.secondary,\n  },\n}));\n\nconst MusicMarkdownRender = ({\n  source,\n  width,\n  columnCount,\n  transposeAmount,\n}) => {\n  const theme = useTheme();\n  const context = useGlobalStateContext();\n  const [html, setHtml] = useState(\"\");\n  const [message, setMessage] = useState();\n  const [error, setError] = useState(false);\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  useEffect(() => {\n    MD.setTranspose(transposeAmount);\n\n    try {\n      setHtml(MD.render(source));\n      setError(false);\n      context.setYouTubeId(MD.meta.youTubeId);\n    } catch (err) {\n      console.log(err);\n      setHtml(`<pre>${source}</pre>`);\n      setMessage(err.message);\n      setError(true);\n    }\n  }, [context, source, width, columnCount, transposeAmount]);\n\n  return (\n    <>\n      <div\n        className={`mmd-${theme.palette.type}`}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n      <ErrorSnackbar\n        message={message}\n        open={error}\n        handleClose={handleClearError}\n      />\n    </>\n  );\n};\n\nexport default function MusicMarkdown(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.columns} style={{ columnCount: props.columnCount }}>\n      <MusicMarkdownRender {...props} />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { getContents, putContents } from \"../lib/github\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport AceEditor from \"react-ace\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Fab from \"@material-ui/core/Fab\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PhotoFilterIcon from \"@material-ui/icons/PhotoFilter\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport asciiTabConvert from \"../tools/asciitab\";\nimport classNames from \"classnames\";\nimport green from \"@material-ui/core/colors/green\";\nimport { useDebounce } from \"../lib/hooks\";\nimport { useGlobalStateContext } from \"./GlobalState\";\n\nimport \"ace-builds/src-noconflict/mode-markdown\"; // eslint-disable-line sort-imports\nimport \"ace-builds/src-noconflict/theme-textmate\"; // eslint-disable-line sort-imports\nimport \"ace-builds/src-noconflict/theme-twilight\"; // eslint-disable-line sort-imports\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n  fabProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  editor: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    height: \"100%\",\n    width: \"100%\",\n  },\n  fab: {\n    margin: theme.spacing(1),\n  },\n  toolbar: {\n    display: \"flex\",\n    padding: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: \"100%\",\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[700],\n    },\n  },\n}));\n\nexport default function MarkdownEditor({ match, location }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const context = useGlobalStateContext();\n  const [markdown, setMarkdown] = useState(\"\");\n  const debouncedMarkdown = useDebounce(markdown, 250);\n  const [sha, setSha] = useState();\n  const [saving, setSaving] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [isDirty, setIsDirty] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { repo, path, branch } = match.params;\n\n  const handleChange = (value) => {\n    setMarkdown(value);\n    setIsDirty(true);\n    setSuccess(false);\n  };\n\n  const handleSave = async () => {\n    if (!saving) {\n      setSuccess(false);\n      setSaving(true);\n\n      const response = await putContents(repo, path, markdown, sha, branch);\n      const json = await response.json();\n\n      if (response.status === 200) {\n        setSuccess(true);\n        setSaving(false);\n        setSha(json.content.sha);\n      } else {\n        setSuccess(false);\n        setSaving(false);\n      }\n    }\n  };\n\n  const handleAutoFormat = () => {\n    setMarkdown(asciiTabConvert(markdown));\n  };\n\n  useEffect(() => {\n    async function fetchContents() {\n      const json = await getContents(repo, path, branch);\n      setIsLoaded(true);\n      setMarkdown(json.content);\n      setSha(json.sha);\n    }\n    fetchContents();\n  }, [repo, path, branch]);\n\n  const buttonClassname = classNames({\n    [classes.buttonSuccess]: success,\n  });\n\n  const parts = location.pathname.split(\"/\");\n  parts[4] = \"viewer\";\n  const viewerLink = parts.join(\"/\");\n\n  const githubParts = [parts[2], parts[3], \"blob\"].concat(parts.slice(5));\n  const githubLink = `https://github.com/${githubParts.join(\"/\")}`;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Paper className={classes.toolbar}>\n              <Tooltip\n                title={\n                  context.isValidGithubToken()\n                    ? \"Save\"\n                    : \"Add a GitHub Token to Enable Saving\"\n                }\n              >\n                <span>\n                  <Fab\n                    disabled={!isDirty || !context.isValidGithubToken()}\n                    className={`${buttonClassname} ${classes.fab}`}\n                    onClick={handleSave}\n                  >\n                    {success ? <CheckIcon /> : <SaveIcon />}\n                    {saving && (\n                      <CircularProgress\n                        size={68}\n                        className={classes.fabProgress}\n                      />\n                    )}\n                  </Fab>\n                </span>\n              </Tooltip>\n              <Tooltip title=\"Auto Format\">\n                <Fab className={classes.fab} onClick={handleAutoFormat}>\n                  <PhotoFilterIcon />\n                </Fab>\n              </Tooltip>\n              <Tooltip title=\"Return to Markdown View\">\n                <Fab component={Link} to={viewerLink} className={classes.fab}>\n                  <ExitToAppIcon />\n                </Fab>\n              </Tooltip>\n              <Tooltip title=\"Open in GitHub\">\n                <Fab href={githubLink} target=\"_blank\" className={classes.fab}>\n                  <GitHubIcon />\n                </Fab>\n              </Tooltip>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <AceEditor\n                mode=\"markdown\"\n                theme={theme.palette.type === \"dark\" ? \"twilight\" : \"textmate\"}\n                width=\"100%\"\n                maxLines={Infinity}\n                className={classes.editor}\n                onChange={handleChange}\n                value={markdown}\n                editorProps={{ $blockScrolling: true }}\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <MusicMarkdown source={debouncedMarkdown}></MusicMarkdown>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce(value, delay) {\n  const [debounced, setDebounced] = useState(\"\");\n  useEffect(() => {\n    const timer = setTimeout(() => setDebounced(value), delay);\n    return () => clearTimeout(timer);\n  }, [value, delay]);\n  return debounced;\n}\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport { useEffect, useState } from \"react\";\n\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport { getContents } from \"../lib/github\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport queryString from \"query-string\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\nexport default function MarkdownViewer({ location, match }) {\n  const classes = useStyles();\n  const [markdown, setMarkdown] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchContents() {\n      const { repo, path, branch } = match.params;\n      const json = await getContents(repo, path, branch);\n      setMarkdown(json.content);\n      setIsLoaded(true);\n    }\n    fetchContents();\n  }, [match.params]);\n\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <MusicMarkdown\n        source={markdown}\n        columnCount={columnCount}\n        transposeAmount={transposeAmount}\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionActions\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { isValidGithubToken } from \"../lib/github\";\nimport { useGlobalStateContext } from \"./GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst ExpansionPanelDetails = withStyles({\n  root: {\n    backgroundColor: \"rgba(0, 0, 0, .03)\",\n  },\n})(AccordionDetails);\n\nconst GithubTokenInstructions = () => (\n  <Accordion>\n    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n      <Typography>\n        Set a <b>GitHub Token</b> to create or change Music Markdown files in\n        GitHub.\n      </Typography>\n    </AccordionSummary>\n    <ExpansionPanelDetails>\n      <div>\n        <h1>How to Create a New Token</h1>\n\n        <p>\n          These instructions will help you create a new GitHub token, and add it\n          to Music Markdown so that you can use the Music Markdown editor.\n        </p>\n\n        <ol>\n          <li>\n            Open your{\" \"}\n            <a href=\"https://github.com/settings/tokens\">\n              Personal access tokens\n            </a>{\" \"}\n            page in GitHub.\n          </li>\n          <li>\n            Click <b>Generate new token</b>.\n          </li>\n          <li>\n            Under <b>Note</b> type <b>Music Markdown</b>.\n          </li>\n          <li>\n            Under <b>scopes</b> grant <b>repo</b> permissions.\n          </li>\n          <li>\n            Scroll to the bottom and click <b>Generate token</b>.\n          </li>\n          <li>Copy the newly generated token and paste it below.</li>\n        </ol>\n      </div>\n    </ExpansionPanelDetails>\n  </Accordion>\n);\n\nexport default function GithubTokenDialog({ open, handleClose }) {\n  const context = useGlobalStateContext();\n  const [token, setToken] = useState(context.data.githubToken);\n\n  const isValidToken = (token) => {\n    return token === \"\" || isValidGithubToken(token);\n  };\n\n  const handleSaveToken = () => {\n    if (isValidToken(token)) {\n      context.setGithubToken(token);\n      handleClose();\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setToken(context.data.githubToken);\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={handleCloseDialog}>\n      <DialogTitle id=\"set-github-api-key\">Set GitHub Token</DialogTitle>\n      <DialogContent>\n        <GithubTokenInstructions />\n      </DialogContent>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"GitHub Token\"\n          fullWidth\n          value={token || \"\"}\n          onChange={(e) => setToken(e.target.value)}\n          error={!isValidToken(token)}\n          helperText=\"Warning: GitHub tokens are very sensitive. Anyone who \n          gains access to this token will have access to your GitHub account.\n          Please proceed with caution.\"\n        ></TextField>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseDialog} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={handleSaveToken}\n          color=\"primary\"\n          disabled={!isValidToken(token)}\n        >\n          {token === \"\" ? \"Clear\" : \"Save\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Paper, Tooltip } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\n\nimport Draggable from \"react-draggable\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useGlobalStateContext } from \"./GlobalState\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n    padding: theme.spacing(2),\n    cursor: \"move\",\n  },\n}));\n\nexport function YouTubePlayer({ youTubeId }) {\n  const classes = useStyles();\n  return (\n    <Draggable>\n      <Paper className={classes.paper}>\n        <iframe\n          title={youTubeId}\n          style={{ border: 0 }}\n          src={`https://www.youtube.com/embed/${youTubeId}?autoplay=1&modestbranding=1`}\n          allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        ></iframe>\n      </Paper>\n    </Draggable>\n  );\n}\n\nexport function YouTubeToggle() {\n  const context = useGlobalStateContext();\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    setVisible(!context.data.youTubeId);\n  }, [context.data.youTubeId]);\n\n  const handleToggle = () => {\n    setVisible(!visible);\n  };\n\n  if (!context.data.youTubeId) {\n    return null;\n  }\n\n  return (\n    <>\n      <Tooltip title=\"Show / Hide YouTube Player\">\n        <IconButton\n          color={visible ? \"secondary\" : \"default\"}\n          onClick={handleToggle}\n        >\n          <PlayArrowIcon />\n        </IconButton>\n      </Tooltip>\n      {visible ? <YouTubePlayer youTubeId={context.data.youTubeId} /> : \"\"}\n    </>\n  );\n}\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport { useState } from \"react\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport LowPriorityIcon from \"@material-ui/icons/LowPriority\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Slider from \"@material-ui/core/Slider\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ViewColumnIcon from \"@material-ui/icons/ViewColumn\";\nimport { YouTubeToggle } from \"./YouTube\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport queryString from \"query-string\";\n\nconst useStyles = makeStyles((theme) => ({\n  popper: {\n    zIndex: 9999,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  slider: {\n    width: 300,\n  },\n}));\n\nconst handleUpdateQuery = (props, name, value, original) => {\n  const params = queryString.parse(props.location.search);\n  if (value === original) {\n    delete params[name];\n  } else {\n    params[name] = value;\n  }\n  props.history.push({ search: queryString.stringify(params) });\n};\n\nconst ColumnCountSelector = (props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState();\n\n  const handleToggle = (event) => {\n    setAnchorEl(!anchorEl ? event.currentTarget : undefined);\n  };\n\n  const handleClickAway = (event) => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n    setAnchorEl(undefined);\n  };\n\n  const params = queryString.parse(props.location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n\n  return (\n    <>\n      <Tooltip title=\"Set Number of Columns\">\n        <IconButton onClick={handleToggle}>\n          <Badge\n            badgeContent={columnCount}\n            invisible={columnCount === \"1\"}\n            color=\"secondary\"\n          >\n            <ViewColumnIcon />\n          </Badge>\n        </IconButton>\n      </Tooltip>\n\n      <Popper className={classes.popper} open={!!anchorEl} anchorEl={anchorEl}>\n        <ClickAwayListener onClickAway={handleClickAway}>\n          <Paper className={classes.paper}>\n            <ToggleButtonGroup\n              value={columnCount}\n              exclusive\n              onChange={(event, value) =>\n                handleUpdateQuery(props, COLUMN_COUNT_QUERY_KEY, value, \"1\")\n              }\n            >\n              {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"].map((columnCount) => (\n                <ToggleButton value={columnCount} key={columnCount}>\n                  {columnCount}\n                </ToggleButton>\n              ))}\n            </ToggleButtonGroup>\n          </Paper>\n        </ClickAwayListener>\n      </Popper>\n    </>\n  );\n};\n\nconst TransposeSelector = (props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState();\n\n  const handleToggle = (event) => {\n    setAnchorEl(!anchorEl ? event.currentTarget : undefined);\n  };\n\n  const handleClickAway = (event) => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n    setAnchorEl(undefined);\n  };\n\n  const params = queryString.parse(props.location.search);\n  const transpose = params[TRANSPOSE_QUERY_KEY] || \"0\";\n\n  return (\n    <>\n      <Tooltip title=\"Transpose Up / Down\">\n        <IconButton onClick={handleToggle}>\n          <Badge\n            badgeContent={transpose}\n            invisible={transpose === \"0\"}\n            color=\"secondary\"\n          >\n            <LowPriorityIcon />\n          </Badge>\n        </IconButton>\n      </Tooltip>\n\n      <Popper className={classes.popper} open={!!anchorEl} anchorEl={anchorEl}>\n        <ClickAwayListener onClickAway={handleClickAway}>\n          <Paper className={classes.paper}>\n            <Slider\n              className={classes.slider}\n              value={Number(transpose)}\n              min={-12}\n              max={12}\n              step={1}\n              marks={true}\n              onChange={(event, value) =>\n                handleUpdateQuery(\n                  props,\n                  TRANSPOSE_QUERY_KEY,\n                  String(value),\n                  \"0\"\n                )\n              }\n            />\n          </Paper>\n        </ClickAwayListener>\n      </Popper>\n    </>\n  );\n};\n\nexport default function MusicToolbar(props) {\n  return (\n    <>\n      <YouTubeToggle youTubeId={props.youTubeId} />\n      <TransposeSelector {...props} />\n      <ColumnCountSelector {...props} />\n    </>\n  );\n}\n","import { useState } from \"react\";\n\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport GithubTokenDialog from \"./GithubTokenDialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport { Link } from \"react-router-dom\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MusicToolbar from \"./MusicToolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport { REPO_REGEX } from \"../lib/constants\";\nimport { Route } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport { useGlobalStateContext } from \"./GlobalState\";\n\nconst useStyles = makeStyles((theme) => ({\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n  paper: {\n    padding: `${theme.spacing(1)}px`,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  filter: {\n    filter: theme.palette.type === \"dark\" ? \"invert(100%)\" : \"\",\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    width: \"100%\",\n  },\n}));\n\nconst BrowseButton = ({ match }) => (\n  <Tooltip title=\"Song List View\">\n    <IconButton\n      component={Link}\n      to={`/repos/${match.params.repo}/browser/${match.params.branch}/`}\n    >\n      <ViewListIcon />\n    </IconButton>\n  </Tooltip>\n);\n\nconst EditButton = ({ match }) => (\n  <Tooltip title=\"Edit Song\">\n    <span>\n      <IconButton\n        component={Link}\n        to={`/repos/${match.params.repo}/editor/${match.params.branch}/${match.params.path}`}\n      >\n        <EditIcon />\n      </IconButton>\n    </span>\n  </Tooltip>\n);\n\nconst ViewButton = ({ match }) => (\n  <Tooltip title=\"Markdown View\">\n    <IconButton\n      component={Link}\n      to={`/repos/${match.params.repo}/viewer/${match.params.branch}/${match.params.path}`}\n    >\n      <ExitToAppIcon />\n    </IconButton>\n  </Tooltip>\n);\n\n// TODO: Placeholder for search functionality\nconst SearchToolbar = () => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState();\n  const [searchOpen, setSearchOpen] = useState(false);\n\n  function handleSearchToggle() {\n    setSearchOpen(!searchOpen);\n  }\n\n  return (\n    <>\n      <IconButton\n        variant=\"contained\"\n        buttonRef={setAnchorEl}\n        onClick={handleSearchToggle} // for some reason, this doesn't work if the layout is too small, e.g. mobile\n      >\n        <SearchIcon />\n      </IconButton>\n      {searchOpen ? (\n        <ClickAwayListener onClickAway={handleSearchToggle}>\n          <Popper\n            id=\"search-popper\"\n            anchorEl={anchorEl}\n            placement=\"bottom-end\"\n            open={searchOpen}\n          >\n            <Paper className={classes.paper}>\n              <InputBase\n                className={classes.search}\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n              />\n            </Paper>\n          </Popper>\n        </ClickAwayListener>\n      ) : null}\n    </>\n  );\n};\n\nexport default function MusicMarkdownNavbar() {\n  const classes = useStyles();\n  const context = useGlobalStateContext();\n  const [apiKeyDialogOpen, setApiKeyDialogOpen] = useState(false);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [settingsAnchorEl, setSettingsAnchorEl] = useState();\n\n  const handleSettingsToggle = () => {\n    setSettingsOpen(!settingsOpen);\n  };\n\n  const handleApiKeyDialogOpen = () => {\n    setApiKeyDialogOpen(true);\n    setSettingsOpen(false);\n  };\n\n  const handleApiKeyDialogClose = () => {\n    setApiKeyDialogOpen(false);\n    setSettingsOpen(false);\n  };\n\n  const handleDarkThemeSwitch = () => {\n    context.toggleTheme();\n  };\n\n  return (\n    <AppBar position={\"sticky\"} key=\"top-navbar\">\n      <Toolbar>\n        <Button\n          className={classes.reactRouterHoverInherit}\n          component={Link}\n          to=\"/\"\n        >\n          <img\n            className={classes.filter}\n            src=\"music-markdown.svg\"\n            width={50}\n            alt=\"Music Markdown\"\n          />\n        </Button>\n        <div className={classes.grow} />\n\n        <Route\n          path={`${REPO_REGEX}/:mode/:branch/:path*`}\n          component={SearchToolbar}\n        />\n        <Route\n          path={[\n            \"/sandbox\",\n            `${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`,\n          ]}\n          component={MusicToolbar}\n        />\n        <Route\n          path={`${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`}\n          component={BrowseButton}\n        />\n        <Route\n          path={`${REPO_REGEX}/viewer/:branch/:path*`}\n          component={EditButton}\n        />\n        <Route\n          path={`${REPO_REGEX}/editor/:branch/:path*`}\n          component={ViewButton}\n        />\n\n        <IconButton\n          onClick={handleSettingsToggle}\n          buttonRef={setSettingsAnchorEl}\n        >\n          <SettingsIcon />\n        </IconButton>\n        <Popper\n          id=\"settings-popper\"\n          open={settingsOpen}\n          anchorEl={settingsAnchorEl}\n          placement=\"bottom-end\"\n        >\n          <Paper className={classes.paper}>\n            <ClickAwayListener onClickAway={handleSettingsToggle}>\n              <MenuList>\n                <MenuItem>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        defaultChecked={context.isDarkTheme()}\n                        onChange={handleDarkThemeSwitch}\n                        value=\"darkTheme\"\n                      />\n                    }\n                    label=\"Toggle Dark Mode?\"\n                  />\n                </MenuItem>\n                <MenuItem onClick={handleApiKeyDialogOpen}>\n                  Set GitHub Token\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popper>\n      </Toolbar>\n      <GithubTokenDialog\n        open={apiKeyDialogOpen}\n        handleClose={handleApiKeyDialogClose}\n      ></GithubTokenDialog>\n    </AppBar>\n  );\n}\n","import { useState } from \"react\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function AddRepository({ handleAddRepository }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleDialogOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setOpen(false);\n    setName(\"\");\n    setOwner(\"\");\n    setError(false);\n  };\n\n  const handleShowError = (message) => {\n    setMessage(message);\n    setError(true);\n  };\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  const handleDialogAdd = async () => {\n    try {\n      await handleAddRepository(`${owner}/${name}`);\n      handleDialogClose();\n    } catch (err) {\n      handleShowError(err.message);\n    }\n  };\n\n  const handleUpdateOwner = (event) => {\n    setOwner(event.target.value);\n  };\n\n  const handleUpdateName = (event) => {\n    setName(event.target.value);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        className={classes.grid}\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >\n        <Fab aria-label=\"Add\" onClick={handleDialogOpen}>\n          <AddIcon />\n        </Fab>\n        <Dialog open={open} aria-labelledby=\"add-repository-dialog\">\n          <DialogTitle id=\"add-repository-dialog-title\">\n            Add Repository\n          </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"owner\"\n              label=\"Repository Owner\"\n              value={owner}\n              onChange={handleUpdateOwner}\n              fullWidth\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Repository Name\"\n              value={name}\n              onChange={handleUpdateName}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleDialogClose}>Cancel</Button>\n            <Button onClick={handleDialogAdd}>Add</Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n      <ErrorSnackbar\n        message={message}\n        open={error}\n        handleClose={handleClearError}\n      />\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  addRepository,\n  deleteRepository,\n  getRepositories,\n} from \"../lib/github\";\n\nimport AddRepository from \"./AddRepository\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\nexport default function RepositoryEditor() {\n  const classes = useStyles();\n  const [repos, setRepos] = useState([]);\n  const reposFingerprint = JSON.stringify(repos);\n\n  useEffect(() => {\n    loadRepositories();\n  }, [reposFingerprint]);\n\n  const handleAddRepository = async (repo) => {\n    await addRepository(repo);\n    loadRepositories();\n  };\n\n  const handleDeleteRepository = (repo) => {\n    deleteRepository(repo);\n    loadRepositories();\n  };\n\n  const loadRepositories = () => {\n    setRepos(getRepositories());\n  };\n\n  return (\n    <div className={classes.root}>\n      <List>\n        {repos.map((repo) => (\n          <ListItem\n            button\n            key={`repo-item-${repo}`}\n            component={Link}\n            to={`/repos/${repo}/`}\n          >\n            <ListItemAvatar>\n              <Avatar>\n                <BookIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={repo} />\n            <ListItemSecondaryAction>\n              <IconButton\n                aria-label=\"Delete\"\n                onClick={() => handleDeleteRepository(repo)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      <AddRepository handleAddRepository={handleAddRepository} />\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { Redirect } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { putContents } from \"../lib/github\";\nimport { useGlobalStateContext } from \"./GlobalState\";\n\nconst useStyles = makeStyles((theme) => ({\n  whitespacePre: {\n    whiteSpace: \"pre-line\",\n    fontFamily: \"monospace\",\n  },\n  grid: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function AddNewFile({ match }) {\n  const classes = useStyles();\n  const context = useGlobalStateContext();\n  const [newFileName, setNewFileName] = useState(\"\");\n  const [newFileOpen, setNewFileOpen] = useState(false);\n  const [toEditor, setToEditor] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleAddNewFileOpen = () => {\n    setNewFileOpen(true);\n  };\n\n  const handleAddNewFileClose = () => {\n    setNewFileOpen(false);\n    setNewFileName(\"\");\n  };\n\n  const handleUpdateFileName = (event) => {\n    setNewFileName(event.target.value);\n  };\n\n  const handleAddNewFile = async () => {\n    const { repo, branch } = match.params;\n    const path = getNewFilePath();\n    const content = getTemplateContents();\n\n    const response = await putContents(repo, path, content, undefined, branch);\n\n    if (response.status !== 201) {\n      handleShowError(`${response.status}: ${response.statusText}`);\n      return;\n    }\n    setToEditor(true);\n  };\n\n  const handleShowError = (message) => {\n    setMessage(message);\n    setError(true);\n  };\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  const isValidFileName = () => !!newFileName.match(/^[^<>:\"/\\\\|?*]+$/);\n  const getTemplateContents = () => `---\\n---\\n\\n# ${newFileName}`;\n  const getNewFilePath = () =>\n    match.params.path\n      ? `${match.params.path}/${newFileName}.md`\n      : `${newFileName}.md`;\n\n  const { repo, branch } = match.params;\n\n  if (toEditor) {\n    return (\n      <Redirect to={`/repos/${repo}/editor/${branch}/${getNewFilePath()}`} />\n    );\n  }\n\n  return (\n    <>\n      <Grid\n        container\n        className={classes.grid}\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >\n        <Tooltip\n          title={\n            context.isValidGithubToken()\n              ? \"Add Song\"\n              : \"Add a GitHub Token to Enable Editing\"\n          }\n        >\n          <span>\n            <Fab\n              aria-label=\"Add\"\n              disabled={!context.isValidGithubToken()}\n              onClick={handleAddNewFileOpen}\n            >\n              <AddIcon />\n            </Fab>\n          </span>\n        </Tooltip>\n        <Dialog\n          open={newFileOpen}\n          aria-labelledby=\"add-new-file-dialog\"\n          fullWidth={true}\n        >\n          <DialogTitle id=\"add-new-file-dialog-title\">\n            Create New Music Markdown File\n          </DialogTitle>\n          <DialogContent>\n            <Card className={classes.previewCard}>\n              <CardContent>\n                <Typography\n                  variant=\"caption\"\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Preview\n                </Typography>\n                <Typography\n                  variant=\"body1\"\n                  color=\"textPrimary\"\n                  className={classes.whitespacePre}\n                >\n                  {getTemplateContents()}\n                </Typography>\n              </CardContent>\n            </Card>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"owner\"\n              label=\"Music Markdown File Name\"\n              value={newFileName}\n              onChange={handleUpdateFileName}\n              fullWidth\n              error={!isValidFileName()}\n              helperText={\n                !isValidFileName() ? (\n                  \"Invalid file name\"\n                ) : (\n                  <>\n                    {repo}/{branch}/{getNewFilePath()}\n                  </>\n                )\n              }\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">.md</InputAdornment>\n                ),\n              }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleAddNewFileClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button\n              onClick={handleAddNewFile}\n              color=\"primary\"\n              disabled={!isValidFileName()}\n            >\n              Create\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n      <ErrorSnackbar\n        message={message}\n        open={error}\n        handleClose={handleClearError}\n      />\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nimport AddNewFile from \"./AddNewFile\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { getContents } from \"../lib/github\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\n/**\n * Sorts the contents of a GitHub directory. Lists directories first then files,\n * each in alphabetical order.\n * @param {Object[]} contents GitHub directory contents. Contains files and directories.\n */\nfunction sortDir(contents) {\n  contents.sort((a, b) => {\n    if (a.type === \"file\") {\n      if (b.type === \"file\") {\n        return a.name - b.name;\n      }\n      return 1;\n    }\n    if (b.type === \"file\") {\n      return -1;\n    }\n    return a.name - b.name;\n  });\n}\n\n/**\n * A React component for rendering repository files and directories.\n */\nexport default function RepositoryNavigation({ match, location }) {\n  const classes = useStyles();\n  const [contents, setContents] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchContents() {\n      const { repo, path, branch } = match.params;\n\n      const contents = await getContents(repo, path, branch);\n      sortDir(contents);\n      setContents(contents);\n      setIsLoaded(true);\n    }\n    fetchContents();\n  }, [match.params]);\n\n  const { repo, branch } = match.params;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <List key={\"repo-navigation-list\"}>\n          {contents.map((item) => (\n            <ListItem\n              button\n              component={Link}\n              key={`list-group-item-${item.name}`}\n              to={\n                item.type === \"dir\"\n                  ? `/repos/${repo}/browser/${branch}/${item.path}/`\n                  : `/repos/${repo}/viewer/${branch}/${item.path}`\n              }\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  {item.type === \"dir\" ? <FolderIcon /> : <DescriptionIcon />}\n                </Avatar>\n              </ListItemAvatar>\n              {item.type === \"dir\" ? (\n                <ListItemText secondary={item.name}></ListItemText>\n              ) : (\n                <ListItemText primary={item.name}></ListItemText>\n              )}\n            </ListItem>\n          ))}\n        </List>\n        <AddNewFile location={location} match={match} />\n      </div>\n    </>\n  );\n}\n","import Grid from \"@material-ui/core/Grid\";\n\nconst RESPONSIVE_CONTAINER_KEY = \"app-container\";\n\nexport default function ResponsiveContainer(props) {\n  return <Grid key={RESPONSIVE_CONTAINER_KEY}>{props.children}</Grid>;\n}\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport { Link, Route } from \"react-router-dom\";\n\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { guitarChordbook } from \"markdown-it-music/lib/chordbook\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport queryString from \"query-string\";\nimport { renderChordDiagram } from \"markdown-it-music/renderers/chord_diagram\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n  chordSourcePaper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  chordCategoryPaper: {\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n  },\n  chordCategoryTypography: {\n    color: theme.palette.text.primary,\n    textAlign: \"center\",\n  },\n  chordVariantPaper: {\n    display: \"inline-block\",\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n  },\n  chordVariantTypography: {\n    color: theme.palette.text.secondary,\n  },\n  chordDiagram: {\n    filter: theme.palette.type === \"dark\" ? \"invert(100%)\" : \"\",\n  },\n}));\n\nexport default function Sandbox({ location, match }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\">Sandbox</Typography>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/all-features-in-one-place`}>\n            All the Features in One Place\n          </Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/guitar-chordbook`}>Guitar Chordbook</Link>\n        </li>\n      </ul>\n\n      <Route\n        path={`${match.path}/all-features-in-one-place`}\n        component={() => (\n          <MarkdownViewer location={location} source={allFeaturesSource} />\n        )}\n      />\n      <Route\n        path={`${match.path}/guitar-chordbook`}\n        component={AllGuitarChords}\n      />\n    </div>\n  );\n}\n\nconst MarkdownViewer = ({ source, location }) => {\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  return (\n    <MusicMarkdown\n      source={source}\n      columnCount={columnCount}\n      transposeAmount={transposeAmount}\n    />\n  );\n};\n\nconst roots = [\n  \"C\",\n  \"C#\",\n  \"Db\",\n  \"D\",\n  \"D#\",\n  \"Eb\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"Gb\",\n  \"G\",\n  \"G#\",\n  \"Ab\",\n  \"A\",\n  \"A#\",\n  \"Bb\",\n  \"B\",\n];\n\nconst qualities = [\n  \"\",\n  \"m\",\n  \"6\",\n  \"m6\",\n  \"7\",\n  \"maj7\",\n  \"m7\",\n  \"9\",\n  \"dim\",\n  \"aug\",\n  \"sus2\",\n  \"7sus2\",\n  \"sus4\",\n  \"7sus4\",\n  \"5\",\n  \"dim5\",\n  \"dim7\",\n  \"7b5\",\n  \"m7b5\",\n  \"7#5\",\n  \"7b9\",\n  \"7#9\",\n  \"7b9#5\",\n  \"7/6\",\n  \"9b5\",\n  \"9#5\",\n  \"maj9\",\n  \"m9\",\n  \"9/6\",\n  \"m9/6\",\n  \"add9\",\n  \"11\",\n  \"m11\",\n  \"11aug\",\n  \"13\",\n  \"13b9\",\n  \"13b9b5\",\n];\n\nconst AllGuitarChords = ({ location }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography variant=\"h3\">Guitar Chordbook</Typography>\n      <Paper className={classes.chordSourcePaper}>\n        <MarkdownViewer source={allChordsSource} location={location} />\n      </Paper>\n      {roots.map((category, index) => (\n        <Paper key={`category-${index}`} className={classes.chordCategoryPaper}>\n          <Typography className={classes.chordCategoryTypography} variant=\"h4\">\n            {category} Chords\n          </Typography>\n          <ChordCategory category={category} />\n        </Paper>\n      ))}\n    </>\n  );\n};\n\nconst ChordCategory = ({ category }) => {\n  const classes = useStyles();\n  return Array.from(guitarChordbook.keys())\n    .filter((chord) => chord.match(/^[CDEFGAB](?:#|b)?|N\\.C\\./)[0] === category)\n    .map((chord, index) => (\n      <Paper key={`chord-${index}`} className={classes.chordVariantPaper}>\n        {guitarChordbook.get(chord).map((variant, index) => (\n          <span\n            className={classes.chordDiagram}\n            key={`variant-${index}`}\n            dangerouslySetInnerHTML={{ __html: renderChordDiagram(variant) }}\n          />\n        ))}\n        <Typography className={classes.chordVariantTypography} variant=\"h5\">\n          {chord}\n        </Typography>\n      </Paper>\n    ));\n};\n\nconst allChordsSource = `---\n---\n${roots\n  .map(\n    (root) => `## ${root} Chords\nc1: ${qualities.map((quality) => root + quality).join(\" \")}`\n  )\n  .join(\"\\n\\n\")}\n`;\n\nconst allFeaturesSource = `---\nyouTubeId: dN3GbF9Bx6E\n---\n\n# All the Features in One Place\n\n## Chord and Lyrics\nc1: Em               D           Em\nl1: Are you goin' to Scarborough Fair?\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\n\nc1: Em       G                   D\nl1: Remember me to one who lives there\n\nc1: Em       D                  Em\nl1: She once was a true love of mine\n\n## Multiple Overlapping Voices\nc1: Em                         D         Em\nl1: Tell her to make me a      cambric   shirt\nl2:                     On the side of a hill in the deep forest green\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\nl2:                              Tracing a sparrow on snow-crested ground\n\nc1: Em         G               D\nl1: Without no seams nor needlework\nl2:                      Blankets and bedclothes the child of the mountain\n\nc1: Em          D                 Em\nl1: Then she'll be a true love of mine\nl2:                               Sleeps unaware of the clarion call\n\n## VexTab\n\n:::vextab\noptions space=20\n\ntabstave\n  notation=true\n  key=A time=4/4\n\n  notes :q =|: (5/2.5/3.7/4) :8 7-5h6/3 ^3^ 5h6-7/5 ^3^ :q 7V/4 |\n  notes :8 t12p7/4 s5s3/4 :8 3s:16:5-7/5 :h p5/4\n  text :w, |#segno, ,|, :hd, , #tr\n\n\noptions space=25\n\ntabstave\n  notation=true\n\n  notes :q (5/4.5/5) (7/4.7/5)s(5/4.5/5) ^3^\n  notes :8 7-5/4 $.a./b.$ (5/4.5/5)h(7/5) =:|\n  notes :8 (12/5.12/4)ds(5/5.5/4)u 3b4/5\n  notes :h (5V/6.5/4.6/3.7/2) $.italic.let ring$ =|=\n\n  text :h, ,.font=Times-12-italic, D.S. al coda, |#coda\n  text :h, ,.-1, .font=Arial-14-bold,A13\n  text ++, .23, #f\n :::\n\n## ABC\n\n:::abc\nX: 1\nM: 4/4\nL: 1/16\nK: Amin\n\"Am\" (C16 | C4) B,2C2 D6 CB, | (C16 | C4) B,2C2 \"F\" D6 CA, |\n\"C\" G,8 \"E\" _A,8 | \"Am\" =A,8 \"F\" (3F4 F4 F4 | \"E\" F2 (E6 E8) | z6 ^A2 B4 e4 |\n\"Am\" e2d2c2(d2 \"G\" d4) .=A4 | \"F\" e2d2c2(d2 \"G\" d4) .A4 |\n\"Esus4\" e4 e4 e2d2B2d2 | \"E\" e4 e4 e2g2e2d2 |\n\"Am\" .e4 c2 \"G\" .d4 c2 e4 | \"F\" z2 c2 e2 \"G\" d6 c2d2 |\n\"Esus4\" e2e2e2d2 d2B2B2_A2 | \"E\" _A2F2F2E2 =A2B2A2G2 |\n:::\n\n`;\n","import \"./App.css\";\n\nimport { GlobalStateProvider, useGlobalStateContext } from \"./GlobalState\";\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\n\nimport BranchNavigation from \"./BranchNavigation\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport MarkdownEditor from \"./MarkdownEditor\";\nimport MarkdownViewer from \"./MarkdownViewer\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport MusicMarkdownNavbar from \"./MusicMarkdownNavbar\";\nimport { REPO_REGEX } from \"../lib/constants\";\nimport RepositoryEditor from \"./RepositoryEditor\";\nimport RepositoryNavigation from \"./RepositoryNavigation\";\nimport ResponsiveContainer from \"./ResponsiveContainer\";\nimport Sandbox from \"./Sandbox.js\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n\nconst App = () => (\n  <GlobalStateProvider>\n    <ThemeProvider />\n  </GlobalStateProvider>\n);\n\nconst ThemeProvider = () => {\n  const context = useGlobalStateContext();\n\n  return (\n    <MuiThemeProvider theme={createMuiTheme(context.data.theme)}>\n      <CssBaseline />\n      <ResponsiveContainer>{[HomeRouter()]}</ResponsiveContainer>\n    </MuiThemeProvider>\n  );\n};\n\nconst HomeRouter = () => (\n  <Router key=\"home-router\">\n    <>\n      <Route component={MusicMarkdownNavbar} />\n      <Switch>\n        <Route\n          path={`${REPO_REGEX}/viewer/:branch/:path+`}\n          component={MarkdownViewer}\n        />\n        <Route\n          path={`${REPO_REGEX}/browser/:branch/:path*`}\n          component={RepositoryNavigation}\n        />\n        <Route\n          path={`${REPO_REGEX}/editor/:branch/:path*`}\n          component={MarkdownEditor}\n        />\n        <Route path={REPO_REGEX} component={BranchNavigation} />\n        <Route path=\"/sandbox\" component={Sandbox} />\n        <Route path=\"/\" component={RepositoryEditor} />\n      </Switch>\n    </>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}