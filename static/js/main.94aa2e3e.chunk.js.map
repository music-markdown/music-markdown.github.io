{"version":3,"sources":["registerServiceWorker.js","redux/actions.js","components/MarkdownMusic.js","redux/actionTypes.js","lib/constants.js","lib/github.js","components/MarkdownMusicSourceFetcher.js","components/YouTube.js","components/MusicToolbar.js","components/MusicMarkdownNavbar.js","components/ResponsiveContainer.js","components/NavigationListItem.js","components/RouterBreadcrumbs.js","components/RepositoryNavigation.js","components/BranchNavigation.js","components/Sandbox.js","redux/reducers/updateColumnCount.js","redux/reducers/updateFontSize.js","redux/reducers/transpose.js","redux/reducers/youTubeId.js","redux/reducers/index.js","redux/store.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","transposeAmount","columnCount","fontSize","MusicMarkdown","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","md","MarkdownIt","use","MarkdownItMusic","updateYouTubeId","meta","youTubeId","setTranspose","setColumnCount","setFontSize","setMaxWidth","width","html","render","source","_this$props","classes","theme","jss","create","nested","sheet","createStyleSheet","musicMarkdownTheme","& path","fill","palette","text","primary","& text","attach","react_default","a","createElement","dangerouslySetInnerHTML","__html","className","concat","markdownBody","React","Component","connect","youtubeId","type","payload","withStyles","backgroundColor","background","default","color","withTheme","REPOS_LOCAL_STORAGE_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","GITHUB_API_URL","getContents","_x","_x2","_x3","_x4","_getContents","apply","arguments","_callee","owner","repo","path","branch","apiUrl","response","regenerator_default","wrap","_context","prev","next","undefined","length","getApiUrl","fetch","sent","abrupt","json","stop","getRepositories","repoListStr","localStorage","getItem","JSON","parse","getBranches","_x5","_x6","_getBranches","_callee2","_context2","url","URL","githubToken","searchParams","set","MarkdownMusicSourceFetcher","queryParams","queryString","search","parseInt","transpose","isLoaded","markdown","params","setState","atob","content","_this$state","MarkdownMusic","newTransposeAmount","newColumnCount","newFontSize","YouTubePlayer","_ref","title","src","allow","allowFullScreen","YouTubeToggle","visible","anchorEl","handleToggle","bind","assertThisInitialized","_this2","Fragment","IconButton_default","onClick","buttonRef","node","PlayArrow_default","Popper_default","id","open","placement","disablePortal","modifiers","flip","enabled","YouTube_YouTubePlayer","ConnectedYouTubeToggle","MusicToolbar","handleTransposeClick","handleColumnClick","handleFontClick","increase","decrease","event","target","textContent","updateColumnCount","updateFontSize","Toolbar_default","Grid_default","container","direction","justify","alignItems","spacing","name","clickCallback","map","key","item","Typography_default","variant","Button_default","isIncreaseTransposeAmount","isIncreaseColumnCount","isIncreaseFontSize","MusicMarkdownNavbar","handleDrawerClose","handleDrawerOpen","repoMap","storedRepos","repoList","push","setItem","stringify","addRepository","AppBar_default","position","reactRouterHoverInherit","component","Link","to","MusicMarkdownNavbar_RepositoriesNavDropdown","NavLink","grow","Drawer_default","anchor","Divider_default","components_MusicToolbar","RepositoriesNavDropdown","handleClick","handleClose","_this3","repoDropdownItems","forEach","repoId","MenuItem_default","Menu_default","onClose","flexGrow","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","children","NavigationListItem","itemName","ListItem_default","button","ListItemText_default","paper","padding","unit","pathname","breadcrumbItems","previousPath","ignoreIndex","currDir","i","directory","indexOf","Link_default","RouterLink","buildBreadcrumb","split","filter","value","Paper_default","Breadcrumbs_default","RepositoryNavigation","contents","prevProps","prevOwner","prevRepo","prevPath","prevBranch","message","listGroupItems","_this2$props$match$pa","viewType","itemJsx","linkToContent","components_NavigationListItem","action","components_RouterBreadcrumbs","List_default","BranchNavigation","branches","MarkdownEditor","handleChange","editorStyles","minHeight","marginRight","style","display","onChange","AllChords","Array","from","guitarChordLibrary","keys","chord","index","align","get","renderChordDiagram","Sandbox","Sandbox_MarkdownEditor","parseVoicing","Sandbox_AllChords","combineReducers","store","createStore","rootReducer","createMuiTheme","typography","useNextVariants","&:hover","HomeRouter","es","HashRouter","Route","exact","Navigation","excat","App","MuiThemeProvider_default","CssBaseline_default","components_ResponsiveContainer","ReactDOM","src_components_App","document","getElementById","process","origin","addEventListener","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.94aa2e3e.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  TRANSPOSE,\n  UPDATE_COLUMN_COUNT,\n  UPDATE_FONT_SIZE,\n  UPDATE_YOUTUBE_ID\n} from './actionTypes';\n\nlet transposeAmount = 0;\nlet columnCount = 1;\nlet fontSize = 13;\n\nexport const updateYouTubeId = (youtubeId) => ({\n  type: UPDATE_YOUTUBE_ID,\n  payload: {\n    youtubeId\n  }\n});\n\nexport const transpose = (isIncreaseTransposeAmount) => ({\n  type: TRANSPOSE,\n  payload: {\n    transposeAmount: isIncreaseTransposeAmount ? ++transposeAmount : --transposeAmount\n  }\n});\n\nexport const updateColumnCount = (isIncreaseColumnCount) => ({\n  type: UPDATE_COLUMN_COUNT,\n  payload: {\n    columnCount: isIncreaseColumnCount ? ++columnCount : --columnCount\n  }\n});\n\nexport const updateFontSize = (isIncreaseFontSize) => ({\n  type: UPDATE_FONT_SIZE,\n  payload: {\n    fontSize: isIncreaseFontSize ? ++fontSize : --fontSize\n  }\n});\n\nexport const setTranspose = (newTransposeAmount) => {\n  transposeAmount = newTransposeAmount;\n\n  return {\n    type: TRANSPOSE,\n    payload: {\n      transposeAmount\n    }\n  };\n};\n\nexport const setColumnCount = (newColumnCount) => {\n  columnCount = newColumnCount;\n\n  return {\n    type: UPDATE_COLUMN_COUNT,\n    payload: {\n      columnCount\n    }\n  };\n};\n\nexport const setFontSize = (newFontSize) => {\n  fontSize = newFontSize;\n\n  return {\n    type: UPDATE_FONT_SIZE,\n    payload: {\n      fontSize\n    }\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { create } from 'jss';\nimport nested from 'jss-nested';\n\nimport { updateYouTubeId } from '../redux/actions';\n\nconst styles = (theme) => ({\n  markdownBody: {\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary\n  },\n});\n\nclass MusicMarkdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.md = new MarkdownIt()\n      .use(MarkdownItMusic);\n  }\n\n  componentDidMount() {\n    this.props.updateYouTubeId(this.md.meta.youTubeId);\n  }\n\n  render() {\n    this.md.setTranspose(this.props.transposeAmount);\n    this.md.setColumnCount(this.props.columnCount);\n    this.md.setFontSize(this.props.fontSize);\n    this.md.setMaxWidth(this.props.width);\n    const html = this.md.render(this.props.source);\n\n    const { classes, theme } = this.props;\n\n    // Create a style sheet for <path> and <text> tags, so that abcjs color will render in dark/light theme.\n    const jss = create();\n    jss.use(nested());\n    const sheet = jss.createStyleSheet({\n      musicMarkdownTheme: {\n        '& path': { fill: theme.palette.text.primary },\n        '& text': { fill: theme.palette.text.primary }\n      }\n    });\n    sheet.attach();\n\n    return (\n      <div dangerouslySetInnerHTML={{ __html: html }}\n        className={`${classes.markdownBody} ${sheet.classes.musicMarkdownTheme}`}/>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { transposeAmount, columnCount, fontSize } = state;\n  return { transposeAmount, columnCount, fontSize };\n}\n\nexport default connect(mapStateToProps, { updateYouTubeId })(withStyles(styles, { withTheme: true })(MusicMarkdown));\n","export const TRANSPOSE = 'TRANSPOSE';\nexport const UPDATE_COLUMN_COUNT = 'UPDATE_COLUMN_COUNT';\nexport const UPDATE_FONT_SIZE = 'UPDATE_FONT_SIZE';\nexport const UPDATE_YOUTUBE_ID = 'UPDATE_YOUTUBE_ID';\n","/* Local Storage */\n\n/** Key namespace for music-markdown when storing app specific values in localStorage */\nexport const MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE = 'music-markdown';\n/** Key for markdown-music repositories specific localStorage values*/\nexport const REPOS_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:repositories`;\nexport const GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:github_token`;\nexport const GITHUB_API_URL = 'https://api.github.com';\n","import { REPOS_LOCAL_STORAGE_KEY, GITHUB_TOKEN_LOCAL_STORAGE_KEY, GITHUB_API_URL } from './constants';\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n * @param {string} path The directory or file to retrieve\n * @param {string} branch The branch to retrive contents from\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(owner, repo, path, branch) {\n  if (path === undefined || path.length === 0) {\n    path = '';\n  }\n  const apiUrl = getApiUrl(`/repos/${owner}/${repo}/contents/${path}`, branch);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\n/**\n * Returns a promise of a list of branches for the given repository.\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n */\nexport async function getBranches(owner, repo) {\n  const apiUrl = getApiUrl(`/repos/${owner}/${repo}/branches`);\n  const response = await fetch(apiUrl);\n\n  return response.json();\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} owner Repo owner\n * @param {string} repo Repo name\n * @param {string} path Subdirectory\n * @param {string} branch Branch name\n */\nexport function addRepository(owner, repo, path, branch) {\n  const repoMap = { owner, repo, path, branch };\n  const storedRepos = getRepositories();\n  const repoList = storedRepos.length > 0 ? storedRepos : [];\n  repoList.push(repoMap);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repoList));\n}\n\n/**\n * Composes the GitHub API url for the given url, attaching the user's GitHub\n * access token if it exists.\n * @param {string} url The path and search params\n * @param {string} branch The branch to get from\n * @return {URL} Composed GitHub API url with user's personal access token\n */\nexport function getApiUrl(url, branch) {\n  url = new URL(url, GITHUB_API_URL);\n\n  const githubToken = localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    url.searchParams.set('access_token', githubToken);\n  }\n\n  if (branch) {\n    url.searchParams.set('ref', branch);\n  }\n\n  return url;\n}\n","import React from 'react';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\n\nimport MarkdownMusic from './MarkdownMusic';\nimport { getContents } from '../lib/github';\nimport { setTranspose, setColumnCount, setFontSize } from '../redux/actions';\n\n// TODO: Decouple retrieval of source markdown and controlling arguments to MarkdownMusic.\n// https://github.com/music-markdown/music-markdown/pull/25#discussion_r259598474\nclass MarkdownMusicSourceFetcher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.props.setTranspose(parseInt(this.queryParams.transpose, 10) || 0);\n    this.props.setColumnCount(parseInt(this.queryParams.columnCount, 10) || 1);\n    this.props.setFontSize(parseInt(this.queryParams.fontSize, 10) || 13);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n    };\n  }\n\n  async componentDidMount() {\n    const { owner, repo, path } = this.props.match.params;\n\n    const json = await getContents(owner, repo, path);\n    this.setState({\n      isLoaded: true,\n      markdown: atob(json.content)\n    });\n  }\n\n  // TODO: Separate the UI component with the fetch logic, we don't necessarily need the fetcher\n  // to be a React Component\n  render() {\n    const { isLoaded, markdown } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"Markdown\">\n          <MarkdownMusic source={markdown} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(\n  undefined,\n  { setTranspose, setColumnCount, setFontSize }\n)(MarkdownMusicSourceFetcher);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Popper from '@material-ui/core/Popper';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nconst YouTubePlayer = ({ youTubeId }) => (\n  <div className=\"embed-responsive embed-responsive-16by9\">\n    <iframe\n      title={youTubeId}\n      className='embed-responsive-item'\n      src={`https://www.youtube.com/embed/${youTubeId}`}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen>\n    </iframe>\n  </div>\n);\n\nclass YouTubeToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.anchorEl = undefined;\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    this.setState((state) => ({\n      visible: !state.visible\n    }));\n  }\n\n  render() {\n    if (!this.props.youTubeId) {\n      return <div></div>;\n    }\n\n    return (\n      <>\n        <IconButton onClick={this.handleToggle} buttonRef={(node) => {\n          this.anchorEl = node;\n        }}>\n          <PlayArrowIcon />\n        </IconButton>\n        <Popper\n          id='youtube-player'\n          open={this.state.visible}\n          anchorEl={this.anchorEl}\n          placement='top'\n          disablePortal={false}\n          modifiers={{\n            flip: {\n              enabled: true,\n            }\n          }}\n        >\n          <YouTubePlayer youTubeId={this.props.youTubeId} />\n        </Popper>\n      </>\n    );\n  }\n}\n\nconst ConnectedYouTubeToggle = connect((state) => ({ youTubeId: state.youTubeId }))(YouTubeToggle);\n\nexport {\n  YouTubePlayer,\n  ConnectedYouTubeToggle as YouTubeToggle\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\n\nimport { transpose } from '../redux/actions';\nimport { updateColumnCount } from '../redux/actions';\nimport { updateFontSize } from '../redux/actions';\nimport { YouTubeToggle } from './YouTube';\n\nclass MusicToolbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTransposeClick = this.handleTransposeClick.bind(this);\n    this.handleColumnClick = this.handleColumnClick.bind(this);\n    this.handleFontClick = this.handleFontClick.bind(this);\n\n    this.increase = '+1';\n    this.decrease = '-1';\n  }\n\n  handleTransposeClick(event) {\n    // TODO: Update history with new transposeAmount\n    this.props.transpose(event.target.textContent === this.increase);\n  }\n\n  handleColumnClick(event) {\n    // TODO: Update history with new columnCount\n    this.props.updateColumnCount(event.target.textContent === this.increase);\n  }\n\n  handleFontClick(event) {\n    // TODO: Update history with new fontSize\n    this.props.updateFontSize(event.target.textContent === this.increase);\n  }\n\n  render() {\n    // TODO: Move dark theme to redux store.\n    return (\n      <Toolbar>\n        <Grid container direction='row' justify='center' alignItems='center' spacing={16}>\n          {[{ name: 'Transpose', clickCallback: this.handleTransposeClick },\n            { name: 'Column Count', clickCallback: this.handleColumnClick },\n            { name: 'Font Size', clickCallback: this.handleFontClick }].map(({ name, clickCallback }) => (\n            <React.Fragment key={name}>\n              <Grid item>\n                <Typography variant='h6'>{name}</Typography>\n              </Grid>\n              <Grid item>\n                <Button onClick={clickCallback}>\n                  <Typography>{this.decrease}</Typography>\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button onClick={clickCallback}>\n                  <Typography>{this.increase}</Typography>\n                </Button>\n              </Grid>\n            </React.Fragment>\n          ))}\n          <Grid item>\n            <YouTubeToggle youTubeId={this.props.youTubeId} />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({ youTubeId: state.youTubeId }),\n  { transpose, updateColumnCount, updateFontSize }\n)(MusicToolbar);\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { getRepositories, addRepository } from '../lib/github';\nimport { REPOS_LOCAL_STORAGE_KEY } from '../lib/constants';\nimport MusicToolbar from './MusicToolbar';\n\nconst styles = (theme) => ({\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n  grow: {\n    flexGrow: 1\n  }\n});\n\nclass MusicMarkdownNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n\n    this.handleDrawerClose = this.handleDrawerClose.bind(this);\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n  }\n\n  handleDrawerOpen() {\n    this.setState({ open: !this.state.open });\n  };\n\n  handleDrawerClose() {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { open } = this.state;\n\n    if (!localStorage.getItem(REPOS_LOCAL_STORAGE_KEY)) {\n      // TODO: sanitize this input when storing\n      addRepository('music-markdown', 'almost-in-time', '/', 'master');\n    }\n\n    return (\n      <>\n        <AppBar position={'sticky'} key='top-navbar'>\n          <Toolbar>\n            <Button className={classes.reactRouterHoverInherit} component={Link} to='/'>\n              <Typography variant='h6'>\n                Music Markdown\n              </Typography>\n            </Button>\n            <RepositoriesNavDropdown {...this.props} />\n            <Button className={classes.reactRouterHoverInherit} component={NavLink} to='/sandbox'>\n              Sandbox\n            </Button>\n            <div className={classes.grow} />\n            <Button onClick={this.handleDrawerOpen}>\n              Toolbar\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Drawer open={open} variant={'persistent'} anchor={'bottom'}>\n          <Divider />\n          <MusicToolbar></MusicToolbar>\n        </Drawer>\n      </>\n    );\n  }\n};\n\n/**\n * For all added repositories, add it to the dropdown list\n */\n// TODO: List first x items, then put in dropdown item to expand full list\nclass RepositoriesNavDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick() {\n    this.setState((state) => ({\n      open: !state.open\n    }));\n  }\n\n  handleClose() {\n    this.setState(() => ({\n      open: false\n    }));\n  }\n\n  render() {\n    const repoDropdownItems = [];\n    const repoList = getRepositories();\n\n    if (repoList.length > 0) {\n      const { reactRouterHoverInherit } = this.props.classes;\n\n      repoList.forEach((repo) => {\n        const repoId = `${repo.owner}/${repo.repo}/${repo.branch}${repo.path}`;\n        repoDropdownItems.push(\n          <MenuItem component={NavLink}\n            to={`/repos/${repo.owner}/${repo.repo}/browser/${repo.branch}${repo.path}`}\n            key={`dropdown-item-${repoId}`}\n            onClick={this.handleClose}\n            className={reactRouterHoverInherit}>\n            {repoId}\n          </MenuItem>);\n      });\n    }\n\n    const { open } = this.state;\n\n    return (\n      <>\n        <Button onClick={this.handleClick} buttonRef={(node) => {\n          this.anchorEl = node;\n        }}>\n          Music Repositories\n        </Button>\n\n        <Menu id='dropdown-menu' anchorEl={this.anchorEl} open={open} onClose={this.handleClose}>\n          {repoDropdownItems}\n        </Menu>\n      </>\n    );\n  }\n};\n\nexport default withStyles(styles)(MusicMarkdownNavbar);\n","import Grid from '@material-ui/core/Grid';\nimport React from 'react';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Grid key={RESPONSIVE_CONTAINER_KEY}>\n      {props.children}\n    </Grid>\n  );\n}\n\nexport default ResponsiveContainer;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\n\nconst NavigationListItem = ({ to, itemName }) => (\n  <ListItem button component={Link} to={to}>\n    <ListItemText primary={itemName}></ListItemText>\n  </ListItem>\n);\n\nexport default NavigationListItem;\n","import React from 'react';\nimport Breadcrumbs from '@material-ui/lab/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst styles = (theme) => ({\n  paper: {\n    padding: `${theme.spacing.unit}px`,\n  },\n  reactRouterHoverInherit: theme.reactRouterHoverInherit\n});\n\nfunction buildBreadcrumb(previousPath, classes) {\n  const breadcrumbItems = [];\n\n  // ignoreIndex matches the Route defined in App.js.\n  // Certain portions are not useful to user in the breadcrumb, so we remove them.\n  const ignoreIndex = [0/* /repos */, 3/* /:viewName(browser|viewer|editor) */];\n  const keyBase = 'breadcrumb-item-';\n\n  let currDir = '';\n  for (let i = 0; i < previousPath.length; i++) {\n    const directory = previousPath[i];\n    currDir = currDir.concat('/', directory);\n\n    if (ignoreIndex.indexOf(i) !== -1) {\n      continue;\n    }\n\n    if (i === previousPath.length - 1) {\n      // Last item should be active\n      breadcrumbItems.push(\n        <Typography color=\"textPrimary\" key={`${keyBase}${i}`}>\n          {directory}\n        </Typography>\n      );\n    } else {\n      breadcrumbItems.push(\n        <Link\n          component={RouterLink}\n          to={`${currDir}/`}\n          key={`${keyBase}${i}`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          {directory}\n        </Link>\n      );\n    }\n  };\n\n  return breadcrumbItems;\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {string} pathname current URI pathname\n * @return {Array} List of BreadcrumbItems\n */\nconst RouterBreadcrumbs = ({ pathname, classes }) => {\n  const keyBase = 'breadcrumb-item-';\n\n  const subDirectoriesArr = pathname.split('/').filter((value) => !!value);\n\n  const breadcrumbItems = buildBreadcrumb(subDirectoriesArr, classes);\n\n  return (\n    <Paper className={classes.paper}>\n      <Breadcrumbs>\n        <Link\n          component={RouterLink}\n          to={`/`}\n          key={`${keyBase}Home`}\n          color='inherit'\n          className={classes.reactRouterHoverInherit}>\n          Home\n        </Link>\n        {breadcrumbItems}\n      </Breadcrumbs>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(RouterBreadcrumbs);\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationListItem from './NavigationListItem';\nimport RouterBreadcrumbs from './RouterBreadcrumbs';\nimport { getContents } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass RepositoryNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      contents: []\n    };\n  }\n\n  async componentDidMount() {\n    const { owner, repo, path, branch } = this.props.match.params;\n\n    const contents = await getContents(owner, repo, path, branch);\n    this.setState({\n      isLoaded: true,\n      contents\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Props before update\n   */\n  async componentDidUpdate(prevProps) {\n    const { owner: prevOwner, repo: prevRepo, path: prevPath, branch: prevBranch } = prevProps.match.params;\n    const { owner, repo, path, branch } = this.props.match.params;\n\n    if (prevOwner !== owner || prevRepo !== repo || prevPath !== path || prevBranch !== branch) {\n      const contents = await getContents(owner, repo, path, branch);\n      this.setState({\n        isLoaded: true,\n        contents\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded, contents } = this.state;\n    if (!isLoaded) {\n      return <div className=\"Markdown\">Loading...</div>;\n    }\n\n    if (!contents.forEach) {\n      return <div>{contents.message}</div>;\n    }\n\n    const listGroupItems = [];\n\n    contents.forEach((item) => {\n      const key = `list-group-item-${item.name}`;\n\n      const { owner, repo, branch } = this.props.match.params;\n\n      let viewType = 'error';\n      let itemJsx = <div>File type {item.type} not supported</div>;\n\n      if (item.type === 'dir') {\n        viewType = 'browser';\n        itemJsx = <i>{`/${item.name}`}</i>;\n      } else if (item.type === 'file') {\n        viewType = 'viewer';\n        itemJsx = item.name;\n      }\n\n      const linkToContent = `/repos/${owner}/${repo}/${viewType}/${branch}/${item.path}`;\n\n      listGroupItems.push(<Divider key={`navigation-divider-${item.name}`}/>);\n      listGroupItems.push(<NavigationListItem to={linkToContent} key={key} action itemName={itemJsx} />);\n    });\n\n    return (\n      <>\n        <Typography variant='h3'>\n          Repository Contents\n        </Typography>\n        <RouterBreadcrumbs pathname={this.props.location.pathname} />\n        <List key={'repo-navigation-list'}>\n          {listGroupItems}\n          <Divider key={'end-of-list-divider'}/>\n        </List>\n      </>\n    );\n  }\n}\n\nexport default RepositoryNavigation;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport NavigationListItem from './NavigationListItem';\nimport RouterBreadcrumbs from './RouterBreadcrumbs';\nimport { getBranches } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass BranchNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      branches: []\n    };\n  }\n\n  /**\n   * When component first initializes, execute following lifecycle actions\n   */\n  async componentDidMount() {\n    const { owner, repo } = this.props.match.params;\n\n    const branches = await getBranches(owner, repo);\n    this.setState({\n      isLoaded: true,\n      branches\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Updated query string\n   */\n  async componentDidUpdate(prevProps) {\n    const { owner: prevOwner, repo: prevRepo } = prevProps.match.params;\n    const { owner, repo } = this.props.match.params;\n\n    if (prevOwner !== owner || prevRepo !== repo) {\n      const branches = await getBranches(owner, repo);\n      this.setState({\n        isLoaded: true,\n        branches\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      const listGroupItems = [];\n      const { branches } = this.state;\n\n      if (!branches.forEach) {\n        return <div>{branches.message}</div>;\n      }\n\n      branches.forEach((item) => {\n        const key = `list-group-item-${item.name}`;\n\n        const { owner, repo } = this.props.match.params;\n\n        const linkToContent = `/repos/${owner}/${repo}/browser/${item.name}`;\n\n        listGroupItems.push(<Divider key={`navigation-divider-${item.name}`}/>);\n        listGroupItems.push(<NavigationListItem to={linkToContent} key={key} itemName={item.name} action />);\n      });\n\n      return (\n        <>\n          <Typography variant='h3'>\n            Branches\n          </Typography>\n          <RouterBreadcrumbs pathname={this.props.location.pathname} />\n          <List>\n            {listGroupItems}\n            <Divider />\n          </List>\n        </>\n      );\n    }\n  }\n}\n\nexport default BranchNavigation;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport MarkdownMusic from './MarkdownMusic';\nimport { parseVoicing } from 'markdown-it-music/lib/voicing';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport { guitarChordLibrary } from 'markdown-it-music/renderers/chord_library';\n\nconst Sandbox = () => (\n  <div>\n    <Typography variant='h2'>Music Markdown Sandbox</Typography>\n    <Typography>\n      This page exercises various subcomponents of music-markdown and\n      markdown-it-music.\n    </Typography>\n\n    <Typography variant='h3'>Markdown Editor</Typography>\n    <MarkdownEditor/>\n\n    <Typography variant='h3'>\n      Chord Diagram Renderer\n    </Typography>\n    <Typography>\n      This section exercises the Chord Diagram Renderer.\n    </Typography>\n    <Typography variant='h4'>Esus4 (200x200)</Typography>\n    <div dangerouslySetInnerHTML={\n      { __html: renderChordDiagram(parseVoicing('o2 m1 m2 n3,2 n4,4 b5,6,5'), 200, 200) }\n    } />\n\n    <h2>Entire Chord Library</h2>\n    <AllChords/>\n  </div>\n);\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const value = '```chords\\n' +\n      'c1:                    Am     G  F          G      Esus4  E\\n' +\n      'v1: All the leaves are brown        and the sky is gray\\n\\n' +\n      'c1: F               C     E  Am       F        Esus4  E\\n' +\n      'v1: I\\'ve been for a walk         on a winter\\'s day\\n\\n' +\n      'c1:                 Am    G  F       G      Esus4  E\\n' +\n      'v1: I\\'d be safe and warm        if I was in L.A.\\n\\n' +\n      'c1:            Am        G  F     G               Esus4  E\\n' +\n      'v1: California dreamin\\'        on such a winter\\'s day\\n' +\n      '```';\n\n    this.state = {\n      value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const styles = { display: 'flex', width: '100%' };\n    const editorStyles = {\n      minHeight: '500px', width: '50%', marginRight: '20px'\n    };\n\n    return <div style={styles}>\n      <textarea value={this.state.value} onChange={this.handleChange} style={editorStyles}></textarea>\n      <div style={editorStyles}>\n        <MarkdownMusic source={this.state.value}></MarkdownMusic>\n      </div>\n    </div>;\n  }\n}\n\nconst AllChords = () => (\n  Array.from(guitarChordLibrary.keys()).map((chord, index) => (\n    <div key={index} align=\"center\" style={{ display: 'inline-block' }}>\n      {guitarChordLibrary.get(chord).map((value, index) => (\n        <span key={index} dangerouslySetInnerHTML={\n          { __html: renderChordDiagram(value) }\n        } />\n      ))}\n      <h5>{chord}</h5>\n    </div>\n  ))\n);\n\nexport default Sandbox;\n","import { UPDATE_COLUMN_COUNT } from '../actionTypes';\n\nconst columnCount = (state = 1, action) => {\n  switch (action.type) {\n  case UPDATE_COLUMN_COUNT: {\n    return action.payload.columnCount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default columnCount;\n","import { UPDATE_FONT_SIZE } from '../actionTypes';\n\nconst fontSize = (state = 13, action) => {\n  switch (action.type) {\n  case UPDATE_FONT_SIZE: {\n    return action.payload.fontSize;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default fontSize;\n","import { TRANSPOSE } from '../actionTypes';\n\nconst transposeAmount = (state = 0, action) => {\n  switch (action.type) {\n  case TRANSPOSE: {\n    return action.payload.transposeAmount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default transposeAmount;\n","import { UPDATE_YOUTUBE_ID } from '../actionTypes';\n\nconst youTubeId = (state = '', action) => {\n  switch (action.type) {\n  case UPDATE_YOUTUBE_ID: {\n    return action.payload.youtubeId || '';\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default youTubeId;\n","import { combineReducers } from 'redux';\nimport columnCount from './updateColumnCount';\nimport fontSize from './updateFontSize';\nimport transposeAmount from './transpose';\nimport youTubeId from './youTubeId';\n\nexport default combineReducers({ transposeAmount, columnCount, fontSize, youTubeId });\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nlet store = undefined;\nif (process.env.NODE_ENV === 'production') {\n  store = createStore(rootReducer);\n} else {\n  store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nexport default store;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nimport MarkdownMusicSourceFetcher from './MarkdownMusicSourceFetcher';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar';\nimport ResponsiveContainer from './ResponsiveContainer';\nimport RepositoryNavigation from './RepositoryNavigation';\nimport BranchNavigation from './BranchNavigation';\nimport Sandbox from './Sandbox.js';\nimport store from '../redux/store';\nimport './App.scss';\n\n// TODO: Build button toggle for dark/light\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    type: 'light',\n  },\n  reactRouterHoverInherit: {\n    '&:hover': {\n      color: 'inherit'\n    },\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <ResponsiveContainer children={[HomeRouter()]} />\n  </MuiThemeProvider>\n);\n\nconst HomeRouter = () => (\n  <Provider key=\"home-provider\" store={store}>\n    <Router key=\"home-router\">\n      <div>\n        <Route component={MusicMarkdownNavbar} />\n        <Route exact path=\"/\" component={Navigation} />\n        <Route excat path='/sandbox' component={Sandbox} />\n        <Route exact path='/repos/:owner/:repo' component={BranchNavigation} />\n        <Route exact path='/repos/:owner/:repo/:view(viewer)/:branch/:path+' component={MarkdownMusicSourceFetcher} />\n        <Route exact path='/repos/:owner/:repo/:view(browser)/:branch/:path*' component={RepositoryNavigation} />\n        {/* TODO: Add editor component */}\n        <Route exact path='/repos/:owner/:repo/:view(editor)/:branch/:path+' component={Sandbox} />\n      </div>\n    </Router>\n  </Provider>\n);\n\nconst Navigation = () => (\n  <Typography variant='h2'>\n    Welcome to Music Markdown!\n  </Typography>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}