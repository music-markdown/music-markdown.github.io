{"version":3,"sources":["tools/asciitab.js","lib/github.js","lib/hooks.js","context/GitHubApiProvider.js","context/ReposProvider.js","context/SnackbarProvider.js","context/ThemeProvider.js","context/YouTubeIdProvider.js","lib/constants.js","components/AppBar/LogoAppBarItem.js","components/MoreMenu/ColumnCountMenuItem.js","components/MoreMenu/GithubTokenDialog.js","components/MoreMenu/GithubTokenMenuItem.js","components/MoreMenu/SongActionsMenuItem.js","components/MoreMenu/ThemeMenuItem.js","components/MoreMenu/TransposeMenuItem.js","components/MoreMenu/index.js","components/AppBar/MoreAppBarItem.js","components/AppBar/SearchAppBarItem.js","components/AppBar/YouTubePlayer.js","components/AppBar/YouTubeAppBarItem.js","components/AppBar/index.js","components/RouterBreadcrumbs.js","components/BranchView/index.js","components/ErrorSnackbar.js","components/FileView/AddNewFile.js","components/FileView/index.js","components/MusicMd/Render.js","components/MusicMd/Edit.js","components/MusicMd/View.js","components/RepoView/AddRepository.js","components/RepoView/index.js","components/Sandbox.js","components/App.js","serviceWorkerRegistration.js","index.js"],"names":["isChord","require","State","getMaybeHeading","line","endsWith","slice","startsWith","getMaybeChords","tokens","trim","split","token","asciiTabConvert","input","state","voiceIndex","lines","output","push","maybeHeading","maybeChords","join","module","async","console","log","stream","buffer","Buffer","alloc","chunk","concat","toString","read","process","stdin","main","putContents","repo","path","content","sha","branch","gitHubToken","body","message","Base64","encode","gitHubApiFetch","method","mode","JSON","stringify","isValidGithubToken","match","init","URL","headers","Authorization","fetch","Request","useLocalStorage","key","initialValue","storedValue","setStoredValue","useState","item","localStorage","getItem","parse","error","value","valueToStore","Function","setItem","removeItem","GitHubApiContext","createContext","useGitHubApi","useContext","GitHubApiProvider","children","setGitHubToken","Provider","Error","useGitHubFetch","defaultValue","loading","setLoading","setValue","useEffect","response","cache","json","doFetch","useContents","decode","ReposContext","useRepos","useRepoMetadata","repoMetadata","setRepoMetadata","repos","Promise","all","map","getRepoMetadata","ReposProvider","setRepos","addRepo","includes","status","verifyRepoExists","deleteRepo","filter","r","SnackbarContext","SnackbarProvider","open","setOpen","setMessage","handleClose","showSnackbar","newMessage","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","THEMES","light","palette","dark","ThemeContext","ThemeProvider","prefersDarkTheme","useMediaQuery","themeName","setThemeName","getTheme","StyledEngineProvider","injectFirst","theme","createTheme","CssBaseline","YouTubeIdContext","useYouTubeId","YouTubeIdProvider","youTubeId","setYouTubeId","COLUMN_COUNT_QUERY_KEY","REPO_REGEX","ThemeAwareLogo","styled","LogoAppBarItem","Button","component","Link","to","src","width","alt","ColumnCountMenuItem","location","useLocation","history","useHistory","columnCount","queryString","search","Box","Typography","variant","ToggleButtonGroup","fullWidth","exclusive","onChange","event","name","params","replace","handleUpdateQuery","ToggleButton","AccordionDetails","withStyles","root","backgroundColor","AccordionActions","GithubTokenInstructions","Accordion","AccordionSummary","expandIcon","href","rel","target","GithubTokenDialog","setToken","isValidToken","handleCloseDialog","Dialog","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","e","helperText","DialogActions","onClick","color","disabled","GithubTokenMenuItem","apiKeyDialogOpen","setApiKeyDialogOpen","startIcon","ShareButton","close","navigator","clipboard","writeText","window","EditViewButton","useParams","edit","view","SongListButton","folder","ShowOnGitHubButton","githubLink","SongActionsMenuItem","Stack","direction","spacing","ThemeMenuItem","newThemeName","TransposeMenuItem","transpose","Number","setTranspose","String","alignItems","justifyContent","IconButton","aria-label","Divider","orientation","MoreMenu","anchorEl","Popper","anchor","Paper","maxHeight","overflow","sx","padding","render","MoreAppBarItem","setAnchorEl","Boolean","ClickAwayListener","onClickAway","Tooltip","title","currentTarget","size","SearchAppBarItem","trees","tree","files","Autocomplete","options","renderInput","reason","useStyles","makeStyles","paper","position","bottom","right","cursor","YouTubePlayer","visible","classes","nodeRef","useRef","ref","className","style","border","allow","allowFullScreen","YouTubeAppBarItem","setVisible","AppBar","Toolbar","flexGrow","reactRouterHoverInherit","DirectoryBreadcrumbs","pathname","subDirectoriesArr","breadcrumbItems","previousPath","ignoreIndex","keyBase","currDir","i","length","directory","indexOf","role","RouterLink","buildBreadcrumb","Breadcrumbs","BranchViewer","branches","LinearProgress","List","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","icon","fontSize","iconVariant","opacity","marginRight","display","ErrorSnackbar","SnackbarContent","aria-describedby","classNames","action","whitespacePre","whiteSpace","fontFamily","grid","AddNewFile","newFileName","setNewFileName","newFileOpen","setNewFileOpen","toEditor","setToEditor","setError","handleShowError","isValidFileName","getTemplateContents","getNewFilePath","Grid","container","Fab","aria-labelledby","Card","previewCard","CardContent","gutterBottom","InputProps","endAdornment","InputAdornment","newPath","undefined","statusText","FileViewer","contents","sort","a","b","type","sortDir","secondary","columns","columnGap","columnRuleWidth","columnRuleStyle","columnRuleColor","text","MusicMarkdownRender","source","transposeAmount","useTheme","html","setHtml","md","MarkdownIt","use","MarkdownItMusic","setTheme","setMaxWidth","meta","err","script","exec","eval","dangerouslySetInnerHTML","__html","Render","props","componentRef","dimensions","setDimensions","height","handleResize","current","offsetWidth","offsetHeight","addEventListener","removeEventListener","useContainerDimensions","fabProgress","green","top","left","zIndex","editor","marginLeft","fab","toolbar","buttonSuccess","Edit","markdown","setMarkdown","debouncedMarkdown","delay","debounced","setDebounced","timer","setTimeout","clearTimeout","useDebounce","setSha","saving","setSaving","success","setSuccess","isDirty","setIsDirty","buttonClassname","parts","viewerLink","githubParts","xs","CircularProgress","maxLines","Infinity","editorProps","$blockScrolling","View","AddRepository","handleAddRepository","setName","owner","setOwner","handleDialogClose","RepoViewer","full_name","default_branch","ListItemSecondaryAction","chordSourcePaper","chordCategoryPaper","textAlign","chordCategoryTypography","chordVariantPaper","chordVariantTypography","chordDiagram","Sandbox","url","MarkdownViewer","allFeaturesSource","AllGuitarChords","roots","qualities","allChordsSource","category","index","ChordCategory","Array","from","guitarChordbook","keys","chord","get","renderChordDiagram","quality","HomeRouter","App","isLocalhost","hostname","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","StrictMode","document","getElementById","origin","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"yHAAA,sBAAM,QAAEA,GAAYC,EAAQ,IAEtBC,EACK,EADLA,EAEG,EAFHA,EAGG,EAGT,SAASC,EAAgBC,GACvB,OAAIA,EAAKC,SAAS,KACV,MAAN,OAAaD,EAAKE,MAAM,GAAI,IAG1BF,EAAKG,WAAW,MAAQH,EAAKC,SAAS,KAClC,MAAN,OAAaD,EAAKE,MAAM,GAAI,IAGvB,KAGT,SAASE,EAAeJ,GACtB,MAAMK,EAASL,EAAKM,OAAOC,MAAM,OAEjC,IAAK,MAAMC,KAASH,EAClB,IAAKT,EAAQY,GACX,OAAO,KAIX,MAAM,OAAN,OAAcR,GAGhB,SAASS,EAAgBC,GACvB,IAAIC,EAAQb,EACRc,EAAa,EACjB,MAAMC,EAAQH,EAAMH,MAAM,MACpBO,EAAS,GAEf,IAAK,MAAMd,KAAQa,EACjB,GAAIb,EAAKG,WAAW,OAClBQ,EAAQb,EACRgB,EAAOC,KAAKf,QAId,GAAIW,IAAUb,EAmBd,GAAIa,IAAUb,EA0BVa,IAAUb,IACC,QAATE,IACFW,EAAQb,GAGVgB,EAAOC,KAAKf,QA/Bd,CACE,MAAMgB,EAAejB,EAAgBC,GACrC,GAAIgB,EAAc,CAChBL,EAAQb,EACRgB,EAAOC,KAAK,IACZD,EAAOC,KAAKC,GACZ,SAGF,MAAMC,EAAcb,EAAeJ,GACnC,GAAIiB,EAAa,CACfH,EAAOC,KAAK,IACZD,EAAOC,KAAKE,GACZL,EAAa,EACb,SAGF,GAAoB,KAAhBZ,EAAKM,OACP,SAGFQ,EAAOC,KAAP,WAAgBH,EAAhB,aAA+BZ,IAC/BY,GAAc,MAzChB,CACE,MAAMI,EAAejB,EAAgBC,GACrC,GAAIgB,EAAc,CAChBF,EAAOC,KAAKC,GACZ,SAGF,MAAMC,EAAcb,EAAeJ,GACnC,GAAIiB,EAAa,CACfN,EAAQb,EACRgB,EAAOC,KAAKE,GACZL,EAAa,EACb,SAGFE,EAAOC,KAAKf,GAwChB,OAAOc,EAAOI,KAAK,MAeiBrB,WAAiBsB,GAJvDC,iBACEC,QAAQC,IAAIb,QATdW,eAAoBG,GAClB,IAAIC,EAASC,EAAOC,MAAM,GAC1B,UAAW,MAAMC,KAASJ,EACxBC,EAASC,EAAOG,OAAO,CAACJ,EAAQG,IAElC,OAAOH,EAAOK,SAAS,QAIWC,CAAKC,EAAQC,SAI/CC,GAGaxB,Q,gJCnHRW,eAAec,EACpBC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAO,CACXC,QAAQ,4BAAD,OAA8BN,GACrCC,QAASM,IAAOC,OAAOP,GACvBE,UAOF,OAJID,IACFG,EAAKH,IAAMA,GAGNO,EAAe,UAAD,OAAWV,EAAX,qBAA4BC,GAAQ,CACvDU,OAAQ,MACRC,KAAM,OACNN,KAAMO,KAAKC,UAAUR,GACrBD,gBAuBG,SAASU,EAAmBV,GACjC,QACIA,MACCA,EAAYW,MAAM,qBACjBX,EAAYW,MAAM,0BAOnB/B,eAAeyB,EAAeT,GAAM,YAAEI,KAAgBY,IAC3D,MAAM1C,EAAQ,IAAI2C,IAAIjB,EA3DD,0BAoErB,OAPII,IACFY,EAAO,IACFA,EACEE,QAAS,CAAEC,cAAc,SAAD,OAAWf,MAIrCgB,MAAM,IAAIC,QAAQ/C,EAAO0C,ICrC3B,SAASM,EAAgBC,EAAKC,GACnC,MAAOC,EAAaC,GAAkBC,oBAAS,KAC7C,IAEE,MAAMC,EAAOC,aAAaC,QAAQP,GAElC,OAAOK,EAAOhB,KAAKmB,MAAMH,GAAQJ,EACjC,MAAOQ,GAGP,OADA/C,QAAQC,IAAI8C,GACLR,MAoBX,MAAO,CAACC,EAhBUQ,IAChB,IACE,MAAMC,EACJD,aAAiBE,SAAWF,EAAMR,GAAeQ,EACnDP,EAAeQ,GACXD,EACFJ,aAAaO,QAAQb,EAAKX,KAAKC,UAAUqB,IAEzCL,aAAaQ,WAAWd,GAE1B,MAAOS,GAEP/C,QAAQC,IAAI8C,M,WCtDlB,MAAMM,EAAmBC,0BAEZC,EAAe,IAAMC,qBAAWH,GAEtC,SAASI,GAAkB,SAAEC,IAClC,MAAOvC,EAAawC,GAAkBtB,EAAgB,cAAe,IASrE,OACE,cAACgB,EAAiBO,SAAlB,CACEZ,MAAO,CAAE7B,cAAawC,eATGxE,IAC3B,GAAIA,IAAU0C,EAAmB1C,GAC/B,MAAM,IAAI0E,MAAJ,WAAc1E,EAAd,oBAERwE,EAAexE,KAIf,SAGGuE,IAKA,SAASI,EAAe/C,EAAMgD,GACnC,MAAM,YAAE5C,GAAgBoC,KACjBS,EAASC,GAAcvB,oBAAS,IAChCM,EAAOkB,GAAYxB,mBAASqB,GAgBnC,OAdAI,qBAAU,KACRF,GAAW,GAEKlE,WACd,MAAMqE,QAAiB5C,EAAeT,EAAM,CAC1CI,cACAkD,MAAO,aAETH,QAAeE,EAASE,QACxBL,GAAW,IAEbM,KACC,CAACxD,EAAMI,IAEH,CAAE6C,UAAShB,SAGb,SAASwB,EAAY1D,EAAMC,EAAMG,GACtC,MAAM,QAAE8C,EAAF,MAAWhB,GAAUc,EAAe,UAAD,OAC7BhD,EAD6B,qBACZC,GAAQ,GADI,gBACMG,IAG/C,MAAO,CAAE8C,UAAShB,QAAOhC,SADJ,OAALgC,QAAK,IAALA,OAAA,EAAAA,EAAOhC,SAAUM,IAAOmD,OAAOzB,EAAMhC,SAAW,ICjDlE,MAAM0D,EAAepB,0BAERqB,EAAW,IAAMnB,qBAAWkB,GAElC,SAASE,IACd,MAAOC,EAAcC,GAAmBpC,mBAAS,KAC3C,MAAEqC,GAAUJ,KACZ,YAAExD,GAAgBoC,IAOxB,OALAY,qBAAU,KACR,WACEW,QHkBC/E,eAA+BgF,GAAO,YAAE5D,IAC7C,OAAO6D,QAAQC,IACbF,EAAMG,KAAInF,gBACDyB,EAAe,UAAD,OAAWV,GAAQ,CAAEK,iBAAgBmD,UGrBpCa,CAAgBJ,EAAO,CAAE5D,kBADjD,KAEC,CAAC4D,EAAO5D,IAEJ0D,EAGF,SAASO,GAAc,SAAE1B,IAC9B,MAAOqB,EAAOM,GAAYhD,EAAgB,QAAS,KAC7C,YAAElB,GAAgBoC,IAcxB,OACE,cAACmB,EAAad,SAAd,CAAuBZ,MAAO,CAAE+B,QAAOM,WAAUC,QAbnCvF,UACd,GAAIgF,EAAMQ,SAASzE,GACjB,MAAM,IAAI+C,MAAJ,WAAc/C,EAAd,mCHcLf,eAAgCe,GAAM,YAAEK,IAE7C,GAAwB,aADDK,EAAe,UAAD,OAAWV,GAAQ,CAAEK,iBAC7CqE,OACX,MAAM,IAAI3B,MAAJ,WAAc/C,EAAd,2BGfA2E,CAAiB3E,EAAM,CAAEK,gBAC/BkE,EAAS,IAAIN,EAAOjE,KAQsC4E,WALxC5E,IAClBuE,EAASN,EAAMY,QAAQC,GAAMA,IAAM9E,OAInC,SACG4C,I,sBCrCP,MAAMmC,EAAkBvC,0BAIT,SAASwC,GAAiB,SAAEpC,IACzC,MAAOqC,EAAMC,GAAWtD,oBAAS,IAC1BrB,EAAS4E,GAAcvD,mBAAS,IAEjCwD,EAAc,IAAMF,GAAQ,GAOlC,OACE,eAACH,EAAgBjC,SAAjB,CAA0BZ,MAAO,CAAEmD,aANfC,IACpBH,EAAWG,GACXJ,GAAQ,KAIR,UACGtC,EACD,cAAC2C,EAAA,EAAD,CACEN,KAAMA,EACNO,iBAAkB,IAClBC,QAASL,EACTM,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAJlD,SAME,cAACC,EAAA,EAAD,CAAOJ,QAASL,EAAaU,SAAS,UAAtC,SACGvF,S,iDCnBX,MAAMwF,EAAS,CACbC,MAAO,CACLC,QAAS,CACPrF,KAAM,UAGVsF,KAAM,CACJD,QAAS,CACPrF,KAAM,UAKNuF,EAAe3D,0BAId,SAAS4D,GAAc,SAAExD,IAC9B,MAAMyD,EAAmBC,YAAc,iCAChCC,EAAWC,GAAgBjF,EAAgB,YAAa,UASzDkF,EAAW,IAAMV,EANH,WAAdQ,EACKF,EAAmB,OAAS,QAE9BE,GAKT,OACE,cAACJ,EAAarD,SAAd,CAAuBZ,MAAO,CAAEqE,YAAWC,eAAcC,YAAzD,SACE,cAACC,EAAA,EAAD,CAAsBC,aAAW,EAAjC,SACE,eAAC,IAAD,CAAkBC,MAAOC,YAAYJ,KAArC,UACE,cAACK,EAAA,EAAD,IACClE,SC1CX,MAAMmE,EAAmBvE,0BAEZwE,EAAe,IAAMtE,qBAAWqE,GAEtC,SAASE,GAAkB,SAAErE,IAClC,MAAOsE,EAAWC,GAAgBvF,mBAAS,MAC3C,OACE,cAACmF,EAAiBjE,SAAlB,CAA2BZ,MAAO,CAAEgF,YAAWC,gBAA/C,SACGvE,ICVA,MAAMwE,EAAyB,UACzBC,EAAa,4B,iDCG1B,MAAMC,EAAiBC,YAAO,MAAPA,EAAc,EAAGX,YAAH,CACnC/B,OAA+B,SAAvB+B,EAAMX,QAAQrF,KAAkB,eAAiB,OAG5C,SAAS4G,IACtB,OACE,cAACC,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAG,IAA5B,SACE,cAACN,EAAD,CACEO,IAAI,qBACJC,MAAO,GACPC,IAAI,qB,gICNG,SAASC,KACtB,MAAMC,EAAWC,cACXC,EAAUC,cAGVC,EADSC,KAAYtG,MAAMiG,EAASM,QAChB,SAA4B,IAYtD,OACE,eAACC,EAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYC,QAAQ,YAApB,qBACA,cAACC,GAAA,EAAD,CACEC,WAAS,EACT1G,MAAOmG,EACPQ,WAAS,EACTC,SAAU,CAACC,EAAO7G,IAjBE,EAAC8G,EAAM9G,EAAOe,KACtC,MAAMgG,EAASX,KAAYtG,MAAMiG,EAASM,QACtCrG,IAAUe,SACLgG,EAAOD,GAEdC,EAAOD,GAAQ9G,EAEjBiG,EAAQe,QAAQ,CAAEX,OAAQD,KAAYxH,UAAUmI,MAW1CE,CAAkB/B,EAAwBlF,EAAO,KALrD,SAQG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKkC,KAAKiE,GAC7C,cAACe,GAAA,EAAD,CAAclH,MAAOmG,EAArB,SACGA,GADoCA,U,uICrBjD,MAAMgB,GAAmBC,aAAW,CAClCC,KAAM,CACJC,gBAAiB,uBAFIF,CAItBG,MAEGC,GAA0B,IAC9B,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAkBC,WAAY,cAAC,KAAD,IAA9B,SACE,eAACpB,GAAA,EAAD,oBACQ,6CADR,4DAKF,cAACY,GAAD,UACE,gCACE,2DAEA,wKAKA,+BACE,2CACY,IACV,mBACES,KAAK,qCACLC,IAAI,aACJC,OAAO,SAHT,oCAMK,IARP,qBAWA,wCACQ,mDADR,OAGA,wCACQ,qCADR,SACyB,+CADzB,OAGA,wCACQ,uCADR,UAC4B,qCAD5B,mBAGA,iEACiC,+CADjC,OAGA,+FAOK,SAASC,IAAkB,KAAEhF,EAAF,YAAQG,IAChD,MAAM,YAAE/E,EAAF,eAAewC,GAAmBJ,KACjCpE,EAAO6L,GAAYtI,mBAASvB,GAE7B8J,EAAgB9L,GACH,KAAVA,GAAgB0C,EAAmB1C,GAUtC+L,EAAoB,KACxBF,EAAS7J,GACT+E,KAGF,OACE,eAACiF,GAAA,EAAD,CAAQpF,KAAMA,EAAMQ,QAAS2E,EAA7B,UACE,cAACE,GAAA,EAAD,CAAaC,GAAG,qBAAhB,8BACA,cAACC,GAAA,EAAD,UACE,cAACd,GAAD,MAEF,cAACc,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPC,MAAM,eACNhC,WAAS,EACT1G,MAAO7D,GAAS,GAChByK,SAAW+B,GAAMX,EAASW,EAAEb,OAAO9H,OACnCD,OAAQkI,EAAa9L,GACrByM,WAAW,8JAKf,eAACC,GAAA,EAAD,WACE,cAACtD,EAAA,EAAD,CAAQuD,QAASZ,EAAmBa,MAAM,YAA1C,oBAGA,cAACxD,EAAA,EAAD,CACEuD,QArCgB,KAClBb,EAAa9L,KACfwE,EAAexE,GACf+G,MAmCI6F,MAAM,UACNC,UAAWf,EAAa9L,GAH1B,SAKa,KAAVA,EAAe,QAAU,eCjHrB,SAAS8M,KACtB,MAAOC,EAAkBC,GAAuBzJ,oBAAS,GAUzD,OACE,eAAC4G,EAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYC,QAAQ,YAApB,0BACA,cAACjB,EAAA,EAAD,CACEmB,WAAS,EACTF,QAAQ,WACRsC,QAdyB,KAC7BK,GAAoB,IAchBC,UAAW,cAAC,KAAD,IAJb,8BASA,cAACrB,GAAD,CACEhF,KAAMmG,EACNhG,YAlB0B,KAC9BiG,GAAoB,S,wFCJxB,MAAME,GAAc,EAAGC,YACrB,MAAM,aAAEnG,GRNuB3C,qBAAWqC,GQc1C,OACE,cAAC0C,EAAA,EAAD,CAAQiB,QAAQ,WAAW4C,UAAW,cAAC,KAAD,IAAeN,QAPzC,KACZS,UAAUC,UAAUC,UAAUC,OAAO3D,SAAS6B,MAC9CzE,EAAa,qCACbmG,KAIA,6BAMEK,GAAiB,EAAGL,YACxB,MAAMrD,EAAUC,eACV,KAAEpI,EAAF,KAAQY,EAAR,OAAcR,EAAd,KAAsBH,GAAS6L,cAE/BC,EAAO,KACXP,IACArD,EAAQvJ,KAAR,iBAAuBoB,EAAvB,mBAAsCI,EAAtC,YAAgDH,KAG5C+L,EAAO,KACXR,IACArD,EAAQvJ,KAAR,iBAAuBoB,EAAvB,mBAAsCI,EAAtC,YAAgDH,KAGlD,MAAa,WAATW,EAEA,cAAC6G,EAAA,EAAD,CAAQiB,QAAQ,WAAW4C,UAAW,cAAC,KAAD,IAAcN,QAASe,EAA7D,yBAKS,WAATnL,EAEA,cAAC6G,EAAA,EAAD,CAAQiB,QAAQ,WAAW4C,UAAW,cAAC,KAAD,IAAmBN,QAASgB,EAAlE,4BAKG,MAGHC,GAAiB,EAAGT,YACxB,MAAMrD,EAAUC,eACV,KAAEpI,EAAF,OAAQI,EAAR,KAAgBH,GAAS6L,cACzBI,EAASjM,EAAK7B,MAAM,KAAKL,MAAM,GAAI,GAAGgB,KAAK,KAOjD,OACE,cAAC0I,EAAA,EAAD,CAAQiB,QAAQ,WAAW4C,UAAW,cAAC,KAAD,IAAkBN,QAN7C,KACXQ,IACArD,EAAQvJ,KAAR,iBAAuBoB,EAAvB,oBAAuCI,EAAvC,YAAiD8L,KAIjD,gCAMEC,GAAqB,KACzB,MAAM,KAAEnM,EAAF,OAAQI,EAAR,KAAgBH,GAAS6L,cACzBM,EAAU,6BAAyBpM,EAAzB,iBAAsCI,EAAtC,YAAgDH,GAEhE,OACE,cAACwH,EAAA,EAAD,CAAQqC,KAAMsC,EAAY1D,QAAQ,WAAW4C,UAAW,cAAC,KAAD,IAAxD,6BAMW,SAASe,IAAoB,MAAEb,IAC5C,OACE,eAAChD,EAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYC,QAAQ,YAApB,0BACA,eAAC4D,GAAA,EAAD,CAAOC,UAAU,SAASC,QAAS,EAAnC,UACE,cAACjB,GAAD,CAAaC,MAAOA,IACpB,cAACK,GAAD,CAAgBL,MAAOA,IACvB,cAACS,GAAD,CAAgBT,MAAOA,IACvB,cAACW,GAAD,U,mECpFO,SAASM,KACtB,MAAM,UAAElG,EAAF,aAAaC,GRcS9D,qBAAWyD,GQZvC,OACE,eAACqC,EAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYC,QAAQ,YAApB,mBACA,eAACC,GAAA,EAAD,CACEzG,MAAOqE,EACPqC,WAAS,EACTC,WAAS,EACTC,SAAU,CAACC,EAAO2D,IAAiBlG,EAAakG,GAJlD,UAME,cAACtD,GAAA,EAAD,CAAclH,MAAM,QAApB,SACE,eAACoK,GAAA,EAAD,CAAOE,QAAS,EAAGD,UAAU,MAA7B,UACE,cAAC,KAAD,IACA,cAAC9D,GAAA,EAAD,CAAYC,QAAQ,SAApB,wBAGJ,cAACU,GAAA,EAAD,CAAclH,MAAM,SAApB,SACE,eAACoK,GAAA,EAAD,CAAOE,QAAS,EAAGD,UAAU,MAA7B,UACE,cAAC,KAAD,IACA,cAAC9D,GAAA,EAAD,CAAYC,QAAQ,SAApB,yBAGJ,cAACU,GAAA,EAAD,CAAclH,MAAM,OAApB,SACE,eAACoK,GAAA,EAAD,CAAOE,QAAS,EAAGD,UAAU,MAA7B,UACE,cAAC,KAAD,IACA,cAAC9D,GAAA,EAAD,CAAYC,QAAQ,SAApB,6B,6EC3BG,SAASiE,KACtB,MAAM1E,EAAWC,cACXC,EAAUC,cAEVa,EAASX,KAAYtG,MAAMiG,EAASM,QACpCqE,EAAYC,OAAO5D,EAAM,WAAyB,KAElD6D,EAAgBF,IACpB,MAAM3D,EAASX,KAAYtG,MAAMiG,EAASM,QACxB,IAAdqE,SACK3D,EAAM,UAEbA,EAAM,UAAwB8D,OAAOH,GAEvCzE,EAAQe,QAAQ,CAAEX,OAAQD,KAAYxH,UAAUmI,MAGlD,OACE,eAACT,EAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYC,QAAQ,YAApB,uBACA,eAAC4D,GAAA,EAAD,CACEC,UAAU,MACVC,QAAS,EACTQ,WAAW,SACXC,eAAe,SAJjB,UAME,cAACC,EAAA,EAAD,CACEC,aAAW,iBACXlC,MAAM,UACND,QAAS,IAAM8B,EAAaF,EAAY,GAH1C,SAKE,cAAC,KAAD,MAEF,cAACnE,GAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BkE,IAC7B,cAACM,EAAA,EAAD,CACEC,aAAW,eACXlC,MAAM,UACND,QAAS,IAAM8B,EAAaF,EAAY,GAH1C,SAKE,cAAC,KAAD,MAEF,cAACQ,GAAA,EAAD,CAASC,YAAY,aACrB,cAAC5F,EAAA,EAAD,CACEiB,QAAQ,WACR4C,UAAW,cAAC,KAAD,IACXN,QAAS,IAAM8B,EAAa,GAH9B,yBCzCO,SAASQ,IAAS,KAAErI,EAAF,MAAQuG,EAAR,SAAe+B,IAC9C,OACE,cAACC,EAAA,EAAD,CAAQC,OAAO,QAAQxI,KAAMA,EAAMsI,SAAUA,EAA7C,SACE,cAACG,GAAA,EAAD,UACE,cAAClF,EAAA,EAAD,CAAKmF,UAAU,oBAAoBC,SAAS,OAAOC,GAAI,CAAEC,QAAS,GAAlE,SACE,eAACxB,GAAA,EAAD,CAAOE,QAAS,EAAhB,UACE,cAAC,IAAD,CACEvM,KAAI,UAAKoH,EAAL,wCACJ0G,OAAQ,IACN,qCACE,cAAC1B,GAAD,CAAqBb,MAAOA,IAC5B,cAACmB,GAAD,IACA,cAAC3E,GAAD,SAIN,cAACyE,GAAD,IACA,cAACtB,GAAD,aCpBG,SAAS6C,KACtB,MAAOT,EAAUU,GAAerM,mBAAS,MACnCqD,EAAOiJ,QAAQX,GAMfnI,EAAc,KAClB6I,EAAY,OAGd,OACE,cAACzF,EAAA,EAAD,UACE,cAAC2F,EAAA,EAAD,CAAmBC,YAAahJ,EAAhC,SACE,eAACoD,EAAA,EAAD,WACE,cAAC6F,EAAA,EAAD,CAASC,MAAM,OAAf,SACE,cAACpB,EAAA,EAAD,CAAYlC,QAbAjC,IACpBkF,EAAYhJ,EAAO,KAAO8D,EAAMwF,gBAYWC,KAAK,QAAxC,SACE,cAAC,IAAD,QAGJ,cAAClB,GAAD,CAAUrI,KAAMA,EAAMuG,MAAOpG,EAAamI,SAAUA,W,cCxB/C,SAASkB,KACtB,MAAM,KAAEzO,EAAF,OAAQI,GAAW0L,cACnB3D,EAAUC,eACV,QAAElF,EAAShB,MAAOwM,GAAU1L,EAAe,UAAD,OACpChD,EADoC,sBAClBI,EADkB,gBAE9C,CAAEuO,KAAM,KAEJC,EAAQF,EAAMC,KAAKvK,KAAKuK,GAASA,EAAK1O,OAQ5C,OACE,cAAC4O,GAAA,EAAD,CACEjG,WAAS,EACTsC,SAAUhI,EACVsL,KAAK,QACLM,QAASF,GAAS,GAClBG,YAAc9F,GACZ,cAACwB,GAAA,EAAD,IAAexB,EAAQ2B,MAAO1H,EAAU,gBAAa,kBAEvD4F,SAfiB,CAACC,EAAO7G,EAAO8M,KACnB,iBAAXA,GACF7G,EAAQvJ,KAAR,iBAAuBoB,EAAvB,mBAAsCI,EAAtC,YAAgD8B,O,wDCTtD,MAAM+M,GAAYC,cAAYtI,IAAD,CAC3BuI,MAAO,CACLC,SAAU,QACVC,OAAQzI,EAAM4F,QAAQ,GACtB8C,MAAO1I,EAAM4F,QAAQ,GACrBsB,QAASlH,EAAM4F,QAAQ,GACvB+C,OAAQ,YAIG,SAASC,IAAc,UAAEtI,EAAF,QAAauI,IACjD,MAAMC,EAAUT,KACVU,EAAUC,mBAEhB,OAAKH,GAAYvI,EAKf,cAAC,KAAD,CAAWyI,QAASA,EAApB,SACE,cAACjC,GAAA,EAAD,CAAOmC,IAAKF,EAASG,UAAWJ,EAAQP,MAAxC,SACE,wBACEb,MAAM,UACNyB,MAAO,CAAEC,OAAQ,GACjBnI,IAAG,wCAAmCX,EAAnC,gCACH+I,MAAM,gEACNC,iBAAe,QAXd,KCfI,SAASC,KACtB,MAAM,UAAEjJ,GAAcF,KACfyI,EAASW,GAAcxO,oBAAS,GAEvCyB,qBAAU,KACR+M,GAAYlJ,KACX,CAACA,IAMJ,OAAKA,EAKH,qCACE,cAACmH,EAAA,EAAD,CAASC,MAAM,6BAAf,SACE,cAACpB,EAAA,EAAD,CACEjC,MAAOwE,EAAU,YAAc,UAC/BzE,QAba,KACnBoF,GAAYX,IAaNjB,KAAK,QAHP,SAKE,cAAC,KAAD,QAGJ,cAACgB,GAAD,CAAeC,QAASA,EAASvI,UAAWA,OAdvC,KCTI,SAASmJ,KACtB,OACE,cAAC,IAAD,CAAWjB,SAAU,SAArB,SACE,eAACkB,EAAA,EAAD,WACE,cAAC9I,EAAD,IACA,cAAC,IAAD,CACEvH,KAAI,UAAKoH,EAAL,yBACJK,UAAW+G,KAGb,cAACjG,EAAA,EAAD,CAAKqF,GAAI,CAAE0C,SAAU,KAErB,cAAC,IAAD,CACEtQ,KAAI,UAAKoH,EAAL,wCACJ0G,OAAQ,IAAM,cAACoC,GAAD,MAEhB,cAACnC,GAAD,QAd+B,c,yGCLvC,MAAMiB,GAAYC,cAAYtI,IAAD,CAC3BuI,MAAO,CACLrB,QAASlH,EAAM4F,QAAQ,IAEzBgE,wBAAyB5J,EAAM4J,4BAwDlB,SAASC,KACtB,MAAM,SAAEC,GAAaxI,cACfwH,EAAUT,KAGV0B,EAAoBD,EAAStS,MAAM,KAAKyG,QAAQ3C,KAAYA,IAClEyO,EAAkB,GAAK,UAEvB,MAAMC,EA7DR,SAAyBC,EAAcnB,GACrC,MAAMkB,EAAkB,GAIlBE,EAAc,CAClB,EAAgB,GAEZC,EAAU,mBAEhB,IAAIC,EAAU,GACd,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAaK,OAAQD,IAAK,CAC5C,MAAME,EAAYN,EAAaI,GAC/BD,EAAUA,EAAQvR,OAAO,IAAK0R,IAEE,IAA5BL,EAAYM,QAAQH,KAIpBA,IAAMJ,EAAaK,OAAS,EAE9BN,EAAgBhS,KACd,cAAC6J,GAAA,EAAD,CACE4I,KAAK,aACLpG,MAAM,cAFR,SAKGkG,GALH,UAGUJ,GAHV,OAGoBE,KAMtBL,EAAgBhS,KACd,cAAC+I,GAAA,EAAD,CACE0J,KAAK,aACL3J,UAAW4J,IACX1J,GAAE,UAAKoJ,EAAL,KAEF/F,MAAM,UACN6E,UAAWJ,EAAQc,wBANrB,SAQGW,GARH,UAIUJ,GAJV,OAIoBE,MAU1B,OAAOL,EAeiBW,CAAgBZ,EAAmBjB,GAE3D,OACE,cAAChC,GAAA,EAAD,CAAOoC,UAAWJ,EAAQP,MAA1B,SACE,eAACqC,GAAA,EAAD,WACE,cAAC7J,GAAA,EAAD,CACE0J,KAAK,aACL3J,UAAW4J,IACX1J,GAAE,IAEFqD,MAAM,UACN6E,UAAWJ,EAAQc,wBANrB,2BAVU,mBAUV,SAUCI,OC9ET,MAAM3B,GAAYC,aAAW,CAC3B3F,KAAM,CACJgH,SAAU,EACVzC,QAAS,KAOE,SAAS2D,IAAa,SAAExJ,IACrC,MAAMyH,EAAUT,MACV,KAAEjP,GAAS8L,eACX,QAAE5I,EAAShB,MAAOwP,GAAa1O,EAAe,UAAD,OACvChD,EADuC,cAInD,OAAIkD,EACK,cAACyO,GAAA,EAAD,IAIP,qCACE,cAAClB,GAAD,CAAsBC,SAAUzI,EAASyI,WACzC,qBAAKZ,UAAWJ,EAAQnG,KAAxB,SACE,cAACqI,GAAA,EAAD,UACGF,EAAStN,KAAKvC,GACb,eAACgQ,GAAA,EAAD,CACEC,QAAM,EACNpK,UAAWC,IAEXC,GAAE,iBAAY5H,EAAZ,oBAA4B6B,EAAKmH,KAAjC,KAJJ,UAME,cAAC+I,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAACC,GAAA,EAAD,CAAcC,QAASrQ,EAAKmH,SAX9B,0BAG0BnH,EAAKmH,gB,8LClC3C,MAAMiG,GAAYC,cAAYtI,IAAD,CAC3B3E,MAAO,CACLuH,gBAAiB5C,EAAMX,QAAQhE,MAAMiE,MAEvCiM,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAa3L,EAAM4F,QAAQ,IAE7BjM,QAAS,CACPiS,QAAS,OACTxF,WAAY,UAEdrC,OAAQ,CACNA,OAAQ/D,EAAM4F,QAAQ,QAIX,SAASiG,IAAc,KAAExN,EAAF,YAAQG,EAAR,QAAqB7E,IACzD,MAAMmP,EAAUT,KAChB,OACE,cAAC1J,EAAA,EAAD,CACEG,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAC7CX,KAAMA,EACNO,iBAAkB,IAClBC,QAASL,EAJX,SAME,cAACsN,GAAA,EAAD,CACE5C,UAAWJ,EAAQzN,MACnB0Q,mBAAiB,kBACjBpS,QACE,uBAAMgK,GAAG,kBAAkBuF,UAAWJ,EAAQnP,QAA9C,UACE,cAAC,KAAD,CACEuP,UAAW8C,KAAWlD,EAAQyC,KAAMzC,EAAQ2C,eAE7C9R,KAGLsS,OAAQ,CACN,cAAC3F,EAAA,EAAD,CAEEC,aAAW,QACXlC,MAAM,UACN6E,UAAWJ,EAAQlE,MACnBR,QAAS5F,EACToJ,KAAK,QANP,SAQE,cAAC,KAAD,CAAWsB,UAAWJ,EAAQyC,QAP1B,cC7BhB,MAAMlD,GAAYC,cAAYtI,IAAD,CAC3BkM,cAAe,CACbC,WAAY,WACZC,WAAY,aAEdC,KAAM,CACJ7D,SAAU,QACVC,OAAQzI,EAAM4F,QAAQ,GACtB8C,MAAO1I,EAAM4F,QAAQ,QAIV,SAAS0G,KACtB,MAAMxD,EAAUT,MACV,KAAEjP,EAAF,KAAQC,EAAR,OAAcG,GAAW0L,eACzB,YAAEzL,GAAgBoC,KACjB0Q,EAAaC,GAAkBxR,mBAAS,KACxCyR,EAAaC,GAAkB1R,oBAAS,IACxC2R,EAAUC,GAAe5R,oBAAS,IAClCrB,EAAS4E,GAAcvD,mBAAS,KAChCK,EAAOwR,GAAY7R,oBAAS,GAmC7B8R,EAAmBnT,IACvB4E,EAAW5E,GACXkT,GAAS,IAULE,EAAkB,MAAQR,EAAYnS,MAAM,oBAC5C4S,EAAsB,4BAAuBT,GAC7CU,EAAiB,IACrB5T,EAAI,UAAMA,EAAN,YAAckT,EAAd,iBAAoCA,EAApC,OAEN,OAAII,EAEA,cAAC,IAAD,CAAU3L,GAAE,iBAAY5H,EAAZ,mBAA2BI,EAA3B,YAAqCyT,OAKnD,qCACE,eAACC,GAAA,EAAD,CACEC,WAAS,EACTjE,UAAWJ,EAAQuD,KACnB1G,UAAU,MACVU,eAAe,WACfD,WAAW,WALb,UAOE,cAACqB,EAAA,EAAD,CACEC,MACEjO,EAAc,WAAa,uCAF/B,SAKE,+BACE,cAAC2T,GAAA,EAAD,CACE7G,aAAW,MACXjC,UAAW7K,EACX2K,QA1EiB,KAC3BsI,GAAe,IAsEP,SAKE,cAAC,KAAD,UAIN,eAACjJ,GAAA,EAAD,CACEpF,KAAMoO,EACNY,kBAAgB,sBAChBrL,WAAW,EAHb,UAKE,cAAC0B,GAAA,EAAD,CAAaC,GAAG,4BAAhB,4CAGA,eAACC,GAAA,EAAD,WACE,cAAC0J,GAAA,EAAD,CAAMpE,UAAWJ,EAAQyE,YAAzB,SACE,eAACC,GAAA,EAAD,WACE,cAAC3L,GAAA,EAAD,CACEC,QAAQ,UACRuC,MAAM,gBACNoJ,cAAY,EAHd,qBAOA,cAAC5L,GAAA,EAAD,CACEC,QAAQ,QACRuC,MAAM,cACN6E,UAAWJ,EAAQoD,cAHrB,SAKGc,WAIP,cAACnJ,GAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPJ,GAAG,QACHK,MAAM,2BACN1I,MAAOiR,EACPrK,SAxGkBC,IAC5BqK,EAAerK,EAAMiB,OAAO9H,QAwGlB0G,WAAS,EACT3G,OAAQ0R,IACR7I,WACG6I,IAGC,qCACG3T,EADH,IACUI,EADV,IACmByT,OAHnB,oBAOJS,WAAY,CACVC,aACE,cAACC,GAAA,EAAD,CAAgBpF,SAAS,MAAzB,uBAKR,eAACrE,GAAA,EAAD,WACE,cAACtD,EAAA,EAAD,CAAQuD,QAjIY,KAC5BsI,GAAe,GACfF,EAAe,KA+HiCnI,MAAM,YAA9C,oBAGA,cAACxD,EAAA,EAAD,CACEuD,QA5Ha/L,UACvB,MAAMwV,EAAUZ,IACV3T,EAAU0T,IAEVtQ,QAAiBvD,EACrBC,EACAyU,EACAvU,OACAwU,EACAtU,EACAC,GAGsB,MAApBiD,EAASoB,OAIb8O,GAAY,GAHVE,EAAgB,GAAD,OAAIpQ,EAASoB,OAAb,aAAwBpB,EAASqR,cA+GxC1J,MAAM,UACNC,UAAWyI,IAHb,6BAUN,cAAClB,GAAD,CACElS,QAASA,EACT0E,KAAMhD,EACNmD,YA/GmB,CAAC2D,EAAOiG,KAChB,cAAXA,GAGJyE,GAAS,SCvEb,MAAMxE,GAAYC,aAAW,CAC3B3F,KAAM,CACJgH,SAAU,EACVzC,QAAS,KA2BE,SAAS8G,KACtB,MAAMlF,EAAUT,MACV,KAAEjP,EAAF,KAAQC,EAAR,OAAcG,GAAW0L,eACzB,QAAE5I,EAAF,MAAWhB,GAAUwB,EAAY1D,EAAMC,EAAMG,GAEnD,GAAI8C,EACF,OAAO,cAACyO,GAAA,EAAD,IAGT,MAAMkD,EA3BR,SAAiBA,GACf,MAAO,IAAIA,GAAUC,MAAK,CAACC,EAAGC,IACb,SAAXD,EAAEE,KACW,SAAXD,EAAEC,KACGF,EAAE/L,KAAOgM,EAAEhM,KAEb,EAEM,SAAXgM,EAAEC,MACI,EAEHF,EAAE/L,KAAOgM,EAAEhM,OAgBHkM,CAAQhT,GAEzB,OACE,qCACE,cAACuO,GAAD,IACA,sBAAKX,UAAWJ,EAAQnG,KAAxB,UACE,cAACqI,GAAA,EAAD,UACGiD,EAASzQ,KAAKvC,GACb,eAACgQ,GAAA,EAAD,CACEC,QAAM,EACNpK,UAAWC,IAEXC,GACgB,QAAd/F,EAAKoT,KAAL,iBACcjV,EADd,oBAC8BI,EAD9B,YACwCyB,EAAK5B,KAD7C,sBAEcD,EAFd,mBAE6BI,EAF7B,YAEuCyB,EAAK5B,MAPhD,UAUE,cAAC8R,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACiB,QAAdnQ,EAAKoT,KAAiB,cAAC,KAAD,IAAiB,cAAC,KAAD,QAG7B,QAAdpT,EAAKoT,KACJ,cAAChD,GAAA,EAAD,CAAckD,UAAWtT,EAAKmH,OAE9B,cAACiJ,GAAA,EAAD,CAAcC,QAASrQ,EAAKmH,SAlBhC,0BAG0BnH,EAAKmH,UALxB,wBAyBX,cAACkK,GAAD,U,wKC3ER,MAEMjE,GAAYC,cAAYtI,IAAD,CAC3BwO,QAAS,CACPC,UAAU,GAAD,OAJM,GAIN,MACTC,gBAAiB,MACjBC,gBAAiB,SACjBC,gBAAiB5O,EAAMX,QAAQwP,KAAKN,eAIlCO,GAAsB,EAC1BC,SACA7N,QACAO,cACAuN,sBAEA,MAAMhP,EAAQiP,gBACR,aAAE1O,GAAiBH,KAClB8O,EAAMC,GAAWnU,mBAAS,KAC1BrB,EAAS4E,GAAcvD,sBACvBK,EAAOwR,GAAY7R,oBAAS,GASnCyB,qBAAU,KACR,MAAM2S,EAAK,IAAIC,KAAW,CAAEH,MAAM,IAAQI,IAAIC,MAC9CH,EAAGlJ,aAAa8I,GAChBI,EAAGI,SAASxP,EAAMX,QAAQrF,MAC1BoV,EAAGK,aAAavO,EAlCD,IAkCuBO,EAAc,IAAMA,GAE1D,IACE0N,EAAQC,EAAGjI,OAAO4H,IAClBlC,GAAS,GACTtM,EAAa6O,EAAGM,KAAKpP,WACrB,MAAOqP,GACPrX,QAAQC,IAAIoX,GACZR,EAAQ,QAAD,OAASJ,EAAT,WACPxQ,EAAWoR,EAAIhW,SACfkT,GAAS,MAEV,CACDtM,EACAwO,EACA7N,EACAO,EACAuN,EACAhP,EAAMX,QAAQrF,OAIhB,IAAI4V,EAAS,iCAAiCC,KAAKX,GAMnD,OALIU,GAEF5K,OAAO8K,KAAKF,EAAO,IAInB,qCAEE,qBACE1G,UAAS,cAASlJ,EAAMX,QAAQrF,MAChC+V,wBAAyB,CAAEC,OAAQd,KAErC,cAACrD,GAAD,CACElS,QAASA,EACT0E,KAAMhD,EACNmD,YAjDmB,CAAC2D,EAAOiG,KAChB,cAAXA,GAGJyE,GAAS,UAmDE,SAASoD,GAAOC,GAC7B,MAAMpH,EAAUT,KACV8H,EAAenH,oBACf,MAAE9H,GzB/EH,SAAgC+H,GACrC,MAAOmH,EAAYC,GAAiBrV,mBAAS,CAAEkG,MAAO,EAAGoP,OAAQ,IAkBjE,OAhBA7T,qBAAU,KACR,MAAM8T,EAAe,KACnBF,EAAc,CACZnP,MAAO+H,EAAIuH,QAAQC,YACnBH,OAAQrH,EAAIuH,QAAQE,gBASxB,OALA,OAAIzH,QAAJ,IAAIA,OAAJ,EAAIA,EAAKuH,UACPD,IAGFvL,OAAO2L,iBAAiB,SAAUJ,GAC3B,IAAMvL,OAAO4L,oBAAoB,SAAUL,KACjD,CAACtH,IAEGmH,EyB4DWS,CAAuBV,GAEzC,OACE,qBACEjH,UAAWJ,EAAQ0F,QACnBrF,MAAO,CAAE1H,YAAayO,EAAMzO,aAC5BwH,IAAKkH,EAHP,SAKE,cAACrB,GAAD,CAAqB5N,MAAOA,KAAWgP,M,qBChE7C,MAAM7H,GAAYC,cAAYtI,IAAD,CAC3B2C,KAAM,CACJgH,SAAU,EACVzC,QAAS,GAEX4J,YAAa,CACXzM,MAAO0M,KAAM,KACbvI,SAAU,WACVwI,KAAM,EACNC,MAAO,EACPC,OAAQ,GAEVC,OAAQ,CACNC,WAAYpR,EAAM4F,QAAQ,GAC1B+F,YAAa3L,EAAM4F,QAAQ,GAC3B0K,OAAQ,OACRpP,MAAO,QAETmQ,IAAK,CACHtN,OAAQ/D,EAAM4F,QAAQ,IAExB0L,QAAS,CACP1F,QAAS,OACT1E,QAASlH,EAAM4F,QAAQ,IAEzB2C,MAAO,CACLrB,QAASlH,EAAM4F,QAAQ,GACvB0K,OAAQ,QAEViB,cAAe,CACb3O,gBAAiBmO,KAAM,KACvB,UAAW,CACTnO,gBAAiBmO,KAAM,WAKd,SAASS,IAAK,SAAEnQ,IAC7B,MAAMyH,EAAUT,KACVrI,EAAQiP,gBACR,YAAExV,GAAgBoC,KACjB4V,EAAUC,GAAe1W,mBAAS,IACnC2W,E1B1ED,SAAqBrW,EAAOsW,GACjC,MAAOC,EAAWC,GAAgB9W,mBAAS,IAK3C,OAJAyB,qBAAU,KACR,MAAMsV,EAAQC,YAAW,IAAMF,EAAaxW,IAAQsW,GACpD,MAAO,IAAMK,aAAaF,KACzB,CAACzW,EAAOsW,IACJC,E0BoEmBK,CAAYT,EAAU,MACzClY,EAAK4Y,GAAUnX,sBACfoX,EAAQC,GAAarX,oBAAS,IAC9BsX,EAASC,GAAcvX,oBAAS,IAChCwX,EAASC,GAAczX,oBAAS,IACjC,KAAE5B,EAAF,KAAQC,EAAR,OAAcG,GAAW0L,eACzB,QAAE5I,EAAF,MAAWhB,EAAX,QAAkBhC,GAAYwD,EAAY1D,EAAMC,EAAMG,GAsC5DiD,qBAAU,KACJnB,IACFoW,EAAYpY,GACZ6Y,EAAO7W,EAAM/B,QAEd,CAACD,EAASgC,IAEb,MAAM+G,EAASX,KAAYtG,MAAMiG,EAASM,QACpCF,EAAcY,EAAM,SAA4B,IAChD2M,EAAkB/I,OAAO5D,EAAM,YAA0B,EAEzDqQ,EAAkB1G,KAAW,CACjC,CAAClD,EAAQyI,eAAgBe,IAGrBK,EAAQtR,EAASyI,SAAStS,MAAM,KACtCmb,EAAM,GAAK,SACX,MAAMC,EAAaD,EAAMxa,KAAK,KAExB0a,EAAc,CAACF,EAAM,GAAIA,EAAM,GAAI,QAAQ9Z,OAAO8Z,EAAMxb,MAAM,IAC9DqO,EAAU,6BAAyBqN,EAAY1a,KAAK,MAE1D,OAAImE,EACK,cAACyO,GAAA,EAAD,IAIP,qCACE,cAAClB,GAAD,CAAsBC,SAAUzI,EAASyI,WACzC,qBAAKZ,UAAWJ,EAAQnG,KAAxB,SACE,eAACuK,GAAA,EAAD,CAAMC,WAAS,EAACvH,QAAS,EAAzB,UACE,cAACsH,GAAA,EAAD,CAAMjS,MAAI,EAAC6X,GAAI,GAAf,SACE,eAAChM,GAAA,EAAD,CAAOoC,UAAWJ,EAAQwI,QAA1B,UACE,cAAC7J,EAAA,EAAD,CACEC,MACEjO,EAAc,OAAS,sCAF3B,SAKE,+BACE,eAAC2T,GAAA,EAAD,CACE9I,UAAWkO,IAAY/Y,EACvByP,UAAS,UAAKwJ,EAAL,YAAwB5J,EAAQuI,KACzCjN,QAxEC/L,UACjB,IAAK+Z,EAAQ,CACXG,GAAW,GACXF,GAAU,GAEV,MAAM3V,QAAiBvD,EACrBC,EACAC,EACAoY,EACAlY,EACAC,EACAC,GAEImD,QAAaF,EAASE,OAEJ,MAApBF,EAASoB,QACXyU,GAAW,GACXF,GAAU,GACVF,EAAOvV,EAAKtD,QAAQC,OAEpBgZ,GAAW,GACXF,GAAU,MAgDA,UAKGC,EAAU,cAAC,KAAD,IAAgB,cAAC,KAAD,IAC1BF,GACC,cAACW,GAAA,EAAD,CACEnL,KAAM,GACNsB,UAAWJ,EAAQgI,qBAM7B,cAACrJ,EAAA,EAAD,CAASC,MAAM,cAAf,SACE,cAAC0F,GAAA,EAAD,CAAKlE,UAAWJ,EAAQuI,IAAKjN,QA3DlB,KACvBsN,EAAYha,aAAgB+Z,KA0DhB,SACE,cAAC,KAAD,QAGJ,cAAChK,EAAA,EAAD,CAASC,MAAM,0BAAf,SACE,cAAC0F,GAAA,EAAD,CAAKtM,UAAWC,IAAMC,GAAI4R,EAAY1J,UAAWJ,EAAQuI,IAAzD,SACE,cAAC,KAAD,QAGJ,cAAC5J,EAAA,EAAD,CAASC,MAAM,iBAAf,SACE,cAAC0F,GAAA,EAAD,CAAKlK,KAAMsC,EAAYpC,OAAO,SAAS8F,UAAWJ,EAAQuI,IAA1D,SACE,cAAC,KAAD,aAKR,cAACnE,GAAA,EAAD,CAAMjS,MAAI,EAAC6X,GAAI,EAAf,SACE,cAAChM,GAAA,EAAD,CAAOoC,UAAWJ,EAAQP,MAA1B,SACE,cAAC,KAAD,CACEvO,KAAK,WACLgG,MAA8B,SAAvBA,EAAMX,QAAQrF,KAAkB,WAAa,WACpDkH,MAAM,OACN8R,SAAUC,IACV/J,UAAWJ,EAAQqI,OACnBjP,SAnHQ5G,IACpBoW,EAAYpW,GACZmX,GAAW,GACXF,GAAW,IAiHCjX,MAAOmW,EACPyB,YAAa,CAAEC,iBAAiB,SAItC,cAACjG,GAAA,EAAD,CAAMjS,MAAI,EAAC6X,GAAI,EAAf,SACE,cAAChM,GAAA,EAAD,CAAOoC,UAAWJ,EAAQP,MAA1B,SACE,cAAC0H,GAAD,CACElB,OAAQ4C,EACRlQ,YAAaA,EACbuN,gBAAiBA,gBCvMjC,MAAM3G,GAAYC,aAAW,CAC3B3F,KAAM,CACJgH,SAAU,EACVzC,QAAS,KAIE,SAASkM,IAAK,SAAE/R,IAC7B,MAAMyH,EAAUT,MACV,KAAEjP,EAAF,KAAQC,EAAR,OAAcG,GAAW0L,eACzB,QAAE5I,EAAF,QAAWhD,GAAYwD,EAAY1D,EAAMC,EAAMG,GAE/C6I,EAASX,KAAYtG,MAAMiG,EAASM,QACpCF,EAAcY,EAAM,SAA4B,IAChD2M,EAAkB/I,OAAO5D,EAAM,YAA0B,EAE/D,OAAI/F,EACK,cAACyO,GAAA,EAAD,IAIP,qBAAK7B,UAAWJ,EAAQnG,KAAxB,SACE,cAACsN,GAAD,CACElB,OAAQzV,EACRmI,YAAaA,EACbuN,gBAAiBA,M,wDCvBzB,MAAM3G,GAAYC,cAAYtI,IAAD,CAC3BqM,KAAM,CACJ7D,SAAU,QACVC,OAAQzI,EAAM4F,QAAQ,GACtB8C,MAAO1I,EAAM4F,QAAQ,QAIV,SAASyN,IAAc,oBAAEC,IACtC,MAAMxK,EAAUT,MACThK,EAAMC,GAAWtD,oBAAS,IAC1BoH,EAAMmR,GAAWvY,mBAAS,KAC1BwY,EAAOC,GAAYzY,mBAAS,KAC5BrB,EAAS4E,GAAcvD,mBAAS,OAChCK,EAAOwR,GAAY7R,oBAAS,GAM7B0Y,EAAoB,KACxBpV,GAAQ,GACRiV,EAAQ,IACRE,EAAS,IACT5G,GAAS,IAgCX,OACE,qCACE,eAACK,GAAA,EAAD,CACEC,WAAS,EACTjE,UAAWJ,EAAQuD,KACnB1G,UAAU,MACVU,eAAe,WACfD,WAAW,WALb,UAOE,cAACgH,GAAA,EAAD,CAAK7G,aAAW,MAAMnC,QAjDH,KACvB9F,GAAQ,IAgDJ,SACE,cAAC,KAAD,MAEF,eAACmF,GAAA,EAAD,CAAQpF,KAAMA,EAAMgP,kBAAgB,wBAApC,UACE,cAAC3J,GAAA,EAAD,CAAaC,GAAG,8BAAhB,4BAGA,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPJ,GAAG,QACHK,MAAM,mBACN1I,MAAOkY,EACPtR,SA/BeC,IACzBsR,EAAStR,EAAMiB,OAAO9H,QA+BZ0G,WAAS,IAEX,cAAC6B,GAAA,EAAD,CACEE,OAAO,QACPJ,GAAG,OACHK,MAAM,kBACN1I,MAAO8G,EACPF,SAnCcC,IACxBoR,EAAQpR,EAAMiB,OAAO9H,QAmCX0G,WAAS,OAGb,eAACmC,GAAA,EAAD,WACE,cAACtD,EAAA,EAAD,CAAQuD,QAASsP,EAAjB,oBACA,cAAC7S,EAAA,EAAD,CAAQuD,QAtDM/L,UACtB,UACQib,EAAoB,GAAD,OAAIE,EAAJ,YAAapR,IACtCsR,IACA,MAAO/D,GAhBchW,KACvB4E,EAAW5E,GACXkT,GAAS,IAePC,CAAgB6C,EAAIhW,WAiDd,0BAIN,cAACkS,GAAD,CACElS,QAASA,EACT0E,KAAMhD,EACNmD,YApEmB,CAAC2D,EAAOiG,KAChB,cAAXA,GAGJyE,GAAS,SCnCb,MAAMxE,GAAYC,aAAW,CAC3B3F,KAAM,CACJgH,SAAU,EACVzC,QAAS,KAIE,SAASyM,KACtB,MAAM7K,EAAUT,KACVlL,EAAeD,KACf,QAAEU,EAAF,WAAWI,GAAef,IAEhC,OACE,sBAAKiM,UAAWJ,EAAQnG,KAAxB,UACE,cAACqI,GAAA,EAAD,UACG7N,EAAaK,KAAKpE,GACjB,eAAC6R,GAAA,EAAD,CACEC,QAAM,EAENpK,UAAWC,IACXC,GAAE,iBAAY5H,EAAKwa,UAAjB,oBAAsCxa,EAAKya,gBAJ/C,UAME,cAAC1I,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACE,cAAC,KAAD,QAGJ,cAACC,GAAA,EAAD,CAAcC,QAASlS,EAAKwa,YAC5B,cAACE,GAAA,EAAD,UACE,cAACxN,EAAA,EAAD,CACEC,aAAW,SACXnC,QAAS,IAAMpG,EAAW5E,EAAKwa,WAC/BhM,KAAK,QAHP,SAKE,cAAC,KAAD,UAlBN,oBAEoBxO,EAAKwa,gBAsB7B,cAACP,GAAD,CAAeC,oBAAqB1V,O,uBC5C1C,MAAMyK,GAAYC,cAAYtI,IAAD,CAC3B2C,KAAM,CACJgH,SAAU,EACVzC,QAAS,GAEX6M,iBAAkB,CAChBhQ,OAAQ/D,EAAM4F,QAAQ,GACtBsB,QAASlH,EAAM4F,QAAQ,IAEzBoO,mBAAoB,CAClBjQ,OAAQ/D,EAAM4F,QAAQ,GACtBqO,UAAW,UAEbC,wBAAyB,CACvB7P,MAAOrE,EAAMX,QAAQwP,KAAKvD,QAC1B2I,UAAW,UAEbE,kBAAmB,CACjBvI,QAAS,eACT7H,OAAQ/D,EAAM4F,QAAQ,GACtBqO,UAAW,UAEbG,uBAAwB,CACtB/P,MAAOrE,EAAMX,QAAQwP,KAAKN,WAE5B8F,aAAc,CACZpW,OAA+B,SAAvB+B,EAAMX,QAAQrF,KAAkB,eAAiB,QAI9C,SAASsa,IAAQ,SAAEjT,EAAF,MAAYjH,IAC1C,MAAM0O,EAAUT,KAChB,OACE,sBAAKa,UAAWJ,EAAQnG,KAAxB,UACE,cAACd,GAAA,EAAD,CAAYC,QAAQ,KAApB,qBAEA,+BACE,6BACE,cAAC,IAAD,CAAMd,GAAE,UAAK5G,EAAMma,IAAX,8BAAR,6CAIF,6BACE,cAAC,IAAD,CAAMvT,GAAE,UAAK5G,EAAMma,IAAX,qBAAR,mCAIJ,cAAC,IAAD,CACElb,KAAI,UAAKe,EAAMf,KAAX,8BACJyH,UAAW,IACT,cAAC0T,GAAD,CAAgBnT,SAAUA,EAAU0N,OAAQ0F,OAGhD,cAAC,IAAD,CACEpb,KAAI,UAAKe,EAAMf,KAAX,qBACJyH,UAAW4T,QAMnB,MAAMF,GAAiB,EAAGzF,SAAQ1N,eAChC,MAAMgB,EAASX,KAAYtG,MAAMiG,EAASM,QACpCF,EAAcY,EAAM,SAA4B,IAChD2M,EAAkB/I,OAAO5D,EAAM,YAA0B,EAE/D,OACE,cAAC4N,GAAD,CACElB,OAAQA,EACRtN,YAAaA,EACbuN,gBAAiBA,KAKjB2F,GAAQ,CACZ,IACA,KACA,KACA,IACA,KACA,KACA,IACA,IACA,KACA,KACA,IACA,KACA,KACA,IACA,KACA,KACA,KAGIC,GAAY,CAChB,GACA,IACA,IACA,KACA,IACA,OACA,KACA,IACA,MACA,MACA,OACA,QACA,OACA,QACA,IACA,OACA,OACA,MACA,OACA,MACA,MACA,MACA,QACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,OACA,KACA,MACA,QACA,KACA,OACA,UAGIF,GAAkB,EAAGrT,eACzB,MAAMyH,EAAUT,KAChB,OACE,qCACE,cAACxG,GAAA,EAAD,CAAYC,QAAQ,KAApB,8BACA,cAACgF,GAAA,EAAD,CAAOoC,UAAWJ,EAAQiL,iBAA1B,SACE,cAACS,GAAD,CAAgBzF,OAAQ8F,GAAiBxT,SAAUA,MAEpDsT,GAAMnX,KAAI,CAACsX,EAAUC,IACpB,eAACjO,GAAA,EAAD,CAAiCoC,UAAWJ,EAAQkL,mBAApD,UACE,eAACnS,GAAA,EAAD,CAAYqH,UAAWJ,EAAQoL,wBAAyBpS,QAAQ,KAAhE,UACGgT,EADH,aAGA,cAACE,GAAD,CAAeF,SAAUA,MAJ3B,mBAAwBC,UAW1BC,GAAgB,EAAGF,eACvB,MAAMhM,EAAUT,KAChB,OAAO4M,MAAMC,KAAKC,mBAAgBC,QAC/BnX,QAAQoX,GAAUA,EAAMjb,MAAM,6BAA6B,KAAO0a,IAClEtX,KAAI,CAAC6X,EAAON,IACX,eAACjO,GAAA,EAAD,CAA8BoC,UAAWJ,EAAQqL,kBAAjD,UACGgB,mBAAgBG,IAAID,GAAO7X,KAAI,CAACsE,EAASiT,IACxC,sBACE7L,UAAWJ,EAAQuL,aAEnBtE,wBAAyB,CAAEC,OAAQuF,8BAAmBzT,KAHxD,kBAEkBiT,MAIpB,cAAClT,GAAA,EAAD,CAAYqH,UAAWJ,EAAQsL,uBAAwBtS,QAAQ,KAA/D,SACGuT,MATL,gBAAqBN,OAerBF,GAAe,oBAEnBF,GACCnX,KACEmF,GAAD,aAAgBA,EAAhB,wBACEiS,GAAUpX,KAAKgY,GAAY7S,EAAO6S,IAASrd,KAAK,QAEnDA,KAAK,QAPa,MAUfsc,GAAiB,4iECtKjBgB,GAAa,IACjB,eAAC,IAAD,WACE,cAAC,IAAD,CAAO3U,UAAW2I,KAClB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOpQ,KAAI,UAAKoH,EAAL,0BAAyCK,UAAWsS,KAC/D,cAAC,IAAD,CACE/Z,KAAI,UAAKoH,EAAL,2BACJK,UAAWkN,KAEb,cAAC,IAAD,CAAO3U,KAAI,UAAKoH,EAAL,0BAAyCK,UAAW0Q,KAC/D,cAAC,IAAD,CAAOnY,KAAMoH,EAAYK,UAAW+J,KACpC,cAAC,IAAD,CAAOxR,KAAK,WAAWyH,UAAWwT,KAClC,cAAC,IAAD,CAAOjb,KAAK,IAAIyH,UAAW6S,UAXnB,eAgBC+B,OA/BH,IACV,cAACrV,EAAD,UACE,cAACtE,EAAD,UACE,cAAC2B,EAAD,UACE,cAAC,EAAD,UACE,cAACU,EAAD,UACE,cAACqX,GAAD,cCTZ,MAAME,GAAcrO,QACW,cAA7BtC,OAAO3D,SAASuU,UAEe,UAA7B5Q,OAAO3D,SAASuU,UAEhB5Q,OAAO3D,SAASuU,SAASxb,MACvB,2DAsCN,SAASyb,GAAgBC,EAAOC,GAC9BlR,UAAUmR,cACPC,SAASH,GACTI,MAAMC,IACLA,EAAaC,cAAgB,KAC3B,MAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,KACA,cAA3BF,EAAiBze,QACfiN,UAAUmR,cAAcQ,YAI1Ble,QAAQC,IACN,+GAKEwd,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB7d,QAAQC,IAAI,sCAGRwd,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAOtb,IACN/C,QAAQ+C,MAAM,4CAA6CA,MC3FjEub,IAASzP,OACP,cAAC,IAAM0P,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDanB,SAAkBhB,GACvB,GAA6C,kBAAmBlR,UAAW,CAGzE,GADkB,IAAIvK,IAAItB,GAAwBgM,OAAO3D,SAAS6B,MACpD8T,SAAWhS,OAAO3D,SAAS2V,OAIvC,OAGFhS,OAAO2L,iBAAiB,QAAQ,KAC9B,MAAMmF,EAAK,UAAM9c,GAAN,sBAEP2c,KAgEV,SAAiCG,EAAOC,GAEtCtb,MAAMqb,EAAO,CACXvb,QAAS,CAAE,iBAAkB,YAE5B2b,MAAMxZ,IAEL,MAAMua,EAAcva,EAASnC,QAAQ+a,IAAI,gBAEnB,MAApB5Y,EAASoB,QACO,MAAfmZ,IAA8D,IAAvCA,EAAYzM,QAAQ,cAG5C3F,UAAUmR,cAAckB,MAAMhB,MAAMC,IAClCA,EAAagB,aAAajB,MAAK,KAC7BlR,OAAO3D,SAAS+V,eAKpBvB,GAAgBC,EAAOC,MAG1BY,OAAM,KACLre,QAAQC,IACN,oEAvFA8e,CAAwBvB,EAAOC,GAI/BlR,UAAUmR,cAAckB,MAAMhB,MAAK,KACjC5d,QAAQC,IACN,+GAMJsd,GAAgBC,EAAOC,OCnC/BuB,K","file":"static/js/main.8e2126b7.chunk.js","sourcesContent":["const { isChord } = require(\"markdown-it-music/lib/chord\");\n\nconst State = {\n  DEFAULT: 1,\n  VERSE: 2,\n  FENCE: 3,\n};\n\nfunction getMaybeHeading(line) {\n  if (line.endsWith(\":\")) {\n    return `## ${line.slice(0, -1)}`;\n  }\n\n  if (line.startsWith(\"[\") && line.endsWith(\"]\")) {\n    return `## ${line.slice(1, -1)}`;\n  }\n\n  return null;\n}\n\nfunction getMaybeChords(line) {\n  const tokens = line.trim().split(/\\s+/);\n\n  for (const token of tokens) {\n    if (!isChord(token)) {\n      return null;\n    }\n  }\n\n  return `c1: ${line}`;\n}\n\nfunction asciiTabConvert(input) {\n  let state = State.DEFAULT;\n  let voiceIndex = 1;\n  const lines = input.split(/\\n/);\n  const output = [];\n\n  for (const line of lines) {\n    if (line.startsWith(\":::\")) {\n      state = State.FENCE;\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.DEFAULT) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        state = State.VERSE;\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.VERSE) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        state = State.DEFAULT;\n        output.push(\"\");\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        output.push(\"\");\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      if (line.trim() === \"\") {\n        continue;\n      }\n\n      output.push(`l${voiceIndex}: ${line}`);\n      voiceIndex += 1;\n      continue;\n    }\n\n    if (state === State.FENCE) {\n      if (line === \":::\") {\n        state = State.DEFAULT;\n      }\n\n      output.push(line);\n      continue;\n    }\n  }\n\n  return output.join(\"\\n\");\n}\n\nasync function read(stream) {\n  let buffer = Buffer.alloc(0);\n  for await (const chunk of stream) {\n    buffer = Buffer.concat([buffer, chunk]);\n  }\n  return buffer.toString(\"utf8\");\n}\n\nasync function main() {\n  console.log(asciiTabConvert(await read(process.stdin)));\n}\n\nif (typeof require !== \"undefined\" && require.main === module) {\n  main();\n}\n\nexport default asciiTabConvert;\n","import { Base64 } from \"js-base64\";\n\nconst GITHUB_API_URL = \"https://api.github.com\";\n\nexport async function putContents(\n  repo,\n  path,\n  content,\n  sha,\n  branch,\n  gitHubToken\n) {\n  const body = {\n    message: `Music Markdown published ${path}`,\n    content: Base64.encode(content),\n    branch,\n  };\n\n  if (sha) {\n    body.sha = sha;\n  }\n\n  return gitHubApiFetch(`/repos/${repo}/contents/${path}`, {\n    method: \"PUT\",\n    mode: \"cors\",\n    body: JSON.stringify(body),\n    gitHubToken,\n  });\n}\n\n/**\n * Returns the list of repo names and corresponding GitHub metadata.\n * @returns {Array} Array of JSON dictionaries of repos\n */\nexport async function getRepoMetadata(repos, { gitHubToken }) {\n  return Promise.all(\n    repos.map(async (repo) =>\n      (await gitHubApiFetch(`/repos/${repo}`, { gitHubToken })).json()\n    )\n  );\n}\n\nexport async function verifyRepoExists(repo, { gitHubToken }) {\n  const response = await gitHubApiFetch(`/repos/${repo}`, { gitHubToken });\n  if (response.status === 404) {\n    throw new Error(`\"${repo}\" not found on GitHub.`);\n  }\n}\n\nexport function isValidGithubToken(gitHubToken) {\n  return (\n    !!gitHubToken &&\n    (!!gitHubToken.match(/^[0-9a-f]{40}$/) ||\n      !!gitHubToken.match(/^ghp_[a-zA-Z0-9]{36}$/))\n  );\n}\n\n/**\n * Performs a fetch to the GitHub API.\n */\nexport async function gitHubApiFetch(path, { gitHubToken, ...init }) {\n  const input = new URL(path, GITHUB_API_URL);\n\n  if (gitHubToken) {\n    init = {\n      ...init,\n      ...{ headers: { Authorization: `token ${gitHubToken}` } },\n    };\n  }\n\n  return fetch(new Request(input, init));\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce(value, delay) {\n  const [debounced, setDebounced] = useState(\"\");\n  useEffect(() => {\n    const timer = setTimeout(() => setDebounced(value), delay);\n    return () => clearTimeout(timer);\n  }, [value, delay]);\n  return debounced;\n}\n\nexport function useContainerDimensions(ref) {\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        width: ref.current.offsetWidth,\n        height: ref.current.offsetHeight,\n      });\n    };\n\n    if (ref?.current) {\n      handleResize();\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [ref]);\n\n  return dimensions;\n}\n\nexport function useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      if (value) {\n        localStorage.setItem(key, JSON.stringify(valueToStore));\n      } else {\n        localStorage.removeItem(key);\n      }\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import { Base64 } from \"js-base64\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { gitHubApiFetch, isValidGithubToken } from \"../lib/github\";\nimport { useLocalStorage } from \"../lib/hooks\";\n\nconst GitHubApiContext = createContext();\n\nexport const useGitHubApi = () => useContext(GitHubApiContext);\n\nexport function GitHubApiProvider({ children }) {\n  const [gitHubToken, setGitHubToken] = useLocalStorage(\"gitHubToken\", \"\");\n\n  const validateAndSetToken = (token) => {\n    if (token && !isValidGithubToken(token)) {\n      throw new Error(`\"${token}\" is not valid.`);\n    }\n    setGitHubToken(token);\n  };\n\n  return (\n    <GitHubApiContext.Provider\n      value={{ gitHubToken, setGitHubToken: validateAndSetToken }}\n    >\n      {children}\n    </GitHubApiContext.Provider>\n  );\n}\n\nexport function useGitHubFetch(path, defaultValue) {\n  const { gitHubToken } = useGitHubApi();\n  const [loading, setLoading] = useState(true);\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const doFetch = async () => {\n      const response = await gitHubApiFetch(path, {\n        gitHubToken,\n        cache: \"no-cache\",\n      });\n      setValue(await response.json());\n      setLoading(false);\n    };\n    doFetch();\n  }, [path, gitHubToken]);\n\n  return { loading, value };\n}\n\nexport function useContents(repo, path, branch) {\n  const { loading, value } = useGitHubFetch(\n    `/repos/${repo}/contents/${path || \"\"}?ref=${branch}`\n  );\n  const content = value?.content ? Base64.decode(value.content) : \"\";\n  return { loading, value, content };\n}\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { getRepoMetadata, verifyRepoExists } from \"../lib/github\";\nimport { useLocalStorage } from \"../lib/hooks\";\nimport { useGitHubApi } from \"./GitHubApiProvider\";\n\nconst ReposContext = createContext();\n\nexport const useRepos = () => useContext(ReposContext);\n\nexport function useRepoMetadata() {\n  const [repoMetadata, setRepoMetadata] = useState([]);\n  const { repos } = useRepos();\n  const { gitHubToken } = useGitHubApi();\n\n  useEffect(() => {\n    (async () =>\n      setRepoMetadata(await getRepoMetadata(repos, { gitHubToken })))();\n  }, [repos, gitHubToken]);\n\n  return repoMetadata;\n}\n\nexport function ReposProvider({ children }) {\n  const [repos, setRepos] = useLocalStorage(\"repos\", []);\n  const { gitHubToken } = useGitHubApi();\n\n  const addRepo = async (repo) => {\n    if (repos.includes(repo)) {\n      throw new Error(`\"${repo}\" is already registered.`);\n    }\n    await verifyRepoExists(repo, { gitHubToken });\n    setRepos([...repos, repo]);\n  };\n\n  const deleteRepo = (repo) => {\n    setRepos(repos.filter((r) => r !== repo));\n  };\n\n  return (\n    <ReposContext.Provider value={{ repos, setRepos, addRepo, deleteRepo }}>\n      {children}\n    </ReposContext.Provider>\n  );\n}\n","import { Alert, Snackbar } from \"@mui/material\";\nimport { createContext, useContext, useState } from \"react\";\n\nconst SnackbarContext = createContext();\n\nexport const useSnackbar = () => useContext(SnackbarContext);\n\nexport default function SnackbarProvider({ children }) {\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const handleClose = () => setOpen(false);\n\n  const showSnackbar = (newMessage) => {\n    setMessage(newMessage);\n    setOpen(true);\n  };\n\n  return (\n    <SnackbarContext.Provider value={{ showSnackbar }}>\n      {children}\n      <Snackbar\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n      >\n        <Alert onClose={handleClose} severity=\"success\">\n          {message}\n        </Alert>\n      </Snackbar>\n    </SnackbarContext.Provider>\n  );\n}\n","import { CssBaseline, useMediaQuery } from \"@mui/material\";\nimport {\n  createTheme,\n  StyledEngineProvider,\n  ThemeProvider as MuiThemeProvider,\n} from \"@mui/material/styles\";\nimport { createContext, useContext } from \"react\";\nimport { useLocalStorage } from \"../lib/hooks\";\n\nconst THEMES = {\n  light: {\n    palette: {\n      mode: \"light\",\n    },\n  },\n  dark: {\n    palette: {\n      mode: \"dark\",\n    },\n  },\n};\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport function ThemeProvider({ children }) {\n  const prefersDarkTheme = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const [themeName, setThemeName] = useLocalStorage(\"themeName\", \"system\");\n\n  const getEffectiveThemeName = () => {\n    if (themeName === \"system\") {\n      return prefersDarkTheme ? \"dark\" : \"light\";\n    }\n    return themeName;\n  };\n\n  const getTheme = () => THEMES[getEffectiveThemeName()];\n\n  return (\n    <ThemeContext.Provider value={{ themeName, setThemeName, getTheme }}>\n      <StyledEngineProvider injectFirst>\n        <MuiThemeProvider theme={createTheme(getTheme())}>\n          <CssBaseline />\n          {children}\n        </MuiThemeProvider>\n      </StyledEngineProvider>\n    </ThemeContext.Provider>\n  );\n}\n","import { createContext, useContext, useState } from \"react\";\n\nconst YouTubeIdContext = createContext();\n\nexport const useYouTubeId = () => useContext(YouTubeIdContext);\n\nexport function YouTubeIdProvider({ children }) {\n  const [youTubeId, setYouTubeId] = useState(null);\n  return (\n    <YouTubeIdContext.Provider value={{ youTubeId, setYouTubeId }}>\n      {children}\n    </YouTubeIdContext.Provider>\n  );\n}\n","export const COLUMN_COUNT_QUERY_KEY = \"columns\";\nexport const REPO_REGEX = \"/repos/:repo([^/]+/[^/]+)\";\nexport const TRANSPOSE_QUERY_KEY = \"transpose\";\n","import { Button } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport { Link } from \"react-router-dom\";\n\nconst ThemeAwareLogo = styled(\"img\")(({ theme }) => ({\n  filter: theme.palette.mode === \"dark\" ? \"invert(100%)\" : \"\",\n}));\n\nexport default function LogoAppBarItem() {\n  return (\n    <Button component={Link} to=\"/\">\n      <ThemeAwareLogo\n        src=\"music-markdown.svg\"\n        width={50}\n        alt=\"Music Markdown\"\n      />\n    </Button>\n  );\n}\n","import { Typography } from \"@mui/material\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport { Box } from \"@mui/system\";\nimport queryString from \"query-string\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { COLUMN_COUNT_QUERY_KEY } from \"../../lib/constants\";\n\nexport default function ColumnCountMenuItem() {\n  const location = useLocation();\n  const history = useHistory();\n\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n\n  const handleUpdateQuery = (name, value, defaultValue) => {\n    const params = queryString.parse(location.search);\n    if (value === defaultValue) {\n      delete params[name];\n    } else {\n      params[name] = value;\n    }\n    history.replace({ search: queryString.stringify(params) });\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Columns</Typography>\n      <ToggleButtonGroup\n        fullWidth\n        value={columnCount}\n        exclusive\n        onChange={(event, value) =>\n          handleUpdateQuery(COLUMN_COUNT_QUERY_KEY, value, \"1\")\n        }\n      >\n        {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"].map((columnCount) => (\n          <ToggleButton value={columnCount} key={columnCount}>\n            {columnCount}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </Box>\n  );\n}\n","import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionActions from \"@mui/material/AccordionActions\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { useState } from \"react\";\nimport { useGitHubApi } from \"../../context/GitHubApiProvider\";\nimport { isValidGithubToken } from \"../../lib/github\";\n\nconst AccordionDetails = withStyles({\n  root: {\n    backgroundColor: \"rgba(0, 0, 0, .03)\",\n  },\n})(AccordionActions);\n\nconst GithubTokenInstructions = () => (\n  <Accordion>\n    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n      <Typography>\n        Set a <b>GitHub Token</b> to create or change Music Markdown files in\n        GitHub.\n      </Typography>\n    </AccordionSummary>\n    <AccordionDetails>\n      <div>\n        <h1>How to Create a New Token</h1>\n\n        <p>\n          These instructions will help you create a new GitHub token, and add it\n          to Music Markdown so that you can use the Music Markdown editor.\n        </p>\n\n        <ol>\n          <li>\n            Open your{\" \"}\n            <a\n              href=\"https://github.com/settings/tokens\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              Personal access tokens\n            </a>{\" \"}\n            page in GitHub.\n          </li>\n          <li>\n            Click <b>Generate new token</b>.\n          </li>\n          <li>\n            Under <b>Note</b> type <b>Music Markdown</b>.\n          </li>\n          <li>\n            Under <b>scopes</b> grant <b>repo</b> permissions.\n          </li>\n          <li>\n            Scroll to the bottom and click <b>Generate token</b>.\n          </li>\n          <li>Copy the newly generated token and paste it below.</li>\n        </ol>\n      </div>\n    </AccordionDetails>\n  </Accordion>\n);\n\nexport default function GithubTokenDialog({ open, handleClose }) {\n  const { gitHubToken, setGitHubToken } = useGitHubApi();\n  const [token, setToken] = useState(gitHubToken);\n\n  const isValidToken = (token) => {\n    return token === \"\" || isValidGithubToken(token);\n  };\n\n  const handleSaveToken = () => {\n    if (isValidToken(token)) {\n      setGitHubToken(token);\n      handleClose();\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setToken(gitHubToken);\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={handleCloseDialog}>\n      <DialogTitle id=\"set-github-api-key\">Set GitHub Token</DialogTitle>\n      <DialogContent>\n        <GithubTokenInstructions />\n      </DialogContent>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"GitHub Token\"\n          fullWidth\n          value={token || \"\"}\n          onChange={(e) => setToken(e.target.value)}\n          error={!isValidToken(token)}\n          helperText=\"Warning: GitHub tokens are very sensitive. Anyone who \n          gains access to this token will have access to your GitHub account.\n          Please proceed with caution.\"\n        ></TextField>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseDialog} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={handleSaveToken}\n          color=\"primary\"\n          disabled={!isValidToken(token)}\n        >\n          {token === \"\" ? \"Clear\" : \"Save\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import GitHubIcon from \"@mui/icons-material/GitHub\";\nimport { Button, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport GithubTokenDialog from \"./GithubTokenDialog\";\n\nexport default function GithubTokenMenuItem() {\n  const [apiKeyDialogOpen, setApiKeyDialogOpen] = useState(false);\n\n  const handleApiKeyDialogOpen = () => {\n    setApiKeyDialogOpen(true);\n  };\n\n  const handleApiKeyDialogClose = () => {\n    setApiKeyDialogOpen(false);\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">GitHub Token</Typography>\n      <Button\n        fullWidth\n        variant=\"outlined\"\n        onClick={handleApiKeyDialogOpen}\n        startIcon={<GitHubIcon />}\n      >\n        Set GitHub Token\n      </Button>\n\n      <GithubTokenDialog\n        open={apiKeyDialogOpen}\n        handleClose={handleApiKeyDialogClose}\n      ></GithubTokenDialog>\n    </Box>\n  );\n}\n","import EditIcon from \"@mui/icons-material/Edit\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport ViewListIcon from \"@mui/icons-material/ViewList\";\nimport { Button, Stack, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useSnackbar } from \"../../context/SnackbarProvider\";\n\nconst ShareButton = ({ close }) => {\n  const { showSnackbar } = useSnackbar();\n\n  const share = () => {\n    navigator.clipboard.writeText(window.location.href);\n    showSnackbar(\"Song URL copied to the clipboard!\");\n    close();\n  };\n\n  return (\n    <Button variant=\"outlined\" startIcon={<ShareIcon />} onClick={share}>\n      Share song URL\n    </Button>\n  );\n};\n\nconst EditViewButton = ({ close }) => {\n  const history = useHistory();\n  const { repo, mode, branch, path } = useParams();\n\n  const edit = () => {\n    close();\n    history.push(`/repos/${repo}/editor/${branch}/${path}`);\n  };\n\n  const view = () => {\n    close();\n    history.push(`/repos/${repo}/viewer/${branch}/${path}`);\n  };\n\n  if (mode === \"viewer\") {\n    return (\n      <Button variant=\"outlined\" startIcon={<EditIcon />} onClick={edit}>\n        Edit inline\n      </Button>\n    );\n  }\n  if (mode === \"editor\") {\n    return (\n      <Button variant=\"outlined\" startIcon={<ExitToAppIcon />} onClick={view}>\n        Exit to viewer\n      </Button>\n    );\n  }\n  return null;\n};\n\nconst SongListButton = ({ close }) => {\n  const history = useHistory();\n  const { repo, branch, path } = useParams();\n  const folder = path.split(\"/\").slice(0, -1).join(\"/\");\n\n  const back = () => {\n    close();\n    history.push(`/repos/${repo}/browser/${branch}/${folder}`);\n  };\n\n  return (\n    <Button variant=\"outlined\" startIcon={<ViewListIcon />} onClick={back}>\n      Back to song list\n    </Button>\n  );\n};\n\nconst ShowOnGitHubButton = () => {\n  const { repo, branch, path } = useParams();\n  const githubLink = `https://github.com/${repo}/blob/${branch}/${path}`;\n\n  return (\n    <Button href={githubLink} variant=\"outlined\" startIcon={<GitHubIcon />}>\n      Show on GitHub\n    </Button>\n  );\n};\n\nexport default function SongActionsMenuItem({ close }) {\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Song Actions</Typography>\n      <Stack direction=\"column\" spacing={1}>\n        <ShareButton close={close} />\n        <EditViewButton close={close} />\n        <SongListButton close={close} />\n        <ShowOnGitHubButton />\n      </Stack>\n    </Box>\n  );\n}\n","import DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport SettingsBrightnessIcon from \"@mui/icons-material/SettingsBrightness\";\nimport { Stack, Typography } from \"@mui/material\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport { Box } from \"@mui/system\";\nimport { useTheme } from \"../../context/ThemeProvider\";\n\nexport default function ThemeMenuItem() {\n  const { themeName, setThemeName } = useTheme();\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Theme</Typography>\n      <ToggleButtonGroup\n        value={themeName}\n        fullWidth\n        exclusive\n        onChange={(event, newThemeName) => setThemeName(newThemeName)}\n      >\n        <ToggleButton value=\"light\">\n          <Stack spacing={1} direction=\"row\">\n            <LightModeIcon />\n            <Typography variant=\"button\">Light</Typography>\n          </Stack>\n        </ToggleButton>\n        <ToggleButton value=\"system\">\n          <Stack spacing={1} direction=\"row\">\n            <SettingsBrightnessIcon />\n            <Typography variant=\"button\">System</Typography>\n          </Stack>\n        </ToggleButton>\n        <ToggleButton value=\"dark\">\n          <Stack spacing={1} direction=\"row\">\n            <DarkModeIcon />\n            <Typography variant=\"button\">Dark</Typography>\n          </Stack>\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Box>\n  );\n}\n","import ArrowCircleDownIcon from \"@mui/icons-material/ArrowCircleDown\";\nimport ArrowCircleUpIcon from \"@mui/icons-material/ArrowCircleUp\";\nimport SettingsBackupRestoreIcon from \"@mui/icons-material/SettingsBackupRestore\";\nimport { Button, Divider, IconButton, Stack, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport queryString from \"query-string\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { TRANSPOSE_QUERY_KEY } from \"../../lib/constants\";\n\nexport default function TransposeMenuItem() {\n  const location = useLocation();\n  const history = useHistory();\n\n  const params = queryString.parse(location.search);\n  const transpose = Number(params[TRANSPOSE_QUERY_KEY] || \"0\");\n\n  const setTranspose = (transpose) => {\n    const params = queryString.parse(location.search);\n    if (transpose === 0) {\n      delete params[TRANSPOSE_QUERY_KEY];\n    } else {\n      params[TRANSPOSE_QUERY_KEY] = String(transpose);\n    }\n    history.replace({ search: queryString.stringify(params) });\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Transpose</Typography>\n      <Stack\n        direction=\"row\"\n        spacing={1}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <IconButton\n          aria-label=\"Transpose down\"\n          color=\"primary\"\n          onClick={() => setTranspose(transpose - 1)}\n        >\n          <ArrowCircleDownIcon />\n        </IconButton>\n        <Typography variant=\"body1\">{transpose}</Typography>\n        <IconButton\n          aria-label=\"Transpose up\"\n          color=\"primary\"\n          onClick={() => setTranspose(transpose + 1)}\n        >\n          <ArrowCircleUpIcon />\n        </IconButton>\n        <Divider orientation=\"vertical\" />\n        <Button\n          variant=\"outlined\"\n          startIcon={<SettingsBackupRestoreIcon />}\n          onClick={() => setTranspose(0)}\n        >\n          Reset\n        </Button>\n      </Stack>\n    </Box>\n  );\n}\n","import { Paper, Popper, Stack } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Route } from \"react-router\";\nimport { REPO_REGEX } from \"../../lib/constants\";\nimport ColumnCountMenuItem from \"./ColumnCountMenuItem\";\nimport GithubTokenMenuItem from \"./GithubTokenMenuItem\";\nimport SongActionsMenuItem from \"./SongActionsMenuItem\";\nimport ThemeMenuItem from \"./ThemeMenuItem\";\nimport TransposeMenuItem from \"./TransposeMenuItem\";\n\nexport default function MoreMenu({ open, close, anchorEl }) {\n  return (\n    <Popper anchor=\"right\" open={open} anchorEl={anchorEl}>\n      <Paper>\n        <Box maxHeight=\"calc(100vh - 7em)\" overflow=\"auto\" sx={{ padding: 2 }}>\n          <Stack spacing={2}>\n            <Route\n              path={`${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`}\n              render={() => (\n                <>\n                  <SongActionsMenuItem close={close} />\n                  <TransposeMenuItem />\n                  <ColumnCountMenuItem />\n                </>\n              )}\n            />\n            <ThemeMenuItem />\n            <GithubTokenMenuItem />\n          </Stack>\n        </Box>\n      </Paper>\n    </Popper>\n  );\n}\n","import MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport { Box } from \"@mui/system\";\nimport { useState } from \"react\";\nimport MoreMenu from \"../MoreMenu\";\n\nexport default function MoreAppBarItem() {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleToggle = (event) => {\n    setAnchorEl(open ? null : event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box>\n      <ClickAwayListener onClickAway={handleClose}>\n        <Box>\n          <Tooltip title=\"More\">\n            <IconButton onClick={handleToggle} size=\"large\">\n              <MoreVertIcon />\n            </IconButton>\n          </Tooltip>\n          <MoreMenu open={open} close={handleClose} anchorEl={anchorEl} />\n        </Box>\n      </ClickAwayListener>\n    </Box>\n  );\n}\n","import { Autocomplete, TextField } from \"@mui/material\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useGitHubFetch } from \"../../context/GitHubApiProvider\";\n\nexport default function SearchAppBarItem() {\n  const { repo, branch } = useParams();\n  const history = useHistory();\n  const { loading, value: trees } = useGitHubFetch(\n    `/repos/${repo}/git/trees/${branch}?recursive=1`,\n    { tree: [] }\n  );\n  const files = trees.tree.map((tree) => tree.path);\n\n  const handleChange = (event, value, reason) => {\n    if (reason === \"selectOption\") {\n      history.push(`/repos/${repo}/viewer/${branch}/${value}`);\n    }\n  };\n\n  return (\n    <Autocomplete\n      fullWidth\n      disabled={loading}\n      size=\"small\"\n      options={files || []}\n      renderInput={(params) => (\n        <TextField {...params} label={loading ? \"Loading…\" : \"Jump to…\"} />\n      )}\n      onChange={handleChange}\n    />\n  );\n}\n","import { Paper } from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport PropTypes from \"prop-types\";\nimport { useRef } from \"react\";\nimport Draggable from \"react-draggable\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n    padding: theme.spacing(2),\n    cursor: \"move\",\n  },\n}));\n\nexport default function YouTubePlayer({ youTubeId, visible }) {\n  const classes = useStyles();\n  const nodeRef = useRef();\n\n  if (!visible || !youTubeId) {\n    return null;\n  }\n\n  return (\n    <Draggable nodeRef={nodeRef}>\n      <Paper ref={nodeRef} className={classes.paper}>\n        <iframe\n          title=\"YouTube\"\n          style={{ border: 0 }}\n          src={`https://www.youtube.com/embed/${youTubeId}?autoplay=1&modestbranding=1`}\n          allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        />\n      </Paper>\n    </Draggable>\n  );\n}\n\nYouTubePlayer.propTypes = {\n  youTubeId: PropTypes.string,\n  visible: PropTypes.bool,\n};\n","import PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useYouTubeId } from \"../../context/YouTubeIdProvider\";\nimport YouTubePlayer from \"./YouTubePlayer\";\n\nexport default function YouTubeAppBarItem() {\n  const { youTubeId } = useYouTubeId();\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    setVisible(!youTubeId);\n  }, [youTubeId]);\n\n  const handleToggle = () => {\n    setVisible(!visible);\n  };\n\n  if (!youTubeId) {\n    return null;\n  }\n\n  return (\n    <>\n      <Tooltip title=\"Show / Hide YouTube Player\">\n        <IconButton\n          color={visible ? \"secondary\" : \"default\"}\n          onClick={handleToggle}\n          size=\"large\"\n        >\n          <PlayArrowIcon />\n        </IconButton>\n      </Tooltip>\n      <YouTubePlayer visible={visible} youTubeId={youTubeId} />\n    </>\n  );\n}\n","import { AppBar as MuiAppBar } from \"@mui/material\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport { Box } from \"@mui/system\";\nimport { Route } from \"react-router-dom\";\nimport { REPO_REGEX } from \"../../lib/constants\";\nimport LogoAppBarItem from \"./LogoAppBarItem\";\nimport MoreAppBarItem from \"./MoreAppBarItem\";\nimport SearchAppBarItem from \"./SearchAppBarItem\";\nimport YouTubeAppBarItem from \"./YouTubeAppBarItem\";\n\nexport default function AppBar() {\n  return (\n    <MuiAppBar position={\"sticky\"} key=\"top-navbar\">\n      <Toolbar>\n        <LogoAppBarItem />\n        <Route\n          path={`${REPO_REGEX}/:mode/:branch/:path*`}\n          component={SearchAppBarItem}\n        />\n\n        <Box sx={{ flexGrow: 1 }} />\n\n        <Route\n          path={`${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`}\n          render={() => <YouTubeAppBarItem />}\n        />\n        <MoreAppBarItem />\n      </Toolbar>\n    </MuiAppBar>\n  );\n}\n","import Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n}));\n\nfunction buildBreadcrumb(previousPath, classes) {\n  const breadcrumbItems = [];\n\n  // ignoreIndex matches the Route defined in App.js.\n  // Certain portions are not useful to user in the breadcrumb, so we remove them.\n  const ignoreIndex = [\n    0 /* /repos */, 3 /* /:viewName(browser|viewer|editor) */,\n  ];\n  const keyBase = \"breadcrumb-item-\";\n\n  let currDir = \"\";\n  for (let i = 0; i < previousPath.length; i++) {\n    const directory = previousPath[i];\n    currDir = currDir.concat(\"/\", directory);\n\n    if (ignoreIndex.indexOf(i) !== -1) {\n      continue;\n    }\n\n    if (i === previousPath.length - 1) {\n      // Last item should be active\n      breadcrumbItems.push(\n        <Typography\n          role=\"breadcrumb\"\n          color=\"textPrimary\"\n          key={`${keyBase}${i}`}\n        >\n          {directory}\n        </Typography>\n      );\n    } else {\n      breadcrumbItems.push(\n        <Link\n          role=\"breadcrumb\"\n          component={RouterLink}\n          to={`${currDir}/`}\n          key={`${keyBase}${i}`}\n          color=\"inherit\"\n          className={classes.reactRouterHoverInherit}\n        >\n          {directory}\n        </Link>\n      );\n    }\n  }\n\n  return breadcrumbItems;\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @return {Array} List of BreadcrumbItems\n */\nexport default function DirectoryBreadcrumbs() {\n  const { pathname } = useLocation();\n  const classes = useStyles();\n  const keyBase = \"breadcrumb-item-\";\n\n  const subDirectoriesArr = pathname.split(\"/\").filter((value) => !!value);\n  subDirectoriesArr[3] = \"browser\";\n\n  const breadcrumbItems = buildBreadcrumb(subDirectoriesArr, classes);\n\n  return (\n    <Paper className={classes.paper}>\n      <Breadcrumbs>\n        <Link\n          role=\"breadcrumb\"\n          component={RouterLink}\n          to={`/`}\n          key={`${keyBase}Home`}\n          color=\"inherit\"\n          className={classes.reactRouterHoverInherit}\n        >\n          Home\n        </Link>\n        {breadcrumbItems}\n      </Breadcrumbs>\n    </Paper>\n  );\n}\n","import CallSplitIcon from \"@mui/icons-material/CallSplit\";\nimport Avatar from \"@mui/material/Avatar\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useGitHubFetch } from \"../../context/GitHubApiProvider\";\nimport DirectoryBreadcrumbs from \"../RouterBreadcrumbs\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nexport default function BranchViewer({ location }) {\n  const classes = useStyles();\n  const { repo } = useParams();\n  const { loading, value: branches } = useGitHubFetch(\n    `/repos/${repo}/branches`\n  );\n\n  if (loading) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <List>\n          {branches.map((item) => (\n            <ListItem\n              button\n              component={Link}\n              key={`list-group-item-${item.name}`}\n              to={`/repos/${repo}/browser/${item.name}/`}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <CallSplitIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={item.name}></ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </>\n  );\n}\n","import CloseIcon from \"@mui/icons-material/Close\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport SnackbarContent from \"@mui/material/SnackbarContent\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ErrorSnackbar({ open, handleClose, message }) {\n  const classes = useStyles();\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <SnackbarContent\n        className={classes.error}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <ErrorIcon\n              className={classNames(classes.icon, classes.iconVariant)}\n            />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n            size=\"large\"\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n}\n","import AddIcon from \"@mui/icons-material/Add\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Fab from \"@mui/material/Fab\";\nimport Grid from \"@mui/material/Grid\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport TextField from \"@mui/material/TextField\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport { useGitHubApi } from \"../../context/GitHubApiProvider\";\nimport { putContents } from \"../../lib/github\";\nimport ErrorSnackbar from \"../ErrorSnackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  whitespacePre: {\n    whiteSpace: \"pre-line\",\n    fontFamily: \"monospace\",\n  },\n  grid: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function AddNewFile() {\n  const classes = useStyles();\n  const { repo, path, branch } = useParams();\n  const { gitHubToken } = useGitHubApi();\n  const [newFileName, setNewFileName] = useState(\"\");\n  const [newFileOpen, setNewFileOpen] = useState(false);\n  const [toEditor, setToEditor] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleAddNewFileOpen = () => {\n    setNewFileOpen(true);\n  };\n\n  const handleAddNewFileClose = () => {\n    setNewFileOpen(false);\n    setNewFileName(\"\");\n  };\n\n  const handleUpdateFileName = (event) => {\n    setNewFileName(event.target.value);\n  };\n\n  const handleAddNewFile = async () => {\n    const newPath = getNewFilePath();\n    const content = getTemplateContents();\n\n    const response = await putContents(\n      repo,\n      newPath,\n      content,\n      undefined,\n      branch,\n      gitHubToken\n    );\n\n    if (response.status !== 201) {\n      handleShowError(`${response.status}: ${response.statusText}`);\n      return;\n    }\n    setToEditor(true);\n  };\n\n  const handleShowError = (message) => {\n    setMessage(message);\n    setError(true);\n  };\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  const isValidFileName = () => !!newFileName.match(/^[^<>:\"/\\\\|?*]+$/);\n  const getTemplateContents = () => `---\\n---\\n\\n# ${newFileName}`;\n  const getNewFilePath = () =>\n    path ? `${path}/${newFileName}.md` : `${newFileName}.md`;\n\n  if (toEditor) {\n    return (\n      <Redirect to={`/repos/${repo}/editor/${branch}/${getNewFilePath()}`} />\n    );\n  }\n\n  return (\n    <>\n      <Grid\n        container\n        className={classes.grid}\n        direction=\"row\"\n        justifyContent=\"flex-end\"\n        alignItems=\"flex-end\"\n      >\n        <Tooltip\n          title={\n            gitHubToken ? \"Add Song\" : \"Add a GitHub Token to Enable Editing\"\n          }\n        >\n          <span>\n            <Fab\n              aria-label=\"Add\"\n              disabled={!gitHubToken}\n              onClick={handleAddNewFileOpen}\n            >\n              <AddIcon />\n            </Fab>\n          </span>\n        </Tooltip>\n        <Dialog\n          open={newFileOpen}\n          aria-labelledby=\"add-new-file-dialog\"\n          fullWidth={true}\n        >\n          <DialogTitle id=\"add-new-file-dialog-title\">\n            Create New Music Markdown File\n          </DialogTitle>\n          <DialogContent>\n            <Card className={classes.previewCard}>\n              <CardContent>\n                <Typography\n                  variant=\"caption\"\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Preview\n                </Typography>\n                <Typography\n                  variant=\"body1\"\n                  color=\"textPrimary\"\n                  className={classes.whitespacePre}\n                >\n                  {getTemplateContents()}\n                </Typography>\n              </CardContent>\n            </Card>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"owner\"\n              label=\"Music Markdown File Name\"\n              value={newFileName}\n              onChange={handleUpdateFileName}\n              fullWidth\n              error={!isValidFileName()}\n              helperText={\n                !isValidFileName() ? (\n                  \"Invalid file name\"\n                ) : (\n                  <>\n                    {repo}/{branch}/{getNewFilePath()}\n                  </>\n                )\n              }\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">.md</InputAdornment>\n                ),\n              }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleAddNewFileClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button\n              onClick={handleAddNewFile}\n              color=\"primary\"\n              disabled={!isValidFileName()}\n            >\n              Create\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n      <ErrorSnackbar\n        message={message}\n        open={error}\n        handleClose={handleClearError}\n      />\n    </>\n  );\n}\n","import DescriptionIcon from \"@mui/icons-material/Description\";\nimport FolderIcon from \"@mui/icons-material/Folder\";\nimport Avatar from \"@mui/material/Avatar\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useContents } from \"../../context/GitHubApiProvider\";\nimport DirectoryBreadcrumbs from \"../RouterBreadcrumbs\";\nimport AddNewFile from \"./AddNewFile\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\n/**\n * Sorts the contents of a GitHub directory. Lists directories first then files,\n * each in alphabetical order.\n * @param {Object[]} contents GitHub directory contents. Contains files and directories.\n */\nfunction sortDir(contents) {\n  return [...contents].sort((a, b) => {\n    if (a.type === \"file\") {\n      if (b.type === \"file\") {\n        return a.name - b.name;\n      }\n      return 1;\n    }\n    if (b.type === \"file\") {\n      return -1;\n    }\n    return a.name - b.name;\n  });\n}\n\n/**\n * A React component for rendering repository files and directories.\n */\nexport default function FileViewer() {\n  const classes = useStyles();\n  const { repo, path, branch } = useParams();\n  const { loading, value } = useContents(repo, path, branch);\n\n  if (loading) {\n    return <LinearProgress />;\n  }\n\n  const contents = sortDir(value);\n\n  return (\n    <>\n      <DirectoryBreadcrumbs />\n      <div className={classes.root}>\n        <List key={\"repo-navigation-list\"}>\n          {contents.map((item) => (\n            <ListItem\n              button\n              component={Link}\n              key={`list-group-item-${item.name}`}\n              to={\n                item.type === \"dir\"\n                  ? `/repos/${repo}/browser/${branch}/${item.path}/`\n                  : `/repos/${repo}/viewer/${branch}/${item.path}`\n              }\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  {item.type === \"dir\" ? <FolderIcon /> : <DescriptionIcon />}\n                </Avatar>\n              </ListItemAvatar>\n              {item.type === \"dir\" ? (\n                <ListItemText secondary={item.name}></ListItemText>\n              ) : (\n                <ListItemText primary={item.name}></ListItemText>\n              )}\n            </ListItem>\n          ))}\n        </List>\n        <AddNewFile />\n      </div>\n    </>\n  );\n}\n","import { useTheme } from \"@mui/material/styles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport MarkdownIt from \"markdown-it\";\nimport MarkdownItMusic from \"markdown-it-music\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useYouTubeId } from \"../../context/YouTubeIdProvider\";\nimport { useContainerDimensions } from \"../../lib/hooks\";\nimport ErrorSnackbar from \"../ErrorSnackbar\";\n\nconst COLUMN_GAP = 20;\n\nconst useStyles = makeStyles((theme) => ({\n  columns: {\n    columnGap: `${COLUMN_GAP}px`,\n    columnRuleWidth: \"1px\",\n    columnRuleStyle: \"dashed\",\n    columnRuleColor: theme.palette.text.secondary,\n  },\n}));\n\nconst MusicMarkdownRender = ({\n  source,\n  width,\n  columnCount,\n  transposeAmount,\n}) => {\n  const theme = useTheme();\n  const { setYouTubeId } = useYouTubeId();\n  const [html, setHtml] = useState(\"\");\n  const [message, setMessage] = useState();\n  const [error, setError] = useState(false);\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  useEffect(() => {\n    const md = new MarkdownIt({ html: true }).use(MarkdownItMusic);\n    md.setTranspose(transposeAmount);\n    md.setTheme(theme.palette.mode);\n    md.setMaxWidth((width - COLUMN_GAP * (columnCount - 1)) / columnCount);\n\n    try {\n      setHtml(md.render(source));\n      setError(false);\n      setYouTubeId(md.meta.youTubeId);\n    } catch (err) {\n      console.log(err);\n      setHtml(`<pre>${source}</pre>`);\n      setMessage(err.message);\n      setError(true);\n    }\n  }, [\n    setYouTubeId,\n    source,\n    width,\n    columnCount,\n    transposeAmount,\n    theme.palette.mode,\n  ]);\n\n  // TODO: Replace this hack with an iframe.\n  var script = /<script>([.\\s\\S]*)<\\/script>/gm.exec(html);\n  if (script) {\n    // eslint-disable-next-line no-eval\n    window.eval(script[1]);\n  }\n\n  return (\n    <>\n      {/* TODO: Replace this hack with an iframe. */}\n      <div\n        className={`mmd-${theme.palette.mode}`}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n      <ErrorSnackbar\n        message={message}\n        open={error}\n        handleClose={handleClearError}\n      />\n    </>\n  );\n};\n\nexport default function Render(props) {\n  const classes = useStyles();\n  const componentRef = useRef();\n  const { width } = useContainerDimensions(componentRef);\n\n  return (\n    <div\n      className={classes.columns}\n      style={{ columnCount: props.columnCount }}\n      ref={componentRef}\n    >\n      <MusicMarkdownRender width={width} {...props} />\n    </div>\n  );\n}\n","import CheckIcon from \"@mui/icons-material/Check\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport PhotoFilterIcon from \"@mui/icons-material/PhotoFilter\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { green } from \"@mui/material/colors\";\nimport Fab from \"@mui/material/Fab\";\nimport Grid from \"@mui/material/Grid\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Paper from \"@mui/material/Paper\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport classNames from \"classnames\";\nimport queryString from \"query-string\";\nimport { useEffect, useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useContents, useGitHubApi } from \"../../context/GitHubApiProvider\";\nimport {\n  COLUMN_COUNT_QUERY_KEY,\n  TRANSPOSE_QUERY_KEY,\n} from \"../../lib/constants\";\nimport { putContents } from \"../../lib/github\";\nimport { useDebounce } from \"../../lib/hooks\";\nimport asciiTabConvert from \"../../tools/asciitab\";\nimport Render from \"./Render\";\nimport DirectoryBreadcrumbs from \"../RouterBreadcrumbs\";\n\nimport \"ace-builds/src-noconflict/mode-markdown\"; // organize-imports-ignore\nimport \"ace-builds/src-noconflict/theme-textmate\"; // organize-imports-ignore\nimport \"ace-builds/src-noconflict/theme-twilight\"; // organize-imports-ignore\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n  fabProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  editor: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    height: \"100%\",\n    width: \"100%\",\n  },\n  fab: {\n    margin: theme.spacing(1),\n  },\n  toolbar: {\n    display: \"flex\",\n    padding: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: \"100%\",\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[700],\n    },\n  },\n}));\n\nexport default function Edit({ location }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { gitHubToken } = useGitHubApi();\n  const [markdown, setMarkdown] = useState(\"\");\n  const debouncedMarkdown = useDebounce(markdown, 250);\n  const [sha, setSha] = useState();\n  const [saving, setSaving] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [isDirty, setIsDirty] = useState(false);\n  const { repo, path, branch } = useParams();\n  const { loading, value, content } = useContents(repo, path, branch);\n\n  const handleChange = (value) => {\n    setMarkdown(value);\n    setIsDirty(true);\n    setSuccess(false);\n  };\n\n  const handleSave = async () => {\n    if (!saving) {\n      setSuccess(false);\n      setSaving(true);\n\n      const response = await putContents(\n        repo,\n        path,\n        markdown,\n        sha,\n        branch,\n        gitHubToken\n      );\n      const json = await response.json();\n\n      if (response.status === 200) {\n        setSuccess(true);\n        setSaving(false);\n        setSha(json.content.sha);\n      } else {\n        setSuccess(false);\n        setSaving(false);\n      }\n    }\n  };\n\n  const handleAutoFormat = () => {\n    setMarkdown(asciiTabConvert(markdown));\n  };\n\n  useEffect(() => {\n    if (value) {\n      setMarkdown(content);\n      setSha(value.sha);\n    }\n  }, [content, value]);\n\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  const buttonClassname = classNames({\n    [classes.buttonSuccess]: success,\n  });\n\n  const parts = location.pathname.split(\"/\");\n  parts[4] = \"viewer\";\n  const viewerLink = parts.join(\"/\");\n\n  const githubParts = [parts[2], parts[3], \"blob\"].concat(parts.slice(5));\n  const githubLink = `https://github.com/${githubParts.join(\"/\")}`;\n\n  if (loading) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Paper className={classes.toolbar}>\n              <Tooltip\n                title={\n                  gitHubToken ? \"Save\" : \"Add a GitHub Token to Enable Saving\"\n                }\n              >\n                <span>\n                  <Fab\n                    disabled={!isDirty || !gitHubToken}\n                    className={`${buttonClassname} ${classes.fab}`}\n                    onClick={handleSave}\n                  >\n                    {success ? <CheckIcon /> : <SaveIcon />}\n                    {saving && (\n                      <CircularProgress\n                        size={68}\n                        className={classes.fabProgress}\n                      />\n                    )}\n                  </Fab>\n                </span>\n              </Tooltip>\n              <Tooltip title=\"Auto Format\">\n                <Fab className={classes.fab} onClick={handleAutoFormat}>\n                  <PhotoFilterIcon />\n                </Fab>\n              </Tooltip>\n              <Tooltip title=\"Return to Markdown View\">\n                <Fab component={Link} to={viewerLink} className={classes.fab}>\n                  <ExitToAppIcon />\n                </Fab>\n              </Tooltip>\n              <Tooltip title=\"Open in GitHub\">\n                <Fab href={githubLink} target=\"_blank\" className={classes.fab}>\n                  <GitHubIcon />\n                </Fab>\n              </Tooltip>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <AceEditor\n                mode=\"markdown\"\n                theme={theme.palette.mode === \"dark\" ? \"twilight\" : \"textmate\"}\n                width=\"100%\"\n                maxLines={Infinity}\n                className={classes.editor}\n                onChange={handleChange}\n                value={markdown}\n                editorProps={{ $blockScrolling: true }}\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <Render\n                source={debouncedMarkdown}\n                columnCount={columnCount}\n                transposeAmount={transposeAmount}\n              ></Render>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n}\n","import LinearProgress from \"@mui/material/LinearProgress\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport queryString from \"query-string\";\nimport { useParams } from \"react-router-dom\";\nimport { useContents } from \"../../context/GitHubApiProvider\";\nimport {\n  COLUMN_COUNT_QUERY_KEY,\n  TRANSPOSE_QUERY_KEY,\n} from \"../../lib/constants\";\nimport Render from \"./Render\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\nexport default function View({ location }) {\n  const classes = useStyles();\n  const { repo, path, branch } = useParams();\n  const { loading, content } = useContents(repo, path, branch);\n\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  if (loading) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Render\n        source={content}\n        columnCount={columnCount}\n        transposeAmount={transposeAmount}\n      />\n    </div>\n  );\n}\n","import AddIcon from \"@mui/icons-material/Add\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Fab from \"@mui/material/Fab\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { useState } from \"react\";\nimport ErrorSnackbar from \"../ErrorSnackbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function AddRepository({ handleAddRepository }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleDialogOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setOpen(false);\n    setName(\"\");\n    setOwner(\"\");\n    setError(false);\n  };\n\n  const handleShowError = (message) => {\n    setMessage(message);\n    setError(true);\n  };\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  const handleDialogAdd = async () => {\n    try {\n      await handleAddRepository(`${owner}/${name}`);\n      handleDialogClose();\n    } catch (err) {\n      handleShowError(err.message);\n    }\n  };\n\n  const handleUpdateOwner = (event) => {\n    setOwner(event.target.value);\n  };\n\n  const handleUpdateName = (event) => {\n    setName(event.target.value);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        className={classes.grid}\n        direction=\"row\"\n        justifyContent=\"flex-end\"\n        alignItems=\"flex-end\"\n      >\n        <Fab aria-label=\"Add\" onClick={handleDialogOpen}>\n          <AddIcon />\n        </Fab>\n        <Dialog open={open} aria-labelledby=\"add-repository-dialog\">\n          <DialogTitle id=\"add-repository-dialog-title\">\n            Add Repository\n          </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"owner\"\n              label=\"Repository Owner\"\n              value={owner}\n              onChange={handleUpdateOwner}\n              fullWidth\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Repository Name\"\n              value={name}\n              onChange={handleUpdateName}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleDialogClose}>Cancel</Button>\n            <Button onClick={handleDialogAdd}>Add</Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n      <ErrorSnackbar\n        message={message}\n        open={error}\n        handleClose={handleClearError}\n      />\n    </>\n  );\n}\n","import BookIcon from \"@mui/icons-material/Book\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@mui/material/ListItemSecondaryAction\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Link } from \"react-router-dom\";\nimport { useRepoMetadata, useRepos } from \"../../context/ReposProvider\";\nimport AddRepository from \"./AddRepository\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\nexport default function RepoViewer() {\n  const classes = useStyles();\n  const repoMetadata = useRepoMetadata();\n  const { addRepo, deleteRepo } = useRepos();\n\n  return (\n    <div className={classes.root}>\n      <List>\n        {repoMetadata.map((repo) => (\n          <ListItem\n            button\n            key={`repo-item-${repo.full_name}`}\n            component={Link}\n            to={`/repos/${repo.full_name}/browser/${repo.default_branch}`}\n          >\n            <ListItemAvatar>\n              <Avatar>\n                <BookIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={repo.full_name} />\n            <ListItemSecondaryAction>\n              <IconButton\n                aria-label=\"Delete\"\n                onClick={() => deleteRepo(repo.full_name)}\n                size=\"large\"\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      <AddRepository handleAddRepository={addRepo} />\n    </div>\n  );\n}\n","import Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { guitarChordbook } from \"markdown-it-music/lib/chordbook\";\nimport { renderChordDiagram } from \"markdown-it-music/renderers/chord_diagram\";\nimport queryString from \"query-string\";\nimport { Link, Route } from \"react-router-dom\";\nimport { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport Render from \"./MusicMd/Render\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n  chordSourcePaper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  chordCategoryPaper: {\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n  },\n  chordCategoryTypography: {\n    color: theme.palette.text.primary,\n    textAlign: \"center\",\n  },\n  chordVariantPaper: {\n    display: \"inline-block\",\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n  },\n  chordVariantTypography: {\n    color: theme.palette.text.secondary,\n  },\n  chordDiagram: {\n    filter: theme.palette.mode === \"dark\" ? \"invert(100%)\" : \"\",\n  },\n}));\n\nexport default function Sandbox({ location, match }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\">Sandbox</Typography>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/all-features-in-one-place`}>\n            All the Features in One Place\n          </Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/guitar-chordbook`}>Guitar Chordbook</Link>\n        </li>\n      </ul>\n\n      <Route\n        path={`${match.path}/all-features-in-one-place`}\n        component={() => (\n          <MarkdownViewer location={location} source={allFeaturesSource} />\n        )}\n      />\n      <Route\n        path={`${match.path}/guitar-chordbook`}\n        component={AllGuitarChords}\n      />\n    </div>\n  );\n}\n\nconst MarkdownViewer = ({ source, location }) => {\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  return (\n    <Render\n      source={source}\n      columnCount={columnCount}\n      transposeAmount={transposeAmount}\n    />\n  );\n};\n\nconst roots = [\n  \"C\",\n  \"C#\",\n  \"Db\",\n  \"D\",\n  \"D#\",\n  \"Eb\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"Gb\",\n  \"G\",\n  \"G#\",\n  \"Ab\",\n  \"A\",\n  \"A#\",\n  \"Bb\",\n  \"B\",\n];\n\nconst qualities = [\n  \"\",\n  \"m\",\n  \"6\",\n  \"m6\",\n  \"7\",\n  \"maj7\",\n  \"m7\",\n  \"9\",\n  \"dim\",\n  \"aug\",\n  \"sus2\",\n  \"7sus2\",\n  \"sus4\",\n  \"7sus4\",\n  \"5\",\n  \"dim5\",\n  \"dim7\",\n  \"7b5\",\n  \"m7b5\",\n  \"7#5\",\n  \"7b9\",\n  \"7#9\",\n  \"7b9#5\",\n  \"7/6\",\n  \"9b5\",\n  \"9#5\",\n  \"maj9\",\n  \"m9\",\n  \"9/6\",\n  \"m9/6\",\n  \"add9\",\n  \"11\",\n  \"m11\",\n  \"11aug\",\n  \"13\",\n  \"13b9\",\n  \"13b9b5\",\n];\n\nconst AllGuitarChords = ({ location }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography variant=\"h3\">Guitar Chordbook</Typography>\n      <Paper className={classes.chordSourcePaper}>\n        <MarkdownViewer source={allChordsSource} location={location} />\n      </Paper>\n      {roots.map((category, index) => (\n        <Paper key={`category-${index}`} className={classes.chordCategoryPaper}>\n          <Typography className={classes.chordCategoryTypography} variant=\"h4\">\n            {category} Chords\n          </Typography>\n          <ChordCategory category={category} />\n        </Paper>\n      ))}\n    </>\n  );\n};\n\nconst ChordCategory = ({ category }) => {\n  const classes = useStyles();\n  return Array.from(guitarChordbook.keys())\n    .filter((chord) => chord.match(/^[CDEFGAB](?:#|b)?|N\\.C\\./)[0] === category)\n    .map((chord, index) => (\n      <Paper key={`chord-${index}`} className={classes.chordVariantPaper}>\n        {guitarChordbook.get(chord).map((variant, index) => (\n          <span\n            className={classes.chordDiagram}\n            key={`variant-${index}`}\n            dangerouslySetInnerHTML={{ __html: renderChordDiagram(variant) }}\n          />\n        ))}\n        <Typography className={classes.chordVariantTypography} variant=\"h5\">\n          {chord}\n        </Typography>\n      </Paper>\n    ));\n};\n\nconst allChordsSource = `---\n---\n${roots\n  .map(\n    (root) => `## ${root} Chords\nc1: ${qualities.map((quality) => root + quality).join(\" \")}`\n  )\n  .join(\"\\n\\n\")}\n`;\n\nconst allFeaturesSource = `---\nyouTubeId: dN3GbF9Bx6E\n---\n\n# All the Features in One Place\n\n## Chord and Lyrics\nc1: Em               D           Em\nl1: Are you goin' to Scarborough Fair?\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\n\nc1: Em       G                   D\nl1: Remember me to one who lives there\n\nc1: Em       D                  Em\nl1: She once was a true love of mine\n\n## Multiple Overlapping Voices\nc1: Em                         D         Em\nl1: Tell her to make me a      cambric   shirt\nl2:                     On the side of a hill in the deep forest green\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\nl2:                              Tracing a sparrow on snow-crested ground\n\nc1: Em         G               D\nl1: Without no seams nor needlework\nl2:                      Blankets and bedclothes the child of the mountain\n\nc1: Em          D                 Em\nl1: Then she'll be a true love of mine\nl2:                               Sleeps unaware of the clarion call\n\n## VexTab\n\n:::vextab\noptions space=20\n\ntabstave\n  notation=true\n  key=A time=4/4\n\n  notes :q =|: (5/2.5/3.7/4) :8 7-5h6/3 ^3^ 5h6-7/5 ^3^ :q 7V/4 |\n  notes :8 t12p7/4 s5s3/4 :8 3s:16:5-7/5 :h p5/4\n  text :w, |#segno, ,|, :hd, , #tr\n\n\noptions space=25\n\ntabstave\n  notation=true\n\n  notes :q (5/4.5/5) (7/4.7/5)s(5/4.5/5) ^3^\n  notes :8 7-5/4 $.a./b.$ (5/4.5/5)h(7/5) =:|\n  notes :8 (12/5.12/4)ds(5/5.5/4)u 3b4/5\n  notes :h (5V/6.5/4.6/3.7/2) $.italic.let ring$ =|=\n\n  text :h, ,.font=Times-12-italic, D.S. al coda, |#coda\n  text :h, ,.-1, .font=Arial-14-bold,A13\n  text ++, .23, #f\n :::\n\n## ABC\n\n:::abc\nX: 1\nM: 4/4\nL: 1/16\nK: Amin\n\"Am\" (C16 | C4) B,2C2 D6 CB, | (C16 | C4) B,2C2 \"F\" D6 CA, |\n\"C\" G,8 \"E\" _A,8 | \"Am\" =A,8 \"F\" (3F4 F4 F4 | \"E\" F2 (E6 E8) | z6 ^A2 B4 e4 |\n\"Am\" e2d2c2(d2 \"G\" d4) .=A4 | \"F\" e2d2c2(d2 \"G\" d4) .A4 |\n\"Esus4\" e4 e4 e2d2B2d2 | \"E\" e4 e4 e2g2e2d2 |\n\"Am\" .e4 c2 \"G\" .d4 c2 e4 | \"F\" z2 c2 e2 \"G\" d6 c2d2 |\n\"Esus4\" e2e2e2d2 d2B2B2_A2 | \"E\" _A2F2F2E2 =A2B2A2G2 |\n:::\n\n`;\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { GitHubApiProvider } from \"../context/GitHubApiProvider\";\nimport { ReposProvider } from \"../context/ReposProvider\";\nimport SnackbarProvider from \"../context/SnackbarProvider\";\nimport { ThemeProvider } from \"../context/ThemeProvider\";\nimport { YouTubeIdProvider } from \"../context/YouTubeIdProvider\";\nimport { REPO_REGEX } from \"../lib/constants\";\nimport AppBar from \"./AppBar\";\nimport BranchViewer from \"./BranchView\";\nimport FileViewer from \"./FileView\";\nimport Edit from \"./MusicMd/Edit\";\nimport View from \"./MusicMd/View\";\nimport RepoViewer from \"./RepoView\";\nimport Sandbox from \"./Sandbox.js\";\n\nconst App = () => (\n  <YouTubeIdProvider>\n    <GitHubApiProvider>\n      <ReposProvider>\n        <ThemeProvider>\n          <SnackbarProvider>\n            <HomeRouter />\n          </SnackbarProvider>\n        </ThemeProvider>\n      </ReposProvider>\n    </GitHubApiProvider>\n  </YouTubeIdProvider>\n);\n\nconst HomeRouter = () => (\n  <Router key=\"home-router\">\n    <Route component={AppBar} />\n    <Switch>\n      <Route path={`${REPO_REGEX}/viewer/:branch/:path+`} component={View} />\n      <Route\n        path={`${REPO_REGEX}/browser/:branch/:path*`}\n        component={FileViewer}\n      />\n      <Route path={`${REPO_REGEX}/editor/:branch/:path*`} component={Edit} />\n      <Route path={REPO_REGEX} component={BranchViewer} />\n      <Route path=\"/sandbox\" component={Sandbox} />\n      <Route path=\"/\" component={RepoViewer} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}