{"version":3,"sources":["registerServiceWorker.js","components/YouTube.js","components/MarkdownMusic.js","util/Constants.js","util/GithubRepositoryUtil.js","components/MarkdownMusicSourceFetcher.js","components/ResponsiveContainer.js","components/Sandbox.js","components/MusicMarkdownNavbar.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","YouTubePlayer","_ref","youTubeId","react_default","a","createElement","className","title","src","concat","allow","allowFullScreen","YouTubeToggle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","visible","handleToggle","bind","assertThisInitialized","setState","index_es","icon","faYoutube","size","onClick","YouTube_YouTubePlayer","React","Component","MarkdownMusicRender","md","MarkdownIt","use","MarkdownItMusic","setTranspose","transpose","setMaxWidth","width","html","render","source","YouTube_YouTubeToggle","meta","dangerouslySetInnerHTML","__html","MarkdownMusic","lib_default","MarkdownMusic_MarkdownMusicRender","REPOS_LOCAL_STORAGE_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","GITHUB_API_URL","getContents","_x","_x2","_x3","_getContents","apply","arguments","_callee","owner","repo","path","apiUrl","response","regenerator_default","wrap","_context","prev","next","getApiUrl","fetch","sent","abrupt","json","stop","getRepositories","repoListStr","localStorage","getItem","JSON","parse","url","URL","githubToken","searchParams","set","history","createBrowserHistory","MarkdownMusicSourceFetcher","arrowUpKeyCode","arrowDownKeyCode","queryParams","queryString","search","isLoaded","markdown","parseInt","repos","handleKeyUpEvent","params","atob","content","event","keyCode","push","pathname","stringify","_this$state","tabIndex","onKeyUp","components_MarkdownMusic","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","Container_default","key","children","MarkdownEditor","value","handleChange","target","editorStyles","minHeight","marginRight","fontFamily","whiteSpace","style","display","onChange","AllChords","Array","from","guitarChordLibrary","keys","map","chord","index","align","get","renderChordDiagram","Sandbox","Sandbox_MarkdownEditor","Sandbox_AllChords","RepositoriesNavDropdown","repoDropdownItems","repoList","length","forEach","repoId","itemHref","NavLink","to","NavDropdown_default","Item","Divider","MusicMarkdownNavbar","repoMap","storedRepos","setItem","addRepository","Navbar_default","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","Nav_default","MusicMarkdownNavbar_RepositoriesNavDropdown","activeClassName","HomeRouter","HashRouter","Route","component","exact","Navigation","Link","App","components_ResponsiveContainer","ReactDOM","src_components_App","document","getElementById","process","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"kMAUMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAACC,GACNH,QAAQG,MAAM,4CAA6CA,yLC3E3DC,EAAgB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACpBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACbH,EAAAC,EAAAC,cAAA,UACEE,MAAOL,EACPI,UAAU,wBACVE,IAAG,iCAAAC,OAAmCP,GACtCQ,MAAM,0EACNC,iBAAe,MAKfC,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDnB,MAAQ,CACX2B,SAAS,GAGXP,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KANHA,8EAUjBG,KAAKQ,SAAS,SAAC/B,GAAD,MAAY,CACxB2B,SAAU3B,EAAM2B,4CAKlB,GAAKJ,KAAKJ,MAAMX,UAIhB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAiBC,KAAMC,IAAWC,KAAK,KAAKC,QAASb,KAAKK,eACzDL,KAAKvB,MAAM2B,QAAUlB,EAAAC,EAAAC,cAAC0B,EAAD,CAAe7B,UAAWe,KAAKJ,MAAMX,YAAgB,WAxBvD8B,IAAMC,WCV5BC,cACJ,SAAAA,EAAYrB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiB,IACjBpB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmB,GAAAd,KAAAH,KAAMJ,KAEDsB,IAAK,IAAIC,KACXC,IAAIC,KAJUxB,wEAQjBG,KAAKkB,GAAGI,aAAatB,KAAKJ,MAAM2B,WAChCvB,KAAKkB,GAAGM,YAAYxB,KAAKJ,MAAM6B,OAC/B,IAAMC,EAAO1B,KAAKkB,GAAGS,OAAO3B,KAAKJ,MAAMgC,QAEvC,OACE1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyC,EAAD,CAAe5C,UAAWe,KAAKkB,GAAGY,KAAK7C,YACvCC,EAAAC,EAAAC,cAAA,QAAM2C,wBAAyB,CAAEC,OAAQN,aAhBfX,IAAMC,WA4BzBiB,EANO,SAAAjD,GAAA,IAAG4C,EAAH5C,EAAG4C,OAAQL,EAAXvC,EAAWuC,UAAX,OACpBrC,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,KACED,EAAAC,EAAAC,cAAC+C,EAAD,CAAqBP,OAAQA,EAAQL,UAAWA,uBC7BvCa,EAAuB,GAAA5C,OADkB,iBAClB,iBACvB6C,EAA8B,GAAA7C,OAFW,iBAEX,iBAC9B8C,EAAiB,yBCOvB,SAAeC,EAAtBC,EAAAC,EAAAC,GAAA,OAAAC,EAAAC,MAAA5C,KAAA6C,sDAAO,SAAAC,EAA2BC,EAAOC,EAAMC,GAAxC,IAAAC,EAAAC,EAAA,OAAAC,EAAAjE,EAAAkE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACCN,EAASO,EAAS,UAAAjE,OAAWuD,EAAX,KAAAvD,OAAoBwD,EAApB,cAAAxD,OAAqCyD,IADxDK,EAAAE,KAAA,EAEkBE,MAAMR,GAFxB,cAECC,EAFDG,EAAAK,KAAAL,EAAAM,OAAA,SAGET,EAASU,QAHX,wBAAAP,EAAAQ,SAAAhB,6BAUA,SAASiB,IACd,IAAMC,EAAcC,aAAaC,QAAQ9B,GACzC,OAAI4B,EACKG,KAAKC,MAAMJ,GAEX,GA4BJ,SAASP,EAAUY,GACxBA,EAAM,IAAIC,IAAID,EAAK/B,GAEnB,IAAMiC,EAAcN,aAAaC,QAAQ7B,GAKzC,OAJIkC,GACFF,EAAIG,aAAaC,IAAI,eAAgBF,GAGhCF,ECvDT,IAAMK,EAAUC,cAqEDC,cA7Db,SAAAA,EAAYhF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4E,IACjB/E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8E,GAAAzE,KAAAH,KAAMJ,KAJRiF,eAAiB,GAGEhF,EAFnBiF,iBAAmB,GAKjBjF,EAAKkF,YAAcC,IAAYZ,MAAMvE,EAAKD,MAAMjC,SAASsH,QAEzDpF,EAAKpB,MAAQ,CACXyG,UAAU,EACVC,SAAU,KACV5D,UAAW6D,SAASvF,EAAKkF,YAAYxD,UAAW,KAAO,EACvD8D,MAAOxF,EAAKkF,YAAYM,MACxBpC,KAAMpD,EAAKkF,YAAY9B,MAGzBpD,EAAKyF,iBAAmBzF,EAAKyF,iBAAiBhF,KAAtBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAbPA,8MAiBXkD,EAAQ/C,KAAKJ,MAAM/B,MAAM0H,OAAOxC,MAChCC,EAAOhD,KAAKJ,MAAM/B,MAAM0H,OAAOvC,KAC/BC,EAAOjD,KAAKJ,MAAM/B,MAAM0H,OAAOtC,cAElBV,EAAYQ,EAAOC,EAAMC,UAAtCY,SACN7D,KAAKQ,SAAS,CACZ0E,UAAU,EACVC,SAAUK,KAAK3B,EAAK4B,sJAIPC,GACXA,EAAMC,UAAY3F,KAAK6E,eACzB7E,KAAKQ,SAAS,CACZe,UAAWvB,KAAKvB,MAAM8C,UAAY,IAE3BmE,EAAMC,UAAY3F,KAAK8E,kBAChC9E,KAAKQ,SAAS,CACZe,UAAWvB,KAAKvB,MAAM8C,UAAY,IAItCvB,KAAK+E,YAAYxD,UAAYvB,KAAKvB,MAAM8C,UAAY,EACpDmD,EAAQkB,KAAR,IAAApG,OAAiBQ,KAAKJ,MAAMjC,SAASkI,SAArC,KAAArG,OAAiDwF,IAAYc,UAAU9F,KAAK+E,gDAKrE,IAAAgB,EACmC/F,KAAKvB,MAAvCyG,EADDa,EACCb,SAAUC,EADXY,EACWZ,SAAU5D,EADrBwE,EACqBxE,UAC5B,OAAK2D,EAMDhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAW2G,SAAS,IAAIC,QAASjG,KAAKsF,kBACnDpG,EAAAC,EAAAC,cAAC8G,EAAD,CAAetE,OAAQuD,EAAU5D,UAAWA,KAL9CrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,qBArDiC0B,IAAMC,6BCPzCmF,EAA2B,gBAUlBC,MARf,SAA6BxG,GAC3B,OACEV,EAAAC,EAAAC,cAACiH,EAAAlH,EAAD,CAAWmH,IAAKH,GACbvG,EAAM2G,2BCsBPC,cACJ,SAAAA,EAAY5G,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwG,GAAA,OACjB3G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0G,GAAArG,KAAAH,KAAMJ,KAaDnB,MAAQ,CACXgI,MAZY,sdAed5G,EAAK6G,aAAe7G,EAAK6G,aAAapG,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAlBHA,4EAqBN6F,GACX1F,KAAKQ,SAAS,CAAEiG,MAAOf,EAAMiB,OAAOF,yCAIpC,IACMG,EAAe,CACnBC,UAAW,QAASpF,MAAO,MAAOqF,YAAa,OAC/CC,WAAY,YAAaC,WAAY,OAGvC,OAAO9H,EAAAC,EAAAC,cAAA,OAAK6H,MANG,CAAEC,QAAS,OAAQzF,MAAO,SAOvCvC,EAAAC,EAAAC,cAAA,YAAUqH,MAAOzG,KAAKvB,MAAMgI,MAAOU,SAAUnH,KAAK0G,aAAcO,MAAOL,IACvE1H,EAAAC,EAAAC,cAAA,OAAK6H,MAAOL,GACV1H,EAAAC,EAAAC,cAAC8G,EAAD,CAAetE,OAAQ5B,KAAKvB,MAAMgI,iBApCb1F,IAAMC,WA0C7BoG,EAAY,kBAChBC,MAAMC,KAAKC,qBAAmBC,QAAQC,IAAI,SAACC,EAAOC,GAAR,OACxCzI,EAAAC,EAAAC,cAAA,OAAKkH,IAAKqB,EAAOC,MAAM,SAASX,MAAO,CAAEC,QAAS,iBAC/CK,qBAAmBM,IAAIH,GAAOD,IAAI,SAAChB,EAAOkB,GAAR,OACjCzI,EAAAC,EAAAC,cAAA,QAAMkH,IAAKqB,EAAO5F,wBAChB,CAAEC,OAAQ8F,6BAAmBrB,QAGjCvH,EAAAC,EAAAC,cAAA,UAAKsI,OAKIK,EAhFC,kBACd7I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,+FAKAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAC4I,EAAD,MAEA9I,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,+DAGAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,OAAK2C,wBACH,CAAEC,OAAQ8F,6BAAmB,4BAA6B,IAAK,QAGjE5I,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAC6I,EAAD,+FCQEC,GAA0B,WAC9B,IAAMC,EAAoB,GACpBC,EAAWrE,IAYjB,OAXIqE,EAASC,OAAS,GACpBD,EAASE,QAAQ,SAAStF,GACxB,IAAMuF,EAAM,GAAA/I,OAAMwD,EAAKD,MAAX,KAAAvD,OAAoBwD,EAAKA,MAAzBxD,OAAgCwD,EAAKC,MAE3CuF,EAAQ,UAAAhJ,OAAawD,EAAKD,MAAlB,KAAAvD,OAA2BwD,EAAKA,KAAhC,aAAAxD,OAAgDwD,EAAKC,MACnEkF,EAAkBvC,KAChB1G,EAAAC,EAAAC,cAACqJ,GAAA,EAAD,CAASC,GAAIF,EAAUlC,IAAG,iBAAA9G,OAAmB+I,GAAUlJ,UAAU,iBAC9DkJ,MAKPrJ,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CAAaG,MAAM,sBAEjBJ,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAYyJ,KAAb,KAAkB1J,EAAAC,EAAAC,cAAA,+BAClBF,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAY0J,QAAb,MACCV,IAKQW,GA/Ca,WAK1B,OAJK7E,aAAaC,QAAQ9B,IJuBrB,SAAuBW,EAAOC,EAAMC,GACzC,IAAM8F,EAAU,CACdhG,MAASA,EACTC,KAAQA,EACRC,KAAQA,GAEJ+F,EAAcjF,IACdqE,EAAWY,EAAYX,OAAS,EAAIW,EAAc,GACxDZ,EAASxC,KAAKmD,GACd9E,aAAagF,QAAQ7G,EAAyB+B,KAAK2B,UAAUsC,II9B3Dc,CAAc,iBAAkB,iBAAkB,KAGlDhK,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAD,CAAQiK,GARe,OAQSC,OAAO,KAAKC,QARrB,OAQkDhD,IAAI,cAC3EpH,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAOoK,MAAR,CAAcC,KAAK,KAAnB,kBACAtK,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAOsK,OAAR,CAAeC,gBAAc,qBAC7BxK,EAAAC,EAAAC,cAAC+J,GAAAhK,EAAOwK,SAAR,KACEzK,EAAAC,EAAAC,cAACwK,GAAAzK,EAAD,CAAKE,UAAU,WACbH,EAAAC,EAAAC,cAACyK,GAAD,MACA3K,EAAAC,EAAAC,cAACqJ,GAAA,EAAD,CAASC,GAAG,WAAWrJ,UAAU,WAAWyK,gBAAgB,UAA5D,eCVJC,GAAa,kBACjB7K,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAQ1D,IAAI,eACVpH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOC,UAAWpB,KAClB5J,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOE,OAAK,EAAClH,KAAK,IAAIiH,UAAWE,KACjClL,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOhH,KAAK,WAAWiH,UAAWnC,IAClC7I,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOhH,KAAK,qCAAqCiH,UAAWtF,OAK5DwF,GAAa,kBACjBlL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAM3B,GAAG,kGAAT,wBAMW4B,GAvBH,kBACVpL,EAAAC,EAAAC,cAACmL,EAAD,CAAqBhE,SAAU,CAACwD,SCLlCS,IAAS7I,OACPzC,EAAAC,EAAAC,cAACqL,GAAD,MACAC,SAASC,eAAe,SVaX,WACb,GAA6C,kBAAmB3M,UAAW,CAGzE,GADkB,IAAIsG,IAAIsG,GAAwBlN,OAAOC,UAC3CkN,SAAWnN,OAAOC,SAASkN,OAIvC,OAGFnN,OAAOoN,iBAAiB,OAAQ,WAC9B,IAAM/M,EAAK,GAAAyB,OAAMoL,GAAN,sBAEPpN,GAiDV,SAAiCO,GAE/B2F,MAAM3F,GACHI,KAAK,SAACgF,GAGiB,MAApBA,EAAS4H,SACuD,IAAhE5H,EAAS6H,QAAQnD,IAAI,gBAAgBoD,QAAQ,cAG7CjN,UAAUC,cAAciN,MAAM/M,KAAK,SAACC,GAClCA,EAAa+M,aAAahN,KAAK,WAC7BT,OAAOC,SAASyN,aAKpBtN,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEArEAyM,CAAwBtN,GAIxBC,UAAUC,cAAciN,MAAM/M,KAAK,WACjCQ,QAAQC,IACN,+GAMJd,EAAgBC,MUvCxBuN","file":"static/js/main.79db6b03.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\n\nconst YouTubePlayer = ({ youTubeId }) => (\n  <div className=\"embed-responsive embed-responsive-16by9\">\n    <iframe\n      title={youTubeId}\n      className='embed-responsive-item'\n      src={`https://www.youtube.com/embed/${youTubeId}`}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen>\n    </iframe>\n  </div>\n);\n\nclass YouTubeToggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    this.setState((state) => ({\n      visible: !state.visible\n    }));\n  }\n\n  render() {\n    if (!this.props.youTubeId) {\n      return;\n    }\n\n    return (\n      <div>\n        <FontAwesomeIcon icon={faYoutube} size='2x' onClick={this.handleToggle} />\n        {this.state.visible ? <YouTubePlayer youTubeId={this.props.youTubeId} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport {\n  YouTubePlayer,\n  YouTubeToggle\n};\n","import ContainerDimensions from 'react-container-dimensions';\nimport React from 'react';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\nimport { YouTubeToggle } from './YouTube';\n\nclass MarkdownMusicRender extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.md = new MarkdownIt()\n      .use(MarkdownItMusic);\n  }\n\n  render() {\n    this.md.setTranspose(this.props.transpose);\n    this.md.setMaxWidth(this.props.width);\n    const html = this.md.render(this.props.source);\n\n    return (\n      <div>\n        <YouTubeToggle youTubeId={this.md.meta.youTubeId} />\n        <span dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    );\n  }\n}\n\nconst MarkdownMusic = ({ source, transpose }) => (\n  <ContainerDimensions>\n    <MarkdownMusicRender source={source} transpose={transpose} />\n  </ContainerDimensions>\n);\n\nexport default MarkdownMusic;\n","export const MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE = 'music-markdown';\nexport const REPOS_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:repositories`;\nexport const GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:github_token`;\nexport const GITHUB_API_URL = 'https://api.github.com';\n","import { REPOS_LOCAL_STORAGE_KEY, GITHUB_TOKEN_LOCAL_STORAGE_KEY, GITHUB_API_URL } from './Constants';\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n * @param {string} path The directory or file to retrieve\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(owner, repo, path) {\n  const apiUrl = getApiUrl(`/repos/${owner}/${repo}/contents/${path}`);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} owner Repo owner\n * @param {string} repo Repo name\n * @param {string} path Subdirectory\n */\nexport function addRepository(owner, repo, path) {\n  const repoMap = {\n    'owner': owner,\n    'repo': repo,\n    'path': path\n  };\n  const storedRepos = getRepositories();\n  const repoList = storedRepos.length > 0 ? storedRepos : [];\n  repoList.push(repoMap);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repoList));\n}\n\n/**\n * Composes the GitHub API url for the given url, attaching the user's GitHub\n * access token if it exists.\n * @param {string} url The path and search params\n * @return {URL} Composed GitHub API url with user's personal access token\n */\nexport function getApiUrl(url) {\n  url = new URL(url, GITHUB_API_URL);\n\n  const githubToken = localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    url.searchParams.set('access_token', githubToken);\n  }\n\n  return url;\n}\n","import React from 'react';\nimport { createBrowserHistory } from 'history';\nimport MarkdownMusic from './MarkdownMusic';\nimport queryString from 'query-string';\nimport { getContents } from '../util/GithubRepositoryUtil';\n\nconst history = createBrowserHistory();\n\n// TODO: Decouple retrieval of source markdown and controlling arguments to MarkdownMusic.\n// https://github.com/music-markdown/music-markdown/pull/25#discussion_r259598474\nclass MarkdownMusicSourceFetcher extends React.Component {\n  arrowUpKeyCode = 38;\n  arrowDownKeyCode = 40;\n\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n      transpose: parseInt(this.queryParams.transpose, 10) || 0,\n      repos: this.queryParams.repos,\n      path: this.queryParams.path,\n    };\n\n    this.handleKeyUpEvent = this.handleKeyUpEvent.bind(this);\n  }\n\n  async componentDidMount() {\n    const owner = this.props.match.params.owner;\n    const repo = this.props.match.params.repo;\n    const path = this.props.match.params.path;\n\n    const json = await getContents(owner, repo, path);\n    this.setState({\n      isLoaded: true,\n      markdown: atob(json.content)\n    });\n  }\n\n  handleKeyUpEvent(event) {\n    if (event.keyCode === this.arrowUpKeyCode) {\n      this.setState({\n        transpose: this.state.transpose + 1\n      });\n    } else if (event.keyCode === this.arrowDownKeyCode) {\n      this.setState({\n        transpose: this.state.transpose - 1\n      });\n    }\n\n    this.queryParams.transpose = this.state.transpose + 1;\n    history.push(`#${this.props.location.pathname}?${queryString.stringify(this.queryParams)}`);\n  }\n\n  // TODO: Separate the UI component with the fetch logic, we don't necessarily need the fetcher\n  // to be a React Component\n  render() {\n    const { isLoaded, markdown, transpose } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"Markdown\" tabIndex=\"0\" onKeyUp={this.handleKeyUpEvent}>\n          <MarkdownMusic source={markdown} transpose={transpose} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default MarkdownMusicSourceFetcher;\n","import Container from 'react-bootstrap/Container.js';\nimport React from 'react';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Container key={RESPONSIVE_CONTAINER_KEY}>\n      {props.children}\n    </Container>\n  );\n}\n\nexport default ResponsiveContainer;\n","import React from 'react';\nimport MarkdownMusic from './MarkdownMusic';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport { guitarChordLibrary } from 'markdown-it-music/renderers/chord_library';\n\nconst Sandbox = () => (\n  <div>\n    <h1>Music Markdown Sandbox</h1>\n    <p>\n      This page exercises various subcomponents of music-markdown and\n      markdown-it-music.\n    </p>\n\n    <h2>Markdown Editor</h2>\n    <MarkdownEditor/>\n\n    <h2>Chord Diagram Renderer</h2>\n    <p>\n      This section exercises the Chord Diagram Renderer.\n    </p>\n    <h3>Esus4 (200x200)</h3>\n    <div dangerouslySetInnerHTML={\n      { __html: renderChordDiagram('o2 m1 m2 n3,2 n4,4 b5,6,5', 200, 200) }\n    } />\n\n    <h2>Entire Chord Library</h2>\n    <AllChords/>\n  </div>\n);\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const value = '```chords\\n' +\n      'c1:                    Am     G  F          G      Esus4  E\\n' +\n      'v1: All the leaves are brown        and the sky is gray\\n\\n' +\n      'c1: F               C     E  Am       F        Esus4  E\\n' +\n      'v1: I\\'ve been for a walk         on a winter\\'s day\\n\\n' +\n      'c1:                 Am    G  F       G      Esus4  E\\n' +\n      'v1: I\\'d be safe and warm        if I was in L.A.\\n\\n' +\n      'c1:            Am        G  F     G               Esus4  E\\n' +\n      'v1: California dreamin\\'        on such a winter\\'s day\\n' +\n      '```';\n\n    this.state = {\n      value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const styles = { display: 'flex', width: '100%' };\n    const editorStyles = {\n      minHeight: '500px', width: '50%', marginRight: '20px',\n      fontFamily: 'monospace', whiteSpace: 'pre'\n    };\n\n    return <div style={styles}>\n      <textarea value={this.state.value} onChange={this.handleChange} style={editorStyles}></textarea>\n      <div style={editorStyles}>\n        <MarkdownMusic source={this.state.value}></MarkdownMusic>\n      </div>\n    </div>;\n  }\n}\n\nconst AllChords = () => (\n  Array.from(guitarChordLibrary.keys()).map((chord, index) => (\n    <div key={index} align=\"center\" style={{ display: 'inline-block' }}>\n      {guitarChordLibrary.get(chord).map((value, index) => (\n        <span key={index} dangerouslySetInnerHTML={\n          { __html: renderChordDiagram(value) }\n        } />\n      ))}\n      <h5>{chord}</h5>\n    </div>\n  ))\n);\n\nexport default Sandbox;\n","import Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getRepositories, addRepository } from '../util/GithubRepositoryUtil';\nimport { REPOS_LOCAL_STORAGE_KEY } from '../util/Constants';\n\n// TODO: Build button toggle for dark/light\nconst darkLightThemeFlag = 'dark';\n\nconst MusicMarkdownNavbar = () => {\n  if (!localStorage.getItem(REPOS_LOCAL_STORAGE_KEY)) {\n    // TODO: sanitize this input when storing\n    addRepository('music-markdown', 'almost-in-time', '/');\n  }\n  return (\n    <Navbar bg={darkLightThemeFlag} expand=\"lg\" variant={darkLightThemeFlag} key=\"top-navbar\">\n      <Navbar.Brand href=\"/\">Music Markdown</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          <RepositoriesNavDropdown />\n          <NavLink to=\"/sandbox\" className=\"nav-link\" activeClassName=\"active\">Sandbox</NavLink>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\n/**\n * For all added repositories, add it to the dropdown list\n */\n// TODO: List first x items, then put in dropdown item to expand full list\nconst RepositoriesNavDropdown = () => {\n  const repoDropdownItems = [];\n  const repoList = getRepositories();\n  if (repoList.length > 0) {\n    repoList.forEach(function(repo) {\n      const repoId = `${repo.owner}/${repo.repo}${repo.path}`;\n      // TODO: List valid files after clicking on repo name\n      const itemHref = `/repos/${repo.owner}/${repo.repo}/contents${repo.path}`;\n      repoDropdownItems.push(\n        <NavLink to={itemHref} key={`dropdown-item-${repoId}`} className=\"dropdown-item\">\n          {repoId}\n        </NavLink>);\n    });\n  }\n  return (\n    <NavDropdown title=\"Music Repositories\">\n      {/* TODO: Build edit repo functionality */}\n      <NavDropdown.Item><b>Edit Repositories</b></NavDropdown.Item>\n      <NavDropdown.Divider />\n      {repoDropdownItems}\n    </NavDropdown>\n  );\n};\n\nexport default MusicMarkdownNavbar;\n","import React from 'react';\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\nimport MarkdownMusicSourceFetcher from './MarkdownMusicSourceFetcher';\nimport ResponsiveContainer from './ResponsiveContainer.js';\nimport Sandbox from './Sandbox.js';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar.js';\n\nconst App = () => (\n  <ResponsiveContainer children={[HomeRouter()]} />\n);\n\nconst HomeRouter = () => (\n  <Router key=\"home-router\">\n    <div>\n      <Route component={MusicMarkdownNavbar} />\n      <Route exact path=\"/\" component={Navigation} />\n      <Route path=\"/sandbox\" component={Sandbox} />\n      <Route path=\"/repos/:owner/:repo/contents/:path\" component={MarkdownMusicSourceFetcher} />\n    </div>\n  </Router>\n);\n\nconst Navigation = () => (\n  <div>\n    <Link to=\"/repos/music-markdown/almost-in-time/contents/California Dreamin' - The Mamas and the Papas.md\">\n      California Dreamin\n    </Link>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}