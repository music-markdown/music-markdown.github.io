{"version":3,"sources":["registerServiceWorker.js","redux/reducers/updateColumnCount.js","redux/actionTypes.js","redux/reducers/updateFontSize.js","redux/reducers/transpose.js","redux/reducers/index.js","redux/store.js","components/YouTube.js","components/MarkdownMusic.js","redux/actions.js","components/Toolbar.js","lib/constants.js","lib/github.js","components/MarkdownMusicSourceFetcher.js","components/MusicMarkdownNavbar.js","components/ResponsiveContainer.js","components/NavigationListItem.js","components/Breadcrumbs.js","components/RepositoryNavigation.js","components/BranchNavigation.js","components/Sandbox.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","columnCount","arguments","length","undefined","action","type","payload","fontSize","transposeAmount","combineReducers","store","createStore","rootReducer","YouTubePlayer","_ref","youTubeId","react_default","a","createElement","className","title","src","concat","allow","allowFullScreen","YouTubeToggle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","visible","handleToggle","bind","assertThisInitialized","setState","index_es","icon","faYoutube","size","onClick","YouTube_YouTubePlayer","React","Component","MarkdownMusicRender","md","MarkdownIt","use","MarkdownItMusic","setTranspose","setColumnCount","setFontSize","setMaxWidth","width","html","render","source","YouTube_YouTubeToggle","meta","dangerouslySetInnerHTML","__html","ConnectMarkdownMusicRender","connect","MarkdownMusic","lib_default","Toolbar","handleTransposeClick","handleColumnClick","handleFontClick","increase","decrease","event","transpose","target","textContent","updateColumnCount","updateFontSize","ButtonToolbar_default","ButtonGroup_default","Button_default","variant","isIncreaseTransposeAmount","isIncreaseColumnCount","isIncreaseFontSize","REPOS_LOCAL_STORAGE_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","GITHUB_API_URL","getContents","_x","_x2","_x3","_x4","_getContents","apply","_callee","owner","repo","path","branch","apiUrl","response","regenerator_default","wrap","_context","prev","next","getApiUrl","fetch","sent","abrupt","json","stop","getRepositories","repoListStr","localStorage","getItem","JSON","parse","getBranches","_x5","_x6","_getBranches","_callee2","_context2","url","URL","githubToken","searchParams","set","MarkdownMusicSourceFetcher","queryParams","queryString","search","parseInt","isLoaded","markdown","params","atob","content","_this$state","components_Toolbar","components_MarkdownMusic","newTransposeAmount","newColumnCount","newFontSize","RepositoriesNavDropdown","open","handleClick","handleClose","_this2","repoDropdownItems","repoList","inheritHoverColor","classes","forEach","repoId","push","MenuItem_default","component","NavLink","to","key","classNames","Fragment","core_Button_default","buttonRef","node","anchorEl","Menu_default","id","onClose","withStyles","&:hover","color","repoMap","storedRepos","setItem","stringify","addRepository","AppBar_default","position","Toolbar_default","Link","Typography_default","MusicMarkdownNavbar_RepositoriesNavDropdown","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","Grid_default","children","NavigationListItem","item","react_router_bootstrap_lib","ListGroupItem_default","Breadcrumbs","breadcrumbItems","viewNames","subDirectoriesArr","pathname","split","shift","pop","currDir","i","directory","indexOf","isActive","Breadcrumb_default","Item","active","RepositoryNavigation","contents","prevProps","prevOwner","prevRepo","prevPath","prevBranch","message","listGroupItems","name","_this2$props$match$pa","viewType","itemJsx","linkToContent","components_NavigationListItem","components_Breadcrumbs","ListGroup_default","BranchNavigation","branches","MarkdownEditor","value","handleChange","editorStyles","minHeight","marginRight","fontFamily","whiteSpace","style","display","onChange","AllChords","Array","from","guitarChordLibrary","keys","map","chord","index","align","get","renderChordDiagram","Sandbox","Sandbox_MarkdownEditor","parseVoicing","Sandbox_AllChords","theme","createMuiTheme","typography","useNextVariants","palette","HomeRouter","es","HashRouter","Route","MusicMarkdownNavbar","exact","Navigation","excat","App","core_styles","components_ResponsiveContainer","ReactDOM","src_components_App","document","getElementById","process","origin","addEventListener","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.aa562072.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { UPDATE_COLUMN_COUNT } from '../actionTypes';\n\nconst columnCount = (state = 1, action) => {\n  switch (action.type) {\n  case UPDATE_COLUMN_COUNT: {\n    return action.payload.columnCount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default columnCount;\n","export const TRANSPOSE = 'TRANSPOSE';\nexport const UPDATE_COLUMN_COUNT = 'UPDATE_COLUMN_COUNT';\nexport const UPDATE_FONT_SIZE = 'UPDATE_FONT_SIZE';\n","import { UPDATE_FONT_SIZE } from '../actionTypes';\n\nconst fontSize = (state = 13, action) => {\n  switch (action.type) {\n  case UPDATE_FONT_SIZE: {\n    return action.payload.fontSize;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default fontSize;\n","import { TRANSPOSE } from '../actionTypes';\n\nconst transposeAmount = (state = 0, action) => {\n  switch (action.type) {\n  case TRANSPOSE: {\n    return action.payload.transposeAmount;\n  }\n  default: {\n    return state;\n  }\n  }\n};\n\nexport default transposeAmount;\n","import { combineReducers } from 'redux';\nimport columnCount from './updateColumnCount';\nimport fontSize from './updateFontSize';\nimport transposeAmount from './transpose';\n\nexport default combineReducers({ transposeAmount, columnCount, fontSize });\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nlet store = undefined;\nif (process.env.NODE_ENV === 'production') {\n  store = createStore(rootReducer);\n} else {\n  store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n}\n\nexport default store;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\n\nconst YouTubePlayer = ({ youTubeId }) => (\n  <div className=\"embed-responsive embed-responsive-16by9\">\n    <iframe\n      title={youTubeId}\n      className='embed-responsive-item'\n      src={`https://www.youtube.com/embed/${youTubeId}`}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen>\n    </iframe>\n  </div>\n);\n\nclass YouTubeToggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  handleToggle() {\n    this.setState((state) => ({\n      visible: !state.visible\n    }));\n  }\n\n  render() {\n    if (!this.props.youTubeId) {\n      return <div></div>;\n    }\n\n    return (\n      <div>\n        <FontAwesomeIcon icon={faYoutube} size='2x' onClick={this.handleToggle} />\n        {this.state.visible ? <YouTubePlayer youTubeId={this.props.youTubeId} /> : ''}\n      </div>\n    );\n  }\n}\n\nexport {\n  YouTubePlayer,\n  YouTubeToggle\n};\n","import ContainerDimensions from 'react-container-dimensions';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport MarkdownIt from 'markdown-it';\nimport MarkdownItMusic from 'markdown-it-music';\n\nimport { YouTubeToggle } from './YouTube';\n\nclass MarkdownMusicRender extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.md = new MarkdownIt()\n      .use(MarkdownItMusic);\n  }\n\n  render() {\n    this.md.setTranspose(this.props.transposeAmount);\n    this.md.setColumnCount(this.props.columnCount);\n    this.md.setFontSize(this.props.fontSize);\n    this.md.setMaxWidth(this.props.width);\n    const html = this.md.render(this.props.source);\n\n    return (\n      <div>\n        <YouTubeToggle youTubeId={this.md.meta.youTubeId} />\n        <span dangerouslySetInnerHTML={{ __html: html }} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { transposeAmount, columnCount, fontSize } = state;\n  return { transposeAmount, columnCount, fontSize };\n}\n\nconst ConnectMarkdownMusicRender = connect(mapStateToProps)(MarkdownMusicRender);\n\nconst MarkdownMusic = ({ source }) => (\n  <ContainerDimensions>\n    <ConnectMarkdownMusicRender source={source} />\n  </ContainerDimensions>\n);\n\nexport default MarkdownMusic;\n","import {\n  TRANSPOSE,\n  UPDATE_COLUMN_COUNT,\n  UPDATE_FONT_SIZE\n} from './actionTypes';\n\nlet transposeAmount = 0;\nlet columnCount = 1;\nlet fontSize = 13;\n\nexport const transpose = (isIncreaseTransposeAmount) => ({\n  type: TRANSPOSE,\n  payload: {\n    transposeAmount: isIncreaseTransposeAmount ? ++transposeAmount : --transposeAmount\n  }\n});\n\nexport const updateColumnCount = (isIncreaseColumnCount) => ({\n  type: UPDATE_COLUMN_COUNT,\n  payload: {\n    columnCount: isIncreaseColumnCount ? ++columnCount : --columnCount\n  }\n});\n\nexport const updateFontSize = (isIncreaseFontSize) => ({\n  type: UPDATE_FONT_SIZE,\n  payload: {\n    fontSize: isIncreaseFontSize ? ++fontSize : --fontSize\n  }\n});\n\nexport const setTranspose = (newTransposeAmount) => {\n  transposeAmount = newTransposeAmount;\n\n  return {\n    type: TRANSPOSE,\n    payload: {\n      transposeAmount\n    }\n  };\n};\n\nexport const setColumnCount = (newColumnCount) => {\n  columnCount = newColumnCount;\n\n  return {\n    type: UPDATE_COLUMN_COUNT,\n    payload: {\n      columnCount\n    }\n  };\n};\n\nexport const setFontSize = (newFontSize) => {\n  fontSize = newFontSize;\n\n  return {\n    type: UPDATE_FONT_SIZE,\n    payload: {\n      fontSize\n    }\n  };\n};\n","import React from 'react';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { connect } from 'react-redux';\n\nimport { transpose } from '../redux/actions';\nimport { updateColumnCount } from '../redux/actions';\nimport { updateFontSize } from '../redux/actions';\n\nclass Toolbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTransposeClick = this.handleTransposeClick.bind(this);\n    this.handleColumnClick = this.handleColumnClick.bind(this);\n    this.handleFontClick = this.handleFontClick.bind(this);\n\n    this.increase = '+1';\n    this.decrease = '-1';\n  }\n\n  handleTransposeClick(event) {\n    // TODO: Update history with new transposeAmount\n    this.props.transpose(event.target.textContent === this.increase);\n  }\n\n  handleColumnClick(event) {\n    // TODO: Update history with new columnCount\n    this.props.updateColumnCount(event.target.textContent === this.increase);\n  }\n\n  handleFontClick(event) {\n    // TODO: Update history with new fontSize\n    this.props.updateFontSize(event.target.textContent === this.increase);\n  }\n\n  render() {\n    // TODO: Move dark theme to redux store.\n    return (\n      <ButtonToolbar className='border justify-content-center bg-dark'>\n        <span className='padding bg-dark text-light my-auto'>Transpose</span>\n        <ButtonGroup>\n          <Button variant='dark' onClick={this.handleTransposeClick}>{this.decrease}</Button>\n          <Button variant='dark' onClick={this.handleTransposeClick}>{this.increase}</Button>\n        </ButtonGroup>\n        <span className='padding bg-dark text-light my-auto'>Columns</span>\n        <ButtonGroup>\n          <Button variant='dark' onClick={this.handleColumnClick}>{this.decrease}</Button>\n          <Button variant='dark' onClick={this.handleColumnClick}>{this.increase}</Button>\n        </ButtonGroup>\n        <span className='padding bg-dark text-light my-auto'>Font Size</span>\n        <ButtonGroup>\n          <Button variant='dark' onClick={this.handleFontClick}>{this.decrease}</Button>\n          <Button variant='dark' onClick={this.handleFontClick}>{this.increase}</Button>\n        </ButtonGroup>\n      </ButtonToolbar>\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  { transpose, updateColumnCount, updateFontSize }\n)(Toolbar);\n","/* Local Storage */\n\n/** Key namespace for music-markdown when storing app specific values in localStorage */\nexport const MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE = 'music-markdown';\n/** Key for markdown-music repositories specific localStorage values*/\nexport const REPOS_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:repositories`;\nexport const GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${MUSIC_MARKDOWN_LOCAL_STORAGE_NAMESPACE}:github_token`;\nexport const GITHUB_API_URL = 'https://api.github.com';\n","import { REPOS_LOCAL_STORAGE_KEY, GITHUB_TOKEN_LOCAL_STORAGE_KEY, GITHUB_API_URL } from './constants';\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n * @param {string} path The directory or file to retrieve\n * @param {string} branch The branch to retrive contents from\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(owner, repo, path, branch) {\n  if (path === undefined || path.length === 0) {\n    path = '';\n  }\n  const apiUrl = getApiUrl(`/repos/${owner}/${repo}/contents/${path}`, branch);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\n/**\n * Returns a promise of a list of branches for the given repository.\n * @param {string} owner Account owner of the repo\n * @param {string} repo Repo name\n */\nexport async function getBranches(owner, repo) {\n  const apiUrl = getApiUrl(`/repos/${owner}/${repo}/branches`);\n  const response = await fetch(apiUrl);\n\n  return response.json();\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} owner Repo owner\n * @param {string} repo Repo name\n * @param {string} path Subdirectory\n * @param {string} branch Branch name\n */\nexport function addRepository(owner, repo, path, branch) {\n  const repoMap = { owner, repo, path, branch };\n  const storedRepos = getRepositories();\n  const repoList = storedRepos.length > 0 ? storedRepos : [];\n  repoList.push(repoMap);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repoList));\n}\n\n/**\n * Composes the GitHub API url for the given url, attaching the user's GitHub\n * access token if it exists.\n * @param {string} url The path and search params\n * @param {string} branch The branch to get from\n * @return {URL} Composed GitHub API url with user's personal access token\n */\nexport function getApiUrl(url, branch) {\n  url = new URL(url, GITHUB_API_URL);\n\n  const githubToken = localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  if (githubToken) {\n    url.searchParams.set('access_token', githubToken);\n  }\n\n  if (branch) {\n    url.searchParams.set('ref', branch);\n  }\n\n  return url;\n}\n","import React from 'react';\nimport queryString from 'query-string';\nimport { connect } from 'react-redux';\n\nimport MarkdownMusic from './MarkdownMusic';\nimport Toolbar from './Toolbar';\nimport { getContents } from '../lib/github';\nimport { setTranspose, setColumnCount, setFontSize } from '../redux/actions';\n\n// TODO: Decouple retrieval of source markdown and controlling arguments to MarkdownMusic.\n// https://github.com/music-markdown/music-markdown/pull/25#discussion_r259598474\nclass MarkdownMusicSourceFetcher extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.queryParams = queryString.parse(this.props.location.search);\n\n    this.props.setTranspose(parseInt(this.queryParams.transpose, 10) || 0);\n    this.props.setColumnCount(parseInt(this.queryParams.columnCount, 10) || 1);\n    this.props.setFontSize(parseInt(this.queryParams.fontSize, 10) || 13);\n\n    this.state = {\n      isLoaded: false,\n      markdown: null,\n    };\n  }\n\n  async componentDidMount() {\n    const { owner, repo, path } = this.props.match.params;\n\n    const json = await getContents(owner, repo, path);\n    this.setState({\n      isLoaded: true,\n      markdown: atob(json.content)\n    });\n  }\n\n  // TODO: Separate the UI component with the fetch logic, we don't necessarily need the fetcher\n  // to be a React Component\n  render() {\n    const { isLoaded, markdown } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      return (\n        <div className=\"Markdown\">\n          <Toolbar></Toolbar>\n          <MarkdownMusic source={markdown} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default connect(\n  undefined,\n  { setTranspose, setColumnCount, setFontSize }\n)(MarkdownMusicSourceFetcher);\n","import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\n\nimport React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { getRepositories, addRepository } from '../lib/github';\nimport { REPOS_LOCAL_STORAGE_KEY } from '../lib/constants';\n\nconst styles = {\n  inheritHoverColor: {\n    '&:hover': {\n      color: 'inherit'\n    }\n  }\n};\n\nconst MusicMarkdownNavbar = (props) => {\n  const { classes } = props;\n\n  if (!localStorage.getItem(REPOS_LOCAL_STORAGE_KEY)) {\n    // TODO: sanitize this input when storing\n    addRepository('music-markdown', 'almost-in-time', '/', 'master');\n  }\n  return (\n    <AppBar position={'sticky'} key='top-navbar'>\n      <Toolbar>\n        <Button className={classNames(classes.inheritHoverColor)} component={Link} to='/'>\n          <Typography variant='h6' color='inherit'>\n            Music Markdown\n          </Typography>\n        </Button>\n        <RepositoriesNavDropdown {...props} />\n        <Button className={classNames(classes.inheritHoverColor)} component={NavLink} to='/sandbox'>\n          Sandbox\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\n/**\n * For all added repositories, add it to the dropdown list\n */\n// TODO: List first x items, then put in dropdown item to expand full list\nclass RepositoriesNavDropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick() {\n    this.setState((state) => ({\n      open: !state.open\n    }));\n  }\n\n  handleClose() {\n    this.setState(() => ({\n      open: false\n    }));\n  }\n\n  render() {\n    const repoDropdownItems = [];\n    const repoList = getRepositories();\n\n    if (repoList.length > 0) {\n      const { inheritHoverColor } = this.props.classes;\n\n      repoList.forEach((repo) => {\n        const repoId = `${repo.owner}/${repo.repo}/${repo.branch}${repo.path}`;\n        repoDropdownItems.push(\n          <MenuItem component={NavLink}\n            to={`/repos/${repo.owner}/${repo.repo}/browser/${repo.branch}${repo.path}`}\n            key={`dropdown-item-${repoId}`}\n            onClick={this.handleClose}\n            className={classNames(inheritHoverColor)}>\n            {repoId}\n          </MenuItem>);\n      });\n    }\n\n    const { open } = this.state;\n\n    return (\n      <>\n        <Button onClick={this.handleClick} buttonRef={(node) => {\n          this.anchorEl = node;\n        }}>\n          Music Repositories\n        </Button>\n\n        <Menu id='dropdown-menu' anchorEl={this.anchorEl} open={open} onClose={this.handleClose}>\n          {repoDropdownItems}\n        </Menu>\n      </>\n    );\n  }\n};\n\nexport default withStyles(styles)(MusicMarkdownNavbar);\n","import Grid from '@material-ui/core/Grid';\nimport React from 'react';\n\nconst RESPONSIVE_CONTAINER_KEY = 'app-container';\n\nfunction ResponsiveContainer(props) {\n  return (\n    <Grid key={RESPONSIVE_CONTAINER_KEY}>\n      {props.children}\n    </Grid>\n  );\n}\n\nexport default ResponsiveContainer;\n","import React from 'react';\nimport ListGroupItem from 'react-bootstrap/ListGroupItem';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst NavigationListItem = ({ to, action, item }) => (\n  <LinkContainer to={to}>\n    <ListGroupItem action={action}>\n      {item}\n    </ListGroupItem>\n  </LinkContainer>\n);\n\nexport default NavigationListItem;\n","import React from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {string} pathname current URI pathname\n * @return {Array} List of BreadcrumbItems\n */\nconst Breadcrumbs = ({ pathname }) => {\n  const breadcrumbItems = [];\n  const viewNames = ['browser', 'viewer', 'editor'];\n  const keyBase = 'breadcrumb-item-';\n\n  const subDirectoriesArr = pathname.split('/');\n\n  // pathname starts with '/', so discard. Pathname will sometimes end with '/', so discard that as well.\n  subDirectoriesArr.shift();\n  if (subDirectoriesArr[subDirectoriesArr.length - 1] === '') {\n    subDirectoriesArr.pop();\n  }\n\n  let currDir = '';\n  for (let i = 0; i < subDirectoriesArr.length; i++) {\n    let directory = subDirectoriesArr[i];\n\n    if (viewNames.indexOf(directory) !== -1) {\n      continue;\n    }\n\n    currDir = currDir.concat('/', directory);\n\n    let isActive = false;\n    switch (i) {\n    case 0:\n      // Root has no inherent value, so using home as UI element\n      directory = 'Home';\n      break;\n    case subDirectoriesArr.length - 1:\n      // Last item should be active\n      isActive = true;\n      break;\n    default:\n      break;\n    };\n\n    breadcrumbItems.push(\n      <LinkContainer to={`${currDir}/`} key={`${keyBase}${i}`}>\n        <Breadcrumb.Item active={isActive}>\n          {directory}\n        </Breadcrumb.Item>\n      </LinkContainer>\n    );\n  };\n\n  return (\n    <Breadcrumb>\n      {breadcrumbItems}\n    </Breadcrumb>\n  );\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport NavigationListItem from './NavigationListItem';\nimport Breadcrumbs from './Breadcrumbs';\nimport { getContents } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass RepositoryNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      contents: []\n    };\n  }\n\n  async componentDidMount() {\n    const { owner, repo, path, branch } = this.props.match.params;\n\n    const contents = await getContents(owner, repo, path, branch);\n    this.setState({\n      isLoaded: true,\n      contents\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Props before update\n   */\n  async componentDidUpdate(prevProps) {\n    const { owner: prevOwner, repo: prevRepo, path: prevPath, branch: prevBranch } = prevProps.match.params;\n    const { owner, repo, path, branch } = this.props.match.params;\n\n    if (prevOwner !== owner || prevRepo !== repo || prevPath !== path || prevBranch !== branch) {\n      const contents = await getContents(owner, repo, path, branch);\n      this.setState({\n        isLoaded: true,\n        contents\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded, contents } = this.state;\n    if (!isLoaded) {\n      return <div className=\"Markdown\">Loading...</div>;\n    }\n\n    if (!contents.forEach) {\n      return <div>{contents.message}</div>;\n    }\n\n    const listGroupItems = [];\n\n    contents.forEach((item) => {\n      const key = `list-group-item-${item.name}`;\n\n      const { owner, repo, branch } = this.props.match.params;\n\n      let viewType = 'error';\n      let itemJsx = <div>File type {item.type} not supported</div>;\n\n      if (item.type === 'dir') {\n        viewType = 'browser';\n        itemJsx = <i>{`/${item.name}`}</i>;\n      } else if (item.type === 'file') {\n        viewType = 'viewer';\n        itemJsx = item.name;\n      }\n\n      const linkToContent = `/repos/${owner}/${repo}/${viewType}/${branch}/${item.path}`;\n\n      listGroupItems.push(<NavigationListItem to={linkToContent} key={key} action item={itemJsx} />);\n    });\n\n    return (\n      <>\n        <h2>Repository Contents</h2>\n        <Breadcrumbs pathname={this.props.location.pathname} />\n        <ListGroup>\n          {listGroupItems}\n        </ListGroup>\n      </>\n    );\n  }\n}\n\nexport default RepositoryNavigation;\n","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport NavigationListItem from './NavigationListItem';\nimport Breadcrumbs from './Breadcrumbs';\nimport { getBranches } from '../lib/github';\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nclass BranchNavigation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: false,\n      branches: []\n    };\n  }\n\n  /**\n   * When component first initializes, execute following lifecycle actions\n   */\n  async componentDidMount() {\n    const { owner, repo } = this.props.match.params;\n\n    const branches = await getBranches(owner, repo);\n    this.setState({\n      isLoaded: true,\n      branches\n    });\n  }\n\n  /**\n   * When a page is reloaded with a new url parameters, then following lifecycle actions\n   * @param {Object} prevProps Updated query string\n   */\n  async componentDidUpdate(prevProps) {\n    const { owner: prevOwner, repo: prevRepo } = prevProps.match.params;\n    const { owner, repo } = this.props.match.params;\n\n    if (prevOwner !== owner || prevRepo !== repo) {\n      const branches = await getBranches(owner, repo);\n      this.setState({\n        isLoaded: true,\n        branches\n      });\n    }\n  }\n\n  render() {\n    const { isLoaded } = this.state;\n    if (!isLoaded) {\n      return (\n        <div className=\"Markdown\">Loading...</div>\n      );\n    } else {\n      const listGroupItems = [];\n      const { branches } = this.state;\n\n      if (!branches.forEach) {\n        return <div>{branches.message}</div>;\n      }\n\n      branches.forEach((item) => {\n        const key = `list-group-item-${item.name}`;\n\n        const { owner, repo } = this.props.match.params;\n\n        const linkToContent = `/repos/${owner}/${repo}/browser/${item.name}`;\n\n        listGroupItems.push(<NavigationListItem to={linkToContent} key={key} item={item.name} action />);\n      });\n\n      return (\n        <>\n          <h2>Repository Contents</h2>\n          <Breadcrumbs pathname={this.props.location.pathname} />\n          <ListGroup>\n            {listGroupItems}\n          </ListGroup>\n        </>\n      );\n    }\n  }\n}\n\nexport default BranchNavigation;\n","import React from 'react';\nimport MarkdownMusic from './MarkdownMusic';\nimport { parseVoicing } from 'markdown-it-music/lib/voicing';\nimport { renderChordDiagram } from 'markdown-it-music/renderers/chord_diagram';\nimport { guitarChordLibrary } from 'markdown-it-music/renderers/chord_library';\nimport Toolbar from './Toolbar';\n\nconst Sandbox = () => (\n  <div>\n    <Toolbar></Toolbar>\n\n    <h1>Music Markdown Sandbox</h1>\n    <p>\n      This page exercises various subcomponents of music-markdown and\n      markdown-it-music.\n    </p>\n\n    <h2>Markdown Editor</h2>\n    <MarkdownEditor/>\n\n    <h2>Chord Diagram Renderer</h2>\n    <p>\n      This section exercises the Chord Diagram Renderer.\n    </p>\n    <h3>Esus4 (200x200)</h3>\n    <div dangerouslySetInnerHTML={\n      { __html: renderChordDiagram(parseVoicing('o2 m1 m2 n3,2 n4,4 b5,6,5'), 200, 200) }\n    } />\n\n    <h2>Entire Chord Library</h2>\n    <AllChords/>\n  </div>\n);\n\nclass MarkdownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const value = '```chords\\n' +\n      'c1:                    Am     G  F          G      Esus4  E\\n' +\n      'v1: All the leaves are brown        and the sky is gray\\n\\n' +\n      'c1: F               C     E  Am       F        Esus4  E\\n' +\n      'v1: I\\'ve been for a walk         on a winter\\'s day\\n\\n' +\n      'c1:                 Am    G  F       G      Esus4  E\\n' +\n      'v1: I\\'d be safe and warm        if I was in L.A.\\n\\n' +\n      'c1:            Am        G  F     G               Esus4  E\\n' +\n      'v1: California dreamin\\'        on such a winter\\'s day\\n' +\n      '```';\n\n    this.state = {\n      value\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const styles = { display: 'flex', width: '100%' };\n    const editorStyles = {\n      minHeight: '500px', width: '50%', marginRight: '20px',\n      fontFamily: 'monospace', whiteSpace: 'pre'\n    };\n\n    return <div style={styles}>\n      <textarea value={this.state.value} onChange={this.handleChange} style={editorStyles}></textarea>\n      <div style={editorStyles}>\n        <MarkdownMusic source={this.state.value}></MarkdownMusic>\n      </div>\n    </div>;\n  }\n}\n\nconst AllChords = () => (\n  Array.from(guitarChordLibrary.keys()).map((chord, index) => (\n    <div key={index} align=\"center\" style={{ display: 'inline-block' }}>\n      {guitarChordLibrary.get(chord).map((value, index) => (\n        <span key={index} dangerouslySetInnerHTML={\n          { __html: renderChordDiagram(value) }\n        } />\n      ))}\n      <h5>{chord}</h5>\n    </div>\n  ))\n);\n\nexport default Sandbox;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport MarkdownMusicSourceFetcher from './MarkdownMusicSourceFetcher';\nimport MusicMarkdownNavbar from './MusicMarkdownNavbar';\nimport ResponsiveContainer from './ResponsiveContainer';\nimport RepositoryNavigation from './RepositoryNavigation';\nimport BranchNavigation from './BranchNavigation';\nimport Sandbox from './Sandbox.js';\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// TODO: Build button toggle for dark/light\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <ResponsiveContainer children={[HomeRouter()]} />\n  </MuiThemeProvider>\n);\n\nconst HomeRouter = () => (\n  <Provider key=\"home-provider\" store={store}>\n    <Router key=\"home-router\">\n      <div>\n        <Route component={MusicMarkdownNavbar} />\n        <Route exact path=\"/\" component={Navigation} />\n        <Route excat path='/sandbox' component={Sandbox} />\n        <Route exact path='/repos/:owner/:repo' component={BranchNavigation} />\n        <Route exact path='/repos/:owner/:repo/:view(viewer)/:branch/:path+' component={MarkdownMusicSourceFetcher} />\n        <Route exact path='/repos/:owner/:repo/:view(browser)/:branch/:path*' component={RepositoryNavigation} />\n        {/* TODO: Add editor component */}\n        <Route exact path='/repos/:owner/:repo/:view(editor)/:branch/:path+' component={Sandbox} />\n      </div>\n    </Router>\n  </Provider>\n);\n\nconst Navigation = () => (\n  <h1>Welcome to Music Markdown!</h1>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}