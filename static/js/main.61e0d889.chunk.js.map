{"version":3,"sources":["tools/asciitab.js","serviceWorkerRegistration.js","lib/constants.js","lib/github.js","lib/hooks.js","components/GlobalState.js","components/AppBar/LogoAppBarItem.js","components/MoreMenu/ColumnCountMenuItem.js","components/MoreMenu/GithubTokenDialog.js","components/MoreMenu/GithubTokenMenuItem.js","components/MoreMenu/SongActionsMenuItem.js","components/MoreMenu/ThemeMenuItem.js","components/MoreMenu/TransposeMenuItem.js","components/MoreMenu/index.js","components/AppBar/MoreAppBarItem.js","components/AppBar/SearchAppBarItem.js","components/AppBar/YouTubePlayer.js","components/AppBar/YouTubeAppBarItem.js","components/AppBar/index.js","components/RouterBreadcrumbs.js","components/BranchNavigation.js","components/ErrorSnackbar.js","components/MusicMarkdown.js","components/MarkdownEditor.js","components/MarkdownViewer.js","components/AddRepository.js","components/RepositoryEditor.js","components/AddNewFile.js","components/RepositoryNavigation.js","components/ResponsiveContainer.js","components/Sandbox.js","components/App.js","index.js"],"names":["isChord","require","State","getMaybeHeading","line","endsWith","slice","startsWith","getMaybeChords","tokens","trim","split","token","asciiTabConvert","input","state","voiceIndex","lines","output","push","maybeHeading","maybeChords","join","module","async","console","log","stream","buffer","Buffer","alloc","chunk","concat","toString","read","process","stdin","main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","COLUMN_COUNT_QUERY_KEY","LOCAL_STORAGE_NAMESPACE","REPO_REGEX","GITHUB_TOKEN_LOCAL_STORAGE_KEY","REPOS_LOCAL_STORAGE_KEY","getContents","repo","path","branch","undefined","length","response","githubApiFetch","cache","json","content","Base64","decode","putContents","sha","body","message","encode","method","mode","JSON","stringify","getRepositories","repoListStr","localStorage","getItem","parse","verifyRepoExists","status","Error","verifyRepoUnregistered","r","init","URL","searchParams","set","githubToken","getGithubToken","headers","Authorization","fetch","Request","isValidGithubToken","useLocalStorage","key","initialValue","storedValue","setStoredValue","useState","item","value","valueToStore","Function","setItem","THEMES","light","palette","dark","GlobalStateContext","createContext","GlobalStateProvider","props","setState","repos","setRepos","themeName","setThemeName","youTubeId","setYouTubeId","Provider","data","setGithubToken","removeItem","repositories","setRepositories","addRepository","deleteRepository","filter","children","useGlobalStateContext","useContext","useTheme","prefersDarkTheme","useMediaQuery","getEffectiveThemeName","getTheme","useRepoMetadata","repoMetadata","setRepoMetadata","useRepositories","useEffect","Promise","all","map","getRepoMetadata","context","useYouTubeId","ThemeAwareLogo","styled","theme","LogoAppBarItem","Button","component","Link","to","src","width","alt","ColumnCountMenuItem","useLocation","history","useHistory","columnCount","queryString","search","Box","Typography","variant","ToggleButtonGroup","fullWidth","exclusive","onChange","event","name","defaultValue","params","replace","handleUpdateQuery","ToggleButton","AccordionDetails","withStyles","root","backgroundColor","AccordionActions","GithubTokenInstructions","Accordion","AccordionSummary","expandIcon","href","rel","target","GithubTokenDialog","open","handleClose","setToken","isValidToken","handleCloseDialog","Dialog","onClose","DialogTitle","id","DialogContent","TextField","autoFocus","margin","label","e","helperText","DialogActions","onClick","color","disabled","GithubTokenMenuItem","apiKeyDialogOpen","setApiKeyDialogOpen","startIcon","EditViewButton","close","useParams","edit","view","ShowOnGitHubButton","githubLink","SongActionsMenuItem","Stack","direction","spacing","ThemeMenuItem","newThemeName","TransposeMenuItem","transpose","Number","setTranspose","String","alignItems","justifyContent","IconButton","aria-label","Divider","orientation","MoreMenu","anchorEl","Popper","anchor","Paper","maxHeight","overflow","sx","padding","render","MoreAppBarItem","setAnchorEl","ClickAwayListener","onClickAway","Tooltip","title","currentTarget","size","SearchAppBarItem","files","setFiles","trees","getRepoTrees","tree","getFiles","Autocomplete","options","renderInput","reason","details","useStyles","makeStyles","paper","position","bottom","right","cursor","YouTubePlayer","visible","classes","nodeRef","useRef","ref","className","style","border","allow","allowFullScreen","YouTubeAppBarItem","setVisible","AppBar","Toolbar","flexGrow","reactRouterHoverInherit","DirectoryBreadcrumbs","pathname","subDirectoriesArr","breadcrumbItems","previousPath","ignoreIndex","keyBase","currDir","i","directory","indexOf","role","RouterLink","buildBreadcrumb","Breadcrumbs","BranchNavigation","branches","setBranches","isLoaded","setIsLoaded","getBranches","fetchBranches","List","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","LinearProgress","icon","fontSize","iconVariant","opacity","marginRight","display","ErrorSnackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","aria-describedby","classNames","action","columns","columnGap","columnRuleWidth","columnRuleStyle","columnRuleColor","text","secondary","MusicMarkdownRender","source","transposeAmount","html","setHtml","setMessage","setError","md","MarkdownIt","use","MarkdownItMusic","setTheme","setMaxWidth","meta","err","script","exec","eval","dangerouslySetInnerHTML","__html","MusicMarkdown","componentRef","dimensions","setDimensions","height","handleResize","current","offsetWidth","offsetHeight","addEventListener","removeEventListener","useContainerDimensions","fabProgress","green","top","left","zIndex","editor","marginLeft","fab","toolbar","buttonSuccess","MarkdownEditor","markdown","setMarkdown","debouncedMarkdown","delay","debounced","setDebounced","timer","setTimeout","clearTimeout","useDebounce","setSha","saving","setSaving","success","setSuccess","isDirty","setIsDirty","fetchContents","buttonClassname","parts","viewerLink","githubParts","Grid","container","xs","Fab","CircularProgress","maxLines","Infinity","editorProps","$blockScrolling","MarkdownViewer","grid","AddRepository","handleAddRepository","setOpen","setName","owner","setOwner","handleDialogClose","aria-labelledby","handleShowError","RepositoryEditor","full_name","default_branch","ListItemSecondaryAction","whitespacePre","whiteSpace","fontFamily","AddNewFile","newFileName","setNewFileName","newFileOpen","setNewFileOpen","toEditor","setToEditor","isValidFileName","getTemplateContents","getNewFilePath","Card","previewCard","CardContent","gutterBottom","InputProps","endAdornment","InputAdornment","statusText","RepositoryNavigation","contents","setContents","sort","a","b","type","sortDir","ResponsiveContainer","chordSourcePaper","chordCategoryPaper","textAlign","chordCategoryTypography","chordVariantPaper","chordVariantTypography","chordDiagram","Sandbox","url","allFeaturesSource","AllGuitarChords","roots","qualities","allChordsSource","category","index","ChordCategory","Array","from","guitarChordbook","keys","chord","get","renderChordDiagram","quality","ThemeProvider","StyledEngineProvider","injectFirst","createTheme","CssBaseline","HomeRouter","App","ReactDOM","StrictMode","document","getElementById","origin","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.61e0d889.chunk.js","sourcesContent":["const { isChord } = require(\"markdown-it-music/lib/chord\");\n\nconst State = {\n  DEFAULT: 1,\n  VERSE: 2,\n  FENCE: 3,\n};\n\nfunction getMaybeHeading(line) {\n  if (line.endsWith(\":\")) {\n    return `## ${line.slice(0, -1)}`;\n  }\n\n  if (line.startsWith(\"[\") && line.endsWith(\"]\")) {\n    return `## ${line.slice(1, -1)}`;\n  }\n\n  return null;\n}\n\nfunction getMaybeChords(line) {\n  const tokens = line.trim().split(/\\s+/);\n\n  for (const token of tokens) {\n    if (!isChord(token)) {\n      return null;\n    }\n  }\n\n  return `c1: ${line}`;\n}\n\nfunction asciiTabConvert(input) {\n  let state = State.DEFAULT;\n  let voiceIndex = 1;\n  const lines = input.split(/\\n/);\n  const output = [];\n\n  for (const line of lines) {\n    if (line.startsWith(\":::\")) {\n      state = State.FENCE;\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.DEFAULT) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        state = State.VERSE;\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.VERSE) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        state = State.DEFAULT;\n        output.push(\"\");\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        output.push(\"\");\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      if (line.trim() === \"\") {\n        continue;\n      }\n\n      output.push(`l${voiceIndex}: ${line}`);\n      voiceIndex += 1;\n      continue;\n    }\n\n    if (state === State.FENCE) {\n      if (line === \":::\") {\n        state = State.DEFAULT;\n      }\n\n      output.push(line);\n      continue;\n    }\n  }\n\n  return output.join(\"\\n\");\n}\n\nasync function read(stream) {\n  let buffer = Buffer.alloc(0);\n  for await (const chunk of stream) {\n    buffer = Buffer.concat([buffer, chunk]);\n  }\n  return buffer.toString(\"utf8\");\n}\n\nasync function main() {\n  console.log(asciiTabConvert(await read(process.stdin)));\n}\n\nif (typeof require !== \"undefined\" && require.main === module) {\n  main();\n}\n\nexport default asciiTabConvert;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export const COLUMN_COUNT_QUERY_KEY = \"columns\";\nexport const LOCAL_STORAGE_NAMESPACE = \"music-markdown\";\nexport const REPO_REGEX = \"/repos/:repo([^/]+/[^/]+)\";\nexport const TRANSPOSE_QUERY_KEY = \"transpose\";\n","import { Base64 } from \"js-base64\";\nimport { LOCAL_STORAGE_NAMESPACE } from \"./constants\";\n\nconst GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:github_token`;\nconst REPOS_LOCAL_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:repositories`;\nconst GITHUB_API_URL = \"https://api.github.com\";\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} repo The owner and repo in the form :owner/:repo\n * @param {string} path The directory or file to retrieve\n * @param {string} branch The branch to retrive contents from\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(repo, path, branch) {\n  if (path === undefined || path.length === 0) {\n    path = \"\";\n  }\n  const response = await githubApiFetch(\n    `/repos/${repo}/contents/${path}`,\n    { cache: \"no-cache\" },\n    branch\n  );\n  const json = await response.json();\n  json.content = json.content ? Base64.decode(json.content) : \"\";\n  return json;\n}\n\nexport async function putContents(repo, path, content, sha, branch) {\n  const body = {\n    message: `Music Markdown published ${path}`,\n    content: Base64.encode(content),\n    branch,\n  };\n\n  if (sha) {\n    body.sha = sha;\n  }\n\n  return githubApiFetch(`/repos/${repo}/contents/${path}`, {\n    method: \"PUT\",\n    mode: \"cors\",\n    body: JSON.stringify(body),\n  });\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of repo names\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\n/**\n * Returns the list of repo names and corresponding GitHub metadata.\n * @returns {Array} Array of JSON dictionaries of repos\n */\nexport async function getRepoMetadata(repos) {\n  return Promise.all(\n    repos.map(async (repo) => (await githubApiFetch(`/repos/${repo}`)).json())\n  );\n}\n\nexport async function getRepoTrees(repo, branch) {\n  const response = await githubApiFetch(\n    `/repos/${repo}/git/trees/${branch}?recursive=1`\n  );\n  return response.json();\n}\n\nexport async function verifyRepoExists(repo) {\n  const response = await githubApiFetch(`/repos/${repo}`);\n  if (response.status === 404) {\n    throw new Error(`\"${repo}\" not found on GitHub.`);\n  }\n}\n\nexport function verifyRepoUnregistered(repo) {\n  for (const r of getRepositories()) {\n    if (r === repo) {\n      throw new Error(`\"${repo}\" is already registered.`);\n    }\n  }\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function addRepository(repo) {\n  verifyRepoUnregistered(repo);\n  await verifyRepoExists(repo);\n  const repos = getRepositories();\n  repos.push(repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Returns a promise of a list of branches for the given repository.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function getBranches(repo) {\n  const response = await githubApiFetch(`/repos/${repo}/branches`);\n  return response.json();\n}\n\n/**\n * Removes a GitHub repo from localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport function deleteRepository(repo) {\n  const repos = getRepositories().filter((r) => r !== repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Performs a fetch to the GitHub API, attaching the user's GitHub access\n * token if it is set.\n */\nasync function githubApiFetch(path, init, branch) {\n  const input = new URL(path, GITHUB_API_URL);\n  if (branch) {\n    input.searchParams.set(\"ref\", branch);\n  }\n\n  const githubToken = getGithubToken();\n  if (githubToken) {\n    init = {\n      ...init,\n      ...{ headers: { Authorization: `token ${githubToken}` } },\n    };\n  }\n\n  return fetch(new Request(input, init));\n}\n\nexport function getGithubToken() {\n  return localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n}\n\nexport function isValidGithubToken(githubToken = getGithubToken()) {\n  return (\n    !!githubToken &&\n    (!!githubToken.match(/^[0-9a-f]{40}$/) ||\n      !!githubToken.match(/^ghp_[a-zA-Z0-9]{36}$/))\n  );\n}\n\nexport function setGithubToken(githubToken) {\n  if (githubToken) {\n    localStorage.setItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY, githubToken);\n  } else {\n    localStorage.removeItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  }\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce(value, delay) {\n  const [debounced, setDebounced] = useState(\"\");\n  useEffect(() => {\n    const timer = setTimeout(() => setDebounced(value), delay);\n    return () => clearTimeout(timer);\n  }, [value, delay]);\n  return debounced;\n}\n\nexport function useContainerDimensions(ref) {\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        width: ref.current.offsetWidth,\n        height: ref.current.offsetHeight,\n      });\n    };\n\n    if (ref?.current) {\n      handleResize();\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [ref]);\n\n  return dimensions;\n}\n\nexport function useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport {\n  getGithubToken,\n  getRepoMetadata,\n  isValidGithubToken,\n  setGithubToken,\n  verifyRepoExists,\n  verifyRepoUnregistered,\n} from \"../lib/github\";\n\nimport { LOCAL_STORAGE_NAMESPACE } from \"../lib/constants\";\nimport { useLocalStorage } from \"../lib/hooks\";\nimport { useMediaQuery } from \"@mui/material\";\n\nconst REPOS_LOCAL_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:repositories`;\n\nconst THEMES = {\n  light: {\n    palette: {\n      mode: \"light\",\n    },\n  },\n  dark: {\n    palette: {\n      mode: \"dark\",\n    },\n  },\n};\n\nexport const GlobalStateContext = createContext();\n\nexport const GlobalStateProvider = (props) => {\n  const [state, setState] = useState({\n    githubToken: getGithubToken(),\n  });\n\n  const [repos, setRepos] = useLocalStorage(REPOS_LOCAL_STORAGE_KEY, []);\n  const [themeName, setThemeName] = useLocalStorage(\"themeName\", \"system\");\n  const [youTubeId, setYouTubeId] = useState(null);\n\n  return (\n    <GlobalStateContext.Provider\n      value={{\n        data: state,\n        isValidGithubToken: () => isValidGithubToken(state.githubToken),\n        setGithubToken: (githubToken) => {\n          if (githubToken !== state.githubToken) {\n            setState({ ...state, githubToken });\n            setGithubToken(githubToken);\n          }\n        },\n        youTubeId,\n        setYouTubeId,\n        themeName,\n        setThemeName,\n        repositories: repos,\n        setRepositories: setRepos,\n        addRepository: async (repo) => {\n          verifyRepoUnregistered(repo);\n          await verifyRepoExists(repo);\n          setRepos(repos.concat([repo]));\n        },\n        deleteRepository: (repo) => {\n          setRepos(repos.filter((r) => r !== repo));\n        },\n      }}\n    >\n      {props.children}\n    </GlobalStateContext.Provider>\n  );\n};\n\nexport const useGlobalStateContext = () => useContext(GlobalStateContext);\n\nexport function useTheme() {\n  const prefersDarkTheme = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const { themeName, setThemeName } = useGlobalStateContext();\n  const getEffectiveThemeName = () => {\n    if (themeName === \"system\") {\n      return prefersDarkTheme ? \"dark\" : \"light\";\n    }\n    return themeName;\n  };\n  const getTheme = () => THEMES[getEffectiveThemeName()];\n  return {\n    themeName,\n    setThemeName,\n    prefersDarkTheme,\n    getEffectiveThemeName,\n    getTheme,\n  };\n}\n\nexport function useRepoMetadata() {\n  const [repoMetadata, setRepoMetadata] = useState([]);\n  const { repositories } = useRepositories();\n\n  useEffect(() => {\n    (async () => setRepoMetadata(await getRepoMetadata(repositories)))();\n  }, [repositories]);\n\n  return repoMetadata;\n}\n\nexport function useRepositories() {\n  const context = useGlobalStateContext();\n  return {\n    repositories: context.repositories,\n    setRepositories: context.setRepositories,\n    addRepository: context.addRepository,\n    deleteRepository: context.deleteRepository,\n  };\n}\n\nexport function useYouTubeId() {\n  const context = useGlobalStateContext();\n  return {\n    youTubeId: context.youTubeId,\n    setYouTubeId: context.setYouTubeId,\n  };\n}\n","import { Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport { styled } from \"@mui/system\";\n\nconst ThemeAwareLogo = styled(\"img\")(({ theme }) => ({\n  filter: theme.palette.mode === \"dark\" ? \"invert(100%)\" : \"\",\n}));\n\nexport default function LogoAppBarItem() {\n  return (\n    <Button component={Link} to=\"/\">\n      <ThemeAwareLogo\n        src=\"music-markdown.svg\"\n        width={50}\n        alt=\"Music Markdown\"\n      />\n    </Button>\n  );\n}\n","import { useHistory, useLocation } from \"react-router\";\n\nimport { Box } from \"@mui/system\";\nimport { COLUMN_COUNT_QUERY_KEY } from \"../../lib/constants\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport { Typography } from \"@mui/material\";\nimport queryString from \"query-string\";\n\nexport default function ColumnCountMenuItem() {\n  const location = useLocation();\n  const history = useHistory();\n\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n\n  const handleUpdateQuery = (name, value, defaultValue) => {\n    const params = queryString.parse(location.search);\n    if (value === defaultValue) {\n      delete params[name];\n    } else {\n      params[name] = value;\n    }\n    history.replace({ search: queryString.stringify(params) });\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Columns</Typography>\n      <ToggleButtonGroup\n        fullWidth\n        value={columnCount}\n        exclusive\n        onChange={(event, value) =>\n          handleUpdateQuery(COLUMN_COUNT_QUERY_KEY, value, \"1\")\n        }\n      >\n        {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"].map((columnCount) => (\n          <ToggleButton value={columnCount} key={columnCount}>\n            {columnCount}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </Box>\n  );\n}\n","import Accordion from \"@mui/material/Accordion\";\nimport AccordionActions from \"@mui/material/AccordionActions\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { isValidGithubToken } from \"../../lib/github\";\nimport { useGlobalStateContext } from \"../GlobalState\";\nimport { useState } from \"react\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst AccordionDetails = withStyles({\n  root: {\n    backgroundColor: \"rgba(0, 0, 0, .03)\",\n  },\n})(AccordionActions);\n\nconst GithubTokenInstructions = () => (\n  <Accordion>\n    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n      <Typography>\n        Set a <b>GitHub Token</b> to create or change Music Markdown files in\n        GitHub.\n      </Typography>\n    </AccordionSummary>\n    <AccordionDetails>\n      <div>\n        <h1>How to Create a New Token</h1>\n\n        <p>\n          These instructions will help you create a new GitHub token, and add it\n          to Music Markdown so that you can use the Music Markdown editor.\n        </p>\n\n        <ol>\n          <li>\n            Open your{\" \"}\n            <a\n              href=\"https://github.com/settings/tokens\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              Personal access tokens\n            </a>{\" \"}\n            page in GitHub.\n          </li>\n          <li>\n            Click <b>Generate new token</b>.\n          </li>\n          <li>\n            Under <b>Note</b> type <b>Music Markdown</b>.\n          </li>\n          <li>\n            Under <b>scopes</b> grant <b>repo</b> permissions.\n          </li>\n          <li>\n            Scroll to the bottom and click <b>Generate token</b>.\n          </li>\n          <li>Copy the newly generated token and paste it below.</li>\n        </ol>\n      </div>\n    </AccordionDetails>\n  </Accordion>\n);\n\nexport default function GithubTokenDialog({ open, handleClose }) {\n  const context = useGlobalStateContext();\n  const [token, setToken] = useState(context.data.githubToken);\n\n  const isValidToken = (token) => {\n    return token === \"\" || isValidGithubToken(token);\n  };\n\n  const handleSaveToken = () => {\n    if (isValidToken(token)) {\n      context.setGithubToken(token);\n      handleClose();\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setToken(context.data.githubToken);\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={handleCloseDialog}>\n      <DialogTitle id=\"set-github-api-key\">Set GitHub Token</DialogTitle>\n      <DialogContent>\n        <GithubTokenInstructions />\n      </DialogContent>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"GitHub Token\"\n          fullWidth\n          value={token || \"\"}\n          onChange={(e) => setToken(e.target.value)}\n          error={!isValidToken(token)}\n          helperText=\"Warning: GitHub tokens are very sensitive. Anyone who \n          gains access to this token will have access to your GitHub account.\n          Please proceed with caution.\"\n        ></TextField>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseDialog} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={handleSaveToken}\n          color=\"primary\"\n          disabled={!isValidToken(token)}\n        >\n          {token === \"\" ? \"Clear\" : \"Save\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Button, Typography } from \"@mui/material\";\n\nimport { Box } from \"@mui/system\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport GithubTokenDialog from \"./GithubTokenDialog\";\nimport { useState } from \"react\";\n\nexport default function GithubTokenMenuItem() {\n  const [apiKeyDialogOpen, setApiKeyDialogOpen] = useState(false);\n\n  const handleApiKeyDialogOpen = () => {\n    setApiKeyDialogOpen(true);\n  };\n\n  const handleApiKeyDialogClose = () => {\n    setApiKeyDialogOpen(false);\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">GitHub Token</Typography>\n      <Button\n        fullWidth\n        variant=\"outlined\"\n        onClick={handleApiKeyDialogOpen}\n        startIcon={<GitHubIcon />}\n      >\n        Set GitHub Token\n      </Button>\n\n      <GithubTokenDialog\n        open={apiKeyDialogOpen}\n        handleClose={handleApiKeyDialogClose}\n      ></GithubTokenDialog>\n    </Box>\n  );\n}\n","import { Button, Stack, Typography } from \"@mui/material\";\nimport { useHistory, useParams } from \"react-router\";\n\nimport { Box } from \"@mui/system\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\n\nconst EditViewButton = ({ close }) => {\n  const history = useHistory();\n  const { repo, mode, branch, path } = useParams();\n\n  const edit = () => {\n    close();\n    history.push(`/repos/${repo}/editor/${branch}/${path}`);\n  };\n\n  const view = () => {\n    close();\n    history.push(`/repos/${repo}/viewer/${branch}/${path}`);\n  };\n\n  if (mode === \"viewer\") {\n    return (\n      <Button variant=\"outlined\" startIcon={<EditIcon />} onClick={edit}>\n        Edit inline\n      </Button>\n    );\n  }\n  if (mode === \"editor\") {\n    return (\n      <Button variant=\"outlined\" startIcon={<ExitToAppIcon />} onClick={view}>\n        Exit to viewer\n      </Button>\n    );\n  }\n  return null;\n};\n\nconst ShowOnGitHubButton = () => {\n  const { repo, branch, path } = useParams();\n  const githubLink = `https://github.com/${repo}/blob/${branch}/${path}`;\n\n  return (\n    <Button href={githubLink} variant=\"outlined\" startIcon={<GitHubIcon />}>\n      Show on GitHub\n    </Button>\n  );\n};\n\nexport default function SongActionsMenuItem({ close }) {\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Song Actions</Typography>\n      <Stack direction=\"column\" spacing={1}>\n        <EditViewButton close={close} />\n        <ShowOnGitHubButton />\n      </Stack>\n    </Box>\n  );\n}\n","import { Stack, Typography } from \"@mui/material\";\n\nimport { Box } from \"@mui/system\";\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport SettingsBrightnessIcon from \"@mui/icons-material/SettingsBrightness\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport { useTheme } from \"../GlobalState\";\n\nexport default function ThemeMenuItem() {\n  const { themeName, setThemeName } = useTheme();\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Theme</Typography>\n      <ToggleButtonGroup\n        value={themeName}\n        fullWidth\n        exclusive\n        onChange={(event, newThemeName) => setThemeName(newThemeName)}\n      >\n        <ToggleButton value=\"light\">\n          <Stack spacing={1} direction=\"row\">\n            <LightModeIcon />\n            <Typography variant=\"button\">Light</Typography>\n          </Stack>\n        </ToggleButton>\n        <ToggleButton value=\"system\">\n          <Stack spacing={1} direction=\"row\">\n            <SettingsBrightnessIcon />\n            <Typography variant=\"button\">System</Typography>\n          </Stack>\n        </ToggleButton>\n        <ToggleButton value=\"dark\">\n          <Stack spacing={1} direction=\"row\">\n            <DarkModeIcon />\n            <Typography variant=\"button\">Dark</Typography>\n          </Stack>\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Box>\n  );\n}\n","import { Button, Divider, IconButton, Stack, Typography } from \"@mui/material\";\nimport { useHistory, useLocation } from \"react-router\";\n\nimport ArrowCircleDownIcon from \"@mui/icons-material/ArrowCircleDown\";\nimport ArrowCircleUpIcon from \"@mui/icons-material/ArrowCircleUp\";\nimport { Box } from \"@mui/system\";\nimport SettingsBackupRestoreIcon from \"@mui/icons-material/SettingsBackupRestore\";\nimport { TRANSPOSE_QUERY_KEY } from \"../../lib/constants\";\nimport queryString from \"query-string\";\n\nexport default function TransposeMenuItem() {\n  const location = useLocation();\n  const history = useHistory();\n\n  const params = queryString.parse(location.search);\n  const transpose = Number(params[TRANSPOSE_QUERY_KEY] || \"0\");\n\n  const setTranspose = (transpose) => {\n    const params = queryString.parse(location.search);\n    if (transpose === 0) {\n      delete params[TRANSPOSE_QUERY_KEY];\n    } else {\n      params[TRANSPOSE_QUERY_KEY] = String(transpose);\n    }\n    history.replace({ search: queryString.stringify(params) });\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle1\">Transpose</Typography>\n      <Stack\n        direction=\"row\"\n        spacing={1}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <IconButton\n          aria-label=\"Transpose down\"\n          color=\"primary\"\n          onClick={() => setTranspose(transpose - 1)}\n        >\n          <ArrowCircleDownIcon />\n        </IconButton>\n        <Typography variant=\"body1\">{transpose}</Typography>\n        <IconButton\n          aria-label=\"Transpose up\"\n          color=\"primary\"\n          onClick={() => setTranspose(transpose + 1)}\n        >\n          <ArrowCircleUpIcon />\n        </IconButton>\n        <Divider orientation=\"vertical\" />\n        <Button\n          variant=\"outlined\"\n          startIcon={<SettingsBackupRestoreIcon />}\n          onClick={() => setTranspose(0)}\n        >\n          Reset\n        </Button>\n      </Stack>\n    </Box>\n  );\n}\n","import { Paper, Popper, Stack } from \"@mui/material\";\n\nimport { Box } from \"@mui/system\";\nimport ColumnCountMenuItem from \"./ColumnCountMenuItem\";\nimport GithubTokenMenuItem from \"./GithubTokenMenuItem\";\nimport { REPO_REGEX } from \"../../lib/constants\";\nimport { Route } from \"react-router\";\nimport SongActionsMenuItem from \"./SongActionsMenuItem\";\nimport ThemeMenuItem from \"./ThemeMenuItem\";\nimport TransposeMenuItem from \"./TransposeMenuItem\";\n\nexport default function MoreMenu({ open, close, anchorEl }) {\n  return (\n    <Popper anchor=\"right\" open={open} anchorEl={anchorEl}>\n      <Paper>\n        <Box maxHeight=\"calc(100vh - 7em)\" overflow=\"auto\" sx={{ padding: 2 }}>\n          <Stack spacing={2}>\n            <Route\n              path={`${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`}\n              render={() => (\n                <>\n                  <SongActionsMenuItem close={close} />\n                  <TransposeMenuItem />\n                  <ColumnCountMenuItem />\n                </>\n              )}\n            />\n            <ThemeMenuItem />\n            <GithubTokenMenuItem />\n          </Stack>\n        </Box>\n      </Paper>\n    </Popper>\n  );\n}\n","import { IconButton, Tooltip } from \"@mui/material\";\n\nimport { Box } from \"@mui/system\";\nimport ClickAwayListener from \"@mui/material/ClickAwayListener\";\nimport MoreMenu from \"../MoreMenu\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport { useState } from \"react\";\n\nexport default function MoreAppBarItem() {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleToggle = (event) => {\n    setAnchorEl(open ? null : event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Box>\n      <ClickAwayListener onClickAway={handleClose}>\n        <Box>\n          <Tooltip title=\"More\">\n            <IconButton onClick={handleToggle} size=\"large\">\n              <MoreVertIcon />\n            </IconButton>\n          </Tooltip>\n          <MoreMenu open={open} close={handleClose} anchorEl={anchorEl} />\n        </Box>\n      </ClickAwayListener>\n    </Box>\n  );\n}\n","import { Autocomplete, TextField } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\n\nimport { getRepoTrees } from \"../../lib/github\";\n\nexport default function SearchAppBarItem() {\n  const { repo, branch } = useParams();\n  const history = useHistory();\n  const [files, setFiles] = useState(null);\n\n  useEffect(() => {\n    const getFiles = async () => {\n      const trees = await getRepoTrees(repo, branch);\n      setFiles(trees.tree.map((tree) => tree.path));\n    };\n    getFiles();\n  }, [repo, branch]);\n\n  const handleChange = (event, value, reason, details) => {\n    if (reason === \"selectOption\") {\n      history.push(`/repos/${repo}/viewer/${branch}/${value}`);\n    }\n  };\n\n  return (\n    <Autocomplete\n      fullWidth\n      disabled={files === null}\n      size=\"small\"\n      options={files || []}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label={files === null ? \"Loading…\" : \"Jump to…\"}\n        />\n      )}\n      onChange={handleChange}\n    />\n  );\n}\n","import { Paper } from \"@mui/material\";\nimport { useRef } from \"react\";\n\nimport Draggable from \"react-draggable\";\nimport PropTypes from \"prop-types\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n    padding: theme.spacing(2),\n    cursor: \"move\",\n  },\n}));\n\nexport default function YouTubePlayer({ youTubeId, visible }) {\n  const classes = useStyles();\n  const nodeRef = useRef();\n\n  if (!visible || !youTubeId) {\n    return null;\n  }\n\n  return (\n    <Draggable nodeRef={nodeRef}>\n      <Paper ref={nodeRef} className={classes.paper}>\n        <iframe\n          title=\"YouTube\"\n          style={{ border: 0 }}\n          src={`https://www.youtube.com/embed/${youTubeId}?autoplay=1&modestbranding=1`}\n          allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        />\n      </Paper>\n    </Draggable>\n  );\n}\n\nYouTubePlayer.propTypes = {\n  youTubeId: PropTypes.string,\n  visible: PropTypes.bool,\n};\n","import { IconButton, Tooltip } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport YouTubePlayer from \"./YouTubePlayer\";\nimport { useYouTubeId } from \"../GlobalState\";\n\nexport default function YouTubeAppBarItem() {\n  const { youTubeId } = useYouTubeId();\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    setVisible(!youTubeId);\n  }, [youTubeId]);\n\n  const handleToggle = () => {\n    setVisible(!visible);\n  };\n\n  if (!youTubeId) {\n    return null;\n  }\n\n  return (\n    <>\n      <Tooltip title=\"Show / Hide YouTube Player\">\n        <IconButton\n          color={visible ? \"secondary\" : \"default\"}\n          onClick={handleToggle}\n          size=\"large\"\n        >\n          <PlayArrowIcon />\n        </IconButton>\n      </Tooltip>\n      <YouTubePlayer visible={visible} youTubeId={youTubeId} />\n    </>\n  );\n}\n","import { Box } from \"@mui/system\";\nimport LogoAppBarItem from \"./LogoAppBarItem\";\nimport MoreAppBarItem from \"./MoreAppBarItem\";\nimport { AppBar as MuiAppBar } from \"@mui/material\";\nimport { REPO_REGEX } from \"../../lib/constants\";\nimport { Route } from \"react-router-dom\";\nimport SearchAppBarItem from \"./SearchAppBarItem\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport YouTubeAppBarItem from \"./YouTubeAppBarItem\";\n\nexport default function AppBar() {\n  return (\n    <MuiAppBar position={\"sticky\"} key=\"top-navbar\">\n      <Toolbar>\n        <LogoAppBarItem />\n        <Route\n          path={`${REPO_REGEX}/:mode/:branch/:path*`}\n          component={SearchAppBarItem}\n        />\n\n        <Box sx={{ flexGrow: 1 }} />\n\n        <Route\n          path={`${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`}\n          render={() => <YouTubeAppBarItem />}\n        />\n        <MoreAppBarItem />\n      </Toolbar>\n    </MuiAppBar>\n  );\n}\n","import Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Link from \"@mui/material/Link\";\nimport Paper from \"@mui/material/Paper\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@mui/material/Typography\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n}));\n\nfunction buildBreadcrumb(previousPath, classes) {\n  const breadcrumbItems = [];\n\n  // ignoreIndex matches the Route defined in App.js.\n  // Certain portions are not useful to user in the breadcrumb, so we remove them.\n  const ignoreIndex = [\n    0 /* /repos */,\n    3 /* /:viewName(browser|viewer|editor) */,\n  ];\n  const keyBase = \"breadcrumb-item-\";\n\n  let currDir = \"\";\n  for (let i = 0; i < previousPath.length; i++) {\n    const directory = previousPath[i];\n    currDir = currDir.concat(\"/\", directory);\n\n    if (ignoreIndex.indexOf(i) !== -1) {\n      continue;\n    }\n\n    if (i === previousPath.length - 1) {\n      // Last item should be active\n      breadcrumbItems.push(\n        <Typography\n          role=\"breadcrumb\"\n          color=\"textPrimary\"\n          key={`${keyBase}${i}`}\n        >\n          {directory}\n        </Typography>\n      );\n    } else {\n      breadcrumbItems.push(\n        <Link\n          role=\"breadcrumb\"\n          component={RouterLink}\n          to={`${currDir}/`}\n          key={`${keyBase}${i}`}\n          color=\"inherit\"\n          className={classes.reactRouterHoverInherit}\n        >\n          {directory}\n        </Link>\n      );\n    }\n  }\n\n  return breadcrumbItems;\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {string} pathname current URI pathname\n * @return {Array} List of BreadcrumbItems\n */\nexport default function DirectoryBreadcrumbs({ pathname }) {\n  const classes = useStyles();\n  const keyBase = \"breadcrumb-item-\";\n\n  const subDirectoriesArr = pathname.split(\"/\").filter((value) => !!value);\n  subDirectoriesArr[3] = \"browser\";\n\n  const breadcrumbItems = buildBreadcrumb(subDirectoriesArr, classes);\n\n  return (\n    <Paper className={classes.paper}>\n      <Breadcrumbs>\n        <Link\n          role=\"breadcrumb\"\n          component={RouterLink}\n          to={`/`}\n          key={`${keyBase}Home`}\n          color=\"inherit\"\n          className={classes.reactRouterHoverInherit}\n        >\n          Home\n        </Link>\n        {breadcrumbItems}\n      </Breadcrumbs>\n    </Paper>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nimport Avatar from \"@mui/material/Avatar\";\nimport CallSplitIcon from \"@mui/icons-material/CallSplit\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { getBranches } from \"../lib/github\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nexport default function BranchNavigation({ location, match }) {\n  const classes = useStyles();\n  const [branches, setBranches] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchBranches() {\n      const branches = await getBranches(match.params.repo);\n      setBranches(branches);\n      setIsLoaded(true);\n    }\n    fetchBranches();\n  }, [match.params.repo]);\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <List>\n          {branches.map((item) => (\n            <ListItem\n              button\n              component={Link}\n              key={`list-group-item-${item.name}`}\n              to={`/repos/${match.params.repo}/browser/${item.name}/`}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <CallSplitIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={item.name}></ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </>\n  );\n}\n","import CloseIcon from \"@mui/icons-material/Close\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport SnackbarContent from \"@mui/material/SnackbarContent\";\nimport classNames from \"classnames\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function ErrorSnackbar({ open, handleClose, message }) {\n  const classes = useStyles();\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <SnackbarContent\n        className={classes.error}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <ErrorIcon\n              className={classNames(classes.icon, classes.iconVariant)}\n            />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n            size=\"large\">\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\n\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport MarkdownIt from \"markdown-it\";\nimport MarkdownItMusic from \"markdown-it-music\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { useContainerDimensions } from \"../lib/hooks\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useYouTubeId } from \"./GlobalState\";\n\nconst COLUMN_GAP = 20;\n\nconst useStyles = makeStyles((theme) => ({\n  columns: {\n    columnGap: `${COLUMN_GAP}px`,\n    columnRuleWidth: \"1px\",\n    columnRuleStyle: \"dashed\",\n    columnRuleColor: theme.palette.text.secondary,\n  },\n}));\n\nconst MusicMarkdownRender = ({\n  source,\n  width,\n  columnCount,\n  transposeAmount,\n}) => {\n  const theme = useTheme();\n  const { setYouTubeId } = useYouTubeId();\n  const [html, setHtml] = useState(\"\");\n  const [message, setMessage] = useState();\n  const [error, setError] = useState(false);\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  useEffect(() => {\n    const md = new MarkdownIt({ html: true }).use(MarkdownItMusic);\n    md.setTranspose(transposeAmount);\n    md.setTheme(theme.palette.mode);\n    md.setMaxWidth((width - COLUMN_GAP * (columnCount - 1)) / columnCount);\n\n    try {\n      setHtml(md.render(source));\n      setError(false);\n      setYouTubeId(md.meta.youTubeId);\n    } catch (err) {\n      console.log(err);\n      setHtml(`<pre>${source}</pre>`);\n      setMessage(err.message);\n      setError(true);\n    }\n  }, [\n    setYouTubeId,\n    source,\n    width,\n    columnCount,\n    transposeAmount,\n    theme.palette.mode,\n  ]);\n\n  // TODO: Replace this hack with an iframe.\n  var script = /<script>([.\\s\\S]*)<\\/script>/gm.exec(html);\n  if (script) {\n    // eslint-disable-next-line no-eval\n    window.eval(script[1]);\n  }\n\n  return (\n    <>\n      {/* TODO: Replace this hack with an iframe. */}\n      <div\n        className={`mmd-${theme.palette.mode}`}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n      <ErrorSnackbar\n        message={message}\n        open={error}\n        handleClose={handleClearError}\n      />\n    </>\n  );\n};\n\nexport default function MusicMarkdown(props) {\n  const classes = useStyles();\n  const componentRef = useRef();\n  const { width } = useContainerDimensions(componentRef);\n\n  return (\n    <div\n      className={classes.columns}\n      style={{ columnCount: props.columnCount }}\n      ref={componentRef}\n    >\n      <MusicMarkdownRender width={width} {...props} />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { getContents, putContents } from \"../lib/github\";\nimport { useTheme } from \"@mui/material/styles\";\n\nimport makeStyles from '@mui/styles/makeStyles';\n\nimport AceEditor from \"react-ace\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\nimport Fab from \"@mui/material/Fab\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport Grid from \"@mui/material/Grid\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport Paper from \"@mui/material/Paper\";\nimport PhotoFilterIcon from \"@mui/icons-material/PhotoFilter\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport asciiTabConvert from \"../tools/asciitab\";\nimport classNames from \"classnames\";\nimport { useDebounce } from \"../lib/hooks\";\nimport { useGlobalStateContext } from \"./GlobalState\";\nimport queryString from \"query-string\";\nimport \"ace-builds/src-noconflict/mode-markdown\"; // eslint-disable-line sort-imports\n\nimport \"ace-builds/src-noconflict/theme-textmate\"; // eslint-disable-line sort-imports\nimport \"ace-builds/src-noconflict/theme-twilight\"; // eslint-disable-line sort-imports\nimport { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport { green } from '@mui/material/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n  fabProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: -6,\n    left: -6,\n    zIndex: 1,\n  },\n  editor: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    height: \"100%\",\n    width: \"100%\",\n  },\n  fab: {\n    margin: theme.spacing(1),\n  },\n  toolbar: {\n    display: \"flex\",\n    padding: theme.spacing(1),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: \"100%\",\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[700],\n    },\n  },\n}));\n\nexport default function MarkdownEditor({ match, location }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const context = useGlobalStateContext();\n  const [markdown, setMarkdown] = useState(\"\");\n  const debouncedMarkdown = useDebounce(markdown, 250);\n  const [sha, setSha] = useState();\n  const [saving, setSaving] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [isDirty, setIsDirty] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { repo, path, branch } = match.params;\n\n  const handleChange = (value) => {\n    setMarkdown(value);\n    setIsDirty(true);\n    setSuccess(false);\n  };\n\n  const handleSave = async () => {\n    if (!saving) {\n      setSuccess(false);\n      setSaving(true);\n\n      const response = await putContents(repo, path, markdown, sha, branch);\n      const json = await response.json();\n\n      if (response.status === 200) {\n        setSuccess(true);\n        setSaving(false);\n        setSha(json.content.sha);\n      } else {\n        setSuccess(false);\n        setSaving(false);\n      }\n    }\n  };\n\n  const handleAutoFormat = () => {\n    setMarkdown(asciiTabConvert(markdown));\n  };\n\n  useEffect(() => {\n    async function fetchContents() {\n      const json = await getContents(repo, path, branch);\n      setIsLoaded(true);\n      setMarkdown(json.content);\n      setSha(json.sha);\n    }\n    fetchContents();\n  }, [repo, path, branch]);\n\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  const buttonClassname = classNames({\n    [classes.buttonSuccess]: success,\n  });\n\n  const parts = location.pathname.split(\"/\");\n  parts[4] = \"viewer\";\n  const viewerLink = parts.join(\"/\");\n\n  const githubParts = [parts[2], parts[3], \"blob\"].concat(parts.slice(5));\n  const githubLink = `https://github.com/${githubParts.join(\"/\")}`;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Paper className={classes.toolbar}>\n              <Tooltip\n                title={\n                  context.isValidGithubToken()\n                    ? \"Save\"\n                    : \"Add a GitHub Token to Enable Saving\"\n                }\n              >\n                <span>\n                  <Fab\n                    disabled={!isDirty || !context.isValidGithubToken()}\n                    className={`${buttonClassname} ${classes.fab}`}\n                    onClick={handleSave}\n                  >\n                    {success ? <CheckIcon /> : <SaveIcon />}\n                    {saving && (\n                      <CircularProgress\n                        size={68}\n                        className={classes.fabProgress}\n                      />\n                    )}\n                  </Fab>\n                </span>\n              </Tooltip>\n              <Tooltip title=\"Auto Format\">\n                <Fab className={classes.fab} onClick={handleAutoFormat}>\n                  <PhotoFilterIcon />\n                </Fab>\n              </Tooltip>\n              <Tooltip title=\"Return to Markdown View\">\n                <Fab component={Link} to={viewerLink} className={classes.fab}>\n                  <ExitToAppIcon />\n                </Fab>\n              </Tooltip>\n              <Tooltip title=\"Open in GitHub\">\n                <Fab href={githubLink} target=\"_blank\" className={classes.fab}>\n                  <GitHubIcon />\n                </Fab>\n              </Tooltip>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <AceEditor\n                mode=\"markdown\"\n                theme={theme.palette.mode === \"dark\" ? \"twilight\" : \"textmate\"}\n                width=\"100%\"\n                maxLines={Infinity}\n                className={classes.editor}\n                onChange={handleChange}\n                value={markdown}\n                editorProps={{ $blockScrolling: true }}\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <MusicMarkdown\n                source={debouncedMarkdown}\n                columnCount={columnCount}\n                transposeAmount={transposeAmount}\n              ></MusicMarkdown>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n}\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport { useEffect, useState } from \"react\";\n\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport { getContents } from \"../lib/github\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport queryString from \"query-string\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\nexport default function MarkdownViewer({ location, match }) {\n  const classes = useStyles();\n  const [markdown, setMarkdown] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchContents() {\n      const { repo, path, branch } = match.params;\n      const json = await getContents(repo, path, branch);\n      setMarkdown(json.content);\n      setIsLoaded(true);\n    }\n    fetchContents();\n  }, [match.params]);\n\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <MusicMarkdown\n        source={markdown}\n        columnCount={columnCount}\n        transposeAmount={transposeAmount}\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport Fab from \"@mui/material/Fab\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function AddRepository({ handleAddRepository }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleDialogOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setOpen(false);\n    setName(\"\");\n    setOwner(\"\");\n    setError(false);\n  };\n\n  const handleShowError = (message) => {\n    setMessage(message);\n    setError(true);\n  };\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  const handleDialogAdd = async () => {\n    try {\n      await handleAddRepository(`${owner}/${name}`);\n      handleDialogClose();\n    } catch (err) {\n      handleShowError(err.message);\n    }\n  };\n\n  const handleUpdateOwner = (event) => {\n    setOwner(event.target.value);\n  };\n\n  const handleUpdateName = (event) => {\n    setName(event.target.value);\n  };\n\n  return <>\n    <Grid\n      container\n      className={classes.grid}\n      direction=\"row\"\n      justifyContent=\"flex-end\"\n      alignItems=\"flex-end\"\n    >\n      <Fab aria-label=\"Add\" onClick={handleDialogOpen}>\n        <AddIcon />\n      </Fab>\n      <Dialog open={open} aria-labelledby=\"add-repository-dialog\">\n        <DialogTitle id=\"add-repository-dialog-title\">\n          Add Repository\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"owner\"\n            label=\"Repository Owner\"\n            value={owner}\n            onChange={handleUpdateOwner}\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Repository Name\"\n            value={name}\n            onChange={handleUpdateName}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose}>Cancel</Button>\n          <Button onClick={handleDialogAdd}>Add</Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n    <ErrorSnackbar\n      message={message}\n      open={error}\n      handleClose={handleClearError}\n    />\n  </>;\n}\n","import { useRepoMetadata, useRepositories } from \"./GlobalState\";\n\nimport AddRepository from \"./AddRepository\";\nimport Avatar from \"@mui/material/Avatar\";\nimport BookIcon from \"@mui/icons-material/Book\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@mui/material/ListItemSecondaryAction\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\nexport default function RepositoryEditor() {\n  const classes = useStyles();\n  const repoMetadata = useRepoMetadata();\n  const { addRepository, deleteRepository } = useRepositories();\n\n  return (\n    <div className={classes.root}>\n      <List>\n        {repoMetadata.map((repo) => (\n          <ListItem\n            button\n            key={`repo-item-${repo.full_name}`}\n            component={Link}\n            to={`/repos/${repo.full_name}/browser/${repo.default_branch}`}\n          >\n            <ListItemAvatar>\n              <Avatar>\n                <BookIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={repo.full_name} />\n            <ListItemSecondaryAction>\n              <IconButton\n                aria-label=\"Delete\"\n                onClick={() => deleteRepository(repo.full_name)}\n                size=\"large\"\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      <AddRepository handleAddRepository={addRepository} />\n    </div>\n  );\n}\n","import AddIcon from \"@mui/icons-material/Add\";\nimport Button from \"@mui/material/Button\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport Fab from \"@mui/material/Fab\";\nimport Grid from \"@mui/material/Grid\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { Redirect } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport { putContents } from \"../lib/github\";\nimport { useGlobalStateContext } from \"./GlobalState\";\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  whitespacePre: {\n    whiteSpace: \"pre-line\",\n    fontFamily: \"monospace\",\n  },\n  grid: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nexport default function AddNewFile({ match }) {\n  const classes = useStyles();\n  const context = useGlobalStateContext();\n  const [newFileName, setNewFileName] = useState(\"\");\n  const [newFileOpen, setNewFileOpen] = useState(false);\n  const [toEditor, setToEditor] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleAddNewFileOpen = () => {\n    setNewFileOpen(true);\n  };\n\n  const handleAddNewFileClose = () => {\n    setNewFileOpen(false);\n    setNewFileName(\"\");\n  };\n\n  const handleUpdateFileName = (event) => {\n    setNewFileName(event.target.value);\n  };\n\n  const handleAddNewFile = async () => {\n    const { repo, branch } = match.params;\n    const path = getNewFilePath();\n    const content = getTemplateContents();\n\n    const response = await putContents(repo, path, content, undefined, branch);\n\n    if (response.status !== 201) {\n      handleShowError(`${response.status}: ${response.statusText}`);\n      return;\n    }\n    setToEditor(true);\n  };\n\n  const handleShowError = (message) => {\n    setMessage(message);\n    setError(true);\n  };\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  const isValidFileName = () => !!newFileName.match(/^[^<>:\"/\\\\|?*]+$/);\n  const getTemplateContents = () => `---\\n---\\n\\n# ${newFileName}`;\n  const getNewFilePath = () =>\n    match.params.path\n      ? `${match.params.path}/${newFileName}.md`\n      : `${newFileName}.md`;\n\n  const { repo, branch } = match.params;\n\n  if (toEditor) {\n    return (\n      <Redirect to={`/repos/${repo}/editor/${branch}/${getNewFilePath()}`} />\n    );\n  }\n\n  return <>\n    <Grid\n      container\n      className={classes.grid}\n      direction=\"row\"\n      justifyContent=\"flex-end\"\n      alignItems=\"flex-end\"\n    >\n      <Tooltip\n        title={\n          context.isValidGithubToken()\n            ? \"Add Song\"\n            : \"Add a GitHub Token to Enable Editing\"\n        }\n      >\n        <span>\n          <Fab\n            aria-label=\"Add\"\n            disabled={!context.isValidGithubToken()}\n            onClick={handleAddNewFileOpen}\n          >\n            <AddIcon />\n          </Fab>\n        </span>\n      </Tooltip>\n      <Dialog\n        open={newFileOpen}\n        aria-labelledby=\"add-new-file-dialog\"\n        fullWidth={true}\n      >\n        <DialogTitle id=\"add-new-file-dialog-title\">\n          Create New Music Markdown File\n        </DialogTitle>\n        <DialogContent>\n          <Card className={classes.previewCard}>\n            <CardContent>\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Preview\n              </Typography>\n              <Typography\n                variant=\"body1\"\n                color=\"textPrimary\"\n                className={classes.whitespacePre}\n              >\n                {getTemplateContents()}\n              </Typography>\n            </CardContent>\n          </Card>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"owner\"\n            label=\"Music Markdown File Name\"\n            value={newFileName}\n            onChange={handleUpdateFileName}\n            fullWidth\n            error={!isValidFileName()}\n            helperText={\n              !isValidFileName() ? (\n                \"Invalid file name\"\n              ) : (\n                <>\n                  {repo}/{branch}/{getNewFilePath()}\n                </>\n              )\n            }\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">.md</InputAdornment>\n              ),\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleAddNewFileClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleAddNewFile}\n            color=\"primary\"\n            disabled={!isValidFileName()}\n          >\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n    <ErrorSnackbar\n      message={message}\n      open={error}\n      handleClose={handleClearError}\n    />\n  </>;\n}\n","import { useEffect, useState } from \"react\";\n\nimport AddNewFile from \"./AddNewFile\";\nimport Avatar from \"@mui/material/Avatar\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport FolderIcon from \"@mui/icons-material/Folder\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { getContents } from \"../lib/github\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n});\n\n/**\n * Sorts the contents of a GitHub directory. Lists directories first then files,\n * each in alphabetical order.\n * @param {Object[]} contents GitHub directory contents. Contains files and directories.\n */\nfunction sortDir(contents) {\n  contents.sort((a, b) => {\n    if (a.type === \"file\") {\n      if (b.type === \"file\") {\n        return a.name - b.name;\n      }\n      return 1;\n    }\n    if (b.type === \"file\") {\n      return -1;\n    }\n    return a.name - b.name;\n  });\n}\n\n/**\n * A React component for rendering repository files and directories.\n */\nexport default function RepositoryNavigation({ match, location }) {\n  const classes = useStyles();\n  const [contents, setContents] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchContents() {\n      const { repo, path, branch } = match.params;\n\n      const contents = await getContents(repo, path, branch);\n      sortDir(contents);\n      setContents(contents);\n      setIsLoaded(true);\n    }\n    fetchContents();\n  }, [match.params]);\n\n  const { repo, branch } = match.params;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <List key={\"repo-navigation-list\"}>\n          {contents.map((item) => (\n            <ListItem\n              button\n              component={Link}\n              key={`list-group-item-${item.name}`}\n              to={\n                item.type === \"dir\"\n                  ? `/repos/${repo}/browser/${branch}/${item.path}/`\n                  : `/repos/${repo}/viewer/${branch}/${item.path}`\n              }\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  {item.type === \"dir\" ? <FolderIcon /> : <DescriptionIcon />}\n                </Avatar>\n              </ListItemAvatar>\n              {item.type === \"dir\" ? (\n                <ListItemText secondary={item.name}></ListItemText>\n              ) : (\n                <ListItemText primary={item.name}></ListItemText>\n              )}\n            </ListItem>\n          ))}\n        </List>\n        <AddNewFile location={location} match={match} />\n      </div>\n    </>\n  );\n}\n","import Grid from \"@mui/material/Grid\";\n\nconst RESPONSIVE_CONTAINER_KEY = \"app-container\";\n\nexport default function ResponsiveContainer(props) {\n  return <Grid key={RESPONSIVE_CONTAINER_KEY}>{props.children}</Grid>;\n}\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport { Link, Route } from \"react-router-dom\";\n\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport { guitarChordbook } from \"markdown-it-music/lib/chordbook\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport queryString from \"query-string\";\nimport { renderChordDiagram } from \"markdown-it-music/renderers/chord_diagram\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    padding: 8,\n  },\n  chordSourcePaper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2),\n  },\n  chordCategoryPaper: {\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n  },\n  chordCategoryTypography: {\n    color: theme.palette.text.primary,\n    textAlign: \"center\",\n  },\n  chordVariantPaper: {\n    display: \"inline-block\",\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n  },\n  chordVariantTypography: {\n    color: theme.palette.text.secondary,\n  },\n  chordDiagram: {\n    filter: theme.palette.mode === \"dark\" ? \"invert(100%)\" : \"\",\n  },\n}));\n\nexport default function Sandbox({ location, match }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\">Sandbox</Typography>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/all-features-in-one-place`}>\n            All the Features in One Place\n          </Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/guitar-chordbook`}>Guitar Chordbook</Link>\n        </li>\n      </ul>\n\n      <Route\n        path={`${match.path}/all-features-in-one-place`}\n        component={() => (\n          <MarkdownViewer location={location} source={allFeaturesSource} />\n        )}\n      />\n      <Route\n        path={`${match.path}/guitar-chordbook`}\n        component={AllGuitarChords}\n      />\n    </div>\n  );\n}\n\nconst MarkdownViewer = ({ source, location }) => {\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  return (\n    <MusicMarkdown\n      source={source}\n      columnCount={columnCount}\n      transposeAmount={transposeAmount}\n    />\n  );\n};\n\nconst roots = [\n  \"C\",\n  \"C#\",\n  \"Db\",\n  \"D\",\n  \"D#\",\n  \"Eb\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"Gb\",\n  \"G\",\n  \"G#\",\n  \"Ab\",\n  \"A\",\n  \"A#\",\n  \"Bb\",\n  \"B\",\n];\n\nconst qualities = [\n  \"\",\n  \"m\",\n  \"6\",\n  \"m6\",\n  \"7\",\n  \"maj7\",\n  \"m7\",\n  \"9\",\n  \"dim\",\n  \"aug\",\n  \"sus2\",\n  \"7sus2\",\n  \"sus4\",\n  \"7sus4\",\n  \"5\",\n  \"dim5\",\n  \"dim7\",\n  \"7b5\",\n  \"m7b5\",\n  \"7#5\",\n  \"7b9\",\n  \"7#9\",\n  \"7b9#5\",\n  \"7/6\",\n  \"9b5\",\n  \"9#5\",\n  \"maj9\",\n  \"m9\",\n  \"9/6\",\n  \"m9/6\",\n  \"add9\",\n  \"11\",\n  \"m11\",\n  \"11aug\",\n  \"13\",\n  \"13b9\",\n  \"13b9b5\",\n];\n\nconst AllGuitarChords = ({ location }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography variant=\"h3\">Guitar Chordbook</Typography>\n      <Paper className={classes.chordSourcePaper}>\n        <MarkdownViewer source={allChordsSource} location={location} />\n      </Paper>\n      {roots.map((category, index) => (\n        <Paper key={`category-${index}`} className={classes.chordCategoryPaper}>\n          <Typography className={classes.chordCategoryTypography} variant=\"h4\">\n            {category} Chords\n          </Typography>\n          <ChordCategory category={category} />\n        </Paper>\n      ))}\n    </>\n  );\n};\n\nconst ChordCategory = ({ category }) => {\n  const classes = useStyles();\n  return Array.from(guitarChordbook.keys())\n    .filter((chord) => chord.match(/^[CDEFGAB](?:#|b)?|N\\.C\\./)[0] === category)\n    .map((chord, index) => (\n      <Paper key={`chord-${index}`} className={classes.chordVariantPaper}>\n        {guitarChordbook.get(chord).map((variant, index) => (\n          <span\n            className={classes.chordDiagram}\n            key={`variant-${index}`}\n            dangerouslySetInnerHTML={{ __html: renderChordDiagram(variant) }}\n          />\n        ))}\n        <Typography className={classes.chordVariantTypography} variant=\"h5\">\n          {chord}\n        </Typography>\n      </Paper>\n    ));\n};\n\nconst allChordsSource = `---\n---\n${roots\n  .map(\n    (root) => `## ${root} Chords\nc1: ${qualities.map((quality) => root + quality).join(\" \")}`\n  )\n  .join(\"\\n\\n\")}\n`;\n\nconst allFeaturesSource = `---\nyouTubeId: dN3GbF9Bx6E\n---\n\n# All the Features in One Place\n\n## Chord and Lyrics\nc1: Em               D           Em\nl1: Are you goin' to Scarborough Fair?\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\n\nc1: Em       G                   D\nl1: Remember me to one who lives there\n\nc1: Em       D                  Em\nl1: She once was a true love of mine\n\n## Multiple Overlapping Voices\nc1: Em                         D         Em\nl1: Tell her to make me a      cambric   shirt\nl2:                     On the side of a hill in the deep forest green\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\nl2:                              Tracing a sparrow on snow-crested ground\n\nc1: Em         G               D\nl1: Without no seams nor needlework\nl2:                      Blankets and bedclothes the child of the mountain\n\nc1: Em          D                 Em\nl1: Then she'll be a true love of mine\nl2:                               Sleeps unaware of the clarion call\n\n## VexTab\n\n:::vextab\noptions space=20\n\ntabstave\n  notation=true\n  key=A time=4/4\n\n  notes :q =|: (5/2.5/3.7/4) :8 7-5h6/3 ^3^ 5h6-7/5 ^3^ :q 7V/4 |\n  notes :8 t12p7/4 s5s3/4 :8 3s:16:5-7/5 :h p5/4\n  text :w, |#segno, ,|, :hd, , #tr\n\n\noptions space=25\n\ntabstave\n  notation=true\n\n  notes :q (5/4.5/5) (7/4.7/5)s(5/4.5/5) ^3^\n  notes :8 7-5/4 $.a./b.$ (5/4.5/5)h(7/5) =:|\n  notes :8 (12/5.12/4)ds(5/5.5/4)u 3b4/5\n  notes :h (5V/6.5/4.6/3.7/2) $.italic.let ring$ =|=\n\n  text :h, ,.font=Times-12-italic, D.S. al coda, |#coda\n  text :h, ,.-1, .font=Arial-14-bold,A13\n  text ++, .23, #f\n :::\n\n## ABC\n\n:::abc\nX: 1\nM: 4/4\nL: 1/16\nK: Amin\n\"Am\" (C16 | C4) B,2C2 D6 CB, | (C16 | C4) B,2C2 \"F\" D6 CA, |\n\"C\" G,8 \"E\" _A,8 | \"Am\" =A,8 \"F\" (3F4 F4 F4 | \"E\" F2 (E6 E8) | z6 ^A2 B4 e4 |\n\"Am\" e2d2c2(d2 \"G\" d4) .=A4 | \"F\" e2d2c2(d2 \"G\" d4) .A4 |\n\"Esus4\" e4 e4 e2d2B2d2 | \"E\" e4 e4 e2g2e2d2 |\n\"Am\" .e4 c2 \"G\" .d4 c2 e4 | \"F\" z2 c2 e2 \"G\" d6 c2d2 |\n\"Esus4\" e2e2e2d2 d2B2B2_A2 | \"E\" _A2F2F2E2 =A2B2A2G2 |\n:::\n\n`;\n","import { GlobalStateProvider, useTheme } from \"./GlobalState\";\nimport {\n  ThemeProvider as MuiThemeProvider,\n  StyledEngineProvider,\n  createTheme,\n} from \"@mui/material/styles\";\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\n\nimport AppBar from \"./AppBar\";\nimport BranchNavigation from \"./BranchNavigation\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport MarkdownEditor from \"./MarkdownEditor\";\nimport MarkdownViewer from \"./MarkdownViewer\";\nimport { REPO_REGEX } from \"../lib/constants\";\nimport RepositoryEditor from \"./RepositoryEditor\";\nimport RepositoryNavigation from \"./RepositoryNavigation\";\nimport ResponsiveContainer from \"./ResponsiveContainer\";\nimport Sandbox from \"./Sandbox.js\";\n\nconst App = () => (\n  <GlobalStateProvider>\n    <ThemeProvider />\n  </GlobalStateProvider>\n);\n\nconst ThemeProvider = () => {\n  const { getTheme } = useTheme();\n\n  return (\n    <StyledEngineProvider injectFirst>\n      <MuiThemeProvider theme={createTheme(getTheme())}>\n        <CssBaseline />\n        <ResponsiveContainer>{[HomeRouter()]}</ResponsiveContainer>\n      </MuiThemeProvider>\n    </StyledEngineProvider>\n  );\n};\n\nconst HomeRouter = () => (\n  <Router key=\"home-router\">\n    <Route component={AppBar} />\n    <Switch>\n      <Route\n        path={`${REPO_REGEX}/viewer/:branch/:path+`}\n        component={MarkdownViewer}\n      />\n      <Route\n        path={`${REPO_REGEX}/browser/:branch/:path*`}\n        component={RepositoryNavigation}\n      />\n      <Route\n        path={`${REPO_REGEX}/editor/:branch/:path*`}\n        component={MarkdownEditor}\n      />\n      <Route path={REPO_REGEX} component={BranchNavigation} />\n      <Route path=\"/sandbox\" component={Sandbox} />\n      <Route path=\"/\" component={RepositoryEditor} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nimport App from \"./components/App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}