{"version":3,"sources":["tools/asciitab.js","serviceWorker.js","lib/constants.js","lib/github.js","components/GlobalState.js","components/RouterBreadcrumbs.js","components/BranchNavigation.js","components/ErrorSnackbar.js","components/MusicMarkdown.js","components/MarkdownEditor.js","lib/hooks.js","components/MarkdownViewer.js","components/GithubTokenDialog.js","components/YouTube.js","components/MusicToolbar.js","components/MusicMarkdownNavbar.js","components/AddRepository.js","components/RepositoryEditor.js","components/AddNewFile.js","components/RepositoryNavigation.js","components/ResponsiveContainer.js","components/Sandbox.js","components/App.js","index.js"],"names":["isChord","require","State","DEFAULT","VERSE","FENCE","getMaybeHeading","line","endsWith","slice","startsWith","getMaybeChords","tokens","trim","split","token","asciiTabConvert","input","state","voiceIndex","lines","output","push","maybeHeading","maybeChords","join","read","stream","a","async","buffer","Buffer","alloc","chunk","concat","toString","module","console","process","stdin","log","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","COLUMN_COUNT_QUERY_KEY","REPO_REGEX","TRANSPOSE_QUERY_KEY","GITHUB_TOKEN_LOCAL_STORAGE_KEY","REPOS_LOCAL_STORAGE_KEY","GITHUB_API_URL","getContents","repo","path","branch","undefined","length","apiUrl","getApiUrl","fetch","cache","response","json","content","Base64","decode","putContents","sha","body","message","encode","method","mode","JSON","stringify","getRepositories","repoListStr","localStorage","getItem","parse","verifyRepoExists","status","Error","verifyRepoUnregistered","addRepository","repos","setItem","getBranches","url","URL","githubToken","getGithubToken","searchParams","set","isValidGithubToken","lightTheme","palette","type","darkTheme","initialTheme","GlobalStateContext","React","createContext","useGlobalStateContext","useContext","GlobalStateProvider","props","useState","theme","youTubeId","setState","Provider","value","data","setGithubToken","removeItem","isDarkTheme","toggleTheme","setYouTubeId","children","useStyles","makeStyles","paper","padding","spacing","reactRouterHoverInherit","DirectoryBreadcrumbs","pathname","classes","subDirectoriesArr","filter","breadcrumbItems","previousPath","ignoreIndex","currDir","i","directory","indexOf","Typography","color","key","Link","component","RouterLink","to","className","buildBreadcrumb","Paper","Breadcrumbs","root","flexGrow","BranchNavigation","branches","setBranches","isLoaded","setIsLoaded","useEffect","params","fetchBranches","List","map","item","ListItem","button","name","ListItemAvatar","Avatar","ListItemText","primary","LinearProgress","backgroundColor","dark","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","margin","ErrorSnackbar","open","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","aria-describedby","id","classNames","action","IconButton","aria-label","close","onClick","MD","MarkdownIt","html","use","MarkdownItMusic","columns","columnGap","columnRuleWidth","columnRuleStyle","columnRuleColor","text","secondary","MusicMarkdownRender","source","width","columnCount","transposeAmount","useTheme","context","setHtml","setMessage","setError","setTranspose","setMaxWidth","render","meta","err","dangerouslySetInnerHTML","__html","event","reason","MusicMarkdown","style","fabProgress","green","position","top","left","zIndex","editor","marginLeft","height","fab","toolbar","buttonSuccess","MarkdownEditor","markdown","setMarkdown","debouncedMarkdown","delay","debounced","setDebounced","timer","setTimeout","clearTimeout","useDebounce","setSha","saving","setSaving","success","setSuccess","isDirty","setIsDirty","fetchContents","buttonClassname","parts","viewerLink","githubParts","githubLink","Grid","container","xs","Tooltip","title","Fab","disabled","CircularProgress","size","href","target","maxLines","Infinity","onChange","editorProps","$blockScrolling","MarkdownViewer","queryString","search","Number","ExpansionPanelDetails","withStyles","MuiExpansionPanelDetails","GithubTokenInstructions","ExpansionPanel","ExpansionPanelSummary","expandIcon","GithubTokenDialog","setToken","isValidToken","handleCloseDialog","Dialog","DialogTitle","DialogContent","TextField","autoFocus","label","fullWidth","e","helperText","DialogActions","Button","bottom","right","cursor","YouTubePlayer","border","src","allow","allowFullScreen","YouTubeToggle","visible","setVisible","popper","slider","handleUpdateQuery","original","history","ColumnCountSelector","anchorEl","setAnchorEl","currentTarget","Badge","badgeContent","invisible","Popper","ClickAwayListener","onClickAway","contains","ToggleButtonGroup","exclusive","ToggleButton","TransposeSelector","transpose","Slider","min","max","step","marks","String","MusicToolbar","grow","BrowseButton","EditButton","ViewButton","SearchToolbar","MusicMarkdownNavbar","apiKeyDialogOpen","setApiKeyDialogOpen","settingsOpen","setSettingsOpen","settingsAnchorEl","setSetingsAnchorEl","handleSettingsToggle","AppBar","Toolbar","alt","buttonRef","placement","MenuList","MenuItem","FormControlLabel","control","Switch","defaultChecked","grid","AddRepository","handleAddRepository","setOpen","setName","owner","setOwner","handleDialogClose","handleShowError","direction","justify","aria-labelledby","RepositoryEditor","setRepos","reposFingerprint","loadRepositories","handleDeleteRepository","r","deleteRepository","ListItemSecondaryAction","whitespacePre","whiteSpace","fontFamily","AddNewFile","newFileName","setNewFileName","newFileOpen","setNewFileOpen","toEditor","setToEditor","isValidFileName","getTemplateContents","getNewFilePath","Card","previewCard","CardContent","variant","gutterBottom","InputProps","endAdornment","InputAdornment","statusText","sortDir","contents","sort","b","RepositoryNavigation","setContents","RESPONSIVE_CONTAINER_KEY","ResponsiveContainer","chordSourcePaper","chordCategoryPaper","textAlign","chordCategoryTypography","chordVariantPaper","chordVariantTypography","chordDiagram","Sandbox","allFeaturesSource","AllGuitarChords","roots","qualities","allChordsSource","category","index","ChordCategory","Array","from","guitarChordbook","keys","chord","get","renderChordDiagram","quality","ThemeProvider","createMuiTheme","CssBaseline","HomeRouter","App","ReactDOM","document","getElementById","origin","addEventListener","contentType","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9867a353.chunk.js","sourcesContent":["const { isChord } = require(\"markdown-it-music/lib/chord\");\n\nconst State = {\n  DEFAULT: 1,\n  VERSE: 2,\n  FENCE: 3\n};\n\nfunction getMaybeHeading(line) {\n  if (line.endsWith(\":\")) {\n    return `## ${line.slice(0, -1)}`;\n  }\n\n  if (line.startsWith(\"[\") && line.endsWith(\"]\")) {\n    return `## ${line.slice(1, -1)}`;\n  }\n\n  return null;\n}\n\nfunction getMaybeChords(line) {\n  const tokens = line.trim().split(/\\s+/);\n\n  for (const token of tokens) {\n    if (!isChord(token)) {\n      return null;\n    }\n  }\n\n  return `c1: ${line}`;\n}\n\nfunction asciiTabConvert(input) {\n  let state = State.DEFAULT;\n  let voiceIndex = 1;\n  const lines = input.split(/\\n/);\n  const output = [];\n\n  for (const line of lines) {\n    if (line.startsWith(\":::\")) {\n      state = State.FENCE;\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.DEFAULT) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        state = State.VERSE;\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      output.push(line);\n      continue;\n    }\n\n    if (state === State.VERSE) {\n      const maybeHeading = getMaybeHeading(line);\n      if (maybeHeading) {\n        state = State.DEFAULT;\n        output.push(\"\");\n        output.push(maybeHeading);\n        continue;\n      }\n\n      const maybeChords = getMaybeChords(line);\n      if (maybeChords) {\n        output.push(\"\");\n        output.push(maybeChords);\n        voiceIndex = 1;\n        continue;\n      }\n\n      if (line.trim() === \"\") {\n        continue;\n      }\n\n      output.push(`l${voiceIndex}: ${line}`);\n      voiceIndex += 1;\n      continue;\n    }\n\n    if (state === State.FENCE) {\n      if (line === \":::\") {\n        state = State.DEFAULT;\n      }\n\n      output.push(line);\n      continue;\n    }\n  }\n\n  return output.join(\"\\n\");\n}\n\nasync function read(stream) {\n  let buffer = Buffer.alloc(0);\n  for await (const chunk of stream) {\n    buffer = Buffer.concat([buffer, chunk]);\n  }\n  return buffer.toString(\"utf8\");\n}\n\nasync function main() {\n  console.log(asciiTabConvert(await read(process.stdin)));\n}\n\nif (typeof require !== \"undefined\" && require.main === module) {\n  main();\n}\n\nexport default asciiTabConvert;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const COLUMN_COUNT_QUERY_KEY = \"columns\";\nexport const LOCAL_STORAGE_NAMESPACE = \"music-markdown\";\nexport const REPO_REGEX = \"/repos/:repo([^/]+/[^/]+)\";\nexport const TRANSPOSE_QUERY_KEY = \"transpose\";\n","import { Base64 } from \"js-base64\";\nimport { LOCAL_STORAGE_NAMESPACE } from \"./constants\";\n\nconst GITHUB_TOKEN_LOCAL_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:github_token`;\nconst REPOS_LOCAL_STORAGE_KEY = `${LOCAL_STORAGE_NAMESPACE}:repositories`;\nconst GITHUB_API_URL = \"https://api.github.com\";\n\n/**\n * Returns a Promise of the contents of a file or directory in a GitHub repository.\n * See https://developer.github.com/v3/repos/contents/#get-contents\n * @param {string} repo The owner and repo in the form :owner/:repo\n * @param {string} path The directory or file to retrieve\n * @param {string} branch The branch to retrive contents from\n * @return {Object} JSON dictionary of repository contents\n */\nexport async function getContents(repo, path, branch) {\n  if (path === undefined || path.length === 0) {\n    path = \"\";\n  }\n  const apiUrl = getApiUrl(`/repos/${repo}/contents/${path}`, branch);\n  const response = await fetch(apiUrl, { cache: \"no-cache\" });\n  const json = await response.json();\n  json.content = json.content ? Base64.decode(json.content) : \"\";\n  return json;\n}\n\nexport async function putContents(repo, path, content, sha, branch) {\n  const apiUrl = getApiUrl(`/repos/${repo}/contents/${path}`);\n\n  const body = {\n    message: `Music Markdown published ${path}`,\n    content: Base64.encode(content),\n    branch\n  };\n\n  if (sha) {\n    body.sha = sha;\n  }\n\n  return fetch(apiUrl, {\n    method: \"PUT\",\n    mode: \"cors\",\n    body: JSON.stringify(body)\n  });\n}\n\n/**\n * Returns list of repos stored in localStorage.\n * @return {Array} Array of JSON dictionaries of repos\n */\nexport function getRepositories() {\n  const repoListStr = localStorage.getItem(REPOS_LOCAL_STORAGE_KEY);\n  if (repoListStr) {\n    return JSON.parse(repoListStr);\n  } else {\n    return [];\n  }\n}\n\nasync function verifyRepoExists(repo) {\n  const apiUrl = getApiUrl(`/repos/${repo}`);\n  const response = await fetch(apiUrl);\n  if (response.status === 404) {\n    throw new Error(`\"${repo}\" not found on GitHub.`);\n  }\n}\n\nfunction verifyRepoUnregistered(repo) {\n  for (const r of getRepositories()) {\n    if (r === repo) {\n      throw new Error(`\"${repo}\" is already registered.`);\n    }\n  }\n}\n\n/**\n * Adds a desired GitHub repo to localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function addRepository(repo) {\n  verifyRepoUnregistered(repo);\n  await verifyRepoExists(repo);\n  const repos = getRepositories();\n  repos.push(repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Returns a promise of a list of branches for the given repository.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport async function getBranches(repo) {\n  const apiUrl = getApiUrl(`/repos/${repo}/branches`);\n  const response = await fetch(apiUrl);\n  return response.json();\n}\n\n/**\n * Removes a GitHub repo from localStorage.\n * @param {string} repo The owner and repo in the form :owner/:repo\n */\nexport function deleteRepository(repo) {\n  const repos = getRepositories().filter(r => r !== repo);\n  localStorage.setItem(REPOS_LOCAL_STORAGE_KEY, JSON.stringify(repos));\n}\n\n/**\n * Composes the GitHub API url for the given url, attaching the user's GitHub\n * access token if it exists.\n * @param {string} url The path and search params\n * @param {string} branch The branch to get from\n * @return {URL} Composed GitHub API url with user's personal access token\n */\nexport function getApiUrl(url, branch) {\n  url = new URL(url, GITHUB_API_URL);\n\n  const githubToken = getGithubToken();\n  if (githubToken) {\n    url.searchParams.set(\"access_token\", githubToken);\n  }\n\n  if (branch) {\n    url.searchParams.set(\"ref\", branch);\n  }\n\n  return url;\n}\n\nexport function getGithubToken() {\n  return localStorage.getItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n}\n\nexport function isValidGithubToken(githubToken = getGithubToken()) {\n  return !!githubToken && !!githubToken.match(/^[0-9a-f]{40}$/);\n}\n\nexport function setGithubToken(githubToken) {\n  if (githubToken) {\n    localStorage.setItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY, githubToken);\n  } else {\n    localStorage.removeItem(GITHUB_TOKEN_LOCAL_STORAGE_KEY);\n  }\n}\n","import React, { useContext, useState } from \"react\";\nimport {\n  getGithubToken,\n  isValidGithubToken,\n  setGithubToken\n} from \"../lib/github\";\nimport { LOCAL_STORAGE_NAMESPACE } from \"../lib/constants\";\n\nconst lightTheme = {\n  palette: {\n    type: \"light\"\n  }\n};\n\nconst darkTheme = {\n  palette: {\n    type: \"dark\"\n  }\n};\n\nconst initialTheme =\n  window.localStorage.getItem(`${LOCAL_STORAGE_NAMESPACE}:palette-type`) ===\n  \"dark\"\n    ? darkTheme\n    : lightTheme;\n\nexport const GlobalStateContext = React.createContext();\n\nexport const useGlobalStateContext = () => useContext(GlobalStateContext);\n\nexport const GlobalStateProvider = props => {\n  const [state, setState] = useState({\n    githubToken: getGithubToken(),\n    theme: initialTheme,\n    youTubeId: null\n  });\n\n  return (\n    <GlobalStateContext.Provider\n      value={{\n        data: state,\n        isValidGithubToken: () => isValidGithubToken(state.githubToken),\n        setGithubToken: githubToken => {\n          if (githubToken !== state.githubToken) {\n            setState({ ...state, githubToken });\n            setGithubToken(githubToken);\n          }\n        },\n        isDarkTheme: () => state.theme.palette.type === \"dark\",\n        toggleTheme: () => {\n          const theme =\n            state.theme.palette.type === \"dark\" ? lightTheme : darkTheme;\n          window.localStorage.setItem(\n            `${LOCAL_STORAGE_NAMESPACE}:palette-type`,\n            theme.palette.type\n          );\n          setState({ ...state, theme });\n        },\n        setYouTubeId: youTubeId => {\n          if (youTubeId !== state.youTubeId) {\n            setState({ ...state, youTubeId });\n          }\n        }\n      }}\n    >\n      {props.children}\n    </GlobalStateContext.Provider>\n  );\n};\n","import Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: `${theme.spacing(1)}px`\n  },\n  reactRouterHoverInherit: theme.reactRouterHoverInherit\n}));\n\nfunction buildBreadcrumb(previousPath, classes) {\n  const breadcrumbItems = [];\n\n  // ignoreIndex matches the Route defined in App.js.\n  // Certain portions are not useful to user in the breadcrumb, so we remove them.\n  const ignoreIndex = [\n    0 /* /repos */,\n    3 /* /:viewName(browser|viewer|editor) */\n  ];\n  const keyBase = \"breadcrumb-item-\";\n\n  let currDir = \"\";\n  for (let i = 0; i < previousPath.length; i++) {\n    const directory = previousPath[i];\n    currDir = currDir.concat(\"/\", directory);\n\n    if (ignoreIndex.indexOf(i) !== -1) {\n      continue;\n    }\n\n    if (i === previousPath.length - 1) {\n      // Last item should be active\n      breadcrumbItems.push(\n        <Typography color=\"textPrimary\" key={`${keyBase}${i}`}>\n          {directory}\n        </Typography>\n      );\n    } else {\n      breadcrumbItems.push(\n        <Link\n          component={RouterLink}\n          to={`${currDir}/`}\n          key={`${keyBase}${i}`}\n          color=\"inherit\"\n          className={classes.reactRouterHoverInherit}\n        >\n          {directory}\n        </Link>\n      );\n    }\n  }\n\n  return breadcrumbItems;\n}\n\n/**\n * Returns a list of breadcrumbs based on current path of navigation\n * @param {string} pathname current URI pathname\n * @return {Array} List of BreadcrumbItems\n */\nexport default function DirectoryBreadcrumbs({ pathname }) {\n  const classes = useStyles();\n  const keyBase = \"breadcrumb-item-\";\n\n  const subDirectoriesArr = pathname.split(\"/\").filter(value => !!value);\n  subDirectoriesArr[3] = \"browser\";\n\n  const breadcrumbItems = buildBreadcrumb(subDirectoriesArr, classes);\n\n  return (\n    <Paper className={classes.paper}>\n      <Breadcrumbs>\n        <Link\n          component={RouterLink}\n          to={`/`}\n          key={`${keyBase}Home`}\n          color=\"inherit\"\n          className={classes.reactRouterHoverInherit}\n        >\n          Home\n        </Link>\n        {breadcrumbItems}\n      </Breadcrumbs>\n    </Paper>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CallSplitIcon from \"@material-ui/icons/CallSplit\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { getBranches } from \"../lib/github\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8\n  }\n});\n\n/**\n * A React component for rendering repository items when navigating the /repos resource\n */\nexport default function BranchNavigation({ location, match }) {\n  const classes = useStyles();\n  const [branches, setBranches] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchBranches() {\n      const branches = await getBranches(match.params.repo);\n      setBranches(branches);\n      setIsLoaded(true);\n    }\n    fetchBranches();\n  }, [match.params.repo]);\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <List>\n          {branches.map(item => (\n            <ListItem\n              button\n              component={Link}\n              key={`list-group-item-${item.name}`}\n              to={`/repos/${match.params.repo}/browser/${item.name}/`}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  <CallSplitIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={item.name}></ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </>\n  );\n}\n","import CloseIcon from \"@material-ui/icons/Close\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport classNames from \"classnames\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function ErrorSnackbar({ open, handleClose, message }) {\n  const classes = useStyles();\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleClose}\n    >\n      <SnackbarContent\n        className={classes.error}\n        aria-describedby=\"client-snackbar\"\n        message={\n          <span id=\"client-snackbar\" className={classes.message}>\n            <ErrorIcon\n              className={classNames(classes.icon, classes.iconVariant)}\n            />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon className={classes.icon} />\n          </IconButton>\n        ]}\n      />\n    </Snackbar>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport ContainerDimensions from \"react-container-dimensions\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport MarkdownIt from \"markdown-it\";\nimport MarkdownItMusic from \"markdown-it-music\";\nimport { useGlobalStateContext } from \"./GlobalState\";\n\nconst COLUMN_GAP = 20;\nconst MD = new MarkdownIt({ html: true }).use(MarkdownItMusic);\n\nconst useStyles = makeStyles(theme => ({\n  columns: {\n    columnGap: `${COLUMN_GAP}px`,\n    columnRuleWidth: \"1px\",\n    columnRuleStyle: \"dashed\",\n    columnRuleColor: theme.palette.text.secondary\n  }\n}));\n\nconst MusicMarkdownRender = ({\n  source,\n  width,\n  columnCount,\n  transposeAmount\n}) => {\n  const theme = useTheme();\n  const context = useGlobalStateContext();\n  const [html, setHtml] = useState(\"\");\n  const [message, setMessage] = useState();\n  const [error, setError] = useState(false);\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  useEffect(() => {\n    MD.setTranspose(transposeAmount).setMaxWidth(\n      (width - COLUMN_GAP * (columnCount - 1)) / columnCount\n    );\n\n    try {\n      setHtml(MD.render(source));\n      setError(false);\n      context.setYouTubeId(MD.meta.youTubeId);\n    } catch (err) {\n      console.log(err);\n      setHtml(`<pre>${source}</pre>`);\n      setMessage(err.message);\n      setError(true);\n    }\n  }, [context, source, width, columnCount, transposeAmount]);\n\n  return (\n    <>\n      <div\n        className={`mmd-${theme.palette.type}`}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n      <ErrorSnackbar\n        message={message}\n        open={error}\n        handleClose={handleClearError}\n      />\n    </>\n  );\n};\n\nexport default function MusicMarkdown(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.columns} style={{ columnCount: props.columnCount }}>\n      <ContainerDimensions>\n        <MusicMarkdownRender {...props} />\n      </ContainerDimensions>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { getContents, putContents } from \"../lib/github\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport AceEditor from \"react-ace\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Fab from \"@material-ui/core/Fab\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport Paper from \"@material-ui/core/Paper\";\nimport PhotoFilterIcon from \"@material-ui/icons/PhotoFilter\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport asciiTabConvert from \"../tools/asciitab\";\nimport classNames from \"classnames\";\nimport green from \"@material-ui/core/colors/green\";\nimport { useDebounce } from \"../lib/hooks\";\nimport { useGlobalStateContext } from \"./GlobalState\";\n\nimport \"ace-builds/src-noconflict/mode-markdown\"; // eslint-disable-line sort-imports\nimport \"ace-builds/src-noconflict/theme-textmate\"; // eslint-disable-line sort-imports\nimport \"ace-builds/src-noconflict/theme-twilight\"; // eslint-disable-line sort-imports\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: 8\n  },\n  fabProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  editor: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    height: \"100%\",\n    width: \"100%\"\n  },\n  fab: {\n    margin: theme.spacing(1)\n  },\n  toolbar: {\n    display: \"flex\",\n    padding: theme.spacing(1)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    height: \"100%\"\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[700]\n    }\n  }\n}));\n\nexport default function MarkdownEditor({ match, location }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const context = useGlobalStateContext();\n  const [markdown, setMarkdown] = useState(\"\");\n  const debouncedMarkdown = useDebounce(markdown, 250);\n  const [sha, setSha] = useState();\n  const [saving, setSaving] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [isDirty, setIsDirty] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { repo, path, branch } = match.params;\n\n  const handleChange = value => {\n    setMarkdown(value);\n    setIsDirty(true);\n    setSuccess(false);\n  };\n\n  const handleSave = async () => {\n    if (!saving) {\n      setSuccess(false);\n      setSaving(true);\n\n      const response = await putContents(repo, path, markdown, sha, branch);\n      const json = await response.json();\n\n      if (response.status === 200) {\n        setSuccess(true);\n        setSaving(false);\n        setSha(json.content.sha);\n      } else {\n        setSuccess(false);\n        setSaving(false);\n      }\n    }\n  };\n\n  const handleAutoFormat = () => {\n    setMarkdown(asciiTabConvert(markdown));\n  };\n\n  useEffect(() => {\n    async function fetchContents() {\n      const json = await getContents(repo, path, branch);\n      setIsLoaded(true);\n      setMarkdown(json.content);\n      setSha(json.sha);\n    }\n    fetchContents();\n  }, [repo, path, branch]);\n\n  const buttonClassname = classNames({\n    [classes.buttonSuccess]: success\n  });\n\n  const parts = location.pathname.split(\"/\");\n  parts[4] = \"viewer\";\n  const viewerLink = parts.join(\"/\");\n\n  const githubParts = [parts[2], parts[3], \"blob\"].concat(parts.slice(5));\n  const githubLink = `https://github.com/${githubParts.join(\"/\")}`;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Paper className={classes.toolbar}>\n              <Tooltip\n                title={\n                  context.isValidGithubToken()\n                    ? \"Save\"\n                    : \"Add a GitHub Token to Enable Saving\"\n                }\n              >\n                <span>\n                  <Fab\n                    disabled={!isDirty || !context.isValidGithubToken()}\n                    className={`${buttonClassname} ${classes.fab}`}\n                    onClick={handleSave}\n                  >\n                    {success ? <CheckIcon /> : <SaveIcon />}\n                    {saving && (\n                      <CircularProgress\n                        size={68}\n                        className={classes.fabProgress}\n                      />\n                    )}\n                  </Fab>\n                </span>\n              </Tooltip>\n              <Tooltip title=\"Auto Format\">\n                <Fab className={classes.fab} onClick={handleAutoFormat}>\n                  <PhotoFilterIcon />\n                </Fab>\n              </Tooltip>\n              <Tooltip title=\"Return to Markdown View\">\n                <Fab component={Link} to={viewerLink} className={classes.fab}>\n                  <ExitToAppIcon />\n                </Fab>\n              </Tooltip>\n              <Tooltip title=\"Open in GitHub\">\n                <Fab href={githubLink} target=\"_blank\" className={classes.fab}>\n                  <GitHubIcon />\n                </Fab>\n              </Tooltip>\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <AceEditor\n                mode=\"markdown\"\n                theme={theme.palette.type === \"dark\" ? \"twilight\" : \"textmate\"}\n                width=\"100%\"\n                maxLines={Infinity}\n                className={classes.editor}\n                onChange={handleChange}\n                value={markdown}\n                editorProps={{ $blockScrolling: true }}\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper className={classes.paper}>\n              <MusicMarkdown source={debouncedMarkdown}></MusicMarkdown>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport function useDebounce(value, delay) {\n  const [debounced, setDebounced] = useState(\"\");\n  useEffect(() => {\n    const timer = setTimeout(() => setDebounced(value), delay);\n    return () => clearTimeout(timer);\n  }, [value, delay]);\n  return debounced;\n}\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport React, { useEffect, useState } from \"react\";\n\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport { getContents } from \"../lib/github\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport queryString from \"query-string\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8\n  }\n});\n\nexport default function MarkdownViewer({ location, match }) {\n  const classes = useStyles();\n  const [markdown, setMarkdown] = useState();\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchContents() {\n      const { repo, path, branch } = match.params;\n      const json = await getContents(repo, path, branch);\n      setMarkdown(json.content);\n      setIsLoaded(true);\n    }\n    fetchContents();\n  }, [match.params]);\n\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <div className={classes.root}>\n      <MusicMarkdown\n        source={markdown}\n        columnCount={columnCount}\n        transposeAmount={transposeAmount}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { isValidGithubToken } from \"../lib/github\";\nimport { useGlobalStateContext } from \"./GlobalState\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst ExpansionPanelDetails = withStyles({\n  root: {\n    backgroundColor: \"rgba(0, 0, 0, .03)\"\n  }\n})(MuiExpansionPanelDetails);\n\nconst GithubTokenInstructions = () => (\n  <ExpansionPanel>\n    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n      <Typography>\n        Set a <b>GitHub Token</b> to create or change Music Markdown files in\n        GitHub.\n      </Typography>\n    </ExpansionPanelSummary>\n    <ExpansionPanelDetails>\n      <div>\n        <h1>How to Create a New Token</h1>\n\n        <p>\n          These instructions will help you create a new GitHub token, and add it\n          to Music Markdown so that you can use the Music Markdown editor.\n        </p>\n\n        <ol>\n          <li>\n            Open your{\" \"}\n            <a href=\"https://github.com/settings/tokens\">\n              Personal access tokens\n            </a>{\" \"}\n            page in GitHub.\n          </li>\n          <li>\n            Click <b>Generate new token</b>.\n          </li>\n          <li>\n            Under <b>Note</b> type <b>Music Markdown</b>.\n          </li>\n          <li>\n            Under <b>scopes</b> grant <b>repo</b> permissions.\n          </li>\n          <li>\n            Scroll to the bottom and click <b>Generate token</b>.\n          </li>\n          <li>Copy the newly generated token and paste it below.</li>\n        </ol>\n      </div>\n    </ExpansionPanelDetails>\n  </ExpansionPanel>\n);\n\nexport default function GithubTokenDialog({ open, handleClose }) {\n  const context = useGlobalStateContext();\n  const [token, setToken] = useState(context.data.githubToken);\n\n  const isValidToken = token => {\n    return token === \"\" || isValidGithubToken(token);\n  };\n\n  const handleSaveToken = () => {\n    if (isValidToken(token)) {\n      context.setGithubToken(token);\n      handleClose();\n    }\n  };\n\n  const handleCloseDialog = () => {\n    setToken(context.data.githubToken);\n    handleClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={handleCloseDialog}>\n      <DialogTitle id=\"set-github-api-key\">Set GitHub Token</DialogTitle>\n      <DialogContent>\n        <GithubTokenInstructions />\n      </DialogContent>\n      <DialogContent>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"GitHub Token\"\n          fullWidth\n          value={token || \"\"}\n          onChange={e => setToken(e.target.value)}\n          error={!isValidToken(token)}\n          helperText=\"Warning: GitHub tokens are very sensitive. Anyone who \n          gains access to this token will have access to your GitHub account.\n          Please proceed with caution.\"\n        ></TextField>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCloseDialog} color=\"secondary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={handleSaveToken}\n          color=\"primary\"\n          disabled={!isValidToken(token)}\n        >\n          {token === \"\" ? \"Clear\" : \"Save\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import { Paper, Tooltip } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Draggable from \"react-draggable\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useGlobalStateContext } from \"./GlobalState\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n    padding: theme.spacing(2),\n    cursor: \"move\"\n  }\n}));\n\nexport function YouTubePlayer({ youTubeId }) {\n  const classes = useStyles();\n  return (\n    <Draggable>\n      <Paper className={classes.paper}>\n        <iframe\n          title={youTubeId}\n          style={{ border: 0 }}\n          src={`https://www.youtube.com/embed/${youTubeId}`}\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        ></iframe>\n      </Paper>\n    </Draggable>\n  );\n}\n\nexport function YouTubeToggle() {\n  const context = useGlobalStateContext();\n  const [visible, setVisible] = useState(false);\n\n  useEffect(() => {\n    setVisible(!context.data.youTubeId);\n  }, [context.data.youTubeId]);\n\n  const handleToggle = () => {\n    setVisible(!visible);\n  };\n\n  if (!context.data.youTubeId) {\n    return null;\n  }\n\n  return (\n    <>\n      <Tooltip title=\"Show / Hide YouTube Player\">\n        <IconButton\n          color={visible ? \"secondary\" : \"default\"}\n          onClick={handleToggle}\n        >\n          <PlayArrowIcon />\n        </IconButton>\n      </Tooltip>\n      {visible ? <YouTubePlayer youTubeId={context.data.youTubeId} /> : \"\"}\n    </>\n  );\n}\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport React, { useState } from \"react\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport LowPriorityIcon from \"@material-ui/icons/LowPriority\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Slider from \"@material-ui/core/Slider\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ViewColumnIcon from \"@material-ui/icons/ViewColumn\";\nimport { YouTubeToggle } from \"./YouTube\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport queryString from \"query-string\";\n\nconst useStyles = makeStyles(theme => ({\n  popper: {\n    zIndex: 9999\n  },\n  paper: {\n    padding: theme.spacing(2)\n  },\n  slider: {\n    width: 300\n  }\n}));\n\nconst handleUpdateQuery = (props, name, value, original) => {\n  const params = queryString.parse(props.location.search);\n  if (value === original) {\n    delete params[name];\n  } else {\n    params[name] = value;\n  }\n  props.history.push({ search: queryString.stringify(params) });\n};\n\nconst ColumnCountSelector = props => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState();\n\n  const handleToggle = event => {\n    setAnchorEl(!anchorEl ? event.currentTarget : undefined);\n  };\n\n  const handleClickAway = event => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n    setAnchorEl(undefined);\n  };\n\n  const params = queryString.parse(props.location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n\n  return (\n    <>\n      <Tooltip title=\"Set Number of Columns\">\n        <IconButton onClick={handleToggle}>\n          <Badge\n            badgeContent={columnCount}\n            invisible={columnCount === \"1\"}\n            color=\"secondary\"\n          >\n            <ViewColumnIcon />\n          </Badge>\n        </IconButton>\n      </Tooltip>\n\n      <Popper className={classes.popper} open={!!anchorEl} anchorEl={anchorEl}>\n        <ClickAwayListener onClickAway={handleClickAway}>\n          <ToggleButtonGroup\n            value={columnCount}\n            exclusive\n            onChange={(event, value) =>\n              handleUpdateQuery(props, COLUMN_COUNT_QUERY_KEY, value, \"1\")\n            }\n          >\n            {[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"].map(columnCount => (\n              <ToggleButton value={columnCount} key={columnCount}>\n                {columnCount}\n              </ToggleButton>\n            ))}\n          </ToggleButtonGroup>\n        </ClickAwayListener>\n      </Popper>\n    </>\n  );\n};\n\nconst TransposeSelector = props => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState();\n\n  const handleToggle = event => {\n    setAnchorEl(!anchorEl ? event.currentTarget : undefined);\n  };\n\n  const handleClickAway = event => {\n    if (anchorEl.contains(event.target)) {\n      return;\n    }\n    setAnchorEl(undefined);\n  };\n\n  const params = queryString.parse(props.location.search);\n  const transpose = params[TRANSPOSE_QUERY_KEY] || \"0\";\n\n  return (\n    <>\n      <Tooltip title=\"Transpose Up / Down\">\n        <IconButton onClick={handleToggle}>\n          <Badge\n            badgeContent={transpose}\n            invisible={transpose === \"0\"}\n            color=\"secondary\"\n          >\n            <LowPriorityIcon />\n          </Badge>\n        </IconButton>\n      </Tooltip>\n\n      <Popper className={classes.popper} open={!!anchorEl} anchorEl={anchorEl}>\n        <ClickAwayListener onClickAway={handleClickAway}>\n          <Paper className={classes.paper}>\n            <Slider\n              className={classes.slider}\n              value={Number(transpose)}\n              min={-12}\n              max={12}\n              step={1}\n              marks={true}\n              onChange={(event, value) =>\n                handleUpdateQuery(\n                  props,\n                  TRANSPOSE_QUERY_KEY,\n                  String(value),\n                  \"0\"\n                )\n              }\n            />\n          </Paper>\n        </ClickAwayListener>\n      </Popper>\n    </>\n  );\n};\n\nexport default function MusicToolbar(props) {\n  return (\n    <>\n      <YouTubeToggle youTubeId={props.youTubeId} />\n      <TransposeSelector {...props} />\n      <ColumnCountSelector {...props} />\n    </>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport GithubTokenDialog from \"./GithubTokenDialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Link } from \"react-router-dom\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MusicToolbar from \"./MusicToolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport { REPO_REGEX } from \"../lib/constants\";\nimport { Route } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useGlobalStateContext } from \"./GlobalState\";\n\nconst useStyles = makeStyles(theme => ({\n  reactRouterHoverInherit: theme.reactRouterHoverInherit,\n  paper: {\n    padding: `${theme.spacing(1)}px`\n  },\n  grow: {\n    flexGrow: 1\n  },\n  filter: {\n    filter: theme.palette.type === \"dark\" ? \"invert(100%)\" : \"\"\n  }\n}));\n\nconst BrowseButton = ({ match }) => (\n  <Tooltip title=\"Song List View\">\n    <IconButton\n      component={Link}\n      to={`/repos/${match.params.repo}/browser/${match.params.branch}/`}\n    >\n      <ViewListIcon />\n    </IconButton>\n  </Tooltip>\n);\n\nconst EditButton = ({ match }) => (\n  <Tooltip title=\"Edit Song\">\n    <span>\n      <IconButton\n        component={Link}\n        to={`/repos/${match.params.repo}/editor/${match.params.branch}/${match.params.path}`}\n      >\n        <EditIcon />\n      </IconButton>\n    </span>\n  </Tooltip>\n);\n\nconst ViewButton = ({ match }) => (\n  <Tooltip title=\"Markdown View\">\n    <IconButton\n      component={Link}\n      to={`/repos/${match.params.repo}/viewer/${match.params.branch}/${match.params.path}`}\n    >\n      <ExitToAppIcon />\n    </IconButton>\n  </Tooltip>\n);\n\n// TODO: Placeholder for search functionality\nconst SearchToolbar = () => (\n  <IconButton>\n    <SearchIcon />\n  </IconButton>\n);\n\nexport default function MusicMarkdownNavbar() {\n  const classes = useStyles();\n  const context = useGlobalStateContext();\n  const [apiKeyDialogOpen, setApiKeyDialogOpen] = useState(false);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const [settingsAnchorEl, setSetingsAnchorEl] = useState();\n\n  const handleSettingsToggle = () => {\n    setSettingsOpen(!settingsOpen);\n  };\n\n  const handleApiKeyDialogOpen = () => {\n    setApiKeyDialogOpen(true);\n    setSettingsOpen(false);\n  };\n\n  const handleApiKeyDialogClose = () => {\n    setApiKeyDialogOpen(false);\n    setSettingsOpen(false);\n  };\n\n  const handleDarkThemeSwitch = () => {\n    context.toggleTheme();\n  };\n\n  return (\n    <AppBar position={\"sticky\"} key=\"top-navbar\">\n      <Toolbar>\n        <Button\n          className={classes.reactRouterHoverInherit}\n          component={Link}\n          to=\"/\"\n        >\n          <img\n            className={classes.filter}\n            src=\"music-markdown.svg\"\n            width={50}\n            alt=\"Music Markdown\"\n          />\n        </Button>\n        <div className={classes.grow} />\n\n        <Route\n          path={`${REPO_REGEX}/:mode/:branch/:path*`}\n          component={SearchToolbar}\n        />\n        <Route\n          path={[\n            \"/sandbox\",\n            `${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`\n          ]}\n          component={MusicToolbar}\n        />\n        <Route\n          path={`${REPO_REGEX}/:mode(viewer|editor)/:branch/:path*`}\n          component={BrowseButton}\n        />\n        <Route\n          path={`${REPO_REGEX}/viewer/:branch/:path*`}\n          component={EditButton}\n        />\n        <Route\n          path={`${REPO_REGEX}/editor/:branch/:path*`}\n          component={ViewButton}\n        />\n\n        <IconButton\n          onClick={handleSettingsToggle}\n          buttonRef={setSetingsAnchorEl}\n        >\n          <SettingsIcon />\n        </IconButton>\n        <Popper\n          id=\"settings-popper\"\n          open={settingsOpen}\n          anchorEl={settingsAnchorEl}\n          placement=\"bottom-end\"\n        >\n          <Paper className={classes.paper}>\n            <ClickAwayListener onClickAway={handleSettingsToggle}>\n              <MenuList>\n                <MenuItem>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        defaultChecked={context.isDarkTheme()}\n                        onChange={handleDarkThemeSwitch}\n                        value=\"darkTheme\"\n                      />\n                    }\n                    label=\"Toggle Dark Mode?\"\n                  />\n                </MenuItem>\n                <MenuItem onClick={handleApiKeyDialogOpen}>\n                  Set GitHub Token\n                </MenuItem>\n              </MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Popper>\n      </Toolbar>\n      <GithubTokenDialog\n        open={apiKeyDialogOpen}\n        handleClose={handleApiKeyDialogClose}\n      ></GithubTokenDialog>\n    </AppBar>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  }\n}));\n\nexport default function AddRepository({ handleAddRepository }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [owner, setOwner] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleDialogOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setOpen(false);\n    setName(\"\");\n    setOwner(\"\");\n    setError(false);\n  };\n\n  const handleShowError = message => {\n    setMessage(message);\n    setError(true);\n  };\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  const handleDialogAdd = async () => {\n    try {\n      await handleAddRepository(`${owner}/${name}`);\n      handleDialogClose();\n    } catch (err) {\n      handleShowError(err.message);\n    }\n  };\n\n  const handleUpdateOwner = event => {\n    setOwner(event.target.value);\n  };\n\n  const handleUpdateName = event => {\n    setName(event.target.value);\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        className={classes.grid}\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >\n        <Fab aria-label=\"Add\" onClick={handleDialogOpen}>\n          <AddIcon />\n        </Fab>\n        <Dialog open={open} aria-labelledby=\"add-repository-dialog\">\n          <DialogTitle id=\"add-repository-dialog-title\">\n            Add Repository\n          </DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"owner\"\n              label=\"Repository Owner\"\n              value={owner}\n              onChange={handleUpdateOwner}\n              fullWidth\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Repository Name\"\n              value={name}\n              onChange={handleUpdateName}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleDialogClose}>Cancel</Button>\n            <Button onClick={handleDialogAdd}>Add</Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n      <ErrorSnackbar\n        message={message}\n        open={error}\n        handleClose={handleClearError}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  addRepository,\n  deleteRepository,\n  getRepositories\n} from \"../lib/github\";\n\nimport AddRepository from \"./AddRepository\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport BookIcon from \"@material-ui/icons/Book\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8\n  }\n});\n\nexport default function RepositoryEditor() {\n  const classes = useStyles();\n  const [repos, setRepos] = useState([]);\n  const reposFingerprint = JSON.stringify(repos);\n\n  useEffect(() => {\n    loadRepositories();\n  }, [reposFingerprint]);\n\n  const handleAddRepository = async repo => {\n    await addRepository(repo);\n    loadRepositories();\n  };\n\n  const handleDeleteRepository = repo => {\n    deleteRepository(repo);\n    loadRepositories();\n  };\n\n  const loadRepositories = () => {\n    setRepos(getRepositories());\n  };\n\n  return (\n    <div className={classes.root}>\n      <List>\n        {repos.map(repo => (\n          <ListItem\n            button\n            key={`repo-item-${repo}`}\n            component={Link}\n            to={`/repos/${repo}/`}\n          >\n            <ListItemAvatar>\n              <Avatar>\n                <BookIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={repo} />\n            <ListItemSecondaryAction>\n              <IconButton\n                aria-label=\"Delete\"\n                onClick={() => handleDeleteRepository(repo)}\n              >\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      <AddRepository handleAddRepository={handleAddRepository} />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { Redirect } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { putContents } from \"../lib/github\";\nimport { useGlobalStateContext } from \"./GlobalState\";\n\nconst useStyles = makeStyles(theme => ({\n  whitespacePre: {\n    whiteSpace: \"pre-line\",\n    fontFamily: \"monospace\"\n  },\n  grid: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  }\n}));\n\nexport default function AddNewFile({ match }) {\n  const classes = useStyles();\n  const context = useGlobalStateContext();\n  const [newFileName, setNewFileName] = useState(\"\");\n  const [newFileOpen, setNewFileOpen] = useState(false);\n  const [toEditor, setToEditor] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleAddNewFileOpen = () => {\n    setNewFileOpen(true);\n  };\n\n  const handleAddNewFileClose = () => {\n    setNewFileOpen(false);\n    setNewFileName(\"\");\n  };\n\n  const handleUpdateFileName = event => {\n    setNewFileName(event.target.value);\n  };\n\n  const handleAddNewFile = async () => {\n    const { repo, branch } = match.params;\n    const path = getNewFilePath();\n    const content = getTemplateContents();\n\n    const response = await putContents(repo, path, content, undefined, branch);\n\n    if (response.status !== 201) {\n      handleShowError(`${response.status}: ${response.statusText}`);\n      return;\n    }\n    setToEditor(true);\n  };\n\n  const handleShowError = message => {\n    setMessage(message);\n    setError(true);\n  };\n\n  const handleClearError = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setError(false);\n  };\n\n  const isValidFileName = () => !!newFileName.match(/^[^<>:\"/\\\\|?*]+$/);\n  const getTemplateContents = () => `---\\n---\\n\\n# ${newFileName}`;\n  const getNewFilePath = () =>\n    match.params.path\n      ? `${match.params.path}/${newFileName}.md`\n      : `${newFileName}.md`;\n\n  const { repo, branch } = match.params;\n\n  if (toEditor) {\n    return (\n      <Redirect to={`/repos/${repo}/editor/${branch}/${getNewFilePath()}`} />\n    );\n  }\n\n  return (\n    <>\n      <Grid\n        container\n        className={classes.grid}\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >\n        <Tooltip\n          title={\n            context.isValidGithubToken()\n              ? \"Add Song\"\n              : \"Add a GitHub Token to Enable Editing\"\n          }\n        >\n          <span>\n            <Fab\n              aria-label=\"Add\"\n              disabled={!context.isValidGithubToken()}\n              onClick={handleAddNewFileOpen}\n            >\n              <AddIcon />\n            </Fab>\n          </span>\n        </Tooltip>\n        <Dialog\n          open={newFileOpen}\n          aria-labelledby=\"add-new-file-dialog\"\n          fullWidth={true}\n        >\n          <DialogTitle id=\"add-new-file-dialog-title\">\n            Create New Music Markdown File\n          </DialogTitle>\n          <DialogContent>\n            <Card className={classes.previewCard}>\n              <CardContent>\n                <Typography\n                  variant=\"caption\"\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  Preview\n                </Typography>\n                <Typography\n                  variant=\"body1\"\n                  color=\"textPrimary\"\n                  className={classes.whitespacePre}\n                >\n                  {getTemplateContents()}\n                </Typography>\n              </CardContent>\n            </Card>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"owner\"\n              label=\"Music Markdown File Name\"\n              value={newFileName}\n              onChange={handleUpdateFileName}\n              fullWidth\n              error={!isValidFileName()}\n              helperText={\n                !isValidFileName() ? (\n                  \"Invalid file name\"\n                ) : (\n                  <>\n                    {repo}/{branch}/{getNewFilePath()}\n                  </>\n                )\n              }\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">.md</InputAdornment>\n                )\n              }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleAddNewFileClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button\n              onClick={handleAddNewFile}\n              color=\"primary\"\n              disabled={!isValidFileName()}\n            >\n              Create\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n      <ErrorSnackbar\n        message={message}\n        open={error}\n        handleClose={handleClearError}\n      />\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport AddNewFile from \"./AddNewFile\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport DirectoryBreadcrumbs from \"./RouterBreadcrumbs\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { Link } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { getContents } from \"../lib/github\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    padding: 8\n  }\n});\n\n/**\n * Sorts the contents of a GitHub directory. Lists directories first then files,\n * each in alphabetical order.\n * @param {Object[]} contents GitHub directory contents. Contains files and directories.\n */\nfunction sortDir(contents) {\n  contents.sort((a, b) => {\n    if (a.type === \"file\") {\n      if (b.type === \"file\") {\n        return a.name - b.name;\n      }\n      return 1;\n    }\n    if (b.type === \"file\") {\n      return -1;\n    }\n    return a.name - b.name;\n  });\n}\n\n/**\n * A React component for rendering repository files and directories.\n */\nexport default function RepositoryNavigation({ match, location }) {\n  const classes = useStyles();\n  const [contents, setContents] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function fetchContents() {\n      const { repo, path, branch } = match.params;\n\n      const contents = await getContents(repo, path, branch);\n      sortDir(contents);\n      setContents(contents);\n      setIsLoaded(true);\n    }\n    fetchContents();\n  }, [match.params]);\n\n  const { repo, branch } = match.params;\n\n  if (!isLoaded) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <>\n      <DirectoryBreadcrumbs pathname={location.pathname} />\n      <div className={classes.root}>\n        <List key={\"repo-navigation-list\"}>\n          {contents.map(item => (\n            <ListItem\n              button\n              component={Link}\n              key={`list-group-item-${item.name}`}\n              to={\n                item.type === \"dir\"\n                  ? `/repos/${repo}/browser/${branch}/${item.path}/`\n                  : `/repos/${repo}/viewer/${branch}/${item.path}`\n              }\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  {item.type === \"dir\" ? <FolderIcon /> : <DescriptionIcon />}\n                </Avatar>\n              </ListItemAvatar>\n              {item.type === \"dir\" ? (\n                <ListItemText secondary={item.name}></ListItemText>\n              ) : (\n                <ListItemText primary={item.name}></ListItemText>\n              )}\n            </ListItem>\n          ))}\n        </List>\n        <AddNewFile location={location} match={match} />\n      </div>\n    </>\n  );\n}\n","import Grid from \"@material-ui/core/Grid\";\nimport React from \"react\";\n\nconst RESPONSIVE_CONTAINER_KEY = \"app-container\";\n\nexport default function ResponsiveContainer(props) {\n  return <Grid key={RESPONSIVE_CONTAINER_KEY}>{props.children}</Grid>;\n}\n","import { COLUMN_COUNT_QUERY_KEY, TRANSPOSE_QUERY_KEY } from \"../lib/constants\";\nimport { Link, Route } from \"react-router-dom\";\n\nimport MusicMarkdown from \"./MusicMarkdown\";\nimport Paper from \"@material-ui/core/Paper\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { guitarChordbook } from \"markdown-it-music/lib/chordbook\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport queryString from \"query-string\";\nimport { renderChordDiagram } from \"markdown-it-music/renderers/chord_diagram\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    padding: 8\n  },\n  chordSourcePaper: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(2)\n  },\n  chordCategoryPaper: {\n    margin: theme.spacing(1),\n    textAlign: \"center\"\n  },\n  chordCategoryTypography: {\n    color: theme.palette.text.primary,\n    textAlign: \"center\"\n  },\n  chordVariantPaper: {\n    display: \"inline-block\",\n    margin: theme.spacing(1),\n    textAlign: \"center\"\n  },\n  chordVariantTypography: {\n    color: theme.palette.text.secondary\n  },\n  chordDiagram: {\n    filter: theme.palette.type === \"dark\" ? \"invert(100%)\" : \"\"\n  }\n}));\n\nexport default function Sandbox({ location, match }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h2\">Sandbox</Typography>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/all-features-in-one-place`}>\n            All the Features in One Place\n          </Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/guitar-chordbook`}>Guitar Chordbook</Link>\n        </li>\n      </ul>\n\n      <Route\n        path={`${match.path}/all-features-in-one-place`}\n        component={() => (\n          <MarkdownViewer location={location} source={allFeaturesSource} />\n        )}\n      />\n      <Route\n        path={`${match.path}/guitar-chordbook`}\n        component={AllGuitarChords}\n      />\n    </div>\n  );\n}\n\nconst MarkdownViewer = ({ source, location }) => {\n  const params = queryString.parse(location.search);\n  const columnCount = params[COLUMN_COUNT_QUERY_KEY] || \"1\";\n  const transposeAmount = Number(params[TRANSPOSE_QUERY_KEY]) || 0;\n\n  return (\n    <MusicMarkdown\n      source={source}\n      columnCount={columnCount}\n      transposeAmount={transposeAmount}\n    />\n  );\n};\n\nconst roots = [\n  \"C\",\n  \"C#\",\n  \"Db\",\n  \"D\",\n  \"D#\",\n  \"Eb\",\n  \"E\",\n  \"F\",\n  \"F#\",\n  \"Gb\",\n  \"G\",\n  \"G#\",\n  \"Ab\",\n  \"A\",\n  \"A#\",\n  \"Bb\",\n  \"B\"\n];\n\nconst qualities = [\n  \"\",\n  \"m\",\n  \"6\",\n  \"m6\",\n  \"7\",\n  \"maj7\",\n  \"m7\",\n  \"9\",\n  \"dim\",\n  \"aug\",\n  \"sus2\",\n  \"7sus2\",\n  \"sus4\",\n  \"7sus4\",\n  \"5\",\n  \"dim5\",\n  \"dim7\",\n  \"7b5\",\n  \"m7b5\",\n  \"7#5\",\n  \"7b9\",\n  \"7#9\",\n  \"7b9#5\",\n  \"7/6\",\n  \"9b5\",\n  \"9#5\",\n  \"maj9\",\n  \"m9\",\n  \"9/6\",\n  \"m9/6\",\n  \"add9\",\n  \"11\",\n  \"m11\",\n  \"11aug\",\n  \"13\",\n  \"13b9\",\n  \"13b9b5\"\n];\n\nconst AllGuitarChords = ({ location }) => {\n  const classes = useStyles();\n  return (\n    <>\n      <Typography variant=\"h3\">Guitar Chordbook</Typography>\n      <Paper className={classes.chordSourcePaper}>\n        <MarkdownViewer source={allChordsSource} location={location} />\n      </Paper>\n      {roots.map((category, index) => (\n        <Paper key={`category-${index}`} className={classes.chordCategoryPaper}>\n          <Typography className={classes.chordCategoryTypography} variant=\"h4\">\n            {category} Chords\n          </Typography>\n          <ChordCategory category={category} />\n        </Paper>\n      ))}\n    </>\n  );\n};\n\nconst ChordCategory = ({ category }) => {\n  const classes = useStyles();\n  return Array.from(guitarChordbook.keys())\n    .filter(chord => chord.match(/^[CDEFGAB](?:#|b)?|N\\.C\\./)[0] === category)\n    .map((chord, index) => (\n      <Paper key={`chord-${index}`} className={classes.chordVariantPaper}>\n        {guitarChordbook.get(chord).map((variant, index) => (\n          <span\n            className={classes.chordDiagram}\n            key={`variant-${index}`}\n            dangerouslySetInnerHTML={{ __html: renderChordDiagram(variant) }}\n          />\n        ))}\n        <Typography className={classes.chordVariantTypography} variant=\"h5\">\n          {chord}\n        </Typography>\n      </Paper>\n    ));\n};\n\nconst allChordsSource = `---\n---\n${roots\n  .map(\n    root => `## ${root} Chords\nc1: ${qualities.map(quality => root + quality).join(\" \")}`\n  )\n  .join(\"\\n\\n\")}\n`;\n\nconst allFeaturesSource = `---\nyouTubeId: dN3GbF9Bx6E\n---\n\n# All the Features in One Place\n\n## Chord and Lyrics\nc1: Em               D           Em\nl1: Are you goin' to Scarborough Fair?\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\n\nc1: Em       G                   D\nl1: Remember me to one who lives there\n\nc1: Em       D                  Em\nl1: She once was a true love of mine\n\n## Multiple Overlapping Voices\nc1: Em                         D         Em\nl1: Tell her to make me a      cambric   shirt\nl2:                     On the side of a hill in the deep forest green\n\nc1: G        Em        G A       Em\nl1: Parsley, sage, rosemary, and thyme\nl2:                              Tracing a sparrow on snow-crested ground\n\nc1: Em         G               D\nl1: Without no seams nor needlework\nl2:                      Blankets and bedclothes the child of the mountain\n\nc1: Em          D                 Em\nl1: Then she'll be a true love of mine\nl2:                               Sleeps unaware of the clarion call\n\n## VexTab\n\n:::vextab\noptions space=20\n\ntabstave\n  notation=true\n  key=A time=4/4\n\n  notes :q =|: (5/2.5/3.7/4) :8 7-5h6/3 ^3^ 5h6-7/5 ^3^ :q 7V/4 |\n  notes :8 t12p7/4 s5s3/4 :8 3s:16:5-7/5 :h p5/4\n  text :w, |#segno, ,|, :hd, , #tr\n\n\noptions space=25\n\ntabstave\n  notation=true\n\n  notes :q (5/4.5/5) (7/4.7/5)s(5/4.5/5) ^3^\n  notes :8 7-5/4 $.a./b.$ (5/4.5/5)h(7/5) =:|\n  notes :8 (12/5.12/4)ds(5/5.5/4)u 3b4/5\n  notes :h (5V/6.5/4.6/3.7/2) $.italic.let ring$ =|=\n\n  text :h, ,.font=Times-12-italic, D.S. al coda, |#coda\n  text :h, ,.-1, .font=Arial-14-bold,A13\n  text ++, .23, #f\n :::\n\n## ABC\n\n:::abc\nX: 1\nM: 4/4\nL: 1/16\nK: Amin\n\"Am\" (C16 | C4) B,2C2 D6 CB, | (C16 | C4) B,2C2 \"F\" D6 CA, |\n\"C\" G,8 \"E\" _A,8 | \"Am\" =A,8 \"F\" (3F4 F4 F4 | \"E\" F2 (E6 E8) | z6 ^A2 B4 e4 |\n\"Am\" e2d2c2(d2 \"G\" d4) .=A4 | \"F\" e2d2c2(d2 \"G\" d4) .A4 |\n\"Esus4\" e4 e4 e2d2B2d2 | \"E\" e4 e4 e2g2e2d2 |\n\"Am\" .e4 c2 \"G\" .d4 c2 e4 | \"F\" z2 c2 e2 \"G\" d6 c2d2 |\n\"Esus4\" e2e2e2d2 d2B2B2_A2 | \"E\" _A2F2F2E2 =A2B2A2G2 |\n:::\n\n`;\n","import \"./App.css\";\n\nimport { GlobalStateProvider, useGlobalStateContext } from \"./GlobalState\";\nimport { Route, HashRouter as Router, Switch } from \"react-router-dom\";\n\nimport BranchNavigation from \"./BranchNavigation\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport MarkdownEditor from \"./MarkdownEditor\";\nimport MarkdownViewer from \"./MarkdownViewer\";\nimport { ThemeProvider as MuiThemeProvider } from \"@material-ui/core/styles\";\nimport MusicMarkdownNavbar from \"./MusicMarkdownNavbar\";\nimport { REPO_REGEX } from \"../lib/constants\";\nimport React from \"react\";\nimport RepositoryEditor from \"./RepositoryEditor\";\nimport RepositoryNavigation from \"./RepositoryNavigation\";\nimport ResponsiveContainer from \"./ResponsiveContainer\";\nimport Sandbox from \"./Sandbox.js\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n\nconst App = () => (\n  <GlobalStateProvider>\n    <ThemeProvider />\n  </GlobalStateProvider>\n);\n\nconst ThemeProvider = () => {\n  const context = useGlobalStateContext();\n\n  return (\n    <MuiThemeProvider theme={createMuiTheme(context.data.theme)}>\n      <CssBaseline />\n      <ResponsiveContainer>{[HomeRouter()]}</ResponsiveContainer>\n    </MuiThemeProvider>\n  );\n};\n\nconst HomeRouter = () => (\n  <Router key=\"home-router\">\n    <>\n      <Route component={MusicMarkdownNavbar} />\n      <Switch>\n        <Route\n          path={`${REPO_REGEX}/viewer/:branch/:path+`}\n          component={MarkdownViewer}\n        />\n        <Route\n          path={`${REPO_REGEX}/browser/:branch/:path*`}\n          component={RepositoryNavigation}\n        />\n        <Route\n          path={`${REPO_REGEX}/editor/:branch/:path*`}\n          component={MarkdownEditor}\n        />\n        <Route path={REPO_REGEX} component={BranchNavigation} />\n        <Route path=\"/sandbox\" component={Sandbox} />\n        <Route path=\"/\" component={RepositoryEditor} />\n      </Switch>\n    </>\n  </Router>\n);\n\nexport default App;\n","import * as serviceWorker from \"./serviceWorker\";\nimport App from \"./components/App.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}